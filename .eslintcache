[{"C:\\projects\\leev\\leev-fe\\src\\index.js":"1","C:\\projects\\leev\\leev-fe\\src\\App.js":"2","C:\\projects\\leev\\leev-fe\\src\\i18n.js":"3","C:\\projects\\leev\\leev-fe\\src\\context\\LanguageContext.js":"4","C:\\projects\\leev\\leev-fe\\src\\context\\FiltersContext.js":"5","C:\\projects\\leev\\leev-fe\\src\\context\\SnackbarContext.js":"6","C:\\projects\\leev\\leev-fe\\src\\themes\\theme.js":"7","C:\\projects\\leev\\leev-fe\\src\\components\\workspace\\ProtectedWorkspace.js":"8","C:\\projects\\leev\\leev-fe\\src\\components\\routes\\InitialRouter.js":"9","C:\\projects\\leev\\leev-fe\\src\\components\\workspace\\Workspace.js":"10","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Chatbot.js":"11","C:\\projects\\leev\\leev-fe\\src\\components\\user\\Login.js":"12","C:\\projects\\leev\\leev-fe\\src\\context\\FaultsContext.js":"13","C:\\projects\\leev\\leev-fe\\src\\context\\NotificationsContext.js":"14","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Messages.js":"15","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageInput.js":"16","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Scenrio.js":"17","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageImage.js":"18","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageSelector.js":"19","C:\\projects\\leev\\leev-fe\\src\\api\\userApi.js":"20","C:\\projects\\leev\\leev-fe\\src\\api\\assetsApi.js":"21","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\Controls.js":"22","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Settings.js":"23","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Assets.js":"24","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\Tasks.js":"25","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\Documents.js":"26","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\Faults.js":"27","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MapView.js":"28","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\Systems.js":"29","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Message.js":"30","C:\\projects\\leev\\leev-fe\\src\\api\\chatbotApi.js":"31","C:\\projects\\leev\\leev-fe\\src\\api\\genericApi.js":"32","C:\\projects\\leev\\leev-fe\\src\\api\\notificationsApi.js":"33","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Users.js":"34","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UserProfile.js":"35","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\SettingsMenu.js":"36","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CreateContainer.js":"37","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\AddMenu.js":"38","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Navbar.js":"39","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Notifications.js":"40","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\SideMenu.js":"41","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Asset.js":"42","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetsControls.js":"43","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AlertDialog.js":"44","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsControls.js":"45","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsHeader.js":"46","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\System.js":"47","C:\\projects\\leev\\leev-fe\\src\\api\\systemsApi.js":"48","C:\\projects\\leev\\leev-fe\\src\\api\\mapApi.js":"49","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\Mapbox.js":"50","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MarkerData.js":"51","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\Map.js":"52","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\UpsertDocument.js":"53","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MapControls.js":"54","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViews.js":"55","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\DocumentsControls.js":"56","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultView.js":"57","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\Document.js":"58","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\useQuery.js":"59","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\Can.js":"60","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\UpsertAsset.js":"61","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBoxSelect.js":"62","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterBySelect.js":"63","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateOwner.js":"64","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\UpsertSystem.js":"65","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemAdditionalDetails.js":"66","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskMinified.js":"67","C:\\projects\\leev\\leev-fe\\src\\api\\documentsApi.js":"68","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultsControls.js":"69","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\UpsertFault.js":"70","C:\\projects\\leev\\leev-fe\\src\\components\\user\\UserItem.js":"71","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ItemLink.js":"72","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\DocumentControls.js":"73","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViewControls.js":"74","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultLink.js":"75","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UserList.js":"76","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateStatus.js":"77","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\StatusTag.js":"78","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CommentSection.js":"79","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\Carousel.js":"80","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AddRelatedUser.js":"81","C:\\projects\\leev\\leev-fe\\src\\api\\faultsApi.js":"82","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterByMultiSelect.js":"83","C:\\projects\\leev\\leev-fe\\src\\api\\tasksApi.js":"84","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlockView.js":"85","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultListView.js":"86","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\usePermissions.js":"87","C:\\projects\\leev\\leev-fe\\src\\api\\permissionsApi.js":"88","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\TimeActive.js":"89","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultMinified.js":"90","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemRelatedUsers.js":"91","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemControls.js":"92","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlock.js":"93","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemName.js":"94","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBox.js":"95","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SortBy.js":"96","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetControls.js":"97","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\AddRelatedUser.js":"98","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Notification.js":"99","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UpsertUser.js":"100","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\UpsertTask.js":"101","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskSteps.js":"102","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskView.js":"103","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TasksList.js":"104","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskViewControls.js":"105","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TasksControls.js":"106","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\scheduler\\Scheduler.js":"107","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\scheduler\\ScheduleItem.js":"108","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\datepickers\\CustomeDatePicker.js":"109","C:\\projects\\leev\\leev-fe\\src\\context\\authContext.js":"110","C:\\projects\\leev\\leev-fe\\src\\context\\AuthContext.js":"111","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageBoolean.js":"112","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\RepeatableTasks.js":"113","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\Calender.js":"114","C:\\projects\\leev\\leev-fe\\src\\api\\calenderApi.js":"115","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\CalenderHeaderRow.js":"116","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\CalenderRow.js":"117","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\RolesAndPermissions.js":"118","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UpsertRole.js":"119","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Permission.js":"120","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\EventBracket.js":"121","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\EventsViewer.js":"122","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetsList.js":"123","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetView.js":"124","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\SystemsGrid.js":"125","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\FaultsGrid.js":"126","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\TasksGrid.js":"127","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\locations\\UpsertLocation.js":"128","C:\\projects\\leev\\leev-fe\\src\\api\\locationsApi.js":"129","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\LocationsGrid.js":"130","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Residents.js":"131","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\ResidentsGrid.js":"132","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\Dashboard.js":"133","C:\\projects\\leev\\leev-fe\\src\\api\\dashboardApi.js":"134","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\LastOperations.js":"135","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\OpenItems.js":"136","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\AverageTimeToClose.js":"137","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\PendingFaults.js":"138","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\UpcomingTasks.js":"139","C:\\projects\\leev\\leev-fe\\src\\components\\user\\PasswordRecovery.js":"140","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ChangeLanguage.js":"141","C:\\projects\\leev\\leev-fe\\src\\components\\user\\ResetPassword.js":"142","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\clients\\UpsertClient.js":"143","C:\\projects\\leev\\leev-fe\\src\\api\\adminApi.js":"144","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\clients\\Clients.js":"145","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\clients\\ClientControls.js":"146","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\DynamicTable.js":"147","C:\\projects\\leev\\leev-fe\\src\\context\\EnvContext.js":"148","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\NoDataFound.js":"149","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ReturnToPrevious.js":"150","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Messenger.js":"151","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Conversations.js":"152","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Conversation.js":"153","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Topbar.js":"154","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\MainConversation.js":"155","C:\\projects\\leev\\leev-fe\\src\\context\\SocketContext.js":"156","C:\\projects\\leev\\leev-fe\\src\\context\\ConversationsContext.js":"157","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\useSocket.js":"158","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Messages.js":"159","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Message.js":"160","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\MessageInput.js":"161","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\NewMessage.js":"162","C:\\projects\\leev\\leev-fe\\src\\api\\messengerApi.js":"163","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ModalContainer.js":"164","C:\\projects\\leev\\leev-fe\\src\\context\\UpsertContext.js":"165","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\LoadingProgress.js":"166","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\FaultsReport.js":"167","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\Reports.js":"168","C:\\projects\\leev\\leev-fe\\src\\api\\reportsApi.js":"169","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\UpsertReport.js":"170","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\ReportsList.js":"171","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\ReportSelector.js":"172","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\reportItems\\FaultList.js":"173","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\reportItems\\ItemCounter.js":"174","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\reportItems\\MostUsedTags.js":"175","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\reportItems\\SystemLocationGraph.js":"176","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\reportItems\\TopUser.js":"177","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\ReportOption.js":"178"},{"size":1001,"mtime":1627400551300,"results":"179","hashOfConfig":"180"},{"size":2587,"mtime":1629426224452,"results":"181","hashOfConfig":"180"},{"size":948,"mtime":1623208037100,"results":"182","hashOfConfig":"180"},{"size":956,"mtime":1624083403819,"results":"183","hashOfConfig":"180"},{"size":463,"mtime":1619827455314,"results":"184","hashOfConfig":"180"},{"size":390,"mtime":1619827455315,"results":"185","hashOfConfig":"180"},{"size":2202,"mtime":1627400551301,"results":"186","hashOfConfig":"180"},{"size":1604,"mtime":1627492471138,"results":"187","hashOfConfig":"180"},{"size":1539,"mtime":1627491315006,"results":"188","hashOfConfig":"180"},{"size":4909,"mtime":1629426224475,"results":"189","hashOfConfig":"180"},{"size":9483,"mtime":1623246639473,"results":"190","hashOfConfig":"180"},{"size":11316,"mtime":1627496216175,"results":"191","hashOfConfig":"180"},{"size":372,"mtime":1619827455314,"results":"192","hashOfConfig":"180"},{"size":428,"mtime":1619827455314,"results":"193","hashOfConfig":"180"},{"size":2548,"mtime":1629426224457,"results":"194","hashOfConfig":"180"},{"size":2255,"mtime":1626314716476,"results":"195","hashOfConfig":"180"},{"size":5453,"mtime":1624988300538,"results":"196","hashOfConfig":"180"},{"size":3375,"mtime":1626977541885,"results":"197","hashOfConfig":"180"},{"size":3088,"mtime":1626314687164,"results":"198","hashOfConfig":"180"},{"size":7427,"mtime":1629426224456,"results":"199","hashOfConfig":"180"},{"size":7660,"mtime":1629426224453,"results":"200","hashOfConfig":"180"},{"size":4672,"mtime":1627400551276,"results":"201","hashOfConfig":"180"},{"size":5250,"mtime":1622662917816,"results":"202","hashOfConfig":"180"},{"size":671,"mtime":1626821123518,"results":"203","hashOfConfig":"180"},{"size":691,"mtime":1620493570053,"results":"204","hashOfConfig":"180"},{"size":4692,"mtime":1627400551287,"results":"205","hashOfConfig":"180"},{"size":669,"mtime":1619827455296,"results":"206","hashOfConfig":"180"},{"size":2737,"mtime":1621372748036,"results":"207","hashOfConfig":"180"},{"size":2908,"mtime":1627400551293,"results":"208","hashOfConfig":"180"},{"size":2129,"mtime":1627400551275,"results":"209","hashOfConfig":"180"},{"size":898,"mtime":1619993090833,"results":"210","hashOfConfig":"180"},{"size":6573,"mtime":1629428030827,"results":"211","hashOfConfig":"180"},{"size":2463,"mtime":1621228817970,"results":"212","hashOfConfig":"180"},{"size":6861,"mtime":1627401634685,"results":"213","hashOfConfig":"180"},{"size":5584,"mtime":1622643935491,"results":"214","hashOfConfig":"180"},{"size":3492,"mtime":1622662807679,"results":"215","hashOfConfig":"180"},{"size":8744,"mtime":1629426224471,"results":"216","hashOfConfig":"180"},{"size":7157,"mtime":1627400551277,"results":"217","hashOfConfig":"180"},{"size":8113,"mtime":1627400551277,"results":"218","hashOfConfig":"180"},{"size":4505,"mtime":1627415075553,"results":"219","hashOfConfig":"180"},{"size":11595,"mtime":1629426224458,"results":"220","hashOfConfig":"180"},{"size":5395,"mtime":1627414613114,"results":"221","hashOfConfig":"180"},{"size":5875,"mtime":1624915890579,"results":"222","hashOfConfig":"180"},{"size":3226,"mtime":1619827455305,"results":"223","hashOfConfig":"180"},{"size":6217,"mtime":1624973595465,"results":"224","hashOfConfig":"180"},{"size":3344,"mtime":1619827455301,"results":"225","hashOfConfig":"180"},{"size":6616,"mtime":1627400551292,"results":"226","hashOfConfig":"180"},{"size":8303,"mtime":1627400551274,"results":"227","hashOfConfig":"180"},{"size":1074,"mtime":1621228816911,"results":"228","hashOfConfig":"180"},{"size":5489,"mtime":1621985714682,"results":"229","hashOfConfig":"180"},{"size":9028,"mtime":1627400551291,"results":"230","hashOfConfig":"180"},{"size":5100,"mtime":1627496015418,"results":"231","hashOfConfig":"180"},{"size":20281,"mtime":1627401525989,"results":"232","hashOfConfig":"180"},{"size":5371,"mtime":1619827455297,"results":"233","hashOfConfig":"180"},{"size":3159,"mtime":1627400551290,"results":"234","hashOfConfig":"180"},{"size":6608,"mtime":1624973743069,"results":"235","hashOfConfig":"180"},{"size":15445,"mtime":1629426224462,"results":"236","hashOfConfig":"180"},{"size":6234,"mtime":1627400551287,"results":"237","hashOfConfig":"180"},{"size":164,"mtime":1619827455309,"results":"238","hashOfConfig":"180"},{"size":521,"mtime":1629406587179,"results":"239","hashOfConfig":"180"},{"size":13473,"mtime":1627401475575,"results":"240","hashOfConfig":"180"},{"size":8044,"mtime":1624915205732,"results":"241","hashOfConfig":"180"},{"size":6934,"mtime":1629426224472,"results":"242","hashOfConfig":"180"},{"size":7840,"mtime":1619827455308,"results":"243","hashOfConfig":"180"},{"size":27531,"mtime":1627401585971,"results":"244","hashOfConfig":"180"},{"size":10608,"mtime":1627400551292,"results":"245","hashOfConfig":"180"},{"size":5523,"mtime":1621438622708,"results":"246","hashOfConfig":"180"},{"size":4467,"mtime":1629426224453,"results":"247","hashOfConfig":"180"},{"size":7191,"mtime":1627415178538,"results":"248","hashOfConfig":"180"},{"size":24371,"mtime":1629426224462,"results":"249","hashOfConfig":"180"},{"size":4194,"mtime":1629426224474,"results":"250","hashOfConfig":"180"},{"size":398,"mtime":1619827455307,"results":"251","hashOfConfig":"180"},{"size":4253,"mtime":1623737018000,"results":"252","hashOfConfig":"180"},{"size":5128,"mtime":1621373863926,"results":"253","hashOfConfig":"180"},{"size":531,"mtime":1619827455294,"results":"254","hashOfConfig":"180"},{"size":4999,"mtime":1621228792092,"results":"255","hashOfConfig":"180"},{"size":7898,"mtime":1622522206579,"results":"256","hashOfConfig":"180"},{"size":2279,"mtime":1622521699787,"results":"257","hashOfConfig":"180"},{"size":12384,"mtime":1627755440558,"results":"258","hashOfConfig":"180"},{"size":7651,"mtime":1619827455305,"results":"259","hashOfConfig":"180"},{"size":7792,"mtime":1619827455304,"results":"260","hashOfConfig":"180"},{"size":11052,"mtime":1629426224454,"results":"261","hashOfConfig":"180"},{"size":8749,"mtime":1621488036051,"results":"262","hashOfConfig":"180"},{"size":9058,"mtime":1626743038266,"results":"263","hashOfConfig":"180"},{"size":2819,"mtime":1624938398119,"results":"264","hashOfConfig":"180"},{"size":3679,"mtime":1625352792270,"results":"265","hashOfConfig":"180"},{"size":817,"mtime":1629426224473,"results":"266","hashOfConfig":"180"},{"size":4149,"mtime":1629426224455,"results":"267","hashOfConfig":"180"},{"size":1011,"mtime":1619827455308,"results":"268","hashOfConfig":"180"},{"size":3015,"mtime":1621438362805,"results":"269","hashOfConfig":"180"},{"size":6428,"mtime":1619827455300,"results":"270","hashOfConfig":"180"},{"size":5458,"mtime":1621192851861,"results":"271","hashOfConfig":"180"},{"size":786,"mtime":1621438394418,"results":"272","hashOfConfig":"180"},{"size":5213,"mtime":1619827455300,"results":"273","hashOfConfig":"180"},{"size":3806,"mtime":1621211496662,"results":"274","hashOfConfig":"180"},{"size":5224,"mtime":1621209954782,"results":"275","hashOfConfig":"180"},{"size":5997,"mtime":1627400551281,"results":"276","hashOfConfig":"180"},{"size":7683,"mtime":1619827455299,"results":"277","hashOfConfig":"180"},{"size":5232,"mtime":1621006829713,"results":"278","hashOfConfig":"180"},{"size":26998,"mtime":1627401456778,"results":"279","hashOfConfig":"180"},{"size":26541,"mtime":1627401595997,"results":"280","hashOfConfig":"180"},{"size":4930,"mtime":1621988119222,"results":"281","hashOfConfig":"180"},{"size":20838,"mtime":1629426224469,"results":"282","hashOfConfig":"180"},{"size":2946,"mtime":1627400551295,"results":"283","hashOfConfig":"180"},{"size":5844,"mtime":1621228799049,"results":"284","hashOfConfig":"180"},{"size":6043,"mtime":1624973622217,"results":"285","hashOfConfig":"180"},{"size":6906,"mtime":1621996468627,"results":"286","hashOfConfig":"180"},{"size":6110,"mtime":1623261297986,"results":"287","hashOfConfig":"180"},{"size":1328,"mtime":1629426224474,"results":"288","hashOfConfig":"180"},{"size":457,"mtime":1619828447544,"results":"289","hashOfConfig":"180"},{"size":457,"mtime":1619828447544,"results":"290","hashOfConfig":"180"},{"size":1546,"mtime":1622652068401,"results":"291","hashOfConfig":"180"},{"size":700,"mtime":1620426895691,"results":"292","hashOfConfig":"180"},{"size":3220,"mtime":1624973782836,"results":"293","hashOfConfig":"180"},{"size":3133,"mtime":1621701052703,"results":"294","hashOfConfig":"180"},{"size":1084,"mtime":1621062087694,"results":"295","hashOfConfig":"180"},{"size":2197,"mtime":1621700262676,"results":"296","hashOfConfig":"180"},{"size":6161,"mtime":1629426224459,"results":"297","hashOfConfig":"180"},{"size":10035,"mtime":1629426224459,"results":"298","hashOfConfig":"180"},{"size":3926,"mtime":1621480499559,"results":"299","hashOfConfig":"180"},{"size":1076,"mtime":1621659968409,"results":"300","hashOfConfig":"180"},{"size":6434,"mtime":1627400551285,"results":"301","hashOfConfig":"180"},{"size":3527,"mtime":1627414238320,"results":"302","hashOfConfig":"180"},{"size":9691,"mtime":1629426224460,"results":"303","hashOfConfig":"180"},{"size":4163,"mtime":1627400551284,"results":"304","hashOfConfig":"180"},{"size":4112,"mtime":1627400551283,"results":"305","hashOfConfig":"180"},{"size":4453,"mtime":1627400551285,"results":"306","hashOfConfig":"180"},{"size":12025,"mtime":1627401576856,"results":"307","hashOfConfig":"180"},{"size":3220,"mtime":1625715181202,"results":"308","hashOfConfig":"180"},{"size":6727,"mtime":1627401404590,"results":"309","hashOfConfig":"180"},{"size":6878,"mtime":1627401650684,"results":"310","hashOfConfig":"180"},{"size":4370,"mtime":1627400551284,"results":"311","hashOfConfig":"180"},{"size":4159,"mtime":1627400551286,"results":"312","hashOfConfig":"180"},{"size":479,"mtime":1623387433353,"results":"313","hashOfConfig":"180"},{"size":9083,"mtime":1624988254877,"results":"314","hashOfConfig":"180"},{"size":2939,"mtime":1623603040851,"results":"315","hashOfConfig":"180"},{"size":4484,"mtime":1624988250990,"results":"316","hashOfConfig":"180"},{"size":5765,"mtime":1624973489083,"results":"317","hashOfConfig":"180"},{"size":5131,"mtime":1624977048586,"results":"318","hashOfConfig":"180"},{"size":8007,"mtime":1627496276984,"results":"319","hashOfConfig":"180"},{"size":1904,"mtime":1624083581430,"results":"320","hashOfConfig":"180"},{"size":11856,"mtime":1627496290320,"results":"321","hashOfConfig":"180"},{"size":14426,"mtime":1627401539325,"results":"322","hashOfConfig":"180"},{"size":2235,"mtime":1624565667317,"results":"323","hashOfConfig":"180"},{"size":1349,"mtime":1629426224461,"results":"324","hashOfConfig":"180"},{"size":4943,"mtime":1624390052255,"results":"325","hashOfConfig":"180"},{"size":3706,"mtime":1624421113673,"results":"326","hashOfConfig":"180"},{"size":467,"mtime":1626285476010,"results":"327","hashOfConfig":"180"},{"size":1955,"mtime":1627400551298,"results":"328","hashOfConfig":"180"},{"size":1041,"mtime":1626276670763,"results":"329","hashOfConfig":"180"},{"size":5119,"mtime":1629426224470,"results":"330","hashOfConfig":"180"},{"size":896,"mtime":1626238266960,"results":"331","hashOfConfig":"180"},{"size":3366,"mtime":1626977431181,"results":"332","hashOfConfig":"180"},{"size":1754,"mtime":1626240947578,"results":"333","hashOfConfig":"180"},{"size":4211,"mtime":1629426224470,"results":"334","hashOfConfig":"180"},{"size":628,"mtime":1626238266970,"results":"335","hashOfConfig":"180"},{"size":1934,"mtime":1626238266969,"results":"336","hashOfConfig":"180"},{"size":184,"mtime":1626238266967,"results":"337","hashOfConfig":"180"},{"size":2145,"mtime":1626289969776,"results":"338","hashOfConfig":"180"},{"size":2709,"mtime":1626742737721,"results":"339","hashOfConfig":"180"},{"size":2925,"mtime":1626742737721,"results":"340","hashOfConfig":"180"},{"size":4631,"mtime":1626238266965,"results":"341","hashOfConfig":"180"},{"size":962,"mtime":1626742737720,"results":"342","hashOfConfig":"180"},{"size":4546,"mtime":1627400551297,"results":"343","hashOfConfig":"180"},{"size":443,"mtime":1627400551299,"results":"344","hashOfConfig":"180"},{"size":1563,"mtime":1627400551297,"results":"345","hashOfConfig":"180"},{"size":7097,"mtime":1629428030829,"results":"346","hashOfConfig":"180"},{"size":1963,"mtime":1629426224465,"results":"347","hashOfConfig":"180"},{"size":5071,"mtime":1629428030828,"results":"348","hashOfConfig":"180"},{"size":12821,"mtime":1629428030830,"results":"349","hashOfConfig":"180"},{"size":5797,"mtime":1629426224465,"results":"350","hashOfConfig":"180"},{"size":2372,"mtime":1629426224464,"results":"351","hashOfConfig":"180"},{"size":2439,"mtime":1629426224466,"results":"352","hashOfConfig":"180"},{"size":2684,"mtime":1629426224467,"results":"353","hashOfConfig":"180"},{"size":2508,"mtime":1629426224468,"results":"354","hashOfConfig":"180"},{"size":4564,"mtime":1629426224468,"results":"355","hashOfConfig":"180"},{"size":3445,"mtime":1629426224468,"results":"356","hashOfConfig":"180"},{"size":4755,"mtime":1629426224464,"results":"357","hashOfConfig":"180"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"361"},"1ryrvlx",{"filePath":"362","messages":"363","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"361"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"361"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"361"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"361"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"361"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"361"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"361"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"361"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"361"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"361"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"361"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"361"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"361"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"361"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"361"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"361"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"361"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"361"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"361"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"361"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"361"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"361"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"361"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"361"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"361"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"361"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"361"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"361"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"361"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"361"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"361"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"361"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"361"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"361"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"361"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"361"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"361"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"361"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"361"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"361"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"361"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"361"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"361"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"523","messages":"524","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"361"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"361"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"361"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"361"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"361"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"361"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"361"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"361"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"361"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"361"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"361"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"361"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"361"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"361"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"361"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"361"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"361"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"361"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587","usedDeprecatedRules":"361"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"361"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"361"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"361"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"361"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"361"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"361"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614","usedDeprecatedRules":"361"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"361"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"361"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"361"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"361"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"361"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632","usedDeprecatedRules":"361"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"635","usedDeprecatedRules":"361"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"361"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"641","usedDeprecatedRules":"361"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"644","usedDeprecatedRules":"361"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"647","usedDeprecatedRules":"361"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"361"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"361"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"361"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"361"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"361"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673","usedDeprecatedRules":"361"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"676","usedDeprecatedRules":"361"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"361"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"361"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"361"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"688","usedDeprecatedRules":"361"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"691","usedDeprecatedRules":"361"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"361"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"361"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"700","usedDeprecatedRules":"361"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"361"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"361"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"361"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"361"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715","usedDeprecatedRules":"361"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"720","usedDeprecatedRules":"361"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723","usedDeprecatedRules":"361"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726","usedDeprecatedRules":"361"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"729","usedDeprecatedRules":"361"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"734","usedDeprecatedRules":"361"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"737","usedDeprecatedRules":"361"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"361"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"743","usedDeprecatedRules":"361"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"746","usedDeprecatedRules":"361"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"749","usedDeprecatedRules":"361"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"752","usedDeprecatedRules":"361"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755","usedDeprecatedRules":"361"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"361"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"763","usedDeprecatedRules":"361"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"766","usedDeprecatedRules":"361"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"769","usedDeprecatedRules":"361"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"361"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"777","usedDeprecatedRules":"361"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"780","usedDeprecatedRules":"361"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"783","usedDeprecatedRules":"361"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"786","usedDeprecatedRules":"361"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"789","usedDeprecatedRules":"361"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792","usedDeprecatedRules":"361"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"797","usedDeprecatedRules":"361"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"800","usedDeprecatedRules":"361"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"803","usedDeprecatedRules":"361"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"806","usedDeprecatedRules":"361"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"809","usedDeprecatedRules":"361"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"812","usedDeprecatedRules":"361"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"821","usedDeprecatedRules":"361"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"824","messages":"825","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"826","usedDeprecatedRules":"361"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"831","usedDeprecatedRules":"361"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"834","usedDeprecatedRules":"361"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"839","usedDeprecatedRules":"361"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"842","usedDeprecatedRules":"361"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"845","usedDeprecatedRules":"361"},{"filePath":"846","messages":"847","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"848","usedDeprecatedRules":"361"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"851","usedDeprecatedRules":"361"},{"filePath":"852","messages":"853","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"854","usedDeprecatedRules":"361"},"C:\\projects\\leev\\leev-fe\\src\\index.js",["855"],"import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { AuthContextProvider } from './context/AuthContext'\r\nimport './i18n';\r\nimport { LanguageContextProvider } from './context/LanguageContext';\r\nimport { EnvContextProvider } from './context/EnvContext';\r\nimport { LoadingProgress } from './components/reuseables/LoadingProgress';\r\n\r\nObject.defineProperty(Array.prototype, \"chunk\", {\r\n\tvalue: function (chunkSize) {\r\n\t\tvar R = [];\r\n\t\tfor (var i = 0; i < this.length; i += chunkSize)\r\n\t\t\tR.push(this.slice(i, i + chunkSize));\r\n\t\treturn R;\r\n\t},\r\n});\r\n\r\nReactDOM.render(\r\n    <EnvContextProvider>\r\n      <LanguageContextProvider>\r\n        <AuthContextProvider>\r\n          <Suspense fallback={<LoadingProgress initial={true} />}>\r\n            <App />\r\n          </Suspense>   \r\n        </AuthContextProvider>\r\n      </LanguageContextProvider>\r\n    </EnvContextProvider>\r\n      \r\n ,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n",["856","857"],"C:\\projects\\leev\\leev-fe\\src\\App.js",["858","859","860"],"import './App.css';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { Login } from './components/user/Login';\r\nimport { PasswordRecovery } from './components/user/PasswordRecovery';\r\nimport { ProtectedWorkspace } from './components/workspace/ProtectedWorkspace';\r\nimport { InitialRouter } from './components/routes/InitialRouter';\r\nimport { Workspace } from './components/workspace/Workspace';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { theme } from './themes/theme';\r\nimport { FiltersContextProvider } from './context/FiltersContext';\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\r\nimport { LanguageContext } from './context/LanguageContext';\r\nimport { SnackbarContextProvider } from './context/SnackbarContext';\r\nimport { Chatbot } from './components/chatbot/Chatbot';\r\nimport { ResetPassword } from './components/user/ResetPassword';\r\nimport { EnvContext } from './context/EnvContext';\r\nimport { AlertTitle } from '@material-ui/lab';\r\nimport { FaultsReport } from './components/datapages/reports/FaultsReport';\r\nimport { Reports } from './components/datapages/reports/Reports';\r\n\r\n\r\nfunction App() {\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { env, setEnv } = useContext(EnvContext);\r\n\tconst jss = create({\r\n\t\tplugins: [...jssPreset().plugins, lang.code === 'he' ? rtl() : null],\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('resize', () => {\r\n\t\t\tsetEnv({\r\n\t\t\t\tscreenHeight: window.innerHeight,\r\n\t\t\t\tscreenWidth: window.innerWidth\r\n\t\t\t})\r\n\t\t})\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<StylesProvider jss={jss}>\r\n\t\t\t<div className=\"App\" dir={lang.dir}>\r\n\t\t\t\t<ThemeProvider theme={{...theme, direction: lang.dir}}>\r\n\t\t\t\t\t<Router>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<InitialRouter exact path=\"/\"></InitialRouter>\r\n\t\t\t\t\t\t\t<Route path=\"/login\">\r\n\t\t\t\t\t\t\t\t<Login />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path=\"/passwordrecovery\">\r\n\t\t\t\t\t\t\t\t<PasswordRecovery />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path=\"/reset/:handle\">\r\n\t\t\t\t\t\t\t\t<ResetPassword />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<ProtectedWorkspace path=\"/workspace\">\r\n\t\t\t\t\t\t\t\t<SnackbarContextProvider>\r\n\t\t\t\t\t\t\t\t\t<FiltersContextProvider>\r\n\t\t\t\t\t\t\t\t\t\t<Workspace />\r\n\t\t\t\t\t\t\t\t\t</FiltersContextProvider>\r\n\t\t\t\t\t\t\t\t</SnackbarContextProvider>\r\n\t\t\t\t\t\t\t</ProtectedWorkspace>\r\n\t\t\t\t\t\t\t<Route path=\"/open/:assetId\">\r\n\t\t\t\t\t\t\t\t<Chatbot />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</Router>\r\n\t\t\t\t</ThemeProvider>\r\n\t\t\t</div>\r\n\t\t</StylesProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","C:\\projects\\leev\\leev-fe\\src\\i18n.js",["861","862"],"import { FiberManualRecordRounded } from '@material-ui/icons';\r\nimport i18n from 'i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next }from 'react-i18next';\r\nimport { handleLS } from './api/userApi';\r\nimport en from './lacales/en/translation.json';\r\nimport he from './lacales/he/translation.json';\r\n\r\nlet fbc = 'en';\r\nlet lsg = localStorage.getItem('wb_lang');\r\nif (lsg) {\r\n    fbc = JSON.parse(localStorage.getItem('wb_lang')).lang;\r\n}\r\n\r\n\r\n\r\nconst resources = {\r\n    en: {\r\n        translation: en\r\n    },\r\n    he: {\r\n        translation: he\r\n    }\r\n}\r\n\r\ni18n\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init({\r\n        resources,\r\n        fallbackLng: fbc,\r\n        detection: {\r\n            order: ['queryString', 'cookie'],\r\n            cache: ['cookie']\r\n        },\r\n        interpolation: {\r\n            escapeValue: false\r\n        }\r\n    });\r\n\r\nexport default i18n;\r\n    ","C:\\projects\\leev\\leev-fe\\src\\context\\LanguageContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\FiltersContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\SnackbarContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\themes\\theme.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\workspace\\ProtectedWorkspace.js",["863"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authenticate, handleLS } from '../../api/userApi';\r\nimport { LoadingProgress } from '../reuseables/LoadingProgress';\r\n\r\nexport const ProtectedWorkspace = ({ children, isAuthenticated,...rest}) => {\r\n    \r\n    const { auth, setAuth } = useContext(AuthContext);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const checkUserAuthentication = async () => {\r\n            let token = await handleLS('wb_token', 'get');\r\n            if (!token) {\r\n                setIsLoading(false);\r\n                return;\r\n            };\r\n            let res = await authenticate(token);\r\n            if (res.auth) {\r\n               setAuth({\r\n                    isAuth: res.auth,\r\n                    user: res.user,\r\n                    token: res.token.token,\r\n                    refreshToken: res.token.refreshToken\r\n                });\r\n                  \r\n            }\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        checkUserAuthentication();\r\n    }, []);\r\n\r\n    return (\r\n        <Route {...rest}\r\n          render={({ location }) => isLoading ? \r\n          <LoadingProgress initial={true} /> : \r\n            auth.isAuth\r\n            ? children\r\n            :   <Redirect\r\n                    to={{\r\n                    pathname: \"/login\",\r\n                    state: { from: location }\r\n                }}/>\r\n            }      \r\n        />\r\n      );\r\n}\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\routes\\InitialRouter.js",["864"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authenticate, handleLS } from '../../api/userApi';\r\nimport { LoadingProgress } from '../reuseables/LoadingProgress';\r\n\r\nexport const InitialRouter = ({...rest}) => {\r\n    \r\n    const { auth, setAuth } = useContext(AuthContext);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    const checkUserAuthentication = async () => {\r\n        let token = await handleLS('wb_token', 'get');\r\n        if (!token) {\r\n            setIsLoading(false);\r\n            return;\r\n        };\r\n        let res = await authenticate(token);\r\n        \r\n        if (res.auth) {\r\n           setAuth({\r\n                isAuth: res.auth,\r\n                user: res.user,\r\n                token: res.token.token,\r\n                refreshToken: res.token.refreshToken\r\n            });\r\n              \r\n        }\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n    useEffect(() => {\r\n        checkUserAuthentication();\r\n    }, []);\r\n\r\n    return (\r\n        <Route {...rest}\r\n          render={() => isLoading ? \r\n            <LoadingProgress initial={true} /> : \r\n            auth.isAuth\r\n            ? <Redirect\r\n                to={{\r\n                    pathname: \"/workspace\"\r\n            }}/> \r\n            :   <Redirect\r\n                    to={{\r\n                    pathname: \"/login\"\r\n                }}/>\r\n            }      \r\n        />\r\n      );\r\n}\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\workspace\\Workspace.js",["865","866"],"import { makeStyles, Portal, Snackbar } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport React, { useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { ConversationsContextProvider } from \"../../context/ConversationsContext\";\r\nimport { FaultsContextProvider } from \"../../context/FaultsContext\";\r\nimport { NotificationsContextProvider } from \"../../context/NotificationsContext\";\r\nimport { SnackbarContext } from \"../../context/SnackbarContext\";\r\nimport { SocketContextProvider } from \"../../context/SocketContext\";\r\nimport { UpsertContextProvider } from \"../../context/UpsertContext\";\r\nimport { Controls } from \"../controls/Controls\";\r\nimport { Assets } from \"../datapages/assets/Assets\";\r\nimport { Calender } from \"../datapages/calender/Calender\";\r\nimport { Clients } from \"../datapages/clients/Clients\";\r\nimport { Dashboard } from \"../datapages/dashboard/Dashboard\";\r\nimport { Documents } from \"../datapages/documents/Documents\";\r\nimport { Faults } from \"../datapages/faults/Faults\";\r\nimport { MapView } from \"../datapages/map/MapView\";\r\nimport { Reports } from \"../datapages/reports/Reports\";\r\nimport { Systems } from \"../datapages/systems/Systems\";\r\nimport { RepeatableTasks } from \"../datapages/tasks/RepeatableTasks\";\r\nimport { Tasks } from \"../datapages/tasks/Tasks\";\r\n\r\nexport const Workspace = ({}) => {\r\n\tconst classes = useStyles();\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { snackbar, setSnackbar } = useContext(SnackbarContext);\r\n\tconst { t } = useTranslation();\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<UpsertContextProvider>\r\n\t\t\t<FaultsContextProvider>\r\n\t\t\t\t<div container className={classes.mainContainer}>\r\n\t\t\t\t\t<SocketContextProvider id={auth.user._id}>\r\n\t\t\t\t\t\t<ConversationsContextProvider>\r\n\t\t\t\t\t\t\t<NotificationsContextProvider>\r\n\t\t\t\t\t\t\t\t<Controls />\r\n\t\t\t\t\t\t\t</NotificationsContextProvider>\r\n\t\t\t\t\t\t</ConversationsContextProvider>\r\n\t\t\t\t\t</SocketContextProvider>\r\n\t\t\t\t\t<div className={classes.mainData}>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route path={\"/workspace/clients\"}>\r\n\t\t\t\t\t\t\t\t<Clients />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path={\"/workspace/assets\"}>\r\n\t\t\t\t\t\t\t\t<Assets />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path={\"/workspace/systems\"}>\r\n\t\t\t\t\t\t\t\t<Systems />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path={\"/workspace/faults\"}>\r\n\t\t\t\t\t\t\t\t<Faults />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path={\"/workspace/tasks\"}>\r\n\t\t\t\t\t\t\t\t<Tasks />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path={\"/workspace/repeatableTasks\"}>\r\n\t\t\t\t\t\t\t\t<RepeatableTasks />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path={\"/workspace/documents\"}>\r\n\t\t\t\t\t\t\t\t<Documents />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path={\"/workspace/map\"}>\r\n\t\t\t\t\t\t\t\t<MapView />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path={\"/workspace/calender\"}>\r\n\t\t\t\t\t\t\t\t<Calender />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path={\"/workspace/dashboard\"}>\r\n\t\t\t\t\t\t\t\t<Dashboard />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path={\"/workspace/reports\"}>\r\n\t\t\t\t\t\t\t\t<Reports />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{Boolean(snackbar) && (\r\n\t\t\t\t\t<Portal>\r\n\t\t\t\t\t\t<Snackbar\r\n\t\t\t\t\t\t\topen={Boolean(snackbar)}\r\n\t\t\t\t\t\t\tautoHideDuration={6000}\r\n\t\t\t\t\t\t\tonClose={() => setSnackbar(null)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Alert\r\n\t\t\t\t\t\t\t\tonClose={() => setSnackbar(null)}\r\n\t\t\t\t\t\t\t\tseverity={snackbar.severity}\r\n\t\t\t\t\t\t\t\televation={9}\r\n\t\t\t\t\t\t\t\tvariant={\"filled\"}\r\n\t\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\t\tmessage: classes.message,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{snackbar.text}\r\n\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t</Snackbar>\r\n\t\t\t\t\t</Portal>\r\n\t\t\t\t)}\r\n\t\t\t</FaultsContextProvider>\r\n\t\t\t</UpsertContextProvider>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\theight: \"100%\",\r\n\t\tbackground: `url(https://leevstore.blob.core.windows.net/images/grey.jpg)`,\r\n\t\tzIndex: 2,\r\n\t\tbackgroundRepeat: \"no-reaper\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"flex-start\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\t\"&::-webkit-scrollbar\": {\r\n\t\t\t\tdisplay: \"none\",\r\n\t\t\t},\r\n\t\t\tflexDirection: \"column-reverse\",\r\n\t\t},\r\n\t},\r\n\r\n\tmainData: {\r\n\t\theight: \"calc(100% - 64px)\",\r\n\t\tbackground: \"rgba(0,0,0,0.05)\",\r\n\t\tbackdropFilter: \"blur(40px)\",\r\n\t\tboxShadow: \"rgba(0,0,0,0.4) 0px 0px 3px 2px\",\r\n\t\toverflowY: \"overlay\",\r\n\t\twidth: \"calc(100% - 60px)\",\r\n\t\tmargin: \"0 0 0 auto\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborder: \"none\",\r\n\t\t\tborderRadius: 0,\r\n\t\t\tmargin: 0,\r\n\t\t\tpadding: 0,\r\n\t\t\theight: \"calc(100% - 84px)\",\r\n\t\t\t\r\n\t\t\twidth: \"100%\",\r\n\t\t},\r\n\t},\r\n\t\"@global\": {\r\n\t\t\"*::-webkit-scrollbar\": {\r\n\t\t\twidth: \"0.4em\",\r\n\t\t},\r\n\t\t\"*::-webkit-scrollbar-track\": {\r\n\t\t\t\"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.00)\",\r\n\t\t},\r\n\t\t\"*::-webkit-scrollbar-thumb\": {\r\n\t\t\tbackgroundColor: \"rgba(0,0,0,.4)\",\r\n\t\t\tborderRadius: \"50px\",\r\n\t\t},\r\n\t},\r\n\tmessage: {\r\n\t\tpadding: \"8px 20px\",\r\n\t\tdir: \"rtl\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Chatbot.js",["867","868","869","870","871","872","873","874","875","876","877","878"],"import {\r\n\tButton,\r\n\tFade,\r\n\tGrid,\r\n\tmakeStyles,\r\n\tMenu,\r\n\tMenuItem,\r\n} from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useParams } from \"react-router\";\r\nimport { getAssetExternal, getFullAddress } from \"../../api/assetsApi\";\r\nimport { authenticate, handleLS } from \"../../api/userApi\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { MessageImage } from \"./MessageImage\";\r\nimport { MessageInput } from \"./MessageInput\";\r\nimport { Messages } from \"./Messages\";\r\nimport { MessageSelector } from \"./MessageSelector\";\r\nimport { MessageBoolean } from \"./MessageBoolean\";\r\nimport * as scenarios from \"./Scenrio\";\r\nimport { LanguageContext } from \"../../context/LanguageContext\";\r\nimport { getLocalization } from \"../../api/genericApi\";\r\nimport i18next from \"i18next\";\r\n\r\nconst languages = [\"en\", \"he\"];\r\n\r\nexport const Chatbot = () => {\r\n\tconst classes = useStyles();\r\n\tconst { auth, setAuth } = useContext(AuthContext);\r\n\tconst { lang, setLang } = useContext(LanguageContext);\r\n\tconst params = useParams();\r\n\tconst [scenario, setScenario] = useState(scenarios.openFault);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [scenarioStep, setScenarioStep] = useState(null);\r\n\tconst [messages, setMessages] = useState([]);\r\n\tconst [mainAsset, setMainAsset] = useState(null);\r\n\tconst [inputValue, setInputValue] = useState({\r\n\t\ttext: \"\",\r\n\t\tvalue: \"\",\r\n\t\ttype: \"\",\r\n\t});\r\n\tconst [systems, setSystems] = useState([]);\r\n\tconst [locations, setLocations] = useState([]);\r\n\tconst [optionalValues, setOptionalValues] = useState([]);\r\n\tconst [vault, setVault] = useState({});\r\n\tconst [showInput, setShowInput] = useState(null);\r\n\tconst [langMenu, setLangMenu] = useState(false);\r\n\t// const messageContainer = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst checkUserAuthentication = async () => {\r\n\t\t\tlet token = await handleLS(\"wb_token\", \"get\");\r\n\t\t\tif (!token) {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet res = await authenticate(token);\r\n\t\t\tif (res.auth) {\r\n\t\t\t\tsetAuth({\r\n\t\t\t\t\tisAuth: res.auth,\r\n\t\t\t\t\tuser: res.user,\r\n\t\t\t\t\ttoken: res.token.token,\r\n\t\t\t\t\trefreshToken: res.token.refreshToken,\r\n\t\t\t\t});\r\n\t\t\t\tsetVault({\r\n\t\t\t\t\t...vault,\r\n\t\t\t\t\tuser: res.user,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tsetIsLoading(false);\r\n\t\t\treturn;\r\n\t\t};\r\n\t\tcheckUserAuthentication();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!params.assetId) {\r\n\t\t\tscenario = scenarios.assetNotFound;\r\n\t\t}\r\n\t\tgetAssetExternal(params.assetId)\r\n\t\t\t.then((data) => {\r\n\t\t\t\tif (!data.asset || !data.systems) {\r\n\t\t\t\t\tscenario = scenarios.assetNotFound;\r\n\t\t\t\t}\r\n\t\t\t\tsetMainAsset(data.asset);\r\n\t\t\t\tsetSystems([\r\n\t\t\t\t\t...data.systems.map((s, i) => ({ name: s.name, value: s._id })),\r\n\t\t\t\t]);\r\n\t\t\t\tsetLocations([\r\n\t\t\t\t\t...data.locations.map((l, i) => ({ name: l.name, value: l._id })),\r\n\t\t\t\t]);\r\n\t\t\t\treturn updateScenarioState(data.asset._id, \"asset\");\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tsetScenarioStep(scenario.questions[0]);\r\n\t\t\t});\r\n\t}, [params]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!scenarioStep) return;\r\n\t\tsetTimeout(async () => {\r\n\t\t\tsetMessages([\r\n\t\t\t\t...messages,\r\n\t\t\t\t{ text: scenarioStep.text, isUser: false, type: \"string\" },\r\n\t\t\t]);\r\n\t\t\tif (!scenarioStep.actionRequired) {\r\n\t\t\t\tif (isLastStep()) {\r\n\t\t\t\t\tlet sc = await scenarios.getNextScenario(scenario, auth);\r\n\t\t\t\t\tsetScenario(sc);\r\n\t\t\t\t\tsetScenarioStep(null);\r\n\t\t\t\t\tsetScenarioStep(sc.questions[0]);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tsetScenarioStep(scenario.questions[scenarioStep.order + 1]);\r\n\t\t\t} else {\r\n\t\t\t\tsetShowInput(scenarioStep.inputType);\r\n\t\t\t}\r\n\t\t}, 1000);\r\n\t}, [scenarioStep]);\r\n\r\n\tconst { t } = useTranslation();\r\n\r\n\tconst handleInputChange = async (inputVal) => {\r\n\t\tif (!inputVal.value && inputVal.type === \"image\") {\r\n\t\t\tsetShowInput(null);\r\n\t\t\tsetMessages([\r\n\t\t\t\t...messages,\r\n\t\t\t\t{ text: inputVal.text, isUser: true, type: inputVal.type },\r\n\t\t\t]);\r\n\t\t\tawait handleSubmit();\r\n\t\t}\r\n\t\tif (inputVal.type === \"boolean\") {\r\n\t\t\tsetShowInput(null);\r\n\t\t\tawait updateScenarioState(inputVal.value, scenarioStep.inputField);\r\n\t\t\tsetMessages([\r\n\t\t\t\t...messages,\r\n\t\t\t\t{ text: inputVal.text, isUser: true, type: inputVal.type },\r\n\t\t\t]);\r\n\t\t\tsetInputValue({ text: \"\", value: \"\", type: \"\" });\r\n\t\t\tawait handleSubmit();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetInputValue(inputVal);\r\n\t};\r\n\r\n\tconst handleSendInput = async () => {\r\n\t\tsetShowInput(null);\r\n\t\tawait updateScenarioState(inputValue.value, scenarioStep.inputField);\r\n\t\tsetMessages([\r\n\t\t\t...messages,\r\n\t\t\t{ text: inputValue.text, isUser: true, type: inputValue.type },\r\n\t\t]);\r\n\t\tawait handleSubmit();\r\n\t};\r\n\r\n\tconst nextStep = async () => {\r\n\t\tsetInputValue({ text: \"\", value: \"\", type: \"\" });\r\n\t\tif (isLastStep()) {\r\n\t\t\tlet sc = await scenarios.getNextScenario(scenario, auth);\r\n\t\t\tsetScenario(sc);\r\n\t\t\tsetScenarioStep(null);\r\n\t\t\tsetScenarioStep(sc.questions[0]);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetScenarioStep(null);\r\n\t\tsetScenarioStep(scenario.questions[scenarioStep.order + 1]);\r\n\t};\r\n\r\n\tconst handleSubmit = async () => {\r\n\t\tif (!scenarioStep.submit) {\r\n\t\t\tnextStep();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet res = await scenario.submit(vault);\r\n\t\tif (res) {\r\n\t\t\tsetVault({\r\n\t\t\t\t...vault,\r\n\t\t\t\t...res,\r\n\t\t\t});\r\n\t\t\tnextStep();\r\n\t\t}\r\n\t};\r\n\r\n\tconst updateScenarioState = (data, field) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tsetScenario((prev) => {\r\n\t\t\t\tprev.submitInput(data, field);\r\n\t\t\t\treturn prev;\r\n\t\t\t});\r\n\t\t\tresolve();\r\n\t\t});\r\n\t};\r\n\r\n\tconst isLastStep = () => {\r\n\t\treturn scenarioStep.order + 1 === scenario.questions.length;\r\n\t};\r\n\r\n\tconst getOptions = () => {\r\n\t\treturn scenarioStep.inputField === \"system\" ? systems : locations;\r\n\t};\r\n\r\n\tconst changeLanguage = (l) => (event) => {\r\n        setMessages([]);\r\n\t\tsetLang(getLocalization(l))\r\n\t\tsetLangMenu(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.gridContainer}>\r\n\t\t\t<div className={classes.topBar}>\r\n\t\t\t\t<div className={classes.addressContainer}>\r\n\t\t\t\t\t<div className={classes.title}>{t(\"chatbot.title\")}</div>\r\n\t\t\t\t\t<div className={classes.address}>\r\n\t\t\t\t\t\t{mainAsset && getFullAddress(mainAsset)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName={classes.changeLanguage}\r\n\t\t\t\t\tonClick={(e) => setLangMenu(e.target)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{lang.code ? lang.code.toUpperCase() : \"\"}\r\n\t\t\t\t</Button>\r\n                <Menu\r\n\t\t\t\t\tclasses={{\r\n                        paper : classes.langMenu\r\n                    }}\r\n                    keepMounted\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n\t\t\t\t\tanchorEl={langMenu}\r\n\t\t\t\t\tkeepMounted\r\n\t\t\t\t\topen={Boolean(langMenu)}\r\n\t\t\t\t\tonClose={() => setLangMenu(null)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{languages.map((l, i) => (\r\n\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\tonClick={changeLanguage(l)}\r\n\t\t\t\t\t\t\tclassName={classes.langItem}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{l.toUpperCase()}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Menu>\r\n\t\t\t</div>\r\n\r\n\t\t\t<Messages data={messages} />\r\n\t\t\t<Grid container className={classes.inputContainer} alignItems=\"center\">\r\n\t\t\t\t{showInput === \"string\" ? (\r\n\t\t\t\t\t<MessageInput\r\n\t\t\t\t\t\thandleInputChange={handleInputChange}\r\n\t\t\t\t\t\thandleSendInput={handleSendInput}\r\n\t\t\t\t\t\tvalue={inputValue.value}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : showInput === \"select\" ? (\r\n\t\t\t\t\t<MessageSelector\r\n\t\t\t\t\t\tvalue={inputValue.value}\r\n\t\t\t\t\t\toptions={getOptions()}\r\n\t\t\t\t\t\thandleInputChange={handleInputChange}\r\n\t\t\t\t\t\thandleSendInput={handleSendInput}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : showInput === \"image\" ? (\r\n\t\t\t\t\t<MessageImage\r\n\t\t\t\t\t\tvalue={inputValue.value || []}\r\n\t\t\t\t\t\thandleInputChange={handleInputChange}\r\n\t\t\t\t\t\thandleSendInput={handleSendInput}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : showInput === \"boolean\" ? (\r\n\t\t\t\t\t<MessageBoolean handleInputChange={handleInputChange} />\r\n\t\t\t\t) : null}\r\n\t\t\t</Grid>\r\n            \r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tgridContainer: {\r\n\t\theight: \"100%\",\r\n\t\twidth: \"100%\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tbackgroundRepeat: \"repeat\",\r\n\t},\r\n\ttopBar: {\r\n\t\tdisplay: \"flex\",\r\n        background: \"rgba(0,0,0,0.9)\",\r\n        height: '75px',\r\n\t},\r\n\taddressContainer: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"40px\",\r\n\t\t\r\n\t\tbackdropFilter: \"blur(5px)\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"15px\",\r\n\t},\r\n    langMenu: {\r\n        background: 'rgba(0,0,0,0.8)',\r\n        backdropFilter: 'blur(10px)',\r\n        \r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n\r\n    },\r\n    changeLanguage: {\r\n        background: 'transparent',\r\n        color: 'white',\r\n        borderRadius: '0',\r\n        height: '70px'\r\n    },\r\n    langItem: {\r\n        color: 'white',\r\n        width: '100%',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.1)'\r\n        }\r\n    },\r\n\tmessagesContainer: {\r\n\t\theight: \"calc(100% - 120px)\",\r\n\t\twidth: \"100%\",\r\n\t\tbackground: \"rgba(0,0,0,0.1)\",\r\n\t},\r\n\tinputContainer: {\r\n\t\tbackground: \"rgba(0,0,0,0.1)\",\r\n\t\tbackdropFilter: \"blur(5px)\",\r\n\t\twidth: \"100%\",\r\n\t\theight: \"50px\",\r\n\t\tpadding: \"4px 0\",\r\n\t\tborderTop: \"1px solid rgba(0,0,0,0.1)\",\r\n\t\tcolor: \"black\",\r\n\t},\r\n\ttopProfile: {\r\n\t\twidth: \"100%\",\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t},\r\n\tavatar: {\r\n\t\theight: \"150px\",\r\n\t\twidth: \"150px\",\r\n\t\tmargin: \"10px\",\r\n\t},\r\n\t\"@global\": {\r\n\t\t\"*::-webkit-scrollbar\": {\r\n\t\t\twidth: \"0em\",\r\n\t\t},\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: \"rgba(255,255,255,0.8)\",\r\n\t\tfontSize: \"14px\",\r\n\t},\r\n\taddress: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"20px\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\user\\Login.js",["879","880","881"],"import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport { \r\n    Container, \r\n    Grid,\r\n    Box, \r\n    Typography, \r\n    FormControl, \r\n    OutlinedInput, \r\n    InputAdornment, \r\n    InputLabel, \r\n    IconButton,\r\n    Button,\r\n    Link,\r\n    CircularProgress,  \r\n    makeStyles, \r\n    Fade\r\n} from '@material-ui/core';\r\nimport { Visibility, VisibilityOff, Error } from '@material-ui/icons';\r\nimport { attemptToSignin, handleLS, isResident } from '../../api/userApi';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { getLocalization } from '../../api/genericApi';\r\nimport { ChangeLanguage } from '../reuseables/ChangeLanguage';\r\n\r\n\r\nexport const Login = () => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const loginButton = useRef();\r\n    const { t } = useTranslation();\r\n    const { setLang } = useContext(LanguageContext);\r\n\r\n    const [ values, setValues ] = useState({\r\n        email: '',\r\n        password: '',\r\n        showPassword: false\r\n    });\r\n\r\n    const [ errors, setErrors ] = useState([]);\r\n    const [ isLoading, setIsLoading ] = useState(false);\r\n\r\n    const handleChange = (type) => (event) => {\r\n        setValues({ ...values, [type]: event.target.value })\r\n        setErrors(errors => errors.filter(e => (e.field !== type && e.field !== 'both')))\r\n    }\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword})\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        setIsLoading(true);\r\n        let isValid = await validateFields();\r\n        if (isValid) setErrors([]);\r\n\r\n        let res = await attemptToSignin({\r\n            email: values.email,\r\n            password: values.password\r\n        });\r\n\r\n        if (res.status === 401) {\r\n            setErrors([{ \r\n                field: 'both',\r\n                message: 'Email or Password were Incorrect'\r\n            }]);\r\n        } else if (res.status === 500) {\r\n            setErrors([{ \r\n                field: 'both',\r\n                message: 'Internal server error. Please contact the system administrator.'\r\n            }]); \r\n        } else if (res.status === 200) {\r\n\r\n            await handleLS('wb_token', 'set', res.data.token);\r\n            await handleLS('wb_user', 'set', res.data.user);\r\n            await handleLS('wb_lang', 'set', { lang: res.data.user.lang });\r\n            setLang(getLocalization(res.data.user.lang))\r\n            if (location.state) {\r\n                history.push(location.state.from.pathname || '');\r\n            } else {\r\n                if (res.data.user.isAdmin) {\r\n                    history.push('/workspace/clients');\r\n                } else if (isResident(res.data.user)) {\r\n                    history.push('/workspace/faults');\r\n                } else {\r\n                    history.push('/workspace/dashboard');\r\n                }\r\n            }\r\n        }\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const validateFields = async () => {\r\n        return new Promise((resolve, reject) => {\r\n            let errs = [];\r\n            if (!values.email) {\r\n                errs.push({ field: 'email', message: 'Email is required'});\r\n            }\r\n            if (!values.password) {\r\n                errs.push({ field: 'password', message: 'Password is required'})\r\n            };\r\n            if (errs.length) {\r\n                setErrors(errs)\r\n                setIsLoading(false);\r\n                reject(false);       \r\n            };\r\n            resolve(true);     \r\n        })\r\n    }\r\n\r\n    const checkEnter = (e) => {\r\n        if (e.keyCode === 13) {\r\n            handleSubmit();\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <Grid container alignItems='center' justify='center' className={classes.mainContainer} >\r\n            <Grid item className={classes.loginContainer} xl={3} lg={4} md={6} sm={10} xs={11}>\r\n                <ChangeLanguage className={classes.changeLanguage}/>\r\n                <Box className={classes.bannerContainer} bgcolor='primary.main'>\r\n                    <img src='https://leevstore.blob.core.windows.net/images/leev_logo_transparent.png' className={classes.logo} />\r\n                </Box>\r\n                <Container component='div' className={classes.headerContainer}>\r\n                    <Typography className={classes.header}>\r\n                        {t(\"login.title\")}\r\n                    </Typography>\r\n                </Container>\r\n                <Container component='div' className={classes.inputsContainer}>\r\n                    <FormControl variant='outlined' className={classes.textInput}>\r\n                        <InputLabel htmlFor='outlined-input-email'>{t(\"login.email\")}</InputLabel>\r\n                        <OutlinedInput\r\n                            error={ errors.filter(e => e.field === 'email').length > 0 }\r\n                            id=\"outlined-input-email\"\r\n                            type='text'\r\n                            value={values.email}\r\n                            onChange={handleChange('email')}\r\n                            labelWidth={70}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl variant='outlined' className={classes.textInput}>\r\n                        <InputLabel htmlFor='outlined-input-password'>{t(\"login.password\")}</InputLabel>\r\n                        <OutlinedInput\r\n                            error={ errors.filter(e => e.field === 'password').length > 0 }\r\n                            id='outlined-input-password' \r\n                            type={values.showPassword ? 'text' : 'password'}\r\n                            value={ values.password }\r\n                            onChange={handleChange('password')}\r\n                            labelWidth={70}\r\n                            onKeyDown={checkEnter}\r\n                            endAdornment={\r\n                                <InputAdornment position='end'>\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={(e) => e.preventDefault()}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </FormControl>                   \r\n                </Container>\r\n                {\r\n                    errors.length > 0 ?\r\n                    errors.map((e,i) => {\r\n                        return (\r\n                            <Container component='div' className={classes.errorContainer} key={i}>\r\n                                <Error fontSize='inherit' color={'error'} />\r\n                                <Typography component='span' className={classes.error} color='error'>\r\n                                    {e.message}\r\n                                </Typography>\r\n                            </Container>\r\n                        )\r\n                    })  \r\n                    : null\r\n                }\r\n                <Container component='div' className={classes.submitContainer}>\r\n                    <Button \r\n                        variant='contained'\r\n                        className={classes.submitButton}\r\n                        color='primary'\r\n                        onClick={handleSubmit}\r\n                        disabled={isLoading}\r\n                        ref={loginButton}   \r\n                    >\r\n                    {\r\n                        isLoading ? \r\n                        <CircularProgress color={'secondary'} size={30}/> :\r\n                        t(\"login.login\")\r\n                    }\r\n                    \r\n                    </Button>\r\n                </Container>\r\n                <Container className={classes.forgotPassContainer}>\r\n                    <Typography className={classes.forgotPass}>\r\n                        <Link href='/passwordrecovery'\r\n                        >\r\n                            {t(\"login.forgotPassword\")}\r\n                        </Link> \r\n                    </Typography>\r\n                </Container>\r\n            </Grid>\r\n        \r\n        </Grid>\r\n        \r\n    )\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n    mainContainer: {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'fixed',\r\n        backgroundImage: `url(https://leevstore.blob.core.windows.net/images/grey.jpg)`,\r\n        backgroundSize: 'cover'\r\n    },\r\n    loginContainer: {   \r\n        borderRadius: '10px',\r\n        border: '1px solid rgba(255,255,255,0.18)',\r\n        padding: '0',\r\n        background: 'rgba(255, 255, 255, 0.2)',\r\n        boxShadow: '0 8px 32px 0 rgb(0 0 0 / 37%)',\r\n        backdropFilter: 'blur(8px)',\r\n        '-webkit-backdrop-filter': 'blur( 10px )',\r\n        height: 'fit-content'\r\n    },\r\n    bannerContainer: {\r\n        width: '100%',\r\n        borderRadius: '10px 10px 0 0',\r\n        padding: '0',\r\n        display: 'grid',\r\n        placeItems: 'center'\r\n    },\r\n    banner: {\r\n        color: grey[50],\r\n        fontWeight: 600,\r\n        fontSize: '24px',\r\n        position: 'relative',\r\n        margin: 'auto',\r\n        fontFamily: 'Kaushan'\r\n    },\r\n\r\n    headerContainer: {\r\n        width: '100%',\r\n        height: '50px',\r\n        display: 'grid',\r\n        placeItems: 'center',\r\n        margin: '40px 0 0 0'\r\n    },\r\n    header: {\r\n        fontSize: '24px',\r\n        fontWeight: '300',\r\n        height: '70%',\r\n        color: 'white'\r\n    },\r\n   \r\n    inputsContainer: {\r\n        width: '100%',\r\n        height: '165px',\r\n        display: 'grid',\r\n        placeItems: 'center',\r\n        padding: '28px 14px 0px'\r\n    },\r\n    textInput: {\r\n        width: '80%',\r\n        '& .MuiOutlinedInput-root': {\r\n            '& input': {\r\n                padding: '18.5px 28px'\r\n            },\r\n            \r\n        }\r\n    },\r\n    submitContainer: {\r\n        width: '100%',\r\n        display: 'grid',\r\n        placeItems: 'center',\r\n        padding: '7px 14px'\r\n    },\r\n    submitButton: {\r\n        width: '80%',\r\n        height: '50px',\r\n        margin: 'auto',\r\n        position: 'relative',\r\n        fontSize: '18px',\r\n        borderRadius: '50px'\r\n    },\r\n    forgotPassContainer: {\r\n        width: '100%',\r\n        padding: '0px 64px 60px'\r\n    },\r\n    forgotPass: {\r\n        fontSize: '14px'\r\n    },\r\n    errorContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'initial',\r\n        width: '75%',\r\n        padding: '0',\r\n        fontSize: '18px'\r\n    },\r\n    error: {\r\n        marginLeft: '8px',\r\n        fontSize: '12px'\r\n    },\r\n    logo: {\r\n        width: '100px',\r\n        height: '100px'\r\n    },\r\n    logoContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        height: 'fit-content'\r\n    },\r\n    changeLanguage: {\r\n        position: 'absolute'\r\n    }\r\n\r\n})","C:\\projects\\leev\\leev-fe\\src\\context\\FaultsContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\NotificationsContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Messages.js",["882","883"],"import { Grid, makeStyles, Avatar, Fade } from '@material-ui/core';\r\nimport React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { Message } from './Message';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nexport const Messages = ({ data }) => {\r\n\r\n    const classes = useStyles();\r\n    const [ messages, setMessages ] = useState(data || []);\r\n    const { t } = useTranslation();\r\n    const ms = useRef();\r\n\r\n    useEffect(() => {\r\n        setMessages(data);\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (ms) {\r\n            // ms.current.scrollTop = ms.current.scrollHeight - ms.current.clientHeight;\r\n            let len = ms.current.children.length;\r\n            ms.current.children[len - 1].scrollIntoView({ bahavior: 'smooth'}) \r\n        }    \r\n    }, [ messages ])\r\n\r\n\treturn (\r\n\t\t<div className={classes.messagesContainer} ref={ms} >\r\n            <Fade in={Boolean(data.length)}>\r\n            <div className={classes.topProfile}>\r\n                <Avatar src={'https://leevstore.blob.core.windows.net/images/leev_logo_round.png'} className={classes.avatar}/>\r\n                <div className={classes.welcome}>\r\n                    {t(\"chatbot.welcome\")}\r\n                </div>\r\n                <div className={classes.welcomeSub}>\r\n                    {t(\"chatbot.welcomeSub\")}\r\n                </div>\r\n            </div>\r\n            </Fade>\r\n           \r\n            {\r\n                messages.length ?\r\n                messages.map((m,i) => \r\n                    <Message data={m} key={i} />\r\n                ):\r\n                null\r\n            }\r\n        </div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    messagesContainer: {\r\n        padding: '10px 0',\r\n        height: 'calc(100% - 120px)',\r\n        overflow: 'auto'\r\n    },\r\n    topProfile: {\r\n        width: '100%',\r\n        display: 'grid',\r\n        placeItems: 'center'\r\n    },\r\n    avatar: {\r\n        height: '150px',\r\n        width: '150px',\r\n        margin: '10px'\r\n    },\r\n    welcome: {\r\n        color: 'white',\r\n        fontSize: '14px',\r\n        margin: '5px',\r\n        background: 'rgba(0,0,0,0.8)',\r\n        padding: '10px 25px',\r\n        borderRadius: '50px',\r\n    },\r\n    welcomeSub: {\r\n        color: 'rgba(255,255,255,0.7)',\r\n        fontSize: '12px',\r\n        background: 'rgba(0,0,0,0.8)',\r\n        borderRadius: '50px',\r\n        padding: '10px 25px',\r\n        margin: '5px 30px 30px',\r\n        textAlign: 'center'\r\n    },\r\n    '@global': {\r\n\t\t'*::-webkit-scrollbar': {\r\n\t\t\twidth: '0em',\r\n        }\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageInput.js",["884"],"import {\r\n\tFormControl,\r\n\tGrid,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tOutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport clsx from \"clsx\";\r\nimport React, { useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LanguageContext } from \"../../context/LanguageContext\";\r\n\r\nexport const MessageInput = ({\r\n\tvalue,\r\n\thandleInputChange,\r\n\thandleSendInput,\r\n\tplaceholder,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tlet val = event.target.value;\r\n\t\thandleInputChange({ text: val, value: val, type: \"string\" });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} className={classes.addComment}>\r\n\t\t\t<FormControl variant=\"outlined\" className={classes.form}>\r\n\t\t\t\t<OutlinedInput\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\tclassName={clsx(classes.textInput)}\r\n\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\tinputMultiline: classes.multiLine,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</FormControl>\r\n\r\n\t\t\t<IconButton \r\n\t\t\t\tclassName={classes.postBtn} \r\n\t\t\t\tonClick={handleSendInput}\r\n\t\t\t\tdisabled={!Boolean(value.length)} \r\n\t\t\t>\r\n\t\t\t\t<SendRoundedIcon\r\n\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\tclasses.icon,\r\n\t\t\t\t\t\tlang.dir === \"rtl\" ? classes.mirror : null\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</IconButton>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\taddComment: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\twidth: \"fit-content\",\r\n\t\tpadding: \"0 5px\",\r\n\t},\r\n\tform: {\r\n\t\tcolor: \"black\",\r\n\t\twidth: \"100%\",\r\n\t\tmargin: \"0 5px 0 0px\",\r\n\t\tborder: \"1px solid rgba(0,0,0,0.1)\",\r\n\t\tborderRadius: \"42px\",\r\n\t\tbackground: \"white\",\r\n\t},\r\n\ttextInput: {\r\n\t\tpadding: \"4px 10px\",\r\n\t\tborderRadius: \"42px\",\r\n\r\n\t\t\"& input\": {\r\n\t\t\tcolor: \"black\",\r\n\t\t\twidth: \"80%\",\r\n\t\t\tpadding: \"4px 10px\",\r\n\t\t\tfontSize: \"14px\",\r\n\t\t},\r\n\t\t\"& label\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\tpaddingLeft: \"5px\",\r\n\t\t},\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderColor: \"rgba(255,255,255,0.2)\",\r\n\t\t\tborderRadius: \"42px\",\r\n\t\t},\r\n\t},\r\n\tpostBtn: {\r\n\t\tbackground: \"#42A5F5\",\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"7px\",\r\n\t\tmargin: \" 0 5px 1px\",\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: \"20px\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tmirror: {\r\n\t\ttransform: \"scaleX(-1)\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Scenrio.js",["885"],"import i18next from 'i18next';\r\nimport { assignUserToFault, checkEmailExists } from '../../api/chatbotApi';\r\nimport { createExternalFault } from '../../api/faultsApi';\r\n\r\nexport const welcome = {\r\n\tquerstions: [\r\n\t\t\r\n\t]\r\n}\r\n\r\nexport const assetNotFound = {\r\n\ttype: 'assetNotFound',\r\n\tquestions: [\r\n\t\t{\r\n\t\t\torder: 0,\r\n            text: 'chatbot.assetNotFound',\r\n\t\t\tactionRequired: false,\r\n\t\t\tinputType: null,\r\n            submitFunc: null\r\n\t\t},\r\n\t]\r\n};\r\n\r\nexport const openFault = {\r\n\ttype: 'openFault',\r\n\tdata: {\r\n\t\tasset: null,\r\n\t\tsystem: null,\r\n\t\tlocation: null,\r\n\t\tdescription: null,\r\n\t\timages: null\r\n\t},\r\n\tsubmitInput: function(data, field) {\r\n\t\tthis.data[field] = data;\r\n\t\treturn Promise.resolve();\r\n\t},\r\n\tsubmit: async function(vault) {\r\n\t\tlet createdBy = vault.user ? vault.user._id : null;\r\n\t\tconst res = await createExternalFault({...this.data, createdBy})\r\n\t\tif (res) {\r\n\t\t\treturn res;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tquestions: [\r\n\t\t{\r\n\t\t\torder: 0,\r\n            text: 'chatbot.welcomeMessage',\r\n\t\t\tactionRequired: false,\r\n\t\t\tinputType: null,\r\n            submitFunc: null\r\n\t\t},\r\n\t\t{\r\n\t\t\torder: 1,\r\n            text: 'chatbot.notLoggedIn.requestSystem',\r\n\t\t\tactionRequired: true,\r\n\t\t\tinputType: 'select',\r\n\t\t\tinputField: 'system'\r\n\t\t},\r\n\t\t{\r\n\t\t\torder: 2,\r\n            text: 'chatbot.notLoggedIn.requestLocation',\r\n\t\t\tactionRequired: true,\r\n\t\t\tinputType: 'select',\r\n\t\t\tinputField: 'location'\r\n\t\t},\r\n\t\t{\r\n\t\t\torder: 3,\r\n            text: 'chatbot.notLoggedIn.requestDescription1',\r\n            actionRequired: false,\r\n\t\t\tinputType: null,\r\n\t\t\tinputField: null\r\n           \r\n\t\t},\r\n\t\t{\r\n\t\t\torder: 4,\r\n            text: 'chatbot.notLoggedIn.requestDescription2',\r\n\t\t\tactionRequired: true,\r\n\t\t\tinputType: 'string',\r\n\t\t\tinputField: 'description'\r\n\t\t},\r\n\t\t{\r\n\t\t\torder: 5,\r\n            text: 'chatbot.notLoggedIn.requestPhotos',\r\n\t\t\tactionRequired: true,\r\n\t\t\tinputType: 'image',\r\n\t\t\tinputField: 'images',\r\n\t\t\tsubmit: true\r\n\t\t},\r\n\t\t{\r\n\t\t\torder: 6,\r\n            text: 'chatbot.notLoggedIn.faultOpenedSuccessfully',\r\n            actionRequired: false,\r\n\t\t\tinputType: null,\r\n\t\t\tinputField: null\r\n\t\t}\r\n\t]\r\n};\r\n\r\nexport const followFault = {\r\n\ttype: 'followFault',\r\n\tdata: {\r\n\t\tshouldFollow: false,\r\n\t\tassignStatus: null\r\n\t},\r\n\tsubmitInput: function(data, field) {\r\n\t\tthis.data[field] = data;\r\n\t\treturn Promise.resolve();\r\n\t},\r\n\tsubmit: async function(vault) {\r\n\t\tif (!this.data.shouldFollow) {\r\n\t\t\tthis.data.assignStatus = false;\r\n\t\t\treturn this.data;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tif (!vault.user) return this.data;\r\n\t\t\tlet data = await assignUserToFault(vault.user._id, vault._id);\r\n\t\t\tif (data) {\r\n\t\t\t\tthis.data.assignStatus = true;\r\n\t\t\t\treturn this.data;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e.message);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\tquestions: [\r\n\t\t{\r\n\t\t\torder: 0,\r\n            text: 'chatbot.requestFollow',\r\n\t\t\tactionRequired: true,\r\n\t\t\tinputType: 'boolean',\r\n\t\t\tinputField: 'shouldFollow',\r\n            submit: true\r\n\t\t}\r\n\t]\r\n};\r\n\r\nexport const checkUserAuthentication = {\r\n\ttype: 'checkUserAuthentication',\r\n\tdata: {\r\n\t\temail: null,\r\n\t\tauthenticated: false\r\n\t},\r\n\tsubmitInput: function(data, field) {\r\n\t\tthis.data[field] = data;\r\n\t\treturn Promise.resolve();\r\n\t},\r\n\tsubmit: async function(vault) {\r\n\t\tif (!this.data.email) return false;\r\n\t\ttry {\r\n\t\t\tlet res = await checkEmailExists(this.data.email);\r\n\t\t\tif (!res) {\r\n\t\t\t\tthis.data.authenticated = false;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tthis.data.authenticated = true;\r\n\t\t\tlet data = await assignUserToFault(res.userId, vault._id);\r\n\t\t\tif (data) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e.message);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\tquestions: [\r\n\t\t{\r\n\t\t\torder: 0,\r\n            text: 'chatbot.requestEmail',\r\n\t\t\tactionRequired: true,\r\n\t\t\tinputType: 'string',\r\n\t\t\tinputField: 'email',\r\n            submit: true\r\n\t\t}\r\n\t]\r\n}\r\n\r\nexport const assignedSuccessfully = {\r\n\tquestions: [\r\n\t\t{\r\n\t\t\torder: 0,\r\n\t\t\ttext: 'chatbot.assignedSuccessfully',\r\n\t\t\tactionRequired: false,\r\n\t\t\tinputType: null,\r\n\t\t\tinputField: null,\r\n\t\t\tsubmit: false\r\n\t\t}\r\n\t]\r\n}\r\n\r\nexport const assignFailed = {\r\n\tquestions: [\r\n\t\t{\r\n\t\t\torder: 0,\r\n\t\t\ttext: 'chatbot.userNotFound',\r\n\t\t\tactionRequired: false,\r\n\t\t\tinputType: null,\r\n\t\t\tinputField: null,\r\n\t\t\tsubmit: false\r\n\t\t}\r\n\t]\r\n}\r\n\r\n\r\nexport const userAssigned = {\r\n\ttype: 'userAssigned',\r\n\tquestions: [\r\n\t\t{\r\n\t\t\torder: 0,\r\n            text: 'chatbot.notLoggedIn.emailSent',\r\n            actionRequired: false,\r\n\t\t\tinputType: null,\r\n\t\t\tinputField: null,\r\n            submitFunc: null\r\n\t\t}\r\n\t]\r\n}\r\n\r\nexport const thankyou = {\r\n\tquestions: [\r\n\t\t{\r\n\t\t\torder: 0,\r\n            text: 'chatbot.notLoggedIn.thankyou',\r\n            actionRequired: false,\r\n\t\t\tinputType: null,\r\n\t\t\tinputField: null,\r\n            submitFunc: null\r\n\t\t}\r\n\t]\r\n}\r\n\r\nexport const getNextScenario = (currentScenario, auth) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (currentScenario.type === 'openFault') {\r\n\t\t\tresolve(followFault);\r\n\t\t};\r\n\t\tif (currentScenario.type === 'followFault') {\r\n\t\t\tif (currentScenario.data.shouldFollow) {\r\n\t\t\t\tif (currentScenario.data.assignStatus) {\r\n\t\t\t\t\tresolve(userAssigned);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresolve(checkUserAuthentication);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tresolve(thankyou);\r\n\t\t}\r\n\t\tif (currentScenario.type === 'checkUserAuthentication') {\r\n\t\t\tif (currentScenario.data.authenticated) {\r\n\t\t\t\tresolve(assignedSuccessfully)\r\n\t\t\t} else {\r\n\t\t\t\tresolve(assignFailed)\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (['assignedSuccessfully', 'assignFailed'].includes(currentScenario.type)) {\r\n\t\t\tresolve(thankyou);\r\n\t\t}\r\n\t})\r\n\t\r\n}","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageImage.js",["886","887","888"],"import { Button, FormControl, Grid, IconButton, makeStyles, OutlinedInput } from '@material-ui/core';\r\nimport { CancelScheduleSend } from '@material-ui/icons';\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\nimport clsx from 'clsx';\r\nimport React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\nexport const MessageImage = ({ value, handleInputChange, handleSendInput, placeholder}) => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const { lang } = useContext(LanguageContext);\r\n\r\n    const handleFileUpload = event => {\r\n        let val = event.target.files;\r\n        handleInputChange({ text: `${val.length} ${t(\"chatbot.imagesSelected\")} ` , value: val, type: 'image'});\r\n    }\r\n\r\n    const handleNoImages = () => {\r\n        handleInputChange({ text: `${t(\"chatbot.noImages\")}` , value: null, type: 'image'});\r\n    }\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} className={classes.addComment}>\r\n\t\t\t<Button\r\n                component={'label'}\r\n                variant={'contained'}\r\n                className={clsx(classes.uploadBtn, value.length ? classes.imagesUploaded : classes.noImages)}\r\n            >\r\n                { value.length ? `${value.length} ${t(\"chatbot.imagesSelected\")}` : t(\"chatbot.uploadImages\")}\r\n                <input \r\n                    accepts='image/*'\r\n                    type='file'\r\n                    multiple\r\n                    onChange={handleFileUpload}\r\n                    hidden  \r\n                />\r\n            </Button>\r\n            {\r\n                !value.length ? \r\n                <Button\r\n                className={clsx(classes.noImagesBtn, classes.noImages)}\r\n                variant={'contained'}\r\n                onClick={handleNoImages}\r\n            >\r\n                {t(\"chatbot.noImages\")}\r\n            </Button> : \r\n\t\t\t<IconButton className={classes.postBtn} onClick={handleSendInput}>\r\n\t\t\t\t<SendRoundedIcon className={clsx(classes.icon, lang.dir === 'rtl' ? classes.mirror : null)} />\r\n\t\t\t</IconButton>\r\n            }\r\n            \r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\taddComment: {\r\n\t\tdisplay: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: 'fit-content',\r\n        padding: '0 5px'\r\n\t},\r\n    uploadBtn: {\r\n        padding: '6px 10px',\r\n        borderRadius: '42px',\r\n        background: '#42A5F5',\r\n        color: 'white',\r\n        width: '100%',\r\n        margin: '0 5px 0 0px',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n            background: 'rgba(0,0,0,0.3)'\r\n        }\r\n    },\r\n    noImagesBtn: {\r\n        padding: '6px 10px',\r\n        borderRadius: '42px',\r\n        background: 'rgba(255,255,255,0.1)',\r\n        color: 'black',\r\n        margin: '0 5px 0 0px',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n            background: 'rgba(0,0,0,0.3)'\r\n        }\r\n    },\r\n    imagesUploaded: {\r\n        width: '100%',\r\n    },\r\n    noImages: {\r\n        width: '50%'\r\n    },\r\n    postBtn: {\r\n        background: '#3399ff',\r\n\t\tcolor: 'white',\r\n        padding: '7px',\r\n\t\tmargin: ' 0 5px 1px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n        fontSize: '20px',\r\n        color: 'white'\r\n\t},\r\n\tmirror: {\r\n\t\ttransform: 'scaleX(-1)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageSelector.js",[],"C:\\projects\\leev\\leev-fe\\src\\api\\userApi.js",["889"],"C:\\projects\\leev\\leev-fe\\src\\api\\assetsApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\Controls.js",["890","891","892","893","894"],"import { Grid, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { getNotifications } from '../../api/notificationsApi';\r\nimport { isResident } from '../../api/userApi';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { EnvContext } from '../../context/EnvContext';\r\nimport { NotificationsContext } from '../../context/NotificationsContext';\r\nimport { UpsertContext } from '../../context/UpsertContext';\r\nimport { Messenger } from '../messages/Messenger';\r\nimport { Can } from '../reuseables/Can';\r\nimport { CreateContainer } from '../reuseables/CreateContainer';\r\nimport { AddMenu } from './navbar/AddMenu';\r\nimport { Navbar } from './navbar/Navbar';\r\nimport { Notifications } from './navbar/Notifications';\r\nimport { SideMenu } from './navbar/SideMenu';\r\nimport { Settings } from './settings/Settings';\r\n\r\nexport const Controls = () => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst { notifications, setNotifications } = useContext(NotificationsContext);\r\n\tconst { upsertData, setUpsertData } = useContext(UpsertContext);\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { env } = useContext(EnvContext);\r\n\tconst downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n\tconst [ menuOpen, setMenuOpen ] = useState(false);\r\n\tconst [ addMenuOpen, setAddMenuOpen ] = useState(false);\r\n\tconst [ notificationsList, setNotificationsList ] = useState(false);\r\n\tconst [ settings, setSettings ] = useState(false);\r\n\tconst [ messenger, setMessenger ] = useState(false);\r\n\t\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchNotifications(0);\r\n\t}, []);\r\n\r\n\tconst fetchNotifications = async (notificationPage) => {\r\n\t\tconst data = await getNotifications(notificationPage);\r\n\t\tif (data) {\r\n\t\t\tsetNotifications(notificationPage ? [...notifications, ...data] : data);\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleMenu = () => {\r\n\t\tif (menuOpen) {\r\n\t\t\tsetMenuOpen(false);\r\n\t\t} else {\r\n\t\t\tif (addMenuOpen) {\r\n\t\t\t\tsetAddMenuOpen(false);\r\n\t\t\t}\r\n\t\t\tsetMenuOpen(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleAddMenu = () => {\r\n\t\tif (addMenuOpen) {\r\n\t\t\tsetAddMenuOpen(false);\r\n\t\t} else {\r\n\t\t\tif (menuOpen) {\r\n\t\t\t\tsetMenuOpen(false);\r\n\t\t\t}\r\n\t\t\tsetAddMenuOpen(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleMapView = () => {\r\n\t\thistory.push('/workspace/map?lat=32.063603&lng=34.785933');\r\n\t};\r\n\r\n\tconst toggleCalenderView = () => {\r\n\t\thistory.push('/workspace/calender');\r\n\t}\r\n\r\n\tconst openCreate = (itemType) => (event) => {\r\n\t\ttoggleAddMenu();\r\n\t\tsetUpsertData({ itemId: null, module: itemType })\r\n\t};\r\n\r\n\tconst toggleNotifications = () => {\r\n\t\tif (notificationsList) {\r\n\t\t\tsetNotificationsList(false);\r\n\t\t} else {\r\n\t\t\tsetNotificationsList(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleSettings = () => {\r\n\t\tif (settings) {\r\n\t\t\tsetSettings(false);\r\n\t\t} else {\r\n\t\t\tsetSettings(true);\r\n\t\t}\r\n\t}; \r\n\r\n\tconst toggleMessenger = () => {\r\n\t\tif (messenger) {\r\n\t\t\tsetMessenger(false);\r\n\t\t} else {\r\n\t\t\tsetMessenger(true);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\r\n\t\t\t\t<div container className={classes.controlsContainer} justify=\"center\">\t\r\n\t\t\t\t<Navbar\r\n\t\t\t\t\ttoggleMenu={toggleMenu}\r\n\t\t\t\t\tmenuOpen={menuOpen}\r\n\t\t\t\t\ttoggleAddMenu={toggleAddMenu}\r\n\t\t\t\t\ttoggleNotifications={toggleNotifications}\r\n\t\t\t\t\ttoggleMapView={toggleMapView}\r\n\t\t\t\t\ttoggleCalenderView={toggleCalenderView}\r\n\t\t\t\t\ttoggleMessenger={toggleMessenger}\r\n\t\t\t\t\t\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\r\n\t\t\t<SideMenu toggleMenu={toggleMenu} toggleSettings={toggleSettings} menuOpen={menuOpen}/>\r\n\t\t\t<Can shouldRender={!isResident(auth.user)}>\r\n\t\t\t\t{addMenuOpen && <AddMenu toggleAddMenu={toggleAddMenu} toggleAdd={openCreate} addMenuOpen={addMenuOpen} />}\r\n\t\t\t</Can>\r\n\t\t\t\r\n\t\t\t{notificationsList && (\r\n\t\t\t\t<Notifications\r\n\t\t\t\t\topen={notificationsList}\r\n\t\t\t\t\ttoggleNotifications={toggleNotifications}\r\n\t\t\t\t\tfetchNotifications={fetchNotifications}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t<Can shouldRender={!isResident(auth.user)}>\r\n\t\t\t\t{Boolean(upsertData.module) && <CreateContainer isOpen={true} handleClose={() => setUpsertData({ itemId: null, module: null })} />}\r\n\t\t\t</Can>\r\n\t\t\t{Boolean(settings) && <Settings handleClose={() => setSettings(false)} open={settings} />}\r\n\t\t\t{Boolean(messenger) && <Messenger toggleMessenger={toggleMessenger} />}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontrolsContainer: {\r\n\t\tzIndex: 2,\r\n\t\theight: '64px',\r\n\t\tbackdropFilter: 'blur(22px)',\r\n\t\twidth: '100%',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tborderRadius: '30px 30px 0 0',\r\n\t\t\tbottom: '0',\r\n\t\t\tbackground: 'black',\r\n\t\t\theight: '84px',\r\n\t\t\tboxShadow: '0px 0 2px 0px rgba(255,255,255,0.5)'\r\n\t\t}\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Settings.js",["895","896","897","898"],"import { Backdrop, Fade, Grid, Icon, IconButton, makeStyles, Modal, Paper } from '@material-ui/core';\r\nimport React, { useState, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { RolesAndPermissions } from './RolesAndPermissions';\r\nimport { SettingsMenu } from './SettingsMenu';\r\nimport { UserProfile } from './UserProfile';\r\nimport { Users } from './Users';\r\nimport { Residents } from './Residents'\r\n\r\nexport const Settings = ({ open, handleClose}) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n    const location = useLocation();\r\n    const { t } = useTranslation();\r\n    const { lang, setLang } = useContext(LanguageContext);\r\n    const [ active, setActive ] = useState('profile');\r\n\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\topen={open}\r\n\t\t\tonClose={handleClose}\r\n\t\t\tcloseAfterTransition\r\n\t\t\tBackdropComponent={Backdrop}\r\n\t\t\tBackdropProps={{\r\n\t\t\t\ttimeout: 500,\r\n\t\t\t}}\r\n\t\t\tclassName={classes.modal}\r\n\t\t>\r\n\t\t\t<Fade in={open}>\r\n\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\" style={{ outline: '0' }}>\r\n\t\t\t\t\t<Grid item xs={12} sm={12} md={12} lg={10} xl={6} className={classes.gridCont}>\r\n\t\t\t\t\t\t<Paper elevation={6} className={classes.paper} style={{ direction: lang.dir }}>\r\n                            <Grid container className={classes.mainGrid}>\r\n                                <Grid item xs={12} className={classes.headerRow}>\r\n                                    <div className={classes.title}>\r\n                                        {t(\"settings.title\")}\r\n                                    </div>\r\n                                    <IconButton\r\n                                        className={classes.closeBtn}\r\n                                        onClick={handleClose}\r\n                                    >\r\n                                        <Icon classes={{root: classes.iconRoot}}>\r\n                                            <img src=\"https://img.icons8.com/ios-filled/36/4a90e2/cancel.png\"/>\r\n                                        </Icon>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                <Grid container className={classes.dataGrid}>\r\n                                    <Grid item xl={3} lg={3} md={3} sm={2} xs={12}>\r\n                                        <SettingsMenu\r\n                                            active={active} \r\n                                            setActive={setActive}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xl={9} lg={9} md={9} sm={10} xs={12} className={classes.dataContainer}>\r\n                                        {\r\n                                            active === 'profile' &&\r\n                                            <UserProfile />\r\n                                        }\r\n                                        {\r\n                                            active === 'users' &&\r\n                                            <Users />\r\n                                        }\r\n                                        {\r\n                                            active === 'residents' &&\r\n                                            <Residents />\r\n                                        }\r\n                                        {\r\n                                            active === 'permissions' &&\r\n                                            <RolesAndPermissions />\r\n                                        }\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Fade>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmodal: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'\r\n\t},\r\n\tgridCont: {\r\n\t\theight: 'fit-content',\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tborderRadius: '10px',\r\n        height: '80vh',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: '81vh',\r\n\t\t\ttop: 0,\r\n\t\t\tborderRadius: '0',\r\n\t\t\tborder: '0',\r\n\t\t\tpadding: '10px 5px',\r\n\t\t},\r\n\t\t'&:focus': {\r\n\t\t\toutline: 'none',\r\n\t\t},\r\n    },\r\n    mainGrid: {\r\n        height: '100%',\r\n        width: '100%'\r\n    },\r\n    dataGrid: {\r\n        height: '90%'\r\n    },\r\n    dataContainer: {\r\n        height: '100%',\r\n        width: '100%'\r\n    },\r\n    headerRow: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '10px 20px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        height: '10%',\r\n        [theme.breakpoints.down('xs')]: {\r\n            padding: '0 5px'\r\n        }\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '22px',\r\n        padding: '0 20px',\r\n    },\r\n    iconRoot: {\r\n\t\ttextAlign: 'center',\r\n\t\twidth: '50px',\r\n\t\theight: '35px',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center'\r\n    },\r\n    closeBtn: {\r\n        padding: '6px'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Assets.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\Tasks.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\Documents.js",["899","900","901"],"import { Grid, makeStyles } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useLocation } from \"react-router\";\r\nimport {\r\n\tdeleteDocument,\r\n\tdownloadDocument,\r\n\tgetDocuments,\r\n\tupdateDocumentDetails,\r\n} from \"../../../api/documentsApi\";\r\nimport { getServerError, getSuccessMessage } from \"../../../api/genericApi\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { SnackbarContext } from \"../../../context/SnackbarContext\";\r\nimport { UpsertContext } from \"../../../context/UpsertContext\";\r\nimport { AlertDialog } from \"../../reuseables/AlertDialog\";\r\nimport { useQuery } from \"../../reuseables/customHooks/useQuery\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport { NoDataFound } from \"../../reuseables/NoDataFound\";\r\nimport { Document } from \"./Document\";\r\nimport { DocumentsControls } from \"./DocumentsControls\";\r\n\r\nexport const Documents = () => {\r\n\tconst classes = useStyles();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { t } = useTranslation();\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst { setUpsertData } = useContext(UpsertContext);\r\n\tconst [docs, setDocs] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [alertDialog, setAlertDialog] = useState(null);\r\n\tconst [edit, setEdit] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDocuments(auth.user.tenant, query)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (!res || res.status === 403) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t\tif (res.status === 500) {\r\n\t\t\t\t\tsetSnackbar(getServerError());\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tsetDocs(res);\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t});\r\n\t}, [isLoading]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsLoading(true);\r\n\t}, [location.search]);\r\n\r\n\tconst deleteFile = (documentId, desc) => (event) => {\r\n\t\tsetAlertDialog({\r\n\t\t\ttext: `${t(\"documentsModule.deleteFilePrompt\")} \"${desc}\"?`,\r\n\t\t\ttitle: t(\"documentsModule.deleteFileTitle\"),\r\n\t\t\thandleConfirm: async () => {\r\n\t\t\t\tconst res = await deleteDocument(auth.user.tenant, documentId);\r\n\t\t\t\tif (res) {\r\n\t\t\t\t\tsetDocs(docs.filter((d) => d._id !== res._id));\r\n\t\t\t\t\tsetAlertDialog(null);\r\n\t\t\t\t\tsetSnackbar(getSuccessMessage(\"document\", res.docId, \"deleted\"));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thandleCancel: () => setAlertDialog(null),\r\n\t\t});\r\n\t};\r\n\r\n\tconst downloadFile = (url) => {\r\n\t\tdownloadDocument(url);\r\n\t};\r\n\r\n\tconst handleSave = (documentId, details) => {\r\n\t\tupdateDocumentDetails(documentId, details)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 403) {\r\n\t\t\t\t\tsetSnackbar(res);\r\n\t\t\t\t} else if (res) {\r\n\t\t\t\t\tsetDocs(\r\n\t\t\t\t\t\tdocs.map((d) => {\r\n\t\t\t\t\t\t\tif (d._id === res._id) {\r\n\t\t\t\t\t\t\t\treturn res;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn d;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsetSnackbar(getSuccessMessage(\"document\", res.docId, \"updated\"));\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.finally(() => setEdit(null));\r\n\t};\r\n\r\n\tconst previewFile = (file) => {\r\n\t\twindow.open(file.url);\r\n\t};\r\n\r\n\tconst toggleEditMode = (documentId) => {\r\n\t\tsetUpsertData({ itemId: documentId, module: \"documents\" });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Grid xs={12} className={classes.moduleContainer}>\r\n\t\t\t\t<div className={classes.pageModule}>\r\n\t\t\t\t\t{t(\"documentsModule.documents\")}\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<DocumentsControls />\r\n\t\t\t</Grid>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<LoadingProgress />\r\n\t\t\t) : (\r\n\t\t\t\t<Grid container justify=\"center\" className={classes.docsContainer}>\r\n\t\t\t\t\t{docs.length ? (\r\n\t\t\t\t\t\tdocs.map((d, i) => (\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={8} md={5} lg={4} xl={3} key={i}>\r\n\t\t\t\t\t\t\t\t<Document\r\n\t\t\t\t\t\t\t\t\tdata={d}\r\n\t\t\t\t\t\t\t\t\tdeleteFile={deleteFile}\r\n\t\t\t\t\t\t\t\t\tdownloadFile={downloadFile}\r\n\t\t\t\t\t\t\t\t\ttoggleEditMode={toggleEditMode}\r\n\t\t\t\t\t\t\t\t\tpreviewFile={previewFile}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<NoDataFound />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{Boolean(alertDialog) && (\r\n\t\t\t\t<AlertDialog alertDialog={alertDialog} open={Boolean(alertDialog)} />\r\n\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmoduleContainer: {\r\n\t\tposition: \"sticky\",\r\n\t\ttop: 0,\r\n\t\tzIndex: 2,\r\n\t},\r\n\tpageModule: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px 40px\",\r\n\t\tfontSize: \"16px\",\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tboxShadow: \"0 0px 2px 1px rgba(255,255,255,0.3)\",\r\n\t\tmargin: \"0px auto 5px\",\r\n\t\twidth: \"30%\",\r\n\t\ttextAlign: \"center\",\r\n\t\tborderRadius: \"0 0 25px 25px\",\r\n\t\tlineHeight: \"1\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tbackground: \"black\",\r\n\t\t\twidth: \"100vw\",\r\n\t\t\tpadding: \"20px 0\",\r\n\t\t\tborderRadius: 0,\r\n\t\t\tmargin: 0,\r\n\t\t},\r\n\t},\r\n\tdocsContainer: {\r\n\t\tpadding: \"10px\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\Faults.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MapView.js",["902","903","904","905"],"import { makeStyles, Grid, useMediaQuery, IconButton } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Map } from './Map';\r\nimport { MapControls } from './MapControls';\r\nimport { MarkerData } from './MarkerData';\r\nimport { Mapbox } from './Mapbox';\r\nimport { getMapData, getMapFilters } from '../../../api/mapApi';\r\nimport { useLocation } from 'react-router';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\n\r\n\r\nexport const MapView = () => {\r\n\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const [ data, setData ] = useState(null);\r\n    const [ listArray, setListArray ] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        getMapFilters(query)\r\n        .then(filters => {\r\n            fetchMapData(filters);\r\n        });\t\r\n\t}, [location.search]);\r\n\r\n\tconst fetchMapData = async (filters) => {\r\n\t\tconst res = await getMapData(filters);\r\n\t\tsetData(res);\r\n    };\r\n    \r\n    return (\r\n         <Grid container justify='center' className={classes.mapContainer}>\r\n            <Grid container className={classes.mapGridItem}>\r\n                {\r\n                    Boolean(listArray.length) &&\r\n                    <Grid xs={12} sm={6} md={4} lg={3} className={classes.markDataGrid}>\r\n                         <MarkerData markersData={listArray} handleClose={() => setListArray([])} />\r\n                    </Grid>\r\n                   \r\n                }\r\n                {\r\n                    data &&\r\n                    <Grid xs={12}>\r\n                        <Mapbox data={data} setData={setListArray} />\r\n                    </Grid>\r\n                }\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.gridControls}>                  \r\n                <MapControls />\r\n            </Grid>\r\n         </Grid>\r\n\r\n    )\r\n};\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    mapContainer: {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative'\r\n    },\r\n    mapGridItem: {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative'\r\n    },\r\n    gridControls: {\r\n        position: 'absolute',\r\n        zIndex: 2,\r\n        right: 0,\r\n        top: 0,\r\n\r\n    },\r\n    markDataGrid: {\r\n        position: 'absolute',\r\n        zIndex: 3,\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(40px)',\r\n        height: '100%'\r\n    },\r\n    filterBtn: {\r\n        color: 'white',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '50px',\r\n        padding: '10px',\r\n        margin: '10px',\r\n        boxShadow: 'inset rgba(0,0,0,0.4) 0 0 10px 2px'\r\n    },\r\n    icon: {\r\n        fontSize: '28px'\r\n    }\r\n}));","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\Systems.js",["906"],"import { Grid, makeStyles } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useLocation } from \"react-router\";\r\nimport { queryParamsToObject } from \"../../../api/genericApi\";\r\nimport { applyFilters, getSystemsByAsset } from \"../../../api/systemsApi\";\r\nimport { useQuery } from \"../../reuseables/customHooks/useQuery\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport { System } from \"./System\";\r\nimport { SystemsControls } from \"./SystemsControls\";\r\nimport { SystemsHeader } from \"./SystemsHeader\";\r\n\r\nexport const Systems = () => {\r\n\tconst classes = useStyles();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst { t } = useTranslation();\r\n\tconst [systems, setSystems] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isLoading) return;\r\n\t\tlet queryParams = queryParamsToObject(location.search);\r\n\t\tif (!queryParams.asset) {\r\n\t\t\tsetIsLoading(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tgetSystemsByAsset(queryParams.asset)\r\n\t\t\t.then((data) => {\r\n\t\t\t\treturn applyFilters(queryParams, data);\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetSystems(data);\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t});\r\n\t}, [isLoading]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsLoading(true);\r\n\t}, [location.search]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t<Grid item xs={12} className={classes.moduleContainer}>\r\n\t\t\t\t\t<div className={classes.pageModule}>{t(\"assetsModule.systems\")}</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<SystemsControls />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t{!query.asset ? (\r\n\t\t\t\t\t\t<div className={classes.initMessage}>\r\n\t\t\t\t\t\t\t{t(\"systemsModule.initMessage\")}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : isLoading ? (\r\n\t\t\t\t\t\t<LoadingProgress />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<SystemsHeader />\r\n\t\t\t\t\t\t\t{systems.map((system, i) => (\r\n\t\t\t\t\t\t\t\t<System systemData={system} key={i} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tinitMessage: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px 40px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tmargin: \"5px auto\",\r\n\t\ttextAlign: \"center\",\r\n\t\tfontSize: \"16px\",\r\n\t},\r\n\tmoduleContainer: {\r\n\t\tposition: \"sticky\",\r\n\t\ttop: 0,\r\n\t\tzIndex: 2,\r\n\t},\r\n\tpageModule: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px 40px\",\r\n\t\tfontSize: \"16px\",\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tboxShadow: \"0 0px 2px 1px rgba(255,255,255,0.3)\",\r\n\t\tmargin: \"0px auto 5px\",\r\n\t\twidth: \"30%\",\r\n\t\ttextAlign: \"center\",\r\n\t\tborderRadius: \"0 0 25px 25px\",\r\n\t\tlineHeight: \"1\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tbackground: \"black\",\r\n\t\t\twidth: \"100vw\",\r\n\t\t\tpadding: \"20px 0\",\r\n\t\t\tborderRadius: 0,\r\n\t\t\tmargin: 0,\r\n\t\t},\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Message.js",["907","908","909","910"],"import { Fade, Grid, Grow, makeStyles, Slide,  } from '@material-ui/core';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { format } from 'date-fns';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\nexport const Message = ({ data }) => {\r\n\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const { lang } = useContext(LanguageContext);\r\n\r\n\treturn (\r\n        <Grow in={Boolean(data)} timeout={500}>\r\n            <Grid container direction={ data.isUser ? 'row' : 'row-reverse'} className={classes.messageContainer} >\r\n                <Grid item xs={8} className={clsx(classes.message, data.isUser ? classes.userMessage : classes.systemMessage)}>\r\n                    <div className={classes.messageText}>\r\n                        {\r\n                            data.isUser ? \r\n                            data.text :\r\n                            t(data.text)\r\n                        }\r\n                        <div className={classes.time}>\r\n                            {format(new Date(), lang.timeonly)}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </Grid>\r\n        </Grid>\r\n        </Grow>\r\n\t\t\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    message: {\r\n        display: 'flex',\r\n        margin: '3px 5px'\r\n    },\r\n    messageText: {\r\n        color: 'white',\r\n        borderRadius: '5px',\r\n        padding: '10px 20px',\r\n        fontSize: '13px',\r\n        width: 'fit-content',\r\n        minWidth: '50px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end'\r\n    },\r\n    userMessage: {     \r\n        '&>div': {\r\n            background: 'grey',\r\n        },\r\n        justifyContent: 'flex-start'\r\n    },\r\n    systemMessage: {\r\n        '&>div': {\r\n            background: theme.palette.leading,\r\n        },      \r\n        justifyContent: 'flex-end'\r\n    },\r\n    time: {\r\n        fontSize: '10px',\r\n        marginTop: '5px',\r\n        color: 'rgba(255,255,255,0.7)'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\chatbotApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\api\\genericApi.js",["911","912","913","914","915","916","917","918"],"\r\nimport axios from 'axios';\r\nimport { addMonths, addWeeks, addYears, eachDayOfInterval, isAfter, isBefore, parseISO, toDate } from 'date-fns';\r\nimport { addDays, format } from 'date-fns/esm';\r\nimport i18next from 'i18next';\r\nimport heLocale from 'date-fns/locale/he';\r\nimport deLocale from 'date-fns/locale/de'\r\nimport usLocale from 'date-fns/locale/en-US'\r\nimport { getDateParts } from './calenderApi';\r\n\r\nexport const localizations = {\r\n\the: {\r\n\t\tname: 'Hebrew',\r\n        code: 'he',\r\n        dir: 'rtl',\r\n        dateformat: 'dd/MM/yyyy HH:mm',\r\n        dateonly: 'dd/MM/yyyy',\r\n        timeonly: 'HH:mm'\r\n\t},\r\n\ten: {\r\n\t\tname: 'English',\r\n        code: 'en',\r\n        dir: 'ltr',\r\n        dateformat: 'MM/dd/yyyy p',\r\n        dateonly: 'MM/dd/yyyy',\r\n        timeonly: 'p'\r\n\t}\r\n}\r\n\r\nexport const queryParamsToObject = (search) => {\r\n\tif (!search) return {};\r\n\tsearch = search.substring(1);\r\n\r\n\tlet decoded = JSON.parse(\r\n\t\t'{\"' +\r\n\t\t\tdecodeURI(search)\r\n\t\t\t\t.replace(/\"/g, '\\\\\"')\r\n\t\t\t\t.replace(/&/g, '\",\"')\r\n\t\t\t\t.replace(/=/g, '\":\"')\r\n\t\t\t\t.replace(/%2C/g, ',')\r\n\t\t\t\t.replace(/%5D/g, ',')\r\n\t\t\t\t.replace(/%5B/g, ',') +\r\n\t\t\t'\"}'\r\n\t);\r\n\tObject.entries(decoded).forEach((entry) => {\r\n\t\tif (entry[1].substring(0, 1) === '[') {\r\n\t\t\tdecoded[entry[0]] = JSON.parse(entry[1]);\r\n\t\t}\r\n\t});\r\n\treturn decoded;\r\n};\r\n\r\nexport const removeQueryParam = (search, paramName) => {\r\n\tlet params = new URLSearchParams(search);\r\n\tparams.delete(paramName);\r\n\treturn params.toString() ? '?' + params.toString() : '';\r\n};\r\n\r\nexport const addQueryParam = (search, paramList) => {\r\n\tlet params = new URLSearchParams(search);\r\n\tif (!paramList.length) return '?' + params.toString();\r\n\tparamList.forEach((param) => {\r\n\t\tif (param.value instanceof Array) {\r\n\t\t\tparam.value = JSON.stringify(param.value);\r\n\t\t}\r\n\t\tif (params.get(param.name)) {\r\n\t\t\tparams.set(param.name, param.value);\r\n\t\t} else {\r\n\t\t\tparams.append(param.name, param.value);\r\n\t\t}\r\n\t});\r\n\treturn '?' + params.toString();\r\n};\r\n\r\nexport const updateQueryParams = (search, add, remove) => {\r\n\tlet params = new URLSearchParams(search);\r\n\tif (remove) {\r\n\t\tremove.forEach((pName) => {\r\n\t\t\tparams.delete(pName);\r\n\t\t});\r\n\t}\r\n\tif (add) {\r\n\t\tadd.forEach((param) => {\r\n\t\t\tif (param.value instanceof Array) {\r\n\t\t\t\tparam.value = JSON.stringify(param.value);\r\n\t\t\t}\r\n\t\t\tif (params.get(param.name)) {\r\n\t\t\t\tparams.set(param.name, param.value);\r\n\t\t\t} else {\r\n\t\t\t\tparams.append(param.name, param.value);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn '?' + params.toString();\r\n};\r\n\r\nexport const specialStringPurge = (string) => {\r\n\tif (!string) return null;\r\n\treturn string\r\n\t\t.replaceAll('+', ' ')\r\n\t\t.replaceAll(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '')\r\n\t\t.replaceAll(' ,', '')\r\n\t\t.replaceAll(',', ' ');\r\n};\r\n\r\nexport const getLabelsByLanguage = async (lang) => {\r\n\tconst res = await axios.post(\r\n\t\t`${process.env.REACT_APP_BACKEND_URL}/users/getLabels`,\r\n\t\t{ lang }\r\n\t);\r\n\tif (res) {\r\n\t\treturn res.data;\r\n\t}\r\n};\r\n\r\nexport const getFullName = (user) => {\r\n\treturn `${user.firstName} ${user.lastName}`;\r\n};\r\n\r\nexport const getDatediffString = (fromDate) => {\r\n\tlet diffInSecs = Math.round((new Date() - new Date(fromDate)) / 1000);\r\n\tlet diff;\r\n\tif (diffInSecs < 60) {\r\n\t\tdiff = diffInSecs.toString();\r\n\t\treturn diff + ' ' + i18next.t('dates.shortsecond');\r\n\t}\r\n\tif (diffInSecs > 60 && diffInSecs < 3600) {\r\n\t\tdiff = Math.round(diffInSecs / 60).toString();\r\n\t\treturn diff + ' ' + i18next.t('dates.shortminute');\r\n\t}\r\n\tif (diffInSecs > 3600 && diffInSecs < 86400) {\r\n\t\tdiff = Math.round(diffInSecs / 3600).toString();\r\n\t\treturn diff + ' ' + i18next.t('dates.shorthour');\r\n\t}\r\n\tif (diffInSecs > 86400 && diffInSecs < 604800) {\r\n\t\tdiff = Math.round(diffInSecs / 86400).toString();\r\n\t\treturn diff + ' ' + i18next.t('dates.shortday');\r\n\t}\r\n\tif (diffInSecs > 604800 && diffInSecs < 2629743) {\r\n\t\tdiff = Math.round(diffInSecs / 604800).toString();\r\n\t\treturn diff + ' ' + i18next.t('dates.shortweek');\r\n\t}\r\n\tif (diffInSecs > 2629743 && diffInSecs < 31556926) {\r\n\t\tdiff = Math.round(diffInSecs / 2629743).toString();\r\n\t\treturn diff + ' ' + i18next.t('dates.shortmonth');\r\n\t}\r\n\tif (diffInSecs < 31556926) {\r\n\t\tdiff = Math.round(diffInSecs / 31556926).toString();\r\n\t\treturn diff + ' ' + i18next.t('dates.shortyear');\r\n\t}\r\n};\r\n\r\nexport const getStatusList = async (module) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/statuses/getStatusList`,\r\n\t\t\t{ module }\r\n\t\t);\r\n\t\tif (res) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tconsole.log(e.message);\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport const updateArrayStateField = (arr, itemId, fieldName, fieldValue) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tarr.forEach((t, i) => {\r\n\t\t\tif (t._id === itemId || i === itemId) {\r\n\t\t\t\tt[fieldName] = fieldValue;\r\n\t\t\t}\r\n\t\t});\r\n\t\tresolve(arr);\r\n\t});\r\n};\r\n\r\nexport const updateStateField = (currState, fieldName, fieldValue) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tcurrState[fieldName] = fieldValue;\r\n\t\tresolve(currState);\r\n\t});\r\n};\r\n\r\nexport const getNextIterationDate = (startDate, interval) => {\r\n\tlet currDate = new Date(startDate);\r\n\tlet today = new Date();\r\n\tlet addFunctions = {\r\n\t\tyear: addYears,\r\n\t\tmonth: addMonths,\r\n\t\tweek: addWeeks,\r\n\t\tday: addDays\r\n\t};\r\n\r\n\tlet dateFunc = addFunctions[interval];\r\n\r\n\twhile(true) {\r\n\t\tif (isBefore(currDate, today)) {\r\n\t\t\tcurrDate = dateFunc(currDate, 1);\r\n\t\t} else {\r\n\t\t\treturn currDate;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\nexport const getUnauthorizedMessage = () => {\r\n\treturn { text: i18next.t('errors.unauthorized'), severity: 'error', status: 403 }\r\n};\r\n\r\nexport const getDeactivateDeniedMessage = () => {\r\n\treturn { text: i18next.t('errors.cannotDeactivateAssetOwner'), severity: 'error', status: 405 }\r\n};\r\n\r\nexport const getSuccessMessage = (type, idenitifer, action) => {\r\n\treturn { text: `${i18next.t(\"messages.snackMessage.itemOfType\")} ${i18next.t(`general.${type}`)} ${i18next.t(\"messages.snackMessage.withIdentifier\")} ${idenitifer} ${i18next.t(`messages.snackMessage.${action}`)} ${i18next.t(`messages.snackMessage.withSuccess`)}`, severity: 'success', status: 200 }\r\n}\r\n\r\nexport const getServerError = () => {\r\n\treturn { text: i18next.t('errors.serverError'), severity: 'error', status: 500 }\r\n}\r\n\r\nexport const getLocalization = (langCode) => {\r\n\treturn localizations[langCode];\r\n}\r\n\r\nexport const getLocale = (langCode) => {\r\n\tconst locales = {\r\n\t\the: heLocale,\r\n\t\ten: deLocale,\r\n\t\tde: deLocale\r\n\t};\r\n\r\n\treturn locales[langCode];\r\n}\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\notificationsApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Users.js",["919","920","921","922"],"import { Avatar, Grid, IconButton, List, ListItem, makeStyles, Tooltip } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getFullName } from '../../../api/genericApi';\r\nimport { filterUsers, getUserList } from '../../../api/userApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { SnackbarContext } from '../../../context/SnackbarContext';\r\nimport { Can } from '../../reuseables/Can';\r\nimport { LoadingProgress } from '../../reuseables/LoadingProgress';\r\nimport { SearchBox } from '../../reuseables/SearchBox';\r\nimport { UpsertUser } from './UpsertUser';\r\n\r\nexport const Users = () => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { auth, setAuth } = useContext(AuthContext);\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst [userList, setUserList] = useState([]);\r\n\tconst [users, setUsers] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n    const [addUser, setAddUser] = useState(null);\r\n    const [editUser, setEditUser] = useState(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isLoading) return;\r\n\t\tgetUserList()\r\n\t\t\t.then((res) => {\r\n\t\t\t\r\n\t\t\t\tif (res.status === 403) {\r\n\t\t\t\t\tsetSnackbar(res);\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t} else if (res) {\r\n\t\t\t\t\tsetUserList(res);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.finally(() => setIsLoading(false));\r\n\t}, [isLoading]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetUsers(userList);\r\n\t}, [userList]);\r\n\r\n\tconst handleSearch = async (searchText) => {\r\n\t\tif (!searchText) {\r\n\t\t\tsetUsers(userList);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst filtered = await filterUsers(userList, searchText);\r\n\t\tsetUsers(filtered);\r\n\t};\r\n\r\n    const closeAddEdit = () => {\r\n        setAddUser(false);\r\n        setEditUser(false);\r\n    }\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress initial={true}/>\r\n\t) : (\r\n\t\t<Grid container className={classes.usersContainer}>\r\n\t\t\t<Grid item xs={10} className={classes.gridSearch}>\r\n\t\t\t\t<SearchBox placeholder={t(\"users.filterByName\")} filterField={'sss'} returnValue={handleSearch} />\r\n\t\t\t</Grid>\r\n\t\t\t<Can module=\"users\" action=\"create\">\r\n\t\t\t\t<Grid item xs={2} className={classes.controls}>\r\n\t\t\t\t\t<Tooltip title={t('users.addUser')}>\r\n\t\t\t\t\t\t<IconButton className={classes.controlBtn} onClick={() => setAddUser(true)}>\r\n\t\t\t\t\t\t\t<AddIcon className={classes.controlIcon} />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Can>\r\n\r\n\t\t\t<Grid item xs={12} className={classes.userGrid}>\r\n\t\t\t\t<List className={classes.userList}>\r\n\t\t\t\t\t{!users.length ? (\r\n\t\t\t\t\t\t<div className={classes.noUsersFound}>{t(\"users.noUsersFound\")}</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tusers.map((u, i) => (\r\n\t\t\t\t\t\t\t<ListItem className={classes.listRow} key={i}>\r\n\t\t\t\t\t\t\t\t<Grid container className={classes.midGrid}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} sm={4} md={2} className={classes.avatarContainer}>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar src={u.avatar} className={classes.avatar} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={8} sm={8} md={10} className={classes.dataContainer}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container className={classes.rowData} justify=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={12} md={3} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.fullName}>{getFullName(u)}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.role}>{u.role.roleName}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={12} md={3} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.phoneNumber}>{u.phoneNumber}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={12} md={6} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.employedBy}>{u.employedBy}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Can module='users' action='update'>\r\n\t\t\t\t\t\t\t\t\t<IconButton \r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.editBtn}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setEditUser(u._id)}    \r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<EditIcon className={classes.editIcon} />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Can>\r\n                                \r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t)}\r\n\t\t\t\t</List>\r\n\t\t\t</Grid>\r\n\t\t\t{(addUser || editUser) &&\r\n            <UpsertUser \r\n                handleClose={() => closeAddEdit(false)} \r\n                userId={editUser}\r\n\t\t\t\treloadUsers={setIsLoading} \r\n            />}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tusersContainer: {\r\n\t\theight: '100%',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: 'calc(100% - 50px)'\r\n\t\t}\r\n\t},\r\n\tcontrols: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '20px 10px',\r\n\t},\r\n\tcontrolBtn: {\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmargin: '5px',\r\n\t\tpadding: '10px',\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t},\r\n\teditBtn: {\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmargin: '5px',\r\n\t\tpadding: '10px',\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tposition: 'absolute',\r\n\t\tleft: '5px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\ttop: '5px',\r\n\t\t\tleft: 'unset',\r\n\t\t\tright: '5px',\r\n\t\t},\r\n\t\t[theme.breakpoints.down('xs')]: {\r\n\t\t\tpadding: '7px',\r\n\t\t},\r\n\t},\r\n\teditIcon: {\r\n\t\tfontSize: '20px',\r\n\t\t[theme.breakpoints.down('xs')]: {\r\n\t\t\tfontSize: '16px',\r\n\t\t},\r\n\t},\r\n\tcontrolIcon: {\r\n\t\tfontSize: '24px',\r\n\t},\r\n\tuserGrid: {\r\n\t\theight: '100%'\r\n\t},\r\n\tuserList: {\r\n\t\tborderTop: '1px solid rgba(255,255,255,0.2)',\r\n\t\theight: 'calc(100% - 113px)',\r\n\t\toverflowY: 'overlay'\r\n\t},\r\n\tlistRow: {\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tposition: 'relative',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\t},\r\n\t},\r\n\tmidGrid: {\r\n\t\tpadding: '10px 0',\r\n\t},\r\n\tdataContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tgridItem: {\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\t[theme.breakpoints.down('xs')]: {\r\n\t\t\talignItems: 'flex-start',\r\n\t\t\tpaddingLeft: '10px',\r\n\t\t},\r\n\t},\r\n\tavatar: {\r\n\t\theight: '50px',\r\n\t\twidth: '50px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: '80px',\r\n\t\t\twidth: '80px',\r\n\t\t},\r\n\t},\r\n\trole: {\r\n\t\tfontSize: '14px',\r\n\t\tcolor: 'rgba(255,255,255,0.7)',\r\n\t},\r\n\tavatarContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\talignItems: 'center',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tpadding: '10px',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t},\r\n\t},\r\n\tphoneNumber: {\r\n\t\tpadding: '10px 20px',\r\n\t\tbackground: 'black',\r\n\t\tborderRadius: '50px',\r\n\t\tmargin: '10px 0',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tgridSearch: {\r\n\t\talignItems: 'center',\r\n\t\tpadding: '20px',\r\n\t},\r\n\tnoUsersFound: {\r\n\t\tbackground: 'black',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '10px 30px',\r\n\t\tcolor: 'white',\r\n\t\twidth: 'fit-content',\r\n\t\tmargin: '10px'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UserProfile.js",["923"],"import {\r\n\tAvatar,\r\n\tButton,\r\n\tGrid,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tTooltip,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport dateFormat from \"dateformat\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getFullName } from \"../../../api/genericApi\";\r\nimport { getUserDataById, uploadAvatar } from \"../../../api/userApi\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { Can } from \"../../reuseables/Can\";\r\nimport { UpsertUser } from \"./UpsertUser\";\r\n\r\nconst userData = [\"email\", \"phoneNumber\", \"birthDate\", \"employedBy\", \"status\"];\r\nexport const UserProfile = () => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { auth, setAuth } = useContext(AuthContext);\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst [editUser, setEditUser] = useState(null);\r\n\r\n\tconst handleFileUpload = (event) => {\r\n\t\tuploadAvatar(event.target.files[0]).then((res) => {\r\n\t\t\tif (res.avatar) {\r\n\t\t\t\tsetAuth({\r\n\t\t\t\t\t...auth,\r\n\t\t\t\t\tuser: { ...auth.user, avatar: res.avatar },\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst closeAddEdit = () => {\r\n\t\tsetEditUser(false);\r\n\t};\r\n\r\n\tconst reloadUserData = async () => {\r\n\t\tlet user = await getUserDataById(auth.user._id);\r\n\t\tsetAuth({\r\n\t\t\t...auth, \r\n\t\t\tuser\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid container className={classes.container}>\r\n\t\t\t\t<Grid item xs={12} className={classes.avatarContainer}>\r\n\t\t\t\t\t<div className={classes.avDiv}>\r\n\t\t\t\t\t\t<Avatar src={auth.user.avatar} className={classes.avatar} />\r\n\t\t\t\t\t\t<Tooltip title={t(\"users.uploadAvatar\")}>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tcomponent={\"label\"}\r\n\t\t\t\t\t\t\t\tvariant={\"contained\"}\r\n\t\t\t\t\t\t\t\tclassName={classes.uploadAvatar}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<AddIcon className={classes.addIcon} />\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\taccepts=\"image/*\"\r\n\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\tonChange={handleFileUpload}\r\n\t\t\t\t\t\t\t\t\thidden\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.nameContainer}>\r\n\t\t\t\t\t<div className={classes.name}>{getFullName(auth.user)}</div>\r\n\t\t\t\t\t<div className={classes.role}>{auth.user.role.roleName}</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Can module=\"users\" action=\"update\" userList={[auth.user._id]}>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.controls}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tstartIcon={<EditIcon className={classes.editIcon} />}\r\n\t\t\t\t\t\t\tclassName={classes.editBtn}\r\n\t\t\t\t\t\t\tonClick={() => setEditUser(auth.user._id)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{t(\"settings.editUserDetails\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Can>\r\n\t\t\t\t<Grid container className={classes.userData}>\r\n\t\t\t\t\t{userData.map((ud, i) => {\r\n\t\t\t\t\t\tlet val =\r\n\t\t\t\t\t\t\tud === \"birthDate\"\r\n\t\t\t\t\t\t\t\t? format(parseISO(auth.user.birthDate), lang.dateonly)\r\n\t\t\t\t\t\t\t\t: ud === \"status\"\r\n\t\t\t\t\t\t\t\t? auth.user.isActive\r\n\t\t\t\t\t\t\t\t\t? t(\"users.active\")\r\n\t\t\t\t\t\t\t\t\t: t(\"users.inactive\")\r\n\t\t\t\t\t\t\t\t: auth.user[ud];\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Grid item xs={12} xl={6} className={classes.dataRow}>\r\n\t\t\t\t\t\t\t\t<div className={classes.dataLabel}>{t(`users.${ud}`)}</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.dataValue}>{val}</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t{editUser && (\r\n\t\t\t\t<UpsertUser\r\n\t\t\t\t\thandleClose={() => closeAddEdit(false)}\r\n\t\t\t\t\tuserId={editUser}\r\n\t\t\t\t\treloadUsers={reloadUserData}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\twidth: \"100%\",\r\n\t\tborderLeft: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: 'calc(100% - 50px)',\r\n\t\t\toverflowY: 'overlay'\r\n\t\t}\r\n\t},\r\n\tcontrols: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n\tavatarContainer: {\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t\tpadding: \"40px 0 10px\",\r\n\t\theight: \"fit-content\",\r\n\t\twidth: \"fit-content\",\r\n\t},\r\n\tavatar: {\r\n\t\theight: \"150px\",\r\n\t\twidth: \"150px\",\r\n\t\tposition: \"relative\",\r\n\t},\r\n\tnameContainer: {\r\n\t\theight: \"fit-content\",\r\n\t\twidth: \"fit-content\",\r\n\t\tpadding: \"10px 0\",\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t},\r\n\tname: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"24px\",\r\n\t},\r\n\trole: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"5px 0\",\r\n\t},\r\n\tuserData: {\r\n\t\tpadding: \"20px 10px 10px\",\r\n\t},\r\n\tdataRow: {\r\n\t\tpadding: \"10px 20px\",\r\n\t},\r\n\tdataLabel: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"fit-content\",\r\n\t\tpadding: \"5px 20px\",\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tborderRadius: \"5px 5px 0 0\",\r\n\t\tfontSize: \"14px\",\r\n\t},\r\n\tdataValue: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"15px 20px\",\r\n\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\tborderRadius: \"0px 5px 5px 5px\",\r\n\t\tfontSize: \"16px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\teditBtn: {\r\n\t\tpadding: \"3px 25px 3px 15px\",\r\n\t\tborder: \"1px solid black\",\r\n\t\tbackground: \"black\",\r\n\t\tcolor: \"rgba(255,255,255,0.5)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tmargin: \"0 30px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tborder: \"1px solid white\",\r\n\t\t\tcolor: \"white\",\r\n\t\t},\r\n\t},\r\n\teditIcon: {\r\n\t\tcolor: \"inherit\",\r\n\t\tfontSize: \"20px\",\r\n\t\tpadding: \"5px\",\r\n\t},\r\n\tuploadAvatar: {\r\n\t\tborder: \"2px solid rgba(255,255,255,0.5)\",\r\n\t\tpadding: \"4px\",\r\n\t\tposition: \"absolute\",\r\n\t\tbottom: 0,\r\n\t\tcolor: \"rgba(255,255,255,0.5)\",\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"black\",\r\n\t\t\tcolor: \"white\",\r\n\t\t\tborderColor: \"white\",\r\n\t\t},\r\n\t},\r\n\tavDiv: {\r\n\t\tposition: \"relative\",\r\n\t},\r\n\taddIcon: {\r\n\t\tfontSize: \"24px\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\SettingsMenu.js",["924","925","926","927","928","929"],"import { Button, Icon, List, ListItem, ListItemIcon, ListItemText, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport clsx from 'clsx';\r\n\r\nconst menuOptions = [\r\n    {\r\n        tab: 'profile',\r\n        icon: \"https://img.icons8.com/ios-filled/25/4a90e2/name.png\"\r\n    },\r\n    {\r\n        tab: 'users',\r\n        icon: \"https://img.icons8.com/ios-filled/25/4a90e2/conference-background-selected.png\"\r\n    },\r\n    {\r\n        tab: 'residents',\r\n        icon: \"https://img.icons8.com/ios-filled/25/4a90e2/person-at-home.png\"\r\n    },\r\n    {\r\n        tab: 'permissions',\r\n        icon: \"https://img.icons8.com/ios-filled/25/4a90e2/shield.png\"\r\n    },\r\n    {\r\n        tab: 'appearance',\r\n        icon: \"https://img.icons8.com/ios-filled/25/4a90e2/monitor--v1.png\"\r\n    }\r\n]\r\n\r\nexport const SettingsMenu = ({ active, setActive }) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst { t } = useTranslation();\r\n    const { lang, setLang } = useContext(LanguageContext);\r\n    const downLg = useMediaQuery((theme) => theme.breakpoints.down('sm'))\r\n\r\n\treturn (\r\n\t\t<List className={classes.menuContainer}>\r\n            {\r\n                menuOptions.map((mo, i) => {\r\n                    return (\r\n                        <ListItem \r\n                        className={clsx(classes.listItem, active === mo.tab && classes.active)} \r\n                        button={true}\r\n                        onClick={() => setActive(mo.tab)}\r\n                        >\r\n                        <ListItemIcon className={classes.iconContainer}>\r\n                            <Icon className={classes.icon}>\r\n                                <img src={mo.icon} />\r\n                            </Icon>\r\n                        </ListItemIcon>\r\n                        {\r\n                            !downLg &&\r\n                            <ListItemText className={classes.textContainer}>{t(`settings.${mo.tab}`)}</ListItemText>\r\n                        }\r\n                        \r\n                    </ListItem>\r\n                    )\r\n                })\r\n            }  \r\n\t\t</List>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmenuContainer: {\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRight: '1px solid rgba(255,255,255,0.2)',\r\n        padding: 0,\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: 'flex',\r\n            borderRight: 'unset',\r\n            borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n            height: '50px'\r\n        }\r\n\t},\r\n\tlistItem: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '15px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.1)',\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            padding: '15px 0',\r\n            justifyContent: 'center'\r\n        }\r\n\t},\r\n\ticonContainer: {\r\n\t\twidth: 'fit-content',\r\n\t\theight: 'fit-content',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t},\r\n\ticon: {\r\n\t\twidth: '25px',\r\n\t\theight: '25px',\r\n\t},\r\n\ttextContainer: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t},\r\n\tactive: {\r\n\t\tbackground: 'black',\r\n        borderLeft: '3px solid #5B5BFB',\r\n        [theme.breakpoints.down('xs')]: {\r\n            borderLeft: 'unset',\r\n            borderBottom: '3px solid #5B5BFB',\r\n        }\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CreateContainer.js",["930","931","932"],"import { makeStyles } from '@material-ui/core';\r\nimport React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { createNewAsset, updateAsset } from '../../api/assetsApi';\r\nimport { updateDocumentDetails, uploadDocument } from '../../api/documentsApi';\r\nimport { createNewFault, updateFault } from '../../api/faultsApi';\r\nimport { createLocation, updateLocation } from '../../api/locationsApi';\r\nimport { createNewSystem, updateSystemAdditionalData } from '../../api/systemsApi';\r\nimport { createNewTask, updateTask } from '../../api/tasksApi';\r\nimport { SnackbarContext } from '../../context/SnackbarContext';\r\nimport { UpsertContext } from '../../context/UpsertContext';\r\nimport { UpsertAsset } from '../datapages/assets/UpsertAsset';\r\nimport { UpsertClient } from '../datapages/clients/UpsertClient';\r\nimport { UpsertDocument } from '../datapages/documents/UpsertDocument';\r\nimport { UpsertFault } from '../datapages/faults/UpsertFault';\r\nimport { UpsertLocation } from '../datapages/locations/UpsertLocation';\r\nimport { UpsertSystem } from '../datapages/systems/UpsertSystem';\r\nimport { UpsertTask } from '../datapages/tasks/UpsertTask';\r\n\r\n\r\n\r\n\r\nexport const CreateContainer = ({ isOpen, handleClose }) => {\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const { upsertData } = useContext(UpsertContext);\r\n    const { t } = useTranslation();\r\n    const { snackbar, setSnackbar }  = useContext(SnackbarContext);\r\n\r\n    const handleSaveAsset = details => {\r\n        createNewAsset(details)\r\n        .then(res => {\r\n            if (res.status === 403) {\r\n                setSnackbar(res);\r\n                return; \r\n            }\r\n            if (location.pathname === '/workspace/assets') {\r\n                history.go(0);\r\n            }\r\n        })\r\n        .finally(() => {\r\n            handleClose();\r\n        })\r\n    }\r\n\r\n    const handleAssetUpdate = async (details) => {\r\n\t\tconst res = await updateAsset(details);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t} else if (res) {\r\n\t\t\thistory.go(0);\r\n\t\t}\r\n\t\thandleClose();\r\n\t};\r\n\r\n    const handleSaveSystem = details => {\r\n        createNewSystem(details)\r\n        .then(res => {\r\n            if (res.status === 403) {\r\n                setSnackbar(res); \r\n                return; \r\n            }\r\n            if (location.pathname === '/workspace/systems') {\r\n                history.go(0);\r\n            }\r\n        })\r\n        .finally(() => {\r\n            handleClose();\r\n        })\r\n    }\r\n\r\n    const handleUpdateSystem = (details) => {\r\n\t\tupdateSystemAdditionalData(details)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 403) {\r\n\t\t\t\t\tsetSnackbar(res)\r\n\t\t\t\t} else if (res) {\r\n                    history.go(0);  \r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\thandleClose();\r\n\t\t\t});\r\n\t};\r\n\r\n    const handleSaveFault = details => {\r\n        createNewFault(details)\r\n        .then(res => {\r\n   \r\n            if (res.status === 403) {\r\n                setSnackbar(res);\r\n                handleClose();  \r\n                return; \r\n            };\r\n            setSnackbar({\r\n                text: \"faultsModule.faultSuccesfullyCreated\",\r\n                severity: 'success',\r\n            });\r\n            handleClose();\r\n            history.push(`/workspace/faults/${res.faultId}`)\r\n            \r\n        })\r\n    }\r\n\r\n    const handleUpdateFault = (details) => {\r\n\t\t    updateFault(details)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 403) {\r\n\t\t\t\t\tsetSnackbar(res);\r\n\t\t\t\t} else if (res) {\r\n\t\t\t\t\tif (location.pathname === `/workspace/faults/${res.faultId}`) {\r\n\t\t\t\t\t\thistory.go(0);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\thistory.push(`/workspace/faults/${res.faultId}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\thandleClose();\r\n\t\t\t\treturn;\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tconsole.log(e.message);\r\n\t\t\t\thistory.push(`/workspace/faults`);\r\n\t\t\t});\r\n\t};\r\n\r\n    const handleSaveTask = details => {\r\n        createNewTask(details)\r\n        .then(res => {\r\n            if (res.status === 403) {\r\n                setSnackbar(res); \r\n                return; \r\n            }\r\n            history.push(`/workspace/tasks/${res.taskId}`)\r\n        })\r\n        .finally(() => {\r\n            handleClose(); \r\n        })\r\n    }\r\n\r\n    const handleUpdateTask = (details) => {\r\n\t\tupdateTask(details)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 403) {\r\n\t\t\t\t\tsetSnackbar(res);\r\n\t\t\t\t} else if (res) {\r\n\t\t\t\t\tif (location.pathname === `/workspace/tasks/${res.taskId}`) {\r\n\t\t\t\t\t\thistory.go(0);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\thistory.push(`/workspace/tasks/${res.taskId}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\thandleClose();\r\n\t\t\t\treturn;\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tconsole.log(e.message);\r\n\t\t\t\thistory.push(`/workspace/tasks`);\r\n\t\t\t});\r\n\t};\r\n\r\n    const handleSaveDocument = details => {\r\n        uploadDocument(details)\r\n        .then(res => {\r\n            if (res.status === 403) {\r\n                setSnackbar(res);\r\n                handleClose();  \r\n                return; \r\n            }\r\n            if (location.pathname === '/workspace/documents') {\r\n                history.go(0);\r\n            }\r\n            history.push(`/workspace/documents`)\r\n        })\r\n        .finally(() => {\r\n            handleClose(); \r\n        })\r\n    }\r\n\r\n    const handleUpdateDocument = details => {\r\n        updateDocumentDetails(details)\r\n        .then(res => {\r\n            if (res.status === 403) {\r\n                setSnackbar(res);\r\n                handleClose();  \r\n                return; \r\n            }\r\n            if (location.pathname === '/workspace/documents') {\r\n                history.go(0);\r\n            }\r\n            history.push(`/workspace/documents`)\r\n        })\r\n        .finally(() => {\r\n            handleClose(); \r\n        })\r\n    }\r\n    \r\n    const handleSaveLocation = details => {\r\n        createLocation(details)\r\n        .then(res => {\r\n            if (res.status === 403) {\r\n                setSnackbar(res);\r\n                handleClose();  \r\n                return; \r\n            }\r\n             history.push(`/workspace/assets/${details.asset}?tab=locations`)\r\n        })\r\n        .finally(() => {\r\n            handleClose()\r\n        })\r\n    }\r\n\r\n    const handleUpdateLocation = async (details) => {\r\n\t\tupdateLocation(details).then((res) => {\r\n\t\t\tif ([403, 500].includes(res.status)) {\r\n\t\t\t\tsetSnackbar(res);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\thistory.go(0)\r\n\t\t});\r\n\t};\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                upsertData.module === 'clients' ?\r\n                <UpsertClient \r\n                    handleClose={handleClose}\r\n                /> : \r\n                upsertData.module === 'assets' ?\r\n                <UpsertAsset\r\n                    assetId={upsertData.itemId} \r\n                    handleClose={handleClose}\r\n                    handleSave={handleSaveAsset}\r\n                    handleUpdate={handleAssetUpdate}\r\n                /> : \r\n                upsertData.module ==='systems' ? \r\n                <UpsertSystem\r\n                    systemId={upsertData.itemId} \r\n                    handleClose={handleClose}\r\n                    handleSave={handleSaveSystem}\r\n                    handleUpdate={handleUpdateSystem}\r\n                /> :\r\n                upsertData.module ==='locations' ? \r\n                <UpsertLocation\r\n                    locationId={upsertData.itemId} \r\n                    handleClose={handleClose}\r\n                    handleSave={handleSaveLocation}\r\n                    handleUpdate={handleUpdateLocation}\r\n                /> : \r\n                upsertData.module === 'faults' ?\r\n                <UpsertFault \r\n                    faultId={upsertData.itemId}\r\n                    handleClose={handleClose}\r\n                    handleSave={handleSaveFault}\r\n                    handleUpdate={handleUpdateFault}\r\n                /> \r\n                : \r\n                upsertData.module === 'tasks' ?\r\n                <UpsertTask \r\n                    taskId={upsertData.itemId}\r\n                    handleClose={handleClose}\r\n                    handleSave={handleSaveTask}\r\n                    handleUpdate={handleUpdateTask}\r\n                />\r\n                : \r\n                upsertData.module === 'documents' ?\r\n                <UpsertDocument\r\n                    documentId={upsertData.itemId} \r\n                    handleClose={handleClose}\r\n                    handleSave={handleSaveDocument}\r\n                    handleUpdate={handleUpdateDocument}\r\n                /> : null\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\AddMenu.js",["933","934","935","936","937","938","939","940"],"import React, { useContext } from 'react';\r\nimport {\r\n\tmakeStyles,\r\n\tList,\r\n\tListItem,\r\n\tListItemIcon,\r\n\tListItemText,\r\n\tGrow,\r\n\tClickAwayListener,\r\n\tuseMediaQuery,\r\n\tIcon,\r\n\tSlide,\r\n\tIconButton,\r\n} from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Can } from '../../reuseables/Can';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\n\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\nimport HomeWorkIcon from '@material-ui/icons/HomeWork';\r\nimport SettingsSystemDaydreamIcon from '@material-ui/icons/SettingsSystemDaydream';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport DescriptionRoundedIcon from '@material-ui/icons/DescriptionRounded';\r\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\r\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\r\nimport AddLocationRoundedIcon from '@material-ui/icons/AddLocationRounded';\r\n\r\nexport const AddMenu = ({ toggleAddMenu, toggleAdd, addMenuOpen }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.up('sm'));\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<ClickAwayListener onClickAway={toggleAddMenu}>\r\n\t\t\t<Slide in={addMenuOpen} direction={lang.code == 'he' ? 'right' : 'left'}>\r\n\t\t\t\t<div className={classes.addMenuContainer}>\r\n\t\t\t\t\t<div className={classes.header}>\r\n\t\t\t\t\t\t<div>{t('createMenu.header')}</div>\r\n\t\t\t\t\t\t<IconButton onClick={toggleAddMenu}>\r\n\t\t\t\t\t\t\t<ClearRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<List className={classes.list}>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\tonClick={toggleAdd('clients')}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t<SupervisedUserCircleIcon classes={{ root: classes.iconRoot }} />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={t('createMenu.addClient')}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Can module='assets' action='create'>\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\t\tonClick={toggleAdd('assets')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t\t<HomeWorkIcon classes={{ root: classes.iconRoot }} />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={t('createMenu.addAsset')}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t<Can module='systems' action='create'>\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\t\tonClick={toggleAdd('systems')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t\t<SettingsSystemDaydreamIcon classes={{ root: classes.iconRoot }} />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={t('createMenu.addSystem')}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t<Can module='locations' action='create'>\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\t\tonClick={toggleAdd('locations')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t\t<AddLocationRoundedIcon classes={{ root: classes.iconRoot }} />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={t('createMenu.addLocation')}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t<Can module=\"tasks\" action=\"create\">\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\t\tonClick={toggleAdd('tasks')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t\t<AssignmentTurnedInIcon  classes={{ root: classes.iconRoot }} />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={t('createMenu.createTask')}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Can>\r\n\r\n\t\t\t\t\t\t<Can module=\"faults\" action=\"create\">\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\t\tonClick={toggleAdd('faults')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t\t<WarningRoundedIcon    classes={{ root: classes.iconRoot }} />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={t('createMenu.createFault')}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t<Can module='documents' action='create'>\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\t\tonClick={toggleAdd('documents')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t\t<DescriptionRoundedIcon     classes={{ root: classes.iconRoot }} />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={t('createMenu.addDocument')}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Can>\t\t\t\t\t\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</div>\r\n\t\t\t</Slide>\r\n\t\t</ClickAwayListener>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\taddMenuContainer: {\r\n\t\tzIndex: 2,\r\n\t\twidth: '280px',\r\n\t\tbackground: theme.palette.primary.main,\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\tboxShadow: 'rgba(0,0,0,0.25) 0px 0px 6px 3px',\r\n\t\tposition: 'absolute',\r\n\t\ttop: '64px',\r\n\t\tright: '0',\r\n\t\theight: '100vh',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: '100%',\r\n\t\t\ttop: '0',\r\n\t\t\tpadding: 0,\r\n\t\t\tpaddingBottom: '74px',\r\n\t\t\tright: 0,\r\n\t\t\twidth: '100vw',\r\n\t\t\tborderRadius: 0,\r\n\t\t\tborder: 'none',\r\n\t\t\tbackground: 'rgba(0,0,0,0.5)',\r\n\t\t\tbackdropFilter: 'blur(15px)',\r\n\t\t},\r\n\t},\r\n\tlist: {\r\n\t\twidth: '100%',\r\n\t\tpadding: '10px 0',\r\n\t},\r\n\tlistItem: {\r\n\t\tcolor: theme.palette.primary.main,\r\n\t\tpadding: '10px 20px',\r\n\t\ttransition: 'background box-shadow 0.3s ease-in-out',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\t\ttransition: 'background box-shadow 0.2s ease-in-out',\r\n\t\t\tboxShadow: '0 8px 32px 0 rgb(0 0 0 / 80%)'\r\n\t\t},\r\n\r\n\t},\r\n\tlistItemIcon: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tlistItemText: {\r\n\t\tfontSize: '16px',\r\n\t\tcolor: 'white',\r\n\t},\r\n\tbottomList: {\r\n\t\tpadding: '10px 0',\r\n\t},\r\n\ticonRoot: {\r\n\t\ttextAlign: \"center\",\r\n\t\twidth: \"25px\",\r\n\t\theight: \"25px\",\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t\tcolor: theme.palette.leading,\r\n\t},\r\n\theader: {\r\n\t\theight: '40px',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tfontSize: '18px',\r\n\t\talignItems: 'center',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '10px 20px',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tborderRadius: '10px 10px 0 0',\r\n\t},\r\n\ticon: {\r\n\t\tcolor: 'white',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Navbar.js",["941","942"],"import {\r\n\tBadge,\r\n\tGrid,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tuseMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\r\nimport AppsOutlinedIcon from \"@material-ui/icons/AppsOutlined\";\r\nimport ForumOutlinedIcon from \"@material-ui/icons/ForumOutlined\";\r\nimport MapOutlinedIcon from \"@material-ui/icons/MapOutlined\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport { differenceInHours } from \"date-fns\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useLocation } from \"react-router\";\r\nimport { isResident } from \"../../../api/userApi\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { ConversationsContext } from \"../../../context/ConversationsContext\";\r\nimport { NotificationsContext } from \"../../../context/NotificationsContext\";\r\nimport { Can } from \"../../reuseables/Can\";\r\n\r\nexport const Navbar = ({\r\n\ttoggleMenu,\r\n\ttoggleAddMenu,\r\n\ttoggleMapView,\r\n\ttoggleNotifications,\r\n\ttoggleCalenderView,\r\n\ttoggleMessenger,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst location = useLocation();\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\tconst { notifications } = useContext(NotificationsContext);\r\n\tconst { conversations } = useContext(ConversationsContext);\r\n\tconst { t } = useTranslation();\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst [notifCount, setNotifCount] = useState(0);\r\n\tconst [convCount, setConvCount] = useState(0);\r\n\tconst [mapActive, setMapActive] = useState(location.pathname.includes(\"map\"));\r\n\tconst [calenderActive, setCalenderActive] = useState(\r\n\t\tlocation.pathname.includes(\"calender\")\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMapActive(location.pathname.includes(\"map\"));\r\n\t\tsetCalenderActive(location.pathname.includes(\"calender\"));\r\n\t}, [location]);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet count = notifications.filter(\r\n\t\t\t(n) => differenceInHours(new Date(), new Date(n.createdAt)) < 6 && !n.read\r\n\t\t).length;\r\n\t\tsetNotifCount(count);\r\n\t}, [notifications]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (conversations.length) {\r\n\t\t\tconst r = conversations.reduce((totalMessages, c) => {\r\n\t\t\t\tif (c.messages.length) {\r\n\t\t\t\t\tlet unreadCount = c.messages.filter(\r\n\t\t\t\t\t\t(m) => m.read === false && m.from !== auth.user._id\r\n\t\t\t\t\t).length;\r\n\t\t\t\t\treturn totalMessages + unreadCount;\r\n\t\t\t\t}\r\n\t\t\t\treturn totalMessages;\r\n\t\t\t}, 0);\r\n\t\t\tsetConvCount(r);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetConvCount(0);\r\n\t}, [conversations]);\r\n\r\n\treturn (\r\n\t\t<div className={classes.navbar}>\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\tstyle={{ height: \"64px\" }}\r\n\t\t\t>\r\n\t\t\t\t{!matches && (\r\n\t\t\t\t\t<Grid item className={classes.menuGridItem}>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\taria-label=\"menu\"\r\n\t\t\t\t\t\t\tclassName={classes.iconButton}\r\n\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\tonClick={toggleMenu}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AppsOutlinedIcon\r\n\t\t\t\t\t\t\t\tclassName={classes.iconRoot}\r\n\t\t\t\t\t\t\t\tstyle={{ width: \"35px\", height: \"35px\" }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t<div className={classes.logobox}>Leev</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className={classes.navbarIconsContainer}>\r\n\t\t\t\t\t<div className={classes.navbarIcons}>\r\n\t\t\t\t\t\t{matches && (\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\taria-label=\"menu\"\r\n\t\t\t\t\t\t\t\tclassName={classes.iconButton}\r\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\t\tonClick={toggleMenu}\r\n\t\t\t\t\t\t\t\tclasses={{ label: classes.iconLabel }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<AppsOutlinedIcon className={classes.iconRoot} />\r\n\t\t\t\t\t\t\t\t<div className={classes.bottomLabel}>{t(\"general.menu\")}</div>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\tbadgeContent={convCount}\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\tbadge: classes.badge,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\taria-label=\"messages\"\r\n\t\t\t\t\t\t\t\tclassName={classes.iconButton}\r\n\t\t\t\t\t\t\t\tcolor={\"inherit\"}\r\n\t\t\t\t\t\t\t\tonClick={toggleMessenger}\r\n\t\t\t\t\t\t\t\tclasses={{ label: classes.iconLabel }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ForumOutlinedIcon className={classes.iconRoot} />\r\n\t\t\t\t\t\t\t\t<div className={classes.bottomLabel}>\r\n\t\t\t\t\t\t\t\t\t{t(\"general.messages\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t<Can shouldRender={!isResident(auth.user)}>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\taria-label=\"Add\"\r\n\t\t\t\t\t\t\t\tclassName={classes.iconButton}\r\n\t\t\t\t\t\t\t\tcolor={\"inherit\"}\r\n\t\t\t\t\t\t\t\tonClick={toggleAddMenu}\r\n\t\t\t\t\t\t\t\tclasses={{ label: classes.iconLabel }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<AddCircleOutlineOutlinedIcon className={classes.iconRoot} />\r\n\t\t\t\t\t\t\t\t<div className={classes.bottomLabel}>{t(\"general.create\")}</div>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t<Can module=\"map\" action=\"read\" shouldRender={!isResident(auth.user)}>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\taria-label=\"Map\"\r\n\t\t\t\t\t\t\t\tclassName={classes.iconButton}\r\n\t\t\t\t\t\t\t\tcolor={\"inherit\"}\r\n\t\t\t\t\t\t\t\tonClick={toggleMapView}\r\n\t\t\t\t\t\t\t\tdisabled={mapActive}\r\n\t\t\t\t\t\t\t\tclasses={{ label: classes.iconLabel }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<MapOutlinedIcon className={classes.iconRoot} />\r\n\t\t\t\t\t\t\t\t<div className={classes.bottomLabel}>{t(\"general.map\")}</div>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Can>\r\n\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\taria-label=\"Notifications\"\r\n\t\t\t\t\t\t\tclassName={classes.iconButton}\r\n\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\tonClick={toggleNotifications}\r\n\t\t\t\t\t\t\tclasses={{ label: classes.iconLabel }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tbadgeContent={notifCount}\r\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\t\tbadge: classes.badge,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<NotificationsNoneIcon className={classes.iconRoot} />\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t<div className={classes.bottomLabel}>\r\n\t\t\t\t\t\t\t\t{t(\"general.notifications\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tlogobox: {\r\n\t\tfontSize: \"30px\",\r\n\t\tcolor: \"white\",\r\n\t\tfontFamily: \"Kaushan\",\r\n\t\tpadding: \"0 10px 5px\",\r\n\t},\r\n\tnavbar: {\r\n\t\theight: \"64px\",\r\n\t\tpadding: \"0 8px\",\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tbackdropFilter: \"blur(8px)\",\r\n\t\tboxShadow: \"rgba(0,0,0,0.4) 0px 0px 5px 2px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: \"0\",\r\n\t\t\tbackground: \"black\",\r\n\t\t},\r\n\t},\r\n\tnavbarIconsContainer: {\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\twidth: '100%'\r\n\t\t}\r\n\t},\r\n\tmenuGridItem: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tmenuButton: {},\r\n\tnavbarIcons: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\twidth: \"auto\",\r\n\t\tpadding: \"0 10px\",\r\n\t\t[theme.breakpoints.down(\"md\")]: {\r\n\t\t\tpadding: \"0 20px\",\r\n\t\t},\r\n\t\t[theme.breakpoints.down(\"xs\")]: {\r\n\t\t\tpadding: \"0 10px\",\r\n\t\t},\r\n\t},\r\n\tdrawer: {\r\n\t\theight: \"calc(100vh - 128px)\",\r\n\t\twidth: \"240px\",\r\n\t\tflexShrink: 0,\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\tmarginTop: \"128px\",\r\n\t\tbackground: \"transparent\",\r\n\t\t[theme.breakpoints.down(\"md\")]: {\r\n\t\t\twidth: \"60%\",\r\n\t\t},\r\n\t},\r\n\tdrawerOpen: {\r\n\t\theight: \"calc(100vh - 128px)\",\r\n\t\twidth: \"240px\",\r\n\t\t[theme.breakpoints.down(\"md\")]: {\r\n\t\t\twidth: \"60%\",\r\n\t\t},\r\n\r\n\t\ttransition: theme.transitions.create(\"width\", {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t\t}),\r\n\t},\r\n\tdrawerClose: {\r\n\t\ttransition: theme.transitions.create(\"width\", {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t\t}),\r\n\t\toverflowX: \"hidden\",\r\n\t\twidth: theme.spacing(7) + 1,\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\twidth: theme.spacing(9) + 1,\r\n\t\t},\r\n\t},\r\n\ticonButton: {\r\n\t\tpadding: \"6px 20px\",\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: \"28px\",\r\n\t\tpadding: \"12px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\t[theme.breakpoints.up(\"md\")]: {\r\n\t\t\t\"&:hover\": {\r\n\t\t\t\tbackground: \"rgba(0,0,0,0.5)\",\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tbadge: {\r\n\t\tborder: `1px solid black`,\r\n\t\ttop: \"6px\",\r\n\t\tright: \"6px\",\r\n\t},\r\n\timageIcon: {\r\n\t\theight: \"36px\",\r\n\t\twidth: \"36px\",\r\n\t},\r\n\ticonRoot: {\r\n\t\ttextAlign: \"center\",\r\n\t\twidth: \"30px\",\r\n\t\theight: \"30px\",\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t\tcolor: \"#42A5F5\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\twidth: \"25px\",\r\n\t\t\theight: \"25px\",\r\n\t\t},\r\n\t},\r\n\ticonLabel: {\r\n\t\tflexDirection: \"column\",\r\n\t},\r\n\tbottomLabel: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"11px\",\r\n\t\tpadding: \"5px 0 0\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Notifications.js",["943","944","945","946"],"import {\r\n\tClickAwayListener,\r\n\tGrow,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tSlide,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { differenceInHours } from 'date-fns';\r\nimport React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { updateArrayStateField } from '../../../api/genericApi';\r\nimport { updateNotificationRead } from '../../../api/notificationsApi';\r\nimport { NotificationsContext } from '../../../context/NotificationsContext';\r\nimport { Notification } from './Notification';\r\n\r\nexport const Notifications = ({\r\n\topen,\r\n\ttoggleNotifications,\r\n\tfetchNotifications\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst { notifications, setNotifications } = useContext(\r\n\t\tNotificationsContext\r\n\t);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.up('sm'));\r\n\r\n\tconst updateNotificationReadStatus = async (notificationId, read) => {\r\n\t\tconst res = await updateNotificationRead(notificationId, read);\r\n\t\tif (res) {\r\n\t\t\tlet nt = await updateArrayStateField(\r\n\t\t\t\tnotifications,\r\n\t\t\t\tnotificationId,\r\n\t\t\t\t'read',\r\n\t\t\t\tread\r\n\t\t\t);\r\n\t\t\tsetNotifications([...nt]);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ClickAwayListener onClickAway={toggleNotifications}>\r\n\t\t\t<Slide in={open} direction={'right'} timeout={300}>\r\n\t\t\t\t<div className={classes.container}>\r\n\t\t\t\t\t<div className={classes.header}>\r\n\t\t\t\t\t\t<div>{t('notificationsModule.notifications')}</div>\r\n\t\t\t\t\t\t<IconButton onClick={toggleNotifications}>\r\n\t\t\t\t\t\t\t<ClearRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.list} onClick={toggleNotifications}>\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<div className={classes.subheader}>\r\n\t\t\t\t\t\t\t\t{t('notificationsModule.new')}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{notifications\r\n\t\t\t\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t\t\t\t(n) =>\r\n\t\t\t\t\t\t\t\t\t\tdifferenceInHours(\r\n\t\t\t\t\t\t\t\t\t\t\tnew Date(),\r\n\t\t\t\t\t\t\t\t\t\t\tnew Date(n.createdAt)\r\n\t\t\t\t\t\t\t\t\t\t) < 6\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t.map((n, i) => (\r\n\t\t\t\t\t\t\t\t\t<Notification\r\n\t\t\t\t\t\t\t\t\t\tdata={n}\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tupdateNotificationReadStatus={\r\n\t\t\t\t\t\t\t\t\t\t\tupdateNotificationReadStatus\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t<div className={classes.subheader}>\r\n\t\t\t\t\t\t\t\t{t('notificationsModule.earlier')}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{notifications\r\n\t\t\t\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t\t\t\t(n) =>\r\n\t\t\t\t\t\t\t\t\t\tdifferenceInHours(\r\n\t\t\t\t\t\t\t\t\t\t\tnew Date(),\r\n\t\t\t\t\t\t\t\t\t\t\tnew Date(n.createdAt)\r\n\t\t\t\t\t\t\t\t\t\t) > 6\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t.map((n, i) => (\r\n\t\t\t\t\t\t\t\t\t<Notification\r\n\t\t\t\t\t\t\t\t\t\tdata={n}\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tupdateNotificationReadStatus={\r\n\t\t\t\t\t\t\t\t\t\t\tupdateNotificationReadStatus\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Slide>\r\n\t\t</ClickAwayListener>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\ttop: \"61px\",\r\n\t\tright: \"7px\",\r\n\t\twidth: \"600px\",\r\n\t\theight: \"80vh\",\r\n\t\tzIndex: 2,\r\n\t\tposition: \"absolute\",\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tboxShadow: \"rgb(0 0 0 / 25%) 0px 0px 6px 3px\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.3)\",\r\n\t\tborderRadius: \"5px\",\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\twidth: '100%',\r\n\t\t\theight: '100%',\r\n\t\t\ttop: 0,\r\n\t\t\tright: 0,\r\n\t\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\t\tborder: 'none',\r\n\t\t\tborderRadius: \"0x\",\r\n\t\t},\r\n\t},\r\n\tlist: {\r\n\t\twidth: '100%',\r\n\t\tmargin: '0px auto',\r\n\t\tpadding: 0,\r\n\t\tmargin: 0,\r\n\t\toverflow: 'overlay',\r\n\t\tborderRadius: '0 0 10px 10px',\r\n\t\theight: 'calc(100% - 61px)',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tmarginBottom: '50px',\r\n\t\t},\r\n\t},\r\n\tlistItem: {\r\n\t\theight: '100px',\r\n\t\tcolor: 'theme.palette.primary.main',\r\n\t\ttransition: 'background box-shadow 0.3s ease-in-out',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\t\ttransition: 'background box-shadow 0.2s ease-in-out',\r\n\t\t\tboxShadow: '0 8px 32px 0 rgb(0 0 0 / 80%)',\r\n\t\t},\r\n\t},\r\n\tlistItemIcon: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tlistItemText: {\r\n\t\tfontSize: '14px',\r\n\t\tcolor: 'white',\r\n\t},\r\n\tbottomList: {\r\n\t\tpadding: '10px 0',\r\n\t},\r\n\theader: {\r\n\t\theight: '40px',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tfontSize: '22px',\r\n\t\talignItems: 'center',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '10px 20px',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tborderRadius: '10px 10px 0 0',\r\n\t},\r\n\ticon: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tsubheader: {\r\n\t\tcolor: 'white',\r\n\t\twidth: 'fit-content',\r\n\t\tmargin: '10px 20px 5px',\r\n\t\tfontSize: '18px',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.5)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\SideMenu.js",["947","948","949","950","951","952","953","954","955","956","957","958","959"],"import {\r\n\tClickAwayListener,\r\n\tIcon,\r\n\tIconButton,\r\n\tList,\r\n\tListItem,\r\n\tListItemIcon,\r\n\tListItemText,\r\n\tmakeStyles,\r\n\tSlide,\r\n\tCollapse,\r\n\tuseMediaQuery,\r\n\tDrawer,\r\n\tAvatar,\r\n\tFade\r\n} from \"@material-ui/core\";\r\nimport ClearRoundedIcon from \"@material-ui/icons/ClearRounded\";\r\nimport React, { useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { clearUserLS, isResident } from \"../../../api/userApi\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { NotificationsContext } from \"../../../context/NotificationsContext\";\r\nimport { Can } from \"../../reuseables/Can\";\r\nimport { UserItem } from \"../../user/UserItem\";\r\nimport clsx from \"clsx\";\r\nimport DashboardRoundedIcon from '@material-ui/icons/DashboardRounded';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\nimport HomeWorkIcon from '@material-ui/icons/HomeWork';\r\nimport SettingsSystemDaydreamIcon from '@material-ui/icons/SettingsSystemDaydream';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport DescriptionRoundedIcon from '@material-ui/icons/DescriptionRounded';\r\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\r\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\r\n\r\nexport const SideMenu = ({ toggleMenu, toggleSettings, menuOpen }) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.up(\"sm\"));\r\n\tconst { auth } = useContext(AuthContext);\r\n\r\n\tconst handleClick = (type) => (event) => {\r\n\t\tif (menuOpen) {\r\n\t\t\ttoggleMenu();\r\n\t\t}\t\r\n\t\thistory.push(`/workspace/${type}`);\r\n\t};\r\n\r\n\tconst userLogout = async () => {\r\n\t\tawait clearUserLS();\r\n\t\thistory.push(\"/login\");\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\r\n\t\t\t<Drawer\r\n\t\t\t\tvariant=\"permanent\"\r\n\t\t\t\tclassName={clsx(classes.drawer, {\r\n\t\t\t\t[classes.drawerOpen]: menuOpen,\r\n\t\t\t\t[classes.drawerClose]: !menuOpen,\r\n\t\t\t\t})}\r\n\t\t\t\tclasses={{\r\n\t\t\t\tpaper: clsx(classes.paperAnchorDockedRight, {\r\n\t\t\t\t\t[classes.drawerOpen]: menuOpen,\r\n\t\t\t\t\t[classes.drawerClose]: !menuOpen,\r\n\t\t\t\t}),\r\n\t\t\t\t}}\r\n\t\t\t\topen={menuOpen}\r\n\t\t\t\tdirection={lang.code == \"he\" ? \"left\" : \"right\"}\r\n\t\t\t\tonClick={null}\r\n\t\t\t>\r\n\t\t\t\t<div className={classes.sidemenuContainer}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmenuOpen &&\r\n\t\t\t\t\t\t<div className={classes.closeBtn}>\r\n\t\t\t\t\t\t\t<IconButton onClick={toggleMenu}>\r\n\t\t\t\t\t\t\t\t<ClearRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<div className={classes.userContainer}>\r\n\t\t\t\t\t\t<UserItem showName showTitle avatarSize={menuOpen ? 60 : 48} user={auth.user} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<List className={classes.list}>\r\n\t\t\t\t\t\t<Can shouldRender={!auth.user.isAdmin && !isResident(auth.user)}>\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\t\tclassName={clsx(classes.listItem, classes.dashbordButton)}\r\n\t\t\t\t\t\t\t\tonClick={handleClick(\"dashboard\")}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t\t<DashboardRoundedIcon classes={{ root: classes.iconRoot }} />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={t(\"sideMenu.dashboard\")}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<Can module=\"clients\" action=\"read\" shouldRender={!isResident(auth.user)}>\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\t\tonClick={handleClick(\"clients\")}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t<SupervisedUserCircleIcon classes={{ root: classes.iconRoot }} />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={t(\"sideMenu.clients\")}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t<Can module=\"assets\" action=\"read\" shouldRender={!isResident(auth.user)}>\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\t\tonClick={handleClick(\"assets\")}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t<HomeWorkIcon classes={{ root: classes.iconRoot }} />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={t(\"sideMenu.assets\")}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t<Can module=\"systems\" action=\"read\" shouldRender={!isResident(auth.user)}>\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\t\tonClick={handleClick(\"systems\")}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t<SettingsSystemDaydreamIcon classes={{ root: classes.iconRoot }} />\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={t(\"sideMenu.systems\")}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t<Can module=\"tasks\" action=\"read\" shouldRender={!isResident(auth.user)}>\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\t\tonClick={handleClick(\"tasks\")}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t<AssignmentTurnedInIcon  classes={{ root: classes.iconRoot }} />\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={t(\"sideMenu.myTasks\")}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t<Can module=\"tasks\" action=\"read\" shouldRender={!isResident(auth.user)}> \r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\t\tonClick={handleClick(\"repeatableTasks\")}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t<SettingsBackupRestoreIcon   classes={{ root: classes.iconRoot }} />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={t(\"sideMenu.repeatableTasks\")}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t<Can module=\"tasks\" action=\"faults\">\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\t\tonClick={handleClick(\"faults\")}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t<WarningRoundedIcon    classes={{ root: classes.iconRoot }} />\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={t(\"sideMenu.faults\")}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t<Can module=\"documents\" action=\"read\" shouldRender={!isResident(auth.user)}>\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\t\tonClick={handleClick(\"documents\")}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t<DescriptionRoundedIcon     classes={{ root: classes.iconRoot }} />\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={t(\"sideMenu.documents\")}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t\t<List className={classes.bottomList}>\r\n\t\t\t\t\t\t<ListItem button={true} onClick={toggleSettings}>\r\n\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t<SettingsRoundedIcon      classes={{ root: classes.iconRoot }} />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={t(\"sideMenu.settings\")}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem button={true} onClick={userLogout}>\r\n\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t<ExitToAppRoundedIcon       classes={{ root: classes.iconRoot }} />\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={t(\"sideMenu.logout\")}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</div>\r\n\t\t\t</Drawer>\r\n\t\t\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tuserContainer: {\r\n\t\twidth: 'auto',\r\n\t\tmargin: '10px auto',\r\n\t\tpaddingLeft: '5px',\r\n\t\ttransition: theme.transitions.create('width', {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t\t  }),\r\n\t\t  height: '80px'\r\n\t},\r\n\tdrawer: {\r\n\t\tzIndex: 2,\r\n\t\twidth: \"300px\",\t\r\n\t\tboxShadow: \"rgba(0,0,0,0.25) 0px 0px 6px 3px\",\r\n\t\tposition: \"absolute\",\r\n\t\ttop: \"64px\",\r\n\t\tleft: \"0px\",\r\n\t\theight: \"calc(100% - 64px)\",\r\n\t\toverflowY: \"overlay\"\r\n\t},\r\n\tlist: {\r\n\t\twidth: \"100%\",\r\n\t\tborderTop: \"1px solid rgba(255,255,255,0.3)\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.3)\",\r\n\t\tmargin: \"0px\",\r\n\t\tpadding: \"10px 0\",\r\n\t\twidth: '300px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\twidth: '100%'\r\n\t\t}\r\n\t},\r\n\tlistItem: {\r\n\t\tcolor: theme.palette.primary.main,\r\n\t\tmargin: \"0px\",\r\n\t\tborderRadius: \"5px\",\r\n\t\ttransition: \"background box-shadow 0.3s ease-in-out\",\r\n\t\t\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\t\ttransition: \"background box-shadow 0.2s ease-in-out\",\r\n\t\t\tboxShadow: \"0 8px 32px 0 rgb(0 0 0 / 80%)\",\r\n\t\t},\r\n\t},\r\n\tlistItemIcon: {\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tlistItemText: {\r\n\t\tfontSize: \"16px\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tbottomList: {\r\n\t\tpadding: \"10px 0\",\r\n\t\theight: 'auto',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'flex-end'\r\n\t},\r\n\ticonRoot: {\r\n\t\ttextAlign: \"center\",\r\n\t\twidth: \"25px\",\r\n\t\theight: \"25px\",\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t\tcolor: '#42A5F5',\r\n\t},\r\n\tcloseBtn: {\r\n\t\tposition: \"absolute\",\r\n\t\tright: 0,\r\n\t\tpadding: \"10px\",\r\n\t},\r\n\ticon: {\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tpaperAnchorDockedRight: {\r\n\t\tborder: 'none',\r\n\t},\r\n\t  drawerOpen: {\r\n\t\tbackground: 'transparent',\r\n\t\t\r\n\t\twidth: '300px',\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\tbackdropFilter: \"blur(22px)\",\r\n\t\ttransition: theme.transitions.create('width', {\r\n\t\t  easing: theme.transitions.easing.sharp,\r\n\t\t  duration: theme.transitions.duration.enteringScreen,\r\n\t\t}),\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\theight: \"100%\",\r\n\t\t\toverflow: \"scroll\",\r\n\t\t\twidth: \"100vw\",\r\n\t\t\tleft: 0,\r\n\t\t\tborder: \"none\",\r\n\t\t\tborderRadius: 0,\r\n\t\t\tpaddingBottom: \"74px\",\r\n\t\t\ttop: 0,\r\n\t\t\tbackground: \"rgba(0,0,0,0.5)\",\r\n\t\t\tbackdropFilter: \"blur(15px)\",\r\n\t\t},\r\n\t  },\r\n\t  drawerClose: {\r\n\t\tbackground: 'transparent',\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\tbackdropFilter: \"blur(22px)\",\r\n\t\ttransition: theme.transitions.create('width', {\r\n\t\t  easing: theme.transitions.easing.sharp,\r\n\t\t  duration: theme.transitions.duration.leavingScreen,\r\n\t\t}),\r\n\t\toverflowX: 'hidden',\r\n\t\twidth: '60px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t  display: 'none'\r\n\t\t},\r\n\t  },\r\n\t  \"@global\": {\r\n\t\t\"*::-webkit-scrollbar\": {\r\n\t\t\twidth: \"0em\",\r\n\t\t\theight: '0em'\r\n\t\t},\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Asset.js",["960","961","962","963"],"import {\r\n\tGrid, Link, makeStyles, useMediaQuery\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getAddress, getSecondaryAddress } from \"../../../api/assetsApi\";\r\nimport HomeWorkIcon from '@material-ui/icons/HomeWork';\r\nimport VerticalSplitIcon from '@material-ui/icons/VerticalSplit';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { AssetControls } from \"./AssetControls\";\r\n\r\nexport const Asset = ({ data }) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst { t } = useTranslation();\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.up(\"sm\"));\r\n\r\n\tconst handleReferralClick = (type) => (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\thistory.push(`${type}?asset=${data._id}`);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} sm={8} md={6} lg={5} xl={4} className={classes.mainContainer}>\r\n\t\t\t\t<div className={classes.imageContainer}\r\n\t\t\t\t\tstyle={{ \r\n\t\t\t\t\t\tbackground: data.images.length ? `url(${data.images[0]})` : 'url(https://leevstore.blob.core.windows.net/images/dscn8142.jpg)',\r\n\t\t\t\t\t\tbackgroundSize: 'cover'\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.dataContainer} onClick={() => history.push(`/workspace/assets/${data._id}`)}>\r\n\t\t\t\t\t<div className={classes.addressContainer}>\r\n\t\t\t\t\t\t<div className={classes.mainAddress}>\r\n\t\t\t\t\t\t\t{getAddress(data)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={classes.secondaryAddress}>\r\n\t\t\t\t\t\t\t{getSecondaryAddress(data)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={classes.zipCode}>\r\n\t\t\t\t\t\t\t{data.address.zipcode}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.openFaults}>\r\n\t\t\t\t\t\t{`${data.faultCount} ${t(\"mapModule.openFaults\")} `}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<AdditionalData data={data}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.controlsContainer}>\r\n\t\t\t\t\t<AssetControls data={data} />\r\n\t\t\t\t</div>\r\n\t\t</Grid>\r\n\t\t\r\n\t);\r\n};\r\n\r\nconst AdditionalData = ({ data }) => {\r\n\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\r\n\tconst type = data.type;\r\n\t\r\n\tconst f = type === 'building' ? data.addInfo.floors : data.addInfo.floor;\r\n\tconst ftype = type === 'building' ? 'floors' : 'floor';\r\n\tconst u = type === 'building' ? data.addInfo.units : data.addInfo.unit;\r\n\tconst utype = type === 'building' ? 'units' : 'unit';\r\n\r\n\treturn (\r\n\t\t<div className={classes.moreInfo}>\r\n\t\t\t<HomeWorkIcon className={classes.icon} />\r\n\t\t\t<div className={classes.addInfoText}>\r\n\t\t\t\t{`${t(`assetsModule.${type}`)}`}\r\n\t\t\t</div>\r\n\t\t\t<VerticalSplitIcon className={classes.icon} />\r\n\t\t\t<div className={classes.addInfoText} style={{ display: 'flex', flexDirection: type === 'building' ? 'row' : 'row-reverse'}}>\r\n\t\t\t\t<span>{f}</span>\r\n\t\t\t\t&nbsp;\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{`${t(`assetsModule.${ftype}`)}`}\r\n\t\t\t\t</span>\t\r\n\t\t\t</div>\r\n\t\t\t<HomeIcon className={classes.icon} />\r\n\t\t\t<div className={classes.addInfoText} style={{ display: 'flex', flexDirection: type === 'building' ? 'row' : 'row-reverse'}}>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{u}\r\n\t\t\t\t</span>\r\n\t\t\t\t&nbsp;\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{`${t(`assetsModule.${utype}`)}`}\r\n\t\t\t\t</span>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\theight: '250px',\r\n\t\tmargin: '20px',\r\n\t\tborderRadius: '5px 5px 30px 30px',\r\n\t\tposition: 'relative',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tboxShadow: '0 0 5px 2px rgba(0,0,0,0.3)',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tmargin : '10px 0',\r\n\t\t\theight: '200px',\r\n\t\t\tborderRadius: '0'\r\n\t\t}\r\n\t},\r\n\timageContainer: {\r\n\t\theight: '250px',\r\n\t\twidth: '100%',\r\n\t\tborderRadius: 'inherit',\r\n\t\tposition: 'absolute',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: '200px'\r\n\t\t}\t\r\n\t},\r\n\tdataContainer: {\r\n\t\theight: '250px',\r\n\t\twidth: '100%',\r\n\t\tbackground: 'rgba(0,0,0,0.25)',\r\n\t\tbackdropFilter: 'blur(0px)',\r\n\t\tborderRadius: 'inherit',\r\n\t\tcursor: 'pointer',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: '200px',\r\n\t\t}\r\n\t},\r\n\taddressContainer: {\r\n\t\tcolor: 'rgba(255,255,255,1)',\r\n\t\tpadding: '30px',\r\n\t\tmarginBottom: '20px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tpadding: '15px',\r\n\t\t}\r\n\t},\r\n\tmainAddress: {\r\n\t\tfontSize: '22px',\r\n\t\tfontWeight: '500',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tfontSize: '18px',\r\n\t\t}\r\n\t},\r\n\tsecondaryAddress: {\r\n\t\tfontSize: '14px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tfontSize: '12px',\r\n\t\t}\r\n\t},\r\n\tzipCode: {\r\n\t\tfontSize: '14px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tfontSize: '12px',\r\n\t\t}\r\n\t},\r\n\topenFaults: {\r\n\t\tcolor: 'white',\r\n\t\tbackground: '#e53935',\r\n\t\twidth: 'fit-content',\r\n\t\tpadding: '7px 15px',\r\n\t\tborderRadius: '50px',\r\n\t\tmargin: '0 30px',\r\n\t\tfontSize: '14px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tmargin: '10px 15px',\r\n\t\t}\r\n\t},\r\n\tmoreInfo: {\r\n\t\tcolor: 'rgba(255,255,255,0.8)',\r\n\t\tpadding: '7px 15px 7px 1px',\r\n\t\tfontSize: '14px',\r\n\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\twidth: 'fit-content',\r\n\t\tborderRadius: '50px',\r\n\t\tborder: '1px solid white',\r\n\t\tmargin: '10px 30px',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tmargin: '10px 15px',\r\n\t\t}\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '16px',\r\n\t\tmargin: '0 5px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.8)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '3px',\r\n\t\tcolor: 'rgba(255,255,255,0.8)',\r\n\t},\r\n\taddInfoText: {\r\n\t\tlineHeight: '3px',\r\n\t\tpadding: '0 10px 0 3px'\r\n\t},\r\n\tcontrolsContainer: {\r\n\t\tposition: 'absolute',\r\n\t\ttop: '20px',\r\n\t\tright: '20px'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetsControls.js",["964","965","966"],"import React, { useContext, useState } from 'react'\r\nimport { Grid, makeStyles,  useMediaQuery, Slide, Button } from '@material-ui/core'\r\nimport { SortBy } from '../../reuseables/SortBy'\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport { SearchBox } from '../../reuseables/SearchBox';\r\nimport { FilterBySelect } from '../../reuseables/FilterBySelect';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport { getUserList } from '../../../api/userApi';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport { useTranslation } from 'react-i18next';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport { getTenantOptions } from '../../../api/adminApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\n\r\n\r\nconst sortOptions = [\r\n    {\r\n        text: 'כתובת',\r\n        field: 'street'\r\n    },\r\n    {\r\n        text: 'עיר',\r\n        field: 'city'\r\n    },\r\n    {\r\n        text: 'מנהל בניין',\r\n        field: 'owner'\r\n    }\r\n    \r\n]\r\n\r\nexport const AssetsControls = () => {\r\n    \r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const { auth } = useContext(AuthContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    const [ collapsed, setCollapsed ] = useState(false);\r\n    \r\n\r\n    const createUserOptions = async () => {\r\n        const res = await getUserList();\r\n        if ([403, 500].includes(res.status))\r\n            return [];\r\n        let userList = [];\r\n        res.forEach(user => {\r\n            userList.push({ label: `${user.firstName} ${user.lastName}`, value: user._id });\r\n        });\r\n        return userList;\r\n    }\r\n\r\n\r\n    const createTenantsOptions = async () => {\r\n        const res = await getTenantOptions();\r\n        return res;\r\n    }\r\n\r\n\r\n    const toggleCollapse = () => {\r\n        if (collapsed) {\r\n            setCollapsed(false);\r\n            return;\r\n        }\r\n        setCollapsed(true)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                downSm &&\r\n                <Grid container justify='center'>\r\n                    <Grid item xs={11} className={classes.gridItem}>\r\n                        <Button\r\n                        className={classes.sortandfilter}\r\n                        startIcon={<FilterListIcon className={classes.icon} />}\r\n                        endIcon={collapsed ? <ClearRounded /> : <ExpandMoreRoundedIcon />}\r\n                        onClick={toggleCollapse}\r\n                    >\r\n                        {t(`faultsModule.${ collapsed ? 'hide' : 'show'}Filters`)}\r\n                    </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                    \r\n            }\r\n            {\r\n                (!downSm || collapsed) &&\r\n            <Slide direction={'up'} in={true} timeout={downSm ? 500 : 0}>\r\n                <Grid container justify='center' className={classes.filtersContainer}>\r\n                    <Grid item xs={11} sm={9} md={7} lg={5} xl={4} className={classes.gridItem}>\r\n                        {\r\n                            auth.user.isAdmin && \r\n                            <FilterBySelect \r\n                                optionsFunc={createTenantsOptions}\r\n                                placeholder={t(\"assetsModule.filterByClient\")}\r\n                                filterIcon={<PeopleAltIcon className={classes.icon }/>}\r\n                                filterField={'tenant'}\r\n                            />\r\n                        }\r\n                        \r\n                        <SearchBox \r\n                            placeholder={t(\"assetsModule.filterByCityOrAddress\")}\r\n                            filterField={'searchText'}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={11} className={classes.gridItem}>         \r\n                        <FilterBySelect \r\n                            optionsFunc={createUserOptions}\r\n                            placeholder={t(\"assetsModule.filterByAssetOwner\")}\r\n                            filterIcon={<PersonRoundedIcon className={classes.icon }/>}\r\n                            filterField={'owner'}\r\n                        />     \r\n                        <SortBy \r\n                            menuOptions={sortOptions}\r\n                        />   \r\n                    </Grid>  \r\n                </Grid>\r\n                </Slide>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    filtersContainer: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            position: 'absolute',\r\n            bottom: '0',\r\n            background: 'rgba(0,0,0,0.8)',\r\n            backdropFilter: 'blur(22px)',\r\n            zIndex: 3,\r\n            padding: '40px 0 155px',\r\n            borderRadius: '30px 30px 0 0',\r\n            boxShadow: '0px -1px 1px 0px rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    gridItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        marginLeft: '4px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    sortandfilter: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'black',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '5px 25px 5px 3px',\r\n        whiteSpace: 'nowrap',\r\n        margin: '10px 0 0',\r\n        position: 'absolute',\r\n        bottom: '100px',\r\n        zIndex: 4,\r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    }\r\n}))\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AlertDialog.js",["967"],"import React, { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { useTranslation } from 'react-i18next';\r\nimport clsx from 'clsx';\r\n\r\nexport const AlertDialog = ({ alertDialog , open }) => {\r\n\r\n        const classes = useStyles();\r\n        const { lang } = useContext(LanguageContext);\r\n        const { t, i18n } = useTranslation();\r\n  return (\r\n    <Dialog\r\n        open={true}\r\n        onClose={alertDialog.handleCancel}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        style={{ direction: lang.dir}}\r\n        classes={{\r\n            root: classes.root, \r\n            paper: classes.paper,\r\n            container: classes.container\r\n        }}\r\n        BackdropProps={{\r\n            timeout: 500,\r\n            classes: {\r\n                root: classes.root\r\n            }\r\n        }}\r\n    >\r\n    <DialogTitle id=\"alert-dialog-title\" style={{ direction: lang.dir}} className={classes.title}>\r\n        {alertDialog.title}\r\n    </DialogTitle>\r\n    <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\" style={{ direction: lang.dir}} className={classes.text}>\r\n        { alertDialog.text }\r\n        </DialogContentText>\r\n    </DialogContent>\r\n    <DialogActions className={classes.controls}>\r\n        <Button\r\n            className={clsx(classes.control, classes.save)}\r\n            onClick={alertDialog.handleConfirm}\r\n        >\r\n            { alertDialog.confirmText || t(\"alert.confirm\") }\r\n        </Button>\r\n        <Button\r\n            className={clsx(classes.control, classes.cancel)}\r\n            onClick={alertDialog.handleCancel}\r\n        >\r\n            { alertDialog.cancelText || t(\"alert.cancel\") }\r\n        </Button>\r\n    </DialogActions>\r\n    </Dialog>\r\n\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: 'rgba(0,0,0,0.4)'\r\n    },\r\n    container: {\r\n        backdropFilter: 'blur(10px)',\r\n    },\r\n    paper: {\r\n        width: 'auto',\r\n        padding: '5px',\r\n        background: 'rgba(0,0,0,0.4)',\r\n        borderRadius: '10px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        color: 'white'\r\n    },\r\n    text: {\r\n        color: 'white'\r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsControls.js",["968","969"],"import React, { useState, useEffect } from 'react'\r\nimport { Grid, makeStyles, useMediaQuery, Button, Slide } from '@material-ui/core'\r\nimport { SortBy } from '../../reuseables/SortBy'\r\nimport { SearchBox } from '../../reuseables/SearchBox';\r\nimport { FilterBySelect } from '../../reuseables/FilterBySelect';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\nimport { getAssetsSuggestions } from '../../../api/systemsApi';\r\nimport { getFullAddress, getAsset } from '../../../api/assetsApi';\r\nimport { useLocation } from 'react-router';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport { ClearRounded } from '@material-ui/icons';\r\n\r\nconst sortOptions = [\r\n    {\r\n        text: 'שם מערכת',\r\n        field: 'systemName'\r\n    },\r\n    {\r\n        text: 'מנהל מערכת',\r\n        field: 'owner'\r\n    },\r\n    {\r\n        text: 'כמות תקלות פתוחות',\r\n        field: 'openFaultsCount'\r\n    },\r\n    \r\n]\r\n\r\nexport const SystemsControls = () => {\r\n    \r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    const [ reloadedValue, setReloadedValue ] = useState(null);\r\n    const [ collapsed, setCollapsed ] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        if (query.asset) {\r\n            handleReloaded(query.asset)\r\n            .then(data => {\r\n                if (data) {\r\n                    setReloadedValue(data);\r\n                } else {\r\n                    \r\n                }\r\n            })\r\n        } else {\r\n            setReloadedValue({\r\n                label: '',\r\n                value: null\r\n            });\r\n        }\r\n    }, [location.search])\r\n\r\n    const handleReloaded = async (assetId) => {\r\n        const res = await getAsset(assetId, false);\r\n        if (res) {\r\n            return {\r\n                label: getFullAddress(res),\r\n                value: res._id\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const toggleCollapse = () => {\r\n        if (collapsed) {\r\n            setCollapsed(false);\r\n            return;\r\n        }\r\n        setCollapsed(true)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                downSm &&\r\n                <Grid container justify='center'>\r\n                    <Grid item xs={11} className={classes.gridItem}>\r\n                        <Button\r\n                        className={classes.sortandfilter}\r\n                        startIcon={<FilterListIcon className={classes.icon} />}\r\n                        endIcon={collapsed ? <ClearRounded /> : <ExpandMoreRoundedIcon />}\r\n                        onClick={toggleCollapse}\r\n                    >\r\n                        {t(`faultsModule.${ collapsed ? 'hide' : 'show'}Filters`)}\r\n                    </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                    \r\n            }\r\n           { \r\n\t\t\t(!downSm || collapsed) &&\r\n\t\t\t<Slide in={true} direction={'up'} timeout={downSm ? 500  : 0}>\r\n                <Grid container justify='center' className={classes.filtersContainer}>\r\n                    <Grid item xs={12} className={classes.gridItem}>\r\n\r\n                        {\r\n                            reloadedValue &&\r\n                            <SearchBoxSelect\r\n                                suggestionsFunc={getAssetsSuggestions}\r\n                                placeholder={t(\"systemsModule.filterByAsset\")}\r\n                                filterField={'asset'}\r\n                                reloadedLabel={reloadedValue.label}\r\n                                reloadedValue={reloadedValue.value}\r\n                            />\r\n                        }  \r\n                        <SearchBox \r\n                                placeholder={t(\"systemsModule.filterBySystemName\")}\r\n                                filterField={'name'}\r\n                            />\r\n                        </Grid>\r\n                    <Grid xs={11} className={classes.gridItem}>\r\n                        <FilterBySelect \r\n                            optionsFunc={createUserOptions}\r\n                            placeholder={t(\"systemsModule.filterBySystemOwner\")}\r\n                            filterIcon={<PersonRoundedIcon className={classes.icon }/>}\r\n                            filterField={'owner'}\r\n                        />\r\n                        <SortBy \r\n                            menuOptions={sortOptions}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n            </Slide>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    filtersContainer: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            position: 'absolute',\r\n            bottom: '0',\r\n            background: 'rgba(0,0,0,0.8)',\r\n            backdropFilter: 'blur(22px)',\r\n            zIndex: 3,\r\n            padding: '40px 0 155px',\r\n            borderRadius: '30px 30px 0 0',\r\n            boxShadow: '0px -1px 1px 0px rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    gridItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        marginLeft: '4px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    sortandfilter: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'black',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '5px 25px 5px 3px',\r\n        whiteSpace: 'nowrap',\r\n        margin: '10px 0 0',\r\n        position: 'absolute',\r\n        bottom: '100px',\r\n        zIndex: 4,\r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    },\r\n}))\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsHeader.js",["970","971","972"],"import React from 'react';\r\nimport { Grid, makeStyles, Paper, useMediaQuery } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Can } from '../../reuseables/Can';\r\n\r\nexport const SystemsHeader = () => {\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst { t, i18n } = useTranslation();\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} sm={7} md={8} lg={11} lg={11}>\r\n\t\t\t<Paper elevation={9} className={classes.headerPaper}>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item lg={4}>\r\n\t\t\t\t\t\t<div className={classes.systemName}>\r\n\t\t\t\t\t\t\t{t('systemsModule.systemName')}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t{!downSm && (\r\n\t\t\t\t\t\t<Grid item lg={8} className={classes.controller}>\r\n\t\t\t\t\t\t\t<Grid container style={{ height: '100%' }}>\r\n\t\t\t\t\t\t\t\t<Grid item lg={9}>\r\n\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.actionsContainer}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.moreDetails')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.tasks')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.faults')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.documents')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Can module='systems' action='changeRelatedUsers' userList={[]}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t'systemsModule.changeOwner'\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.users')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>{' '}\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n                                <Grid item lg={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.ownerHeader}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.ownerHeader')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Paper>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\theaderPaper: {\r\n\t\theight: '45px',\r\n\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\tmargin: '5px',\r\n\t\tborderRadius: '5px',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tfontSize: '12px',\r\n\t},\r\n\tsystemName: {\r\n\t\tmargin: 'auto 20px',\r\n        whiteSpace: 'nowrap',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n\t},\r\n\tactionsContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tfontSize: '12px',\r\n        justifyContent: 'flex-end',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n\t},\r\n\ticonHeader: {\r\n\t\ttextAlign: 'center',\r\n\t\tmargin: 'auto',\r\n\t},\r\n\townerHeader: {\r\n\t\ttextAlign: 'center',\r\n        margin: 'auto',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tmargin: 'auto 0',\r\n\t\t},\r\n    },\r\n    controller: {\r\n        padding: '5px'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\System.js",["973","974","975","976","977"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n\tBackdrop,\r\n\tGrid,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tModal,\r\n\tPaper,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n\tupdateSystemOwner,\r\n\tupdateSystemAdditionalData,\r\n} from '../../../api/systemsApi';\r\nimport { SystemName } from './SystemName';\r\nimport { SystemRelatedUsers } from './SystemRelatedUsers';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport ExpandLessRoundedIcon from '@material-ui/icons/ExpandLessRounded';\r\nimport { SystemControls } from './SystemControls';\r\nimport { SystemAdditionalDetails } from './SystemAdditionalDetails';\r\nimport { UpsertSystem } from './UpsertSystem';\r\nimport { UpdateOwner } from '../../reuseables/UpdateOwner';\r\nimport { SnackbarContext } from '../../../context/SnackbarContext';\r\nimport { UpsertContext } from '../../../context/UpsertContext';\r\n\r\nexport const System = ({ systemData }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst { setSnackbar } = useContext(SnackbarContext)\r\n\tconst { setUpsertData } = useContext(UpsertContext);\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst [data, setData] = useState(systemData);\r\n\tconst [editOwner, setEditOwner] = useState(false);\r\n\tconst [editName, setEditName] = useState(false);\r\n\tconst [expanded, setExpanded] = useState(false);\r\n\tconst [showAdditionalDetails, setShowAdditionalDetails] = useState(false);\r\n\tconst [showLinkedUsers, setShowLinkedUsers] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!expanded) {\r\n\t\t\tsetShowAdditionalDetails(null);\r\n\t\t}\r\n\t}, [expanded]);\r\n\r\n\tconst toggleEditOwner = () => {\r\n\t\tif (editOwner) {\r\n\t\t\tsetEditOwner(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetShowLinkedUsers(false);\r\n\t\tsetEditOwner(true);\r\n\t};\r\n\r\n\tconst updateOwner = async (owner) => {\r\n\t\tconst res = await updateSystemOwner(data._id, owner);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res)\r\n\t\t} else if (res) {\r\n\t\t\tsetData(res);\r\n\t\t\tsetEditOwner(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst setSystemName = (name) => {\r\n\t\tsetData({\r\n\t\t\t...data,\r\n\t\t\tname,\r\n\t\t});\r\n\t};\r\n\r\n\tconst showAdditionalDetailsToggle = () => {\r\n\t\tif (!showAdditionalDetails) {\r\n\t\t\tsetShowAdditionalDetails(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetShowAdditionalDetails(false);\r\n\t};\r\n\r\n\tconst showLinkedUsersToggle = () => {\r\n\t\tif (!showLinkedUsers) {\r\n\t\t\tsetEditOwner(false);\r\n\t\t\tsetShowLinkedUsers(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetShowLinkedUsers(false);\r\n\t};\r\n\r\n\tconst handleExpand = () => {\r\n\t\tif (expanded) {\r\n\t\t\tsetShowLinkedUsers(false);\r\n\t\t\tsetEditOwner(false);\r\n\t\t\tsetExpanded(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetExpanded(true);\r\n\t};\r\n\r\n\tconst toggleEditMode = () => {\r\n\t\tsetUpsertData({ itemId: systemData._id, module: 'systems' })\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} sm={7} md={8} lg={11} xl={11}>\r\n\t\t\t<Paper elevation={9} className={classes.paper}>\r\n\t\t\t\t<Grid container className={classes.mainRow}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\tclassName={classes.semiMainRow}\r\n\t\t\t\t\t\tonClick={handleExpand}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborderBottom: expanded\r\n\t\t\t\t\t\t\t\t? '1px solid rgba(255,255,255,0.2)'\r\n\t\t\t\t\t\t\t\t: 'none',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<SystemName\r\n\t\t\t\t\t\t\tsystemId={data._id}\r\n\t\t\t\t\t\t\teditName={editName}\r\n\t\t\t\t\t\t\tsetEditName={setEditName}\r\n\t\t\t\t\t\t\tsetSystemName={setSystemName}\r\n\t\t\t\t\t\t\ttitle={data.name}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{downSm && !editName ? (\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName={classes.expandIcon}\r\n\t\t\t\t\t\t\t\tonClick={handleExpand}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{!expanded ? (\r\n\t\t\t\t\t\t\t\t\t<ExpandMoreRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<ExpandLessRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item lg={8}>\r\n\t\t\t\t\t\t<SystemControls\r\n\t\t\t\t\t\t\teditName={editName}\r\n\t\t\t\t\t\t\texpanded={expanded}\r\n\t\t\t\t\t\t\tsystem={data}\r\n\t\t\t\t\t\t\tshowLinkedUsersToggle={showLinkedUsersToggle}\r\n\t\t\t\t\t\t\ttoggleEditOwner={toggleEditOwner}\r\n\t\t\t\t\t\t\ttoggleAdditionalDetails={showAdditionalDetailsToggle}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<SystemRelatedUsers\r\n\t\t\t\t\tisOpen={showLinkedUsers}\r\n\t\t\t\t\tuserList={data.relatedUsers}\r\n\t\t\t\t\tsetData={setData}\r\n\t\t\t\t\tsystemId={data._id}\r\n\t\t\t\t\tdata={data}\r\n\t\t\t\t/>\r\n\t\t\t\t<UpdateOwner\r\n\t\t\t\t\tisOpen={editOwner}\r\n\t\t\t\t\tcurrentOwner={data.owner}\r\n\t\t\t\t\thandleSave={updateOwner}\r\n\t\t\t\t\thandleClose={toggleEditOwner}\r\n\t\t\t\t\ttitle={t('systemsModule.updateSystemOwnerTitle')}\r\n\t\t\t\t\tinstructions={t('systemsModule.chooseManagerToUpdate')}\r\n\t\t\t\t/>\r\n\t\t\t\t<SystemAdditionalDetails\r\n\t\t\t\t\tdata={data.data}\r\n\t\t\t\t\tisOpen={showAdditionalDetails}\r\n\t\t\t\t\tsystemId={data._id}\r\n\t\t\t\t\ttoggleEdit={toggleEditMode}\r\n\t\t\t\t/>\r\n\t\t\t</Paper>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tbackground: 'rgba(255,255,255,0.1)',\r\n\t\tborderRadius: '5px',\r\n\t\tmargin: '4px 5px',\r\n\t},\r\n\tmainRow: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\twidht: 'auto',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tflexDirection: 'column',\r\n\t\t},\r\n\t},\r\n\tsemiMainRow: {\r\n\t\tdisplay: 'flex',\r\n\t\twidth: 'auto',\r\n\t\tjustifyContent: 'space-between',\r\n\t},\r\n\tactionsContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\twidth: 'fit-content',\r\n\t\tpadding: '5px',\r\n\t\tmargin: 'auto 0',\r\n\t\tjustifyContent: 'space-between',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tflexDirection: 'column-reverse',\r\n\t\t\talignItems: 'center',\r\n\t\t\tmargin: 'auto',\r\n\t\t},\r\n\t},\r\n\tactions: {\r\n\t\tmargin: 'auto 10px',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\t\tborderRadius: '50px',\r\n\t\t\tmargin: '10px 0',\r\n\t\t\tpadding: '5px 10px',\r\n\t\t},\r\n\t},\r\n\tsystemName: {\r\n\t\tcolor: 'white',\r\n\t\tmargin: 'auto 20px',\r\n\t\tfontSize: '18px',\r\n\t\twhiteSpace: 'wrap',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '5px 20px',\r\n\t},\r\n\ticonBtn: {\r\n\t\tpadding: '0px',\r\n\t\theight: 'fit-content',\r\n\t\twidth: 'fit-content',\r\n\t\tmargin: '0 20px',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tmargin: '5px 10px',\r\n\t\t},\r\n\t},\r\n\tuserIcon: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '8px',\r\n\t\tborderRadius: '50px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.2)',\r\n\t\t},\r\n\t},\r\n\townerInfo: {\r\n\t\theight: 'auto',\r\n\t\twidth: '150px',\r\n\t\tpadding: '5px 20px 5px 10px',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t\tborderRadius: '5px',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tmarginTop: '5px',\r\n\t\t\tborderRadius: '50px',\r\n\t\t\twidth: '170px',\r\n\t\t\tpadding: '5px 20px 5px 5px',\r\n\t\t},\r\n\t},\r\n\teditOwner: {\r\n\t\twidth: 'auto',\r\n\t\theight: '200px',\r\n\t\tmargin: '20px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tborderRadius: '5px',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\systemsApi.js",["978"],"import axios from 'axios';\r\nimport i18next from 'i18next';\r\nimport { getAssets, getFullAddress } from './assetsApi';\r\nimport { getUnauthorizedMessage } from './genericApi';\r\n\r\nexport const createNewSystem = async (details) => {\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/createSystem`,\r\n            { ...details },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'create',\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n    } catch(e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }   \r\n};\r\n\r\nexport const getAssetsSuggestions = async (searchText) => {\r\n\tconst data = await getAssets();\r\n\tlet result = [{ text: i18next.t('general.none'), value: '' }];\r\n\tif (!searchText) {\r\n\t\tdata.forEach((asset) => {\r\n\t\t\tresult.push({\r\n\t\t\t\ttext: getFullAddress(asset),\r\n\t\t\t\tvalue: asset._id,\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\tlet filtered = data.filter((asset) => {\r\n\t\treturn getFullAddress(asset).indexOf(searchText) !== -1;\r\n\t});\r\n\tfiltered.forEach((asset) => {\r\n\t\tresult.push({\r\n\t\t\tlabel: getFullAddress(asset),\r\n\t\t\tvalue: asset._id,\r\n\t\t});\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport const getSystemsByAsset = async (assetId) => {\r\n    try {   \r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/getSystems`,\r\n            { assetId },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'read',\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n        return [];\r\n    } catch(e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }\r\n\t\r\n};\r\n\r\nexport const getSystem = async (systemId) => {\r\n    try {   \r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/getSystem`,\r\n            { systemId },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'read',\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n        return [];\r\n    } catch(e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }\r\n\t\r\n};\r\n\r\n\r\n\r\nexport const applyFilters = (filters, systems) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (!filters) resolve(systems);\r\n\t\tif (filters.sortBy) {\r\n\t\t\tif (filters.sortBy === 'systemName') {\r\n\t\t\t\tsystems = systems.sort((a, b) => {\r\n\t\t\t\t\treturn filters.sortOrder === 'asc'\r\n\t\t\t\t\t\t? a.name > b.name\r\n\t\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t\t: -1\r\n\t\t\t\t\t\t: a.name < b.name\r\n\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t: -1;\r\n\t\t\t\t});\r\n\t\t\t} else if (filters.sortBy === 'owner') {\r\n\t\t\t\tsystems = systems.sort((a, b) => {\r\n\t\t\t\t\tlet aName = `${a.owner.firstName} ${a.owner.lastName}`;\r\n\t\t\t\t\tlet bName = `${b.owner.firstName} ${b.owner.lastName}`;\r\n\t\t\t\t\treturn filters.sortOrder === 'asc'\r\n\t\t\t\t\t\t? aName > bName\r\n\t\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t\t: -1\r\n\t\t\t\t\t\t: aName < bName\r\n\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t: -1;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (filters.name) {\r\n\t\t\tsystems = systems.filter((system) => {\r\n\t\t\t\treturn system.name.indexOf(filters.name) !== -1;\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (filters.owner) {\r\n\t\t\tsystems = systems.filter((system) => {\r\n\t\t\t\tif (filters.owner instanceof Array) {\r\n\t\t\t\t\treturn filters.owner.indexOf(system.owner._id) !== -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn system.owner._id == filters.owner;\r\n\t\t\t});\r\n\t\t}\r\n\t\tresolve(systems);\r\n\t});\r\n};\r\n\r\nexport const updateSystemOwner = async (systemId, owner) => {\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/updateSystemOwner`,\r\n            { systemId, owner },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'changeOwner',\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n        return [];\r\n    } catch(e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }\r\n\t\r\n};\r\n\r\nexport const updateSystemName = async (systemId, name) => {\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/updateSystemName`,\r\n            { systemId, name },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'update',\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n        return [];\r\n    } catch(e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }\r\n\t\r\n};\r\n\r\nexport const removeSystemUser = async (systemId, userId) => {\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/removeRelatedUser`,\r\n            { systemId, userId },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'changeRelatedUsers',\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n        return [];\r\n    } catch(e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }\r\n\t\r\n};\r\n\r\nexport const addUser = async (systemId, userId) => {\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/addRelatedUser`,\r\n            { systemId, userId },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'changeRelatedUsers',\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n        return ;\r\n    } catch(e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }\r\n\t\r\n};\r\n\r\nexport const updateSystemAdditionalData = async (systemData) => {\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/updateSystemData`,\r\n            { systemData },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'update',\r\n                },\r\n            }\r\n        );\r\n        if (res.data) {\r\n            return res.data;\r\n        }\r\n        return null;\r\n    } catch (e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }\r\n\t\r\n};\r\n\r\nexport const createSystemMenuOptions = (systems) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tlet options = [{ text: i18next.t('general.none'), value: '' }];\r\n\t\tsystems.forEach((s) => {\r\n\t\t\toptions.push({ text: s.name, value: s._id });\r\n\t\t});\r\n\t\tresolve(options);\r\n\t});\r\n};\r\n\r\nexport const getSystemsByAssetOptions = async (asset) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/systems/getSystemsOptions`,\r\n\t\t\t{ asset },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'read',\r\n                },\r\n            }\r\n\t\t);\r\n\t\tlet options = [];\r\n\t\tif (!res) return [];\r\n\t\tres.data.forEach((t) => {\r\n\t\t\tif (asset) {\r\n\t\t\t\toptions.push({ label: t.name, value: t._id });\r\n\t\t\t} else {\r\n\t\t\t\toptions.push({\r\n\t\t\t\t\tlabel: `${t.name}, ${getFullAddress(t.asset)}`,\r\n\t\t\t\t\tvalue: t._id,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn options;\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\mapApi.js",["979"],"import axios from 'axios';\r\n\r\nexport const getMapData = async (filters) => {\r\n\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/map/getMapData`,\r\n            { filters },\r\n            {\r\n                headers: {\r\n                    requesttype: 'read',\r\n                    module: 'map'\r\n                }\r\n            }\r\n        );\r\n        if (res) {\r\n            let assets = res.data.assets;\r\n            res.data.assets.forEach((a,i) => {\r\n                assets[i].faultCount = res.data.faults.filter(f => {\r\n                    return f.asset._id == a._id\r\n                }).length;\r\n                    \r\n            })\r\n            return {...res.data, assets };\r\n        }\r\n        return [];\r\n    } catch (e) {\r\n        console.log(e.message);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const getMapFilters = (query) => {\r\n    return new Promise((resolve, rejecet) => {\r\n        if (!query) resolve(null);\r\n        delete query.lat;\r\n        delete query.lng;\r\n        resolve(query);\r\n    })\r\n    \r\n}\r\n\r\n\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\Mapbox.js",["980","981","982","983","984","985","986","987"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport ReactMapGL, {\r\n\tFlyToInterpolator,\r\n\tMarker,\r\n\tsetRTLTextPlugin,\r\n} from 'react-map-gl';\r\nimport { makeStyles, IconButton, ClickAwayListener } from '@material-ui/core';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport useSupercluster from 'use-supercluster';\r\nimport { getMapData } from '../../../api/mapApi';\r\nimport { updateQueryParams } from '../../../api/genericApi';\r\nimport clsx from 'clsx';\r\nimport mapboxgl from \"mapbox-gl\";\r\n\r\n// @ts-ignore\r\n// eslint-disable-next-line import/no-webpack-loader-syntax, import/no-unresolved\r\nmapboxgl.workerClass = require(\"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\").default;\r\n\r\nsetRTLTextPlugin(\r\n\t// find out the latest version at https://www.npmjs.com/package/@mapbox/mapbox-gl-rtl-text\r\n\t'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js',\r\n\tnull,\r\n\t// lazy: only load when the map first encounters Hebrew or Arabic text\r\n\ttrue\r\n);\r\n\r\nexport const Mapbox = ({ data, setData }) => {\r\n\tconst location = useLocation();\r\n\tconst history = useHistory();\r\n\tconst query = useQuery(location.search);\r\n\tconst map = useRef();\r\n\tconst classes = useStyles();\r\n\tconst [mapData, setMapData] = useState(data);\r\n\tconst [extId, setExtId] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (data) {\r\n\t\t\tsetMapData(data);\r\n\t\t}\r\n\t}, [data]);\r\n\r\n\tconst [viewport, setViewport] = useState({\r\n\t\tlatitude: Number(query.lat),\r\n\t\tlongitude: Number(query.lng),\r\n\t\tzoom: 10,\r\n\t\twidth: 'auto',\r\n\t\theight: '100%'\r\n\t});\r\n\r\n\tconst points = mapData.assets.map((asset, i) => ({\r\n\t\ttype: 'Feature',\r\n\t\tproperties: {\r\n\t\t\tcluster: false,\r\n\t\t\tasset,\r\n\t\t},\r\n\t\tgeometry: {\r\n\t\t\ttype: 'Point',\r\n\t\t\tcoordinates: [asset.coordinates.lng, asset.coordinates.lat],\r\n\t\t},\r\n\t}));\r\n\r\n\tconst bounds = map.current\r\n\t\t? map.current.getMap().getBounds().toArray().flat()\r\n\t\t: null;\r\n\r\n\tconst { clusters, supercluster } = useSupercluster({\r\n\t\tpoints,\r\n\t\tzoom: viewport.zoom,\r\n\t\tbounds,\r\n\t\toptions: {\r\n\t\t\tradius: 15,\r\n\t\t\tmaxZoom: 20,\r\n\t\t},\r\n\t});\r\n\r\n\tconst handleMarkerClick = (cluster) => (event) => {\r\n\t\tconst { cluster: isCluster } = cluster.properties;\r\n\t\tsetExtId(cluster.id);\r\n\t\tif (isCluster) {\r\n\t\t\tlet leaves = getClusterLeaves(cluster.id);\r\n\r\n\t\t\tlet reqData = leaves.map((lv) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tasset: lv.properties.asset,\r\n\t\t\t\t\tfaults: mapData.faults.filter(\r\n\t\t\t\t\t\t(f) => f.asset._id === lv.properties.asset._id\r\n\t\t\t\t\t),\r\n\t\t\t\t\ttasks: mapData.tasks.filter(\r\n\t\t\t\t\t\t(t) => t.asset._id === lv.properties.asset._id\r\n\t\t\t\t\t),\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\tsetData(reqData);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetData([\r\n\t\t\t{\r\n\t\t\t\tasset: cluster.properties.asset,\r\n\t\t\t\tfaults: mapData.faults.filter(\r\n\t\t\t\t\t(f) => f.asset._id === cluster.properties.asset._id\r\n\t\t\t\t),\r\n\t\t\t\ttasks: mapData.tasks.filter(\r\n\t\t\t\t\t(t) => t.asset._id === cluster.properties.asset._id\r\n\t\t\t\t),\r\n\t\t\t},\r\n\t\t]);\r\n\t};\r\n\r\n\tconst getClusterLeaves = (clusterId) => {\r\n\t\treturn supercluster.getLeaves(clusterId);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ReactMapGL\r\n\t\t\tref={map}\r\n\t\t\t{...viewport}\r\n\t\t\tmapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n\t\t\tonViewportChange={(viewport) =>\r\n\t\t\t\tsetViewport(viewport)\r\n\t\t\t}\r\n\t\t\tmapStyle={'mapbox://styles/nivmimran/ckngo7jr231jt18pcc4bzobs3'}\r\n\t\t\tattributionControl={false}\r\n\t\t>\r\n\t\t\t{clusters.map((cluster, i) => {\r\n\t\t\t\tconst [longitude, latitude] = cluster.geometry.coordinates;\r\n\t\t\t\tconst { cluster: isCluster } = cluster.properties;\r\n\r\n\t\t\t\tif (isCluster) {\r\n\t\t\t\t\tconst leaves = getClusterLeaves(cluster.id);\r\n\t\t\t\t\tlet totalFaults = 0;\r\n\t\t\t\t\tleaves.forEach((lv) => {\r\n\t\t\t\t\t\ttotalFaults += lv.properties.asset.faultCount;\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Marker\r\n\t\t\t\t\t\t\tlongitude={longitude}\r\n\t\t\t\t\t\t\tlatitude={latitude}\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tonClick={handleMarkerClick(cluster)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{!!totalFaults && (\r\n\t\t\t\t\t\t\t\t<div className={classes.totalFaults}>\r\n\t\t\t\t\t\t\t\t\t{totalFaults}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\tclasses.markerIcon,\r\n\t\t\t\t\t\t\t\t\textId === cluster.id ? classes.active : null\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<img src=\"https://img.icons8.com/nolan/30/skyscrapers.png\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Marker>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Marker\r\n\t\t\t\t\t\tlongitude={longitude}\r\n\t\t\t\t\t\tlatitude={latitude}\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tonClick={handleMarkerClick(cluster)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Boolean(cluster.properties.asset.faultCount) && (\r\n\t\t\t\t\t\t\t<div className={classes.totalFaults}>\r\n\t\t\t\t\t\t\t\t{cluster.properties.asset.faultCount}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\tclasses.markerIcon,\r\n\t\t\t\t\t\t\t\textId === cluster.id ? classes.active : null\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\tcluster.properties.asset.type ===\r\n\t\t\t\t\t\t\t\t\t'apartment'\r\n\t\t\t\t\t\t\t\t\t\t? 'https://img.icons8.com/nolan/30/cottage.png'\r\n\t\t\t\t\t\t\t\t\t\t: 'https://img.icons8.com/nolan/30/company.png'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Marker>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</ReactMapGL>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttotalFaults: {\r\n\t\tbackground: 'red',\r\n\t\tcolor: 'white',\r\n\t\twidth: 'fit-content',\r\n\t\theight: 'fit-content',\r\n\t\tpadding: '2px 5px',\r\n\t\tborderRadius: '50px',\r\n\t\tfontSize: '13px',\r\n\t\tposition: 'relative',\r\n\t\ttop: '15px',\r\n\t\tright: '10px'\r\n\t},\r\n\tmarkerIcon: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '3px 5px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tcursor: 'pointer',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MarkerData.js",["988","989","990","991","992"],"import {\r\n\tFormControl,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tMenuItem,\r\n\tSelect,\r\n} from \"@material-ui/core\";\r\nimport AssignmentRoundedIcon from \"@material-ui/icons/AssignmentRounded\";\r\nimport ClearRoundedIcon from \"@material-ui/icons/ClearRounded\";\r\nimport WarningRoundedIcon from \"@material-ui/icons/WarningRounded\";\r\nimport clsx from \"clsx\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n\tgetFullAddress,\r\n\tgetShortAddress,\r\n\tgetUnit,\r\n} from \"../../../api/assetsApi\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { FaultMinified } from \"../faults/FaultMinified\";\r\nimport { TaskMinified } from \"../tasks/TaskMinified\";\r\n\r\nexport const MarkerData = ({ markersData, handleClose }) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { t } = useTranslation();\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [data, setData] = useState(markersData);\r\n\tconst [faults, setFaults] = useState([]);\r\n\tconst [tasks, setTasks] = useState([]);\r\n\tconst [selectedAsset, setSelectedAsset] = useState(data[0].asset._id);\r\n\tconst [type, setType] = useState(null);\r\n\tconst [detailsActive, setDetailsActive] = useState(\"faults\");\r\n\r\n\tuseEffect(() => {\r\n\t\tif (data.length) {\r\n\t\t\tif (data.length > 1) {\r\n\t\t\t\tlet addressList = data.map((md) => getShortAddress(md.asset));\r\n\t\t\t\tlet unique = addressList.filter(function (value, index, self) {\r\n\t\t\t\t\treturn self.indexOf(value) === index;\r\n\t\t\t\t});\r\n\t\t\t\tif (addressList.length === 1) {\r\n\t\t\t\t\tsetType(\"apt\");\r\n\t\t\t\t} else if (unique.length > 1) {\r\n\t\t\t\t\tsetType(\"cluster\");\r\n\t\t\t\t} else if (unique.length !== addressList.length) {\r\n\t\t\t\t\tsetType(\"apts\");\r\n\t\t\t\t}\r\n\t\t\t\tsetSelectedAsset(data[0].asset._id);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetType(\"apt\");\r\n\t\t\tsetSelectedAsset(data[0].asset._id);\r\n\t\t}\r\n\t}, [data]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (markersData) {\r\n\t\t\tsetData(markersData);\r\n\t\t}\r\n\t}, [markersData]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (selectedAsset) {\r\n\t\t\tlet item = data.find((md) => md.asset._id === selectedAsset);\r\n\t\t\tif (item) {\r\n\t\t\t\tsetFaults(item.faults);\r\n\t\t\t\tsetTasks(item.tasks);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetFaults(data[0].faults);\r\n\t}, [selectedAsset]);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetSelectedAsset(event.target.value);\r\n\t};\r\n\r\n\tconst handleClick = (type) => (event) => {\r\n\t\tsetDetailsActive(type);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.container}>\r\n\t\t\t<div className={classes.topContainer}>\r\n\t\t\t\t<IconButton onClick={handleClose} className={classes.closeBtn}>\r\n\t\t\t\t\t<ClearRoundedIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t{(data.length === 1 || type === \"apts\") && (\r\n\t\t\t\t\t<div className={classes.streetName}>\r\n\t\t\t\t\t\t{data.length === 1\r\n\t\t\t\t\t\t\t? getFullAddress(data[0].asset)\r\n\t\t\t\t\t\t\t: getShortAddress(data[0].asset)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{data.length > 1 && (\r\n\t\t\t\t\t<div className={classes.selectContainer}>\r\n\t\t\t\t\t\t<FormControl variant=\"outlined\" className={classes.textInput}>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvalue={selectedAsset}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\tclasses.menu,\r\n\t\t\t\t\t\t\t\t\ttype === \"apts\" ? classes.menu : classes.menuTitle\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\t\toutlined: classes.outlinedSelect,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{data.map((md, i) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={md.asset._id}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdirection: lang.code === \"he\" ? \"rtl\" : \"ltr\",\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{type === \"apts\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t? getUnit(md.asset)\r\n\t\t\t\t\t\t\t\t\t\t\t\t: type === \"cluster\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t? getFullAddress(md.asset)\r\n\t\t\t\t\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className={classes.pillContainer}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={handleClick(\"faults\")}\r\n\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\tclasses.openItems,\r\n\t\t\t\t\t\t\tclasses.openFaults,\r\n\t\t\t\t\t\t\tdetailsActive === \"faults\" && classes.tabActive\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<WarningRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t{`${faults.length} ${t(\"mapModule.openFaults\")}`}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={handleClick(\"tasks\")}\r\n\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\tclasses.openItems,\r\n\t\t\t\t\t\t\tclasses.openTasks,\r\n\t\t\t\t\t\t\tdetailsActive === \"tasks\" && classes.tabActive\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<AssignmentRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t{`${tasks.length} ${t(\"mapModule.todaysTasks\")}`}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{detailsActive === \"faults\" ? (\r\n\t\t\t\tfaults.length ? (\r\n\t\t\t\t\t<div className={classes.faultContainer}>\r\n\t\t\t\t\t\t{faults.map((mdf, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className={classes.miniFault}>\r\n\t\t\t\t\t\t\t\t\t<FaultMinified data={mdf} withLink={true} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className={classes.noFaults}>{t(\"mapModule.noFaults\")}</div>\r\n\t\t\t\t)\r\n\t\t\t) : tasks.length ? (\r\n\t\t\t\t<div className={classes.taskContainer}>\r\n\t\t\t\t\t{tasks.map((mdf, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className={classes.miniTask}>\r\n\t\t\t\t\t\t\t\t<TaskMinified data={mdf} asList={true} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className={classes.noFaults}>{t(\"mapModule.noTasks\")}</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\twidth: \"100vw\",\r\n\t\t},\r\n\t},\r\n\ttopContainer: {\r\n\t\tposition: \"relative\",\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: \"16px\",\r\n\t\tcolor: \"white\",\r\n\t\tdisplay: \"grid\",\r\n\t\tborderRadius: \"5px\",\r\n\t\tpadding: \"0\",\r\n\t\tmargin: \"60px 0px 10px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tminWidth: \"300px\",\r\n\t\talignItems: \"flex-end\",\r\n\t\tbackground: \"rgb(140, 19, 171)\",\r\n\t\tborderRadius: \"50px\",\r\n\t},\r\n\tstreetName: {\r\n\t\tfontSize: \"16px\",\r\n\t\tcolor: \"white\",\r\n\t\tdisplay: \"grid\",\r\n\t\tborderRadius: \"5px\",\r\n\t\tpadding: \"7px 40px 7px 20px\",\r\n\t\tmargin: \"60px 10px 5px\",\r\n\t\twidth: \"fit-content\",\r\n\t\talignItems: \"flex-end\",\r\n\t\tbackground: \"rgb(140, 19, 171)\",\r\n\t\tborderRadius: \"50px\",\r\n\t},\r\n\tminiFault: {\r\n\t\theight: \"150px\",\r\n\t\tpadding: \"10px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tbackground: \"rgba(0,0,0,0.0)\",\r\n\t\tmargin: \"10px\",\r\n\t\tborderRadius: \"5px\",\r\n\t},\r\n\tminiTask: {\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tbackground: \"rgba(0,0,0,0.0)\",\r\n\t\tmargin: \"10px\",\r\n\t\tborderRadius: \"5px\",\r\n\t},\r\n\tfaultContainer: {\r\n\t\tborderTop: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmarginTop: \"5px\",\r\n\t\theight: \"calc(100% - 140px)\",\r\n\t\toverflow: \"overlay\",\r\n\t},\r\n\ttaskContainer: {\r\n\t\tborderTop: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmarginTop: \"5px\",\r\n\t\theight: \"calc(100% - 140px)\",\r\n\t\toverflow: \"overlay\",\r\n\t},\r\n\tmenu: {\r\n\t\tcolor: \"white\",\r\n\t\theight: \"40px\",\r\n\t\tmargin: \"5px 50px 5px 10px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tborderColor: \"white\",\r\n\t\t},\r\n\t},\r\n\tmenuTitle: {\r\n\t\tcolor: \"white\",\r\n\t\tmargin: \"60px 50px 0px 10px\",\r\n\t\theight: \"33px\",\r\n\t\tminWidth: \"200px\",\r\n\t\tbackground: \"rgb(140, 19, 171)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tfontSize: \"15px\",\r\n\t\tpadding: \"0\",\r\n\t\tlineHeight: 2,\r\n\t\t\"&:hover\": {\r\n\t\t\tborderColor: \"white\",\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmaxHeight: \"200px\",\r\n\t\toverflowY: \"auto\",\r\n\t\tmarginTop: \"60px\",\r\n\t\tmarginRight: \"7px\",\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tselectContainer: {\r\n\t\tpadding: \"0px 0\",\r\n\t},\r\n\ttextInput: {\r\n\t\tpadding: \"0px 0\",\r\n\t\tbackground: \"rgba(0,0,0,0.0)\",\r\n\t\tfontSize: \"16px\",\r\n\t\twidth: \"100%\",\r\n\t\t\"& input\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\tpaddingLeft: \"20px\",\r\n\t\t},\r\n\t\t\"& label\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\tpaddingLeft: \"5px\",\r\n\t\t},\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderColor: \"rgba(255,255,255,0.6)\",\r\n\t\t\tborderRadius: \"42px\",\r\n\t\t},\r\n\t},\r\n\tcloseBtn: {\r\n\t\tcolor: \"white\",\r\n\t\tmargin: \"6px\",\r\n\t\tposition: \"absolute\",\r\n\t\tright: 0,\r\n\t\tzIndex: 3,\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\t},\r\n\t},\r\n\tnoFaults: {\r\n\t\tcolor: \"white\",\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\tmargin: \"10px\",\r\n\t\tfontSize: \"14px\",\r\n\t\twidth: \"fit-content\",\r\n\t},\r\n\topenItems: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"5px 20px 5px 10px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tmargin: \"0px 10px 5px 0px\",\r\n\t\tfontSize: \"13px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\topacity: 0.7,\r\n\t\tcursor: \"pointer\",\r\n\t\t\"&:hover\": {\r\n\t\t\topacity: 1,\r\n\t\t\tboxShadow: \"inset rgba(0,0,0,0.4) 0 0 3px 1px\",\r\n\t\t},\r\n\t},\r\n\topenFaults: {\r\n\t\tbackground: \"#F03930\",\r\n\t},\r\n\topenTasks: {\r\n\t\tbackground: \"#6540EB\",\r\n\t},\r\n\ticon: {\r\n\t\tmarginRight: \"7px\",\r\n\t\tfontSize: \"18px\",\r\n\t\tpaddingBottom: \"2px\",\r\n\t},\r\n\tpillContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tpadding: \"5px 10px\",\r\n\t},\r\n\ttabActive: {\r\n\t\tborder: \"1px solid white\",\r\n\t\topacity: 1,\r\n\t},\r\n\toutlinedSelect: {\r\n\t\tpadding: \"10px\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\Map.js",["993","994","995","996"],"import { makeStyles } from '@material-ui/core';\r\nimport {\r\n\tGoogleMap, Marker, MarkerClusterer, useJsApiLoader\r\n} from '@react-google-maps/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { addQueryParam } from '../../../api/genericApi';\r\nimport { getMapData } from '../../../api/mapApi';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\n\r\nconst containerStyle = {\r\n\twidth: '100%',\r\n\theight: '100%',\r\n\tborderRadius: '5px',\r\n};\r\n\r\nexport const Map = ({ setData }) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst { t } = useTranslation();\r\n\tconst [map, setMap] = useState(null);\r\n\tconst [mapData, setMapData] = useState({});\r\n\tconst [markers, setMarkers] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (mapData.assets) {\r\n\t\t\tsetMarkers(mapData.assets);\r\n\t\t}\r\n\t}, [mapData]);\r\n\r\n\tconst { isLoaded } = useJsApiLoader({\r\n\t\tid: 'google-map-script',\r\n\t\tgoogleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\r\n\t\tlanguage: 'he',\r\n\t\tregion: 'IL',\r\n\t});\r\n\r\n\tconst onLoad = React.useCallback(function callback(map) {\r\n\t\tsetMap(map);\r\n\t\tfetchMapData();\r\n\t}, []);\r\n\r\n\tconst onDragEnd = () => {\r\n\t\tconst lat = map.getCenter().lat();\r\n\t\tconst lng = map.getCenter().lng();\r\n\t\thistory.push({\r\n\t\t\tpath: location.pathname,\r\n\t\t\tsearch: addQueryParam(location.search, [\r\n\t\t\t\t{ name: 'lat', value: lat },\r\n\t\t\t\t{ name: 'lng', value: lng },\r\n\t\t\t]),\r\n\t\t});\r\n\t\tlocalStorage.setItem('wb_map_pref', JSON.stringify({ lat, lng }));\r\n\t};\r\n\r\n\tconst fetchMapData = async () => {\r\n\t\tconst data = await getMapData();\r\n\t\tsetMapData(data);\r\n\t};\r\n\r\n\tconst handleMarkerClick = (asset, index) => (event) => {\r\n\t\tlet fs = mapData.faults.filter((f) => f.asset._id == asset._id);\r\n\t\tsetData([{ asset, faults: fs }]);\r\n\t};\r\n\r\n\tconst handleClusterClick = (cluster) => {\r\n\t\tconst markers = cluster.getMarkers();\r\n\t\tlet md = [];\r\n\t\tmarkers.forEach(m => {\r\n\t\t\tlet fs = mapData.faults.filter((f) => f.asset._id == m.data._id);\r\n\t\t\tmd.push({asset: m.data, faults: fs});\r\n\t\t});\r\n\t\tsetData(md);\r\n\t}\r\n\r\n\treturn isLoaded ? (\r\n\t\t<GoogleMap\r\n\t\t\tmapContainerStyle={containerStyle}\r\n\t\t\tzoom={15}\r\n\t\t\tonLoad={onLoad}\r\n\t\t\tonDragEnd={onDragEnd}\r\n\t\t\tcenter={{ lat: Number(query.lat), lng: Number(query.lng) }}\r\n\t\t\toptions={{\r\n\t\t\t\tmaxZoom: 18,\r\n\t\t\t\tfullscreenControl: false,\r\n\t\t\t\tstreetViewControl: false,\r\n\t\t\t\tmapTypeControl: false,\r\n\t\t\t\tgestureHandling: 'greedy',\r\n\t\t\t\tstyles: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfeatureType: 'poi',\r\n\t\t\t\t\t\tstylers: [{ visibility: 'off' }],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfeatureType: 'transit',\r\n\t\t\t\t\t\telementType: 'labels.icon',\r\n\t\t\t\t\t\tstylers: [{ visibility: 'off' }],\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<MarkerClusterer\r\n\t\t\t\tonClick={handleClusterClick}\r\n\t\t\t\tgridSize={30}\r\n\t\t\t\tenableRetinaIcons\r\n\t\t\t\tclusterClass={classes.mcLabel}\r\n\t\t\t\tzoomOnClick={false}\r\n\t\t\t\t\r\n\t\t\t\tstyles={[\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\ttextColor: 'white',\r\n\t\t\t\t\t\tfontWeight: '500',\r\n\t\t\t\t\t\ttextSize: 12,\r\n\t\t\t\t\t\twidth: 20,\r\n\t\t\t\t\t\theight: 20,\r\n\t\t\t\t\t\tanchorText: [0,0],\r\n\t\t\t\t\t\turl: 'https://img.icons8.com/nolan/50/company.png',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t{(clusterer) => {\r\n\t\t\t\t\treturn markers.map((marker, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Marker\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\t\t\tdata: marker\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tlabel={{\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\ttext: marker.faultCount.toString(),\r\n\t\t\t\t\t\t\t\t\tclassName: classes.markerLabel,\r\n\t\t\t\t\t\t\t\t\tcolor: 'white',\r\n\t\t\t\t\t\t\t\t\tfontSize: '11px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\ticon={\r\n\t\t\t\t\t\t\t\t\t'https://img.icons8.com/nolan/50/marker.png'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tposition={{\r\n\t\t\t\t\t\t\t\t\tlat: marker.coordinates.lat,\r\n\t\t\t\t\t\t\t\t\tlng: marker.coordinates.lng,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClick={handleMarkerClick(marker, i)}\r\n\t\t\t\t\t\t\t\tclusterer={clusterer}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}}\r\n\t\t\t</MarkerClusterer>\r\n\t\t</GoogleMap>\r\n\t) : null;\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmapFull: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t\tborderRadius: '10px',\r\n\t\t'&div': {\r\n\t\t\toutline: 'none !important',\r\n\t\t},\r\n\t},\r\n\tmarkerLabel: {\r\n\t\tbackground: 'red',\r\n\t\tpadding: '5px 6px',\r\n\t\tborderRadius: '50px',\r\n\t\tlineHeight: '0.9',\r\n\t\tposition: 'absolute',\r\n\t\tright: '4px',\r\n\t\ttop: '20px',\r\n\t},\r\n\tfaultInfo: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\tborderRadius: '5px',\r\n\t\twidth: '300px',\r\n\t\tpadding: '10px',\r\n\t\tmaxHeight: '400px',\r\n\t\toverflowY: 'overlay',\r\n\t},\r\n\tfaultContainer: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\tmargin: '5px 0',\r\n\t\tpadding: '10px',\r\n\t\tborderRadius: '5px',\r\n\t},\r\n\taddress: {\r\n\t\tcolor: 'white',\r\n\t\tbackground: 'black',\r\n\t\tfontSize: '18px',\r\n\t\tpadding: '15px',\r\n\t\tborderRadius: '5px',\r\n\t},\r\n\tcardPagination: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t},\r\n\tarrow: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tpaginationMiddle: {\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t\tfontSize: '14px',\r\n\t},\r\n\t'@global': {\r\n\t\t'*': {\r\n\t\t\toutline: 'none',\r\n\t\t},\r\n\t},\r\n\tmcLabel: {\r\n\t\tbackground: 'red',\r\n\t\tborderRadius: '50px',\r\n\t\topacity: '0.8'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\UpsertDocument.js",["997","998","999","1000","1001","1002"],"import {\r\n\tAvatar,\r\n\tButton,\r\n\tChip,\r\n\tFormHelperText,\r\n\tGrid,\r\n\tmakeStyles,\r\n\tMenuItem,\r\n\tSelect,\r\n\tTextField,\r\n\tuseMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getDocument } from \"../../../api/documentsApi\";\r\nimport { getFaults } from \"../../../api/faultsApi\";\r\nimport { getFullName } from \"../../../api/genericApi\";\r\nimport {\r\n\tcreateSystemMenuOptions,\r\n\tgetAssetsSuggestions,\r\n\tgetSystemsByAsset,\r\n} from \"../../../api/systemsApi\";\r\nimport { getTasks } from \"../../../api/tasksApi\";\r\nimport { createUserOptions } from \"../../../api/userApi\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport { ModalContainer } from \"../../reuseables/ModalContainer\";\r\nimport { UserItem } from \"../../user/UserItem\";\r\n\r\nexport const UpsertDocument = ({\r\n\thandleClose,\r\n\thandleSave,\r\n\thandleUpdate,\r\n\tdocumentId,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down(\"md\"));\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [errors, setErrors] = useState([]);\r\n\tconst [assets, setAssets] = useState([]);\r\n\tconst [systems, setSystems] = useState([]);\r\n\tconst [tasks, setTasks] = useState([]);\r\n\tconst [faults, setFaults] = useState([]);\r\n\tconst [userList, setUserList] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [mode, setMode] = useState(documentId ? \"update\" : \"create\");\r\n\tconst [details, setDetails] = useState({\r\n\t\ttenant: auth.user.tenant,\r\n\t\tdescription: \"\",\r\n\t\tasset: \"\",\r\n\t\tsystem: \"\",\r\n\t\tfault: \"\",\r\n\t\ttask: \"\",\r\n\t\tuser: \"\",\r\n\t\tcreatedBy: auth.user._id,\r\n\t\tfile: null,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tprepareData();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!details.asset) {\r\n\t\t\tsetTasks([]);\r\n\t\t\tsetFaults([]);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tPromise.all([\r\n\t\t\tgetTasks(auth.user.tenant, {\r\n\t\t\t\tasset: details.asset,\r\n\t\t\t\tsystem: details.system || null,\r\n\t\t\t}),\r\n\t\t\tgetFaults({\r\n\t\t\t\tasset: details.asset,\r\n\t\t\t\tsystem: details.system || null,\r\n\t\t\t}),\r\n\t\t]).then((res) => {\r\n\t\t\tlet tasksOptions = [];\r\n\t\t\tlet faultsOptions = [];\r\n\t\t\tres[0].forEach((task) => {\r\n\t\t\t\ttasksOptions.push({\r\n\t\t\t\t\ttext: `${task.taskId} | ${task.title}`,\r\n\t\t\t\t\tvalue: task._id,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tres[1].forEach((fault) => {\r\n\t\t\t\tfaultsOptions.push({\r\n\t\t\t\t\ttext: `${fault.faultId} | ${fault.title}`,\r\n\t\t\t\t\tvalue: fault._id,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tsetTasks(tasksOptions);\r\n\t\t\tsetFaults(faultsOptions);\r\n\t\t});\r\n\t}, [details.asset, details.system]);\r\n\r\n\tconst prepareData = async () => {\r\n\t\tconst [userOptions, assetSuggestions] = await Promise.all([\r\n\t\t\tcreateUserOptions(),\r\n\t\t\tgetAssetsSuggestions(),\r\n\t\t]);\r\n\t\tsetUserList(userOptions);\r\n\t\tsetAssets(assetSuggestions);\r\n\t\tif (!documentId) {\r\n\t\t\tsetIsLoading(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst data = await getDocument(documentId);\r\n\t\tawait loadSystemOptions(data.asset);\r\n\t\tif (!data) return;\r\n\t\tsetDetails({ ...data, file: null });\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n\tconst validateFields = () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet errList = [];\r\n\t\t\tif (!details.description) {\r\n\t\t\t\terrList.push({ field: \"description\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (!details.file && mode === \"create\") {\r\n\t\t\t\terrList.push({ field: \"file\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (errList.length) {\r\n\t\t\t\tsetErrors(errList);\r\n\t\t\t\tresolve(false);\r\n\t\t\t}\r\n\t\t\tresolve(true);\r\n\t\t});\r\n\t};\r\n\r\n\tconst loadSystemOptions = async (assetId) => {\r\n\t\tconst systems = await getSystemsByAsset(assetId);\r\n\t\tconst systemOptions = await createSystemMenuOptions(systems);\r\n\t\tsetSystems(systemOptions);\r\n\t};\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tvalidateFields().then((res) => {\r\n\t\t\tif (!res) return;\r\n\t\t\tif (mode === \"create\") {\r\n\t\t\t\thandleSave(details);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\thandleUpdate(details);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (field) => async (event) => {\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\t[field]: event.target.value,\r\n\t\t});\r\n\t\tif (field === \"asset\") {\r\n\t\t\tif (event.target.value) {\r\n\t\t\t\tawait loadSystemOptions(event.target.value);\r\n\t\t\t} else {\r\n\t\t\t\tsetDetails({\r\n\t\t\t\t\t...details,\r\n\t\t\t\t\ttask: \"\",\r\n\t\t\t\t\tfault: \"\",\r\n\t\t\t\t\tsystem: \"\",\r\n\t\t\t\t\tasset: \"\",\r\n\t\t\t\t});\r\n\t\t\t\tsetSystems([]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (errors.length) {\r\n\t\t\tsetErrors(errors.filter((err) => err.field !== field));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleFileUpload = (event) => {\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\tfile: event.target.files[0],\r\n\t\t});\r\n\t\tif (errors.length) {\r\n\t\t\tsetErrors(errors.filter((err) => err.field !== \"file\"));\r\n\t\t}\r\n\t};\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress initial={true} />\r\n\t) : (\r\n\t\t<ModalContainer\r\n\t\t\thandleClose={handleClose}\r\n\t\t\ttitle={\r\n\t\t\t\tmode === \"create\"\r\n\t\t\t\t\t? t(\"documentsModule.upsert.createDocument\")\r\n\t\t\t\t\t: t(\"documentsModule.upsert.updateDocumentDetails\")\r\n\t\t\t}\r\n\t\t\thandleConfirm={handleConfirm}\r\n\t\t>\r\n\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"documentsModule.upsert.generalDetails\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `description`).length > 0\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\tlabel={t(`documentsModule.upsert.description`)}\r\n\t\t\t\t\t\t\t\tvalue={details.description}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(\"description\")}\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `description`).length > 0\r\n\t\t\t\t\t\t\t\t\t\t? t(\"errors.isRequired\")\r\n\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `description`).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t? \"rgb(244, 67, 54)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: null,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={12}\r\n\t\t\t\tsm={6}\r\n\t\t\t\tmd={6}\r\n\t\t\t\tlg={6}\r\n\t\t\t\txl={7}\r\n\t\t\t\tclassName={classes.section}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"documentsModule.upsert.asset\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `asset`).length > 0}\r\n\t\t\t\t\t\t\t\tvalue={details.asset}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(`asset`)}\r\n\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{assets.map((asset, i) => (\r\n\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tvalue={asset.value}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tdirection: lang.dir,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{asset.text}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t{errors.filter((e) => e.field === \"asset\").length > 0 && (\r\n\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#f44336\",\r\n\t\t\t\t\t\t\t\t\t\tmarginRight: \"15px\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{t(\"errors.isRequired\")}\r\n\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={12}\r\n\t\t\t\tsm={6}\r\n\t\t\t\tmd={4}\r\n\t\t\t\tlg={4}\r\n\t\t\t\txl={4}\r\n\t\t\t\tclassName={classes.section}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"documentsModule.upsert.system\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `system`).length > 0}\r\n\t\t\t\t\t\t\t\tvalue={details.system}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(`system`)}\r\n\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{systems.map((system, i) => (\r\n\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tvalue={system.value}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tdirection: lang.dir,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{system.text}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t{errors.filter((e) => e.field === \"asset\").length > 0 && (\r\n\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#f44336\",\r\n\t\t\t\t\t\t\t\t\t\tmarginRight: \"15px\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{t(\"errors.isRequired\")}\r\n\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t{Boolean(tasks.length) && (\r\n\t\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t{t(\"documentsModule.upsert.task\")}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `task`).length > 0}\r\n\t\t\t\t\t\t\t\t\tvalue={details.task}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange(`task`)}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{tasks.map((task, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={task.value}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdirection: lang.dir,\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{task.text}\r\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t{errors.filter((e) => e.field === \"task\").length > 0 && (\r\n\t\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"#f44336\",\r\n\t\t\t\t\t\t\t\t\t\t\tmarginRight: \"15px\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"errors.isRequired\")}\r\n\t\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{Boolean(faults.length) && (\r\n\t\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t{t(\"documentsModule.upsert.fault\")}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `fault`).length > 0}\r\n\t\t\t\t\t\t\t\t\tvalue={details.fault}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange(`fault`)}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{faults.map((fault, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={fault.value}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdirection: lang.dir,\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{fault.text}\r\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t{errors.filter((e) => e.field === \"fault\").length > 0 && (\r\n\t\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"#f44336\",\r\n\t\t\t\t\t\t\t\t\t\t\tmarginRight: \"15px\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"errors.isRequired\")}\r\n\t\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={12}\r\n\t\t\t\tsm={6}\r\n\t\t\t\tmd={6}\r\n\t\t\t\tlg={4}\r\n\t\t\t\txl={4}\r\n\t\t\t\tclassName={classes.section}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"documentsModule.upsert.user\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `user`).length > 0}\r\n\t\t\t\t\t\t\tvalue={details.owner}\r\n\t\t\t\t\t\t\tonChange={handleChange(`user`)}\r\n\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\trenderValue={(selected) => {\r\n\t\t\t\t\t\t\t\tlet user = userList.find((f) => f._id === selected);\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\t\t\tavatar={\r\n\t\t\t\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: \"40px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"40px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={user.avatar}\r\n\t\t\t\t\t\t\t\t\t\t\t\talt={getFullName(user)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tlabel={getFullName(user)}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{userList.map((user, i) => (\r\n\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\tvalue={user.value}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tdirection: lang.dir,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.userCont}>\r\n\t\t\t\t\t\t\t\t\t\t<UserItem user={user} avatarSize={40} size={13} showName />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t{mode === \"create\" && (\r\n\t\t\t\t<Grid item xs={12} md={6} className={classes.section}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t{t(\"documentsModule.upsert.document\")}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcomponent={\"label\"}\r\n\t\t\t\t\t\t\t\t\tvariant={\"contained\"}\r\n\t\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\t\tclasses.uploadBtn,\r\n\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `file`).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t? classes.fileError\r\n\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{t(\"documentsModule.upsert.uploadDocument\")}\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\taccept=\".doc,.docx,.pdf\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleFileUpload}\r\n\t\t\t\t\t\t\t\t\t\thidden\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<span className={classes.filesUploaded}>\r\n\t\t\t\t\t\t\t\t\t{details.file\r\n\t\t\t\t\t\t\t\t\t\t? `1 ${t(\"documentsModule.upsert.fileSelected\")}`\r\n\t\t\t\t\t\t\t\t\t\t: `${t(\"documentsModule.upsert.noFileSelected\")}`}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t</ModalContainer>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ticonBtn: {\r\n\t\tmargin: \"10px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"20px\",\r\n\t},\r\n\tsection: {\r\n\t\tmargin: \"10px 5px\",\r\n\t},\r\n\tsectionTitle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"7px 20px\",\r\n\t\tmarginLeft: \"25px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tborderRadius: \"8px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tmarginLeft: \"15px\",\r\n\t\t},\r\n\t},\r\n\tfields: {\r\n\t\tpadding: \"10px 20px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px\",\r\n\t\t},\r\n\t},\r\n\ttextContainer: {\r\n\t\tpadding: \"5px\",\r\n\t},\r\n\ttextField: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tselectInput: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t\theight: \"200px\",\r\n\t\toverflowY: \"auto\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmarginRight: \"7px\",\r\n\t\tmarginLeft: \"-5px\",\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"100%\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\t},\r\n\t},\r\n\tcontrols: {\r\n\t\tborderTop: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"10px 0\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t},\r\n\tcontrol: {\r\n\t\twidth: \"30%\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\tfontSize: \"16px\",\r\n\t\tmargin: \"5px\",\r\n\t\tpadding: \"5px 30px\",\r\n\t\tborderRadius: \"30px\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tsave: {\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"black\",\r\n\t\t},\r\n\t\t\"&:disabled\": {\r\n\t\t\tcolor: \"rgba(255,255,255,0.3)\",\r\n\t\t},\r\n\t},\r\n\tcancel: {\r\n\t\t\"&:hover\": {\r\n\t\t\tboxShadow: \"inset rgba(255,255,255,0.3) 0 0 2px 1px\",\r\n\t\t},\r\n\t},\r\n\tchips: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexWrap: \"wrap\",\r\n\t},\r\n\tchip: {\r\n\t\theight: \"50px\",\r\n\t\tfontSize: \"14px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tcolor: \"white\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\t\tboxShadow: \"inset lightgrey 0px 0px 1px 1px\",\r\n\t\t},\r\n\t},\r\n\tuserCont: {\r\n\t\theight: \"fit-content\",\r\n\t\tpadding: 0,\r\n\t\tmargin: 0,\r\n\t\tmargin: \"5px 0\",\r\n\t},\r\n\tchipsCont: {\r\n\t\theight: \"fit-content\",\r\n\t\tpadding: 0,\r\n\t\tmargin: \"3px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\tboxShadow: \"inset rgba(0,0,0,0.5) 0px 0px 2px 1px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjutifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tremoveIcon: {\r\n\t\tcolor: \"rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"5px\",\r\n\t\tmarginRight: \"5px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\t\tcolor: \"white\",\r\n\t\t},\r\n\t},\r\n\tradioGroup: {\r\n\t\tcolor: \"white\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"row\",\r\n\t\talignitems: \"center\",\r\n\t},\r\n\tradioBtn: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"15px\",\r\n\t},\r\n\tfilesUploaded: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"0 15px\",\r\n\t},\r\n\tuploadBtn: {\r\n\t\tmargin: \"9px 0\",\r\n\t\tbackground: \"rgba(0,0,0,0.1)\",\r\n\t\tcolor: \"white\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\t\"&:hover\": {\r\n\t\t\tboxShadow: \"inset white 0 0 2px 1px\",\r\n\t\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t},\r\n\t},\r\n\timageRow: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tpadding: \"10px 5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\tpreviewImage: {\r\n\t\theight: \"50px\",\r\n\t\twidth: \"100px\",\r\n\t},\r\n\tremoveImageBtn: {\r\n\t\tcolor: \"rgba(255,255,255,0.5)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"6px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\tborderColor: \"white\",\r\n\t\t},\r\n\t},\r\n\tuploadedImagesTitle: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px 5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\tswitchLabel: {\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tswitchBase: {\r\n\t\tcolor: \"rgba(255,255,255,0.4)\",\r\n\t\t\"&$checked\": {\r\n\t\t\tcolor: \"rgba(255,255,255,1)\",\r\n\t\t},\r\n\t\t\"&$checked + $track\": {\r\n\t\t\tbackgroundColor: \"rgba(255,255,255,0.8)\",\r\n\t\t},\r\n\t},\r\n\tchecked: {},\r\n\ttrack: {\r\n\t\tbackgroundColor: \"rgba(255,255,255,0.4)\",\r\n\t},\r\n\tnotificationsInstructions: {\r\n\t\tcolor: \"rgba(255,255,255,0.6)\",\r\n\t\tfontSize: \"12px\",\r\n\t\tmarginBottom: \"10px\",\r\n\t},\r\n\tfileError: {\r\n\t\tborderColor: \"rgb(244, 67, 54)\",\r\n\t\tcolor: \"rgb(244, 67, 54)\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MapControls.js",["1003","1004","1005","1006","1007","1008","1009","1010","1011"],"import {\r\n\tmakeStyles,\r\n\tTooltip,\r\n\tIconButton,\r\n\tGrid,\r\n\tuseMediaQuery,\r\n\tClickAwayListener,\r\n} from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport BusinessRoundedIcon from '@material-ui/icons/BusinessRounded';\r\nimport AssignmentRoundedIcon from '@material-ui/icons/AssignmentRounded';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\nimport { getAssetsSuggestions } from '../../../api/systemsApi';\r\nimport { useLocation } from 'react-router';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { getAsset, getFullAddress } from '../../../api/assetsApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport { FilterBySelect } from '../../reuseables/FilterBySelect';\r\nimport { getFaultsStatusListSuggestions } from '../../../api/faultsApi';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport FilterListRoundedIcon from '@material-ui/icons/FilterListRounded';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\n\r\nexport const MapControls = ({}) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst location = useLocation();\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst query = useQuery(location.search);\r\n\tconst [reloadedValue, setReloadedValue] = useState(null);\r\n\tconst [expanded, setExpanded] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (query.asset) {\r\n\t\t\thandleReloaded(query.asset).then((data) => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetReloadedValue(data);\r\n\t\t\t\t} else {\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetReloadedValue({\r\n\t\t\t\tlabel: '',\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t}\r\n\t}, [location.search]);\r\n\r\n\tconst handleReloaded = async (assetId) => {\r\n\t\tconst res = await getAsset(assetId, false);\r\n\t\tif (res) {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: getFullAddress(res),\r\n\t\t\t\tvalue: res._id,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClickFilter = () => {\r\n\t\tif (expanded) {\r\n\t\t\tsetExpanded(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetExpanded(true);\r\n\t};\r\n\r\n\treturn matches && !expanded ? (\r\n\t\t<IconButton className={classes.filterBtn} onClick={handleClickFilter}>\r\n\t\t\t<FilterListRoundedIcon className={classes.icon} />\r\n\t\t</IconButton>\r\n\t) : (\r\n\t\t<MobileWrappar handleClickFilter={handleClickFilter}>\r\n\t\t\t<Grid container className={classes.container}>\r\n\t\t\t\t{matches && expanded && (\r\n\t\t\t\t\t<Grid item xs={12} className={classes.controls}>\r\n\t\t\t\t\t\t<div className={classes.title}>\r\n\t\t\t\t\t\t\t{t(\"mapModule.filters\")}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<IconButton onClick={handleClickFilter} className={classes.expandedBtn}>\r\n\t\t\t\t\t\t\t<ClearRoundedIcon className={classes.icon}/>\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t\t{reloadedValue && (\r\n\t\t\t\t\t<Grid item className={classes.filterContainer}>\r\n\t\t\t\t\t\t<SearchBoxSelect\r\n\t\t\t\t\t\t\tsuggestionsFunc={getAssetsSuggestions}\r\n\t\t\t\t\t\t\tplaceholder={t('filters.filterByAsset')}\r\n\t\t\t\t\t\t\tfilterField={'asset'}\r\n\t\t\t\t\t\t\treloadedLabel={reloadedValue.label}\r\n\t\t\t\t\t\t\treloadedValue={reloadedValue.value}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t\t<Grid item className={classes.filterContainer}>\r\n\t\t\t\t\t<FilterBySelect\r\n\t\t\t\t\t\toptionsFunc={createUserOptions}\r\n\t\t\t\t\t\tplaceholder={t('filters.filterByUser')}\r\n\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t<PersonRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfilterField={'owner'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{/* <Grid item classNam={classes.filterContainer}>\r\n\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\toptionsFunc={getFaultsStatusListSuggestions}\r\n\t\t\t\t\t\tplaceholder={t('filters.filterByStatus')}\r\n\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t<DoubleArrowIcon className={classes.icon} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfilterField={'status'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid> */}\r\n\t\t\t</Grid>\r\n\t\t</MobileWrappar>\r\n\t);\r\n};\r\n\r\nconst MobileWrappar = ({ children, handleClickFilter }) => {\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.up('md'));\r\n\r\n\treturn matches ? (\r\n\t\t<div>{children}</div>\r\n\t) : (\r\n\t\t<ClickAwayListener onClickAway={handleClickFilter}>\r\n\t\t\t{children}\r\n\t\t</ClickAwayListener>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\twidth: 'fit-content',\r\n\t\theight: 'fit-content',\r\n\t\tdisplay: 'flex',\r\n\t\tbackground: 'rgba(0,0,0,0.2)',\r\n\t\tborderRadius: '50px',\r\n\t\tmargin: '10px',\r\n\t\tbackdropFilter: 'blur(5px)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tposition: 'relative',\r\n\t\tboxShadow: 'rgba(0,0,0,0.4) 0 0 5px 2px',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tborderRadius: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '10px',\r\n\t\t\tborder: 0\r\n\t\t},\r\n\t},\r\n\tbtn: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tpadding: '8px',\r\n\t\tmargin: '5px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'black',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '24px',\r\n\t\tmarginLeft: '4px',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '6px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tcontrols: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpaddingBottom: '10px',\r\n\t\tmarginBottom: '10px'\r\n\t},\r\n\tfilterContainer: {\r\n\t\tjustifySelf: 'center'\r\n\t},\r\n\texpandedBtn: {\r\n\t\tpadding: '2px'\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '20px',\r\n\t\tpadding: '0 10px'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViews.js",["1012","1013","1014"],"import { Grid, makeStyles } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { getFaults } from \"../../../api/faultsApi\";\r\nimport { updateQueryParams } from \"../../../api/genericApi\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { FaultsContext } from \"../../../context/FaultsContext\";\r\nimport { useQuery } from \"../../reuseables/customHooks/useQuery\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport { NoDataFound } from \"../../reuseables/NoDataFound\";\r\nimport { FaultBlockView } from \"./FaultBlockView\";\r\nimport { FaultListView } from \"./FaultListView\";\r\nimport { FaultsControls } from \"./FaultsControls\";\r\n\r\nexport const FaultViews = () => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst classes = useStyles();\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { t } = useTranslation();\r\n\tconst { faults, setFaults } = useContext(FaultsContext);\r\n\tconst [viewType, setViewType] = useState(query[\"viewType\"] || \"list\");\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isLoading) return;\r\n\t\tgetFaults(query)\r\n\t\t\t.then((data) => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetFaults(data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t});\r\n\t}, [isLoading]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsLoading(true);\r\n\t}, [location.search]);\r\n\r\n\tuseEffect(() => {\r\n\t\thistory.push({\r\n\t\t\tpath: location.pathname,\r\n\t\t\tsearch: updateQueryParams(\r\n\t\t\t\tlocation.search,\r\n\t\t\t\t[{ name: \"viewType\", value: viewType }],\r\n\t\t\t\t[\"status\"]\r\n\t\t\t),\r\n\t\t});\r\n\t}, [viewType]);\r\n\r\n\treturn (\r\n\t\t<Grid container justify={\"center\"}>\r\n\t\t\t<Grid xs={12} className={classes.moduleContainer}>\r\n\t\t\t\t<div className={classes.pageModule}>{t(\"assetsModule.faults\")}</div>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<FaultsControls viewType={viewType} setViewType={setViewType} />\r\n\t\t\t</Grid>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<LoadingProgress />\r\n\t\t\t) : (\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tclassName={classes.faultPresent}\r\n\t\t\t\t\tstyle={{ height: \"auto\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{faults.length ? (\r\n\t\t\t\t\t\tviewType === \"list\" ? (\r\n\t\t\t\t\t\t\t<FaultListView faults={faults} />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<FaultBlockView faults={faults} />\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<NoDataFound />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmoduleContainer: {\r\n\t\tposition: \"sticky\",\r\n\t\ttop: 0,\r\n\t\tzIndex: 2,\r\n\t},\r\n\tpageModule: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px 40px\",\r\n\t\tfontSize: \"16px\",\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tboxShadow: \"0 0px 2px 1px rgba(255,255,255,0.3)\",\r\n\t\tmargin: \"0px auto 5px\",\r\n\t\twidth: \"30%\",\r\n\t\ttextAlign: \"center\",\r\n\t\tborderRadius: \"0 0 25px 25px\",\r\n\t\tlineHeight: \"1\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tbackground: \"black\",\r\n\t\t\twidth: \"100vw\",\r\n\t\t\tpadding: \"20px 0\",\r\n\t\t\tborderRadius: 0,\r\n\t\t\tmargin: 0,\r\n\t\t},\r\n\t},\r\n\tfaultPresent: {\r\n\t\tmargin: \"20px 10px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tmargin: \"20px 0\",\r\n\t\t},\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\DocumentsControls.js",["1015","1016","1017"],"import {\r\n    Button,\r\n    Slide,\r\n    Grid,\r\n    makeStyles,\r\n    useMediaQuery\r\n} from '@material-ui/core';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { getAsset, getFullAddress } from '../../../api/assetsApi';\r\nimport {\r\n    getFaultOptionsByAssetOrSystem\r\n} from '../../../api/faultsApi';\r\nimport { removeQueryParam } from '../../../api/genericApi';\r\nimport {\r\n    getAssetsSuggestions,\r\n    getSystemsByAssetOptions\r\n} from '../../../api/systemsApi';\r\nimport { getTaskOptionsByAssetOrSystem } from '../../../api/tasksApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport DescriptionRoundedIcon from '@material-ui/icons/DescriptionRounded';\r\nimport BlurOnRoundedIcon from '@material-ui/icons/BlurOnRounded';\r\n\r\n\r\nexport const DocumentsControls = ({}) => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [reloadedValue, setReloadedValue] = useState(null);\r\n\tconst [collapsed, setCollapsed] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (query.asset) {\r\n\t\t\thandleReloaded(query.asset).then((data) => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetReloadedValue(data);\r\n\t\t\t\t}\r\n            });\r\n            \r\n\t\t} else {\r\n\t\t\tsetReloadedValue({\r\n\t\t\t\tlabel: '',\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\thistory.push({\r\n\t\t\t\tpath: location.pathname,\r\n\t\t\t\tsearch: removeQueryParam(location.search, 'system'),\r\n\t\t\t});\r\n\t\t}\r\n\t}, [location.search]);\r\n\r\n\tconst handleReloaded = async (assetId) => {\r\n\t\tconst res = await getAsset(assetId, false);\r\n\t\tif (res) {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: getFullAddress(res),\r\n\t\t\t\tvalue: res._id,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleCollapse = () => {\r\n\t\tif (collapsed) {\r\n\t\t\tsetCollapsed(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetCollapsed(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{downSm && (\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName={classes.sortandfilter}\r\n\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t<FilterListIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tendIcon={\r\n\t\t\t\t\t\t\t\tcollapsed ? (\r\n\t\t\t\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<ExpandMoreRoundedIcon />\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={toggleCollapse}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{t(\r\n\t\t\t\t\t\t\t\t`filters.${\r\n\t\t\t\t\t\t\t\t\tcollapsed ? 'hide' : 'show'\r\n\t\t\t\t\t\t\t\t}Filters`\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{ \r\n\t\t\t\r\n\t\t\t(!downSm || collapsed) &&\r\n\t\t\t<Slide in={true} direction={'up'} timeout={downSm ? 500 : 0}>\r\n\t\t\t\t<Grid container justify=\"center\" className={classes.filtersContainer}>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t{reloadedValue && (\r\n\t\t\t\t\t\t\t<SearchBoxSelect\r\n\t\t\t\t\t\t\t\tsuggestionsFunc={getAssetsSuggestions}\r\n\t\t\t\t\t\t\t\tplaceholder={t('filters.filterByAsset')}\r\n\t\t\t\t\t\t\t\tfilterField={'asset'}\r\n\t\t\t\t\t\t\t\treloadedLabel={reloadedValue.label}\r\n\t\t\t\t\t\t\t\treloadedValue={reloadedValue.value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{query.asset && (\r\n\t\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\t\toptionsFunc={() =>\r\n\t\t\t\t\t\t\t\t\tgetSystemsByAssetOptions(query.asset)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder={t('filters.filterBySystemName')}\r\n\t\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t\t<BlurOnRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfilterField={'system'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={createUserOptions}\r\n\t\t\t\t\t\t\tplaceholder={t('filters.filterByUser')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<PersonRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'user'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={() =>\r\n\t\t\t\t\t\t\t\tgetFaultOptionsByAssetOrSystem(\r\n\t\t\t\t\t\t\t\t\tquery.asset,\r\n\t\t\t\t\t\t\t\t\tquery.system\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tplaceholder={t('filters.filterByFault')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<WarningRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'fault'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={() =>\r\n\t\t\t\t\t\t\t\tgetTaskOptionsByAssetOrSystem(\r\n\t\t\t\t\t\t\t\t\tquery.asset,\r\n\t\t\t\t\t\t\t\t\tquery.system\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tplaceholder={t('filters.filterByTask')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<DescriptionRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'task'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Slide>\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tfiltersContainer: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            position: 'absolute',\r\n            bottom: '0',\r\n            background: 'rgba(0,0,0,0.8)',\r\n            backdropFilter: 'blur(22px)',\r\n            zIndex: 3,\r\n            padding: '40px 0 155px',\r\n            borderRadius: '30px 30px 0 0',\r\n            boxShadow: '0px -1px 1px 0px rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n\tgridItem: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'flex-start',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tmarginLeft: '4px',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '6px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tsortandfilter: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'black',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '5px 25px 5px 3px',\r\n        whiteSpace: 'nowrap',\r\n        margin: '10px 0 0',\r\n        position: 'absolute',\r\n        bottom: '100px',\r\n        zIndex: 4,\r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    },\r\n\ttypeGroup: {\r\n\t\tmargin: '5px',\r\n\t\theight: '45px',\r\n\t},\r\n\tmodeBtn: {\r\n\t\tpadding: '0 15px 0 5px',\r\n\t\tcolor: 'white',\r\n\t\twidth: 'auto',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tlistBtn: {\r\n\t\tborderRadius: '25px 0 0 25px',\r\n\t},\r\n\tblocksBtn: {\r\n\t\tborderRadius: '0px 25px 25px 0px',\r\n\t},\r\n\tmodeBtnActive: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultView.js",["1018","1019","1020","1021"],"import {\r\n\tGrid, IconButton, makeStyles,\r\n\tuseMediaQuery\r\n} from \"@material-ui/core\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport BlurOnRoundedIcon from \"@material-ui/icons/BlurOnRounded\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport clsx from \"clsx\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useLocation, useParams } from \"react-router\";\r\nimport { getFullAddress } from \"../../../api/assetsApi\";\r\nimport * as faultApi from \"../../../api/faultsApi\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { SnackbarContext } from \"../../../context/SnackbarContext\";\r\nimport { UpsertContext } from \"../../../context/UpsertContext\";\r\nimport { AddRelatedUser } from \"../../reuseables/AddRelatedUser\";\r\nimport { Carousel } from \"../../reuseables/Carousel\";\r\nimport { CommentSection } from \"../../reuseables/CommentSection\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport { ReturnToPrevios } from \"../../reuseables/ReturnToPrevious\";\r\nimport { StatusTag } from \"../../reuseables/StatusTag\";\r\nimport { UpdateOwner } from \"../../reuseables/UpdateOwner\";\r\nimport { UpdateStatus } from \"../../reuseables/UpdateStatus\";\r\nimport { UserList } from \"../../reuseables/UserList\";\r\nimport { UserItem } from \"../../user/UserItem\";\r\nimport { FaultLink } from \"./FaultLink\";\r\nimport { FaultViewControls } from \"./FaultViewControls\";\r\n\r\nexport const FaultView = ({ fid, faultData, updateFaultState }) => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst { t } = useTranslation();\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst { setUpsertData } = useContext(UpsertContext);\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\tconst [fault, setFault] = useState(null);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst { faultId } = useParams();\r\n\tconst [changeOwner, setChangeOwner] = useState(false);\r\n\tconst [addRelatedUserModal, setAddRelatedUserModal] = useState(null);\r\n\tconst [changeStatus, setChangeStatus] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (fault) {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t}, [fault]);\r\n\r\n\tuseEffect(() => {\r\n\t\tprepareData();\r\n\t}, [faultData, faultId]);\r\n\r\n\tconst prepareData = async () => {\r\n\t\tif (faultData) {\r\n\t\t\tsetFault(faultData);\r\n\t\t\tsetIsLoading(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst res = await faultApi.getFault(faultId || fid, false);\r\n\t\tif (!res) {\r\n\t\t\thistory.push(\"/workspace/faults\");\r\n\t\t} else if (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t\thistory.push(\"/workspace/faults\");\r\n\t\t}\r\n\t\tsetFault(res);\r\n\t\tconsole.log(res)\r\n\t};\r\n\r\n\tconst updateOwner = async (userId) => {\r\n\t\tconst res = await faultApi.updateFaultOwner(fault._id, userId);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t} else {\r\n\t\t\tsetFault({\r\n\t\t\t\t...fault,\r\n\t\t\t\towner: res.owner,\r\n\t\t\t\trelatedUsers: res.relatedUsers,\r\n\t\t\t});\r\n\t\t\tif (updateFaultState) {\r\n\t\t\t\tupdateFaultState(res._id, \"owner\", res.owner);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetChangeOwner(false);\r\n\t};\r\n\r\n\tconst removeRelatedUser = async (userId) => {\r\n\t\tconst res = await faultApi.removeRelatedUser(fault._id, userId);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t} else if (res) {\r\n\t\t\tsetFault({\r\n\t\t\t\t...fault,\r\n\t\t\t\trelatedUsers: res.relatedUsers,\r\n\t\t\t});\r\n\t\t\tif (updateFaultState) {\r\n\t\t\t\tupdateFaultState(res._id, \"relatedUsers\", res.relatedUsers);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst addRelatedUser = (userId) => async (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tconst res = await faultApi.addRelatedUser(fault._id, userId);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t} else if (res) {\r\n\t\t\tsetFault({\r\n\t\t\t\t...fault,\r\n\t\t\t\trelatedUsers: res.relatedUsers,\r\n\t\t\t});\r\n\t\t\tif (updateFaultState) {\r\n\t\t\t\tupdateFaultState(res._id, \"relatedUsers\", res.relatedUsers);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetAddRelatedUserModal(null);\r\n\t};\r\n\r\n\tconst handleChangeStatus = async (statusId) => {\r\n\t\tconst res = await faultApi.updateFaultStatus(fault._id, statusId);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t} else if (res) {\r\n\t\t\tsetFault({\r\n\t\t\t\t...fault,\r\n\t\t\t\tstatus: res.status,\r\n\t\t\t\tclosedDate: res.closedDate,\r\n\t\t\t});\r\n\t\t\tif (updateFaultState) {\r\n\t\t\t\tupdateFaultState(res._id, \"status\", res.status);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetChangeStatus(null);\r\n\t};\r\n\r\n\tconst handleSaveComment = async (faultId, userId, text, image) => {\r\n\t\tconst res = await faultApi.saveFaultComment(faultId, userId, text, image);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t\treturn Promise.resolve(null);\r\n\t\t} else if (res) {\r\n\t\t\tif (updateFaultState) {\r\n\t\t\t\tupdateFaultState(res._id, \"comments\", res.comments);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Promise.resolve(res);\r\n\t};\r\n\r\n\tconst handleUpdateComment = async (faultId, commentId, text) => {\r\n\t\tconst res = await faultApi.updateFaultComment(faultId, commentId, text);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t\treturn Promise.resolve(null);\r\n\t\t} else if (res) {\r\n\t\t\tif (updateFaultState) {\r\n\t\t\t\tupdateFaultState(res._id, \"comments\", res.comments);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Promise.resolve(res);\r\n\t};\r\n\r\n\tconst toggleEditMode = (faultId) => (event) => {\r\n\t\tsetUpsertData({ itemId: faultId, module: \"faults\" });\r\n\t};\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress />\r\n\t) : (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tclassName={classes.container}\r\n\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\talignItems=\"flex-start\"\r\n\t\t\t>\r\n\t\t\t\t<Grid container className={classes.controls}>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.topHeaderGriditem}>\r\n\t\t\t\t\t\t<div className={classes.faultId}>\r\n\t\t\t\t\t\t\t<FaultLink faultId={fault.faultId} size={18} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<ReturnToPrevios />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.controlsGriditem}>\r\n\t\t\t\t\t\t<FaultViewControls\r\n\t\t\t\t\t\t\tfault={fault}\r\n\t\t\t\t\t\t\teditFault={toggleEditMode(fault._id)}\r\n\t\t\t\t\t\t\tupdateOwner={() => setChangeOwner(true)}\r\n\t\t\t\t\t\t\tchangeStatus={() => setChangeStatus(true)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tclassName={classes.controlsGriditem}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tjustifyContent: downSm ? \"center\" : \"flex-start\",\r\n\t\t\t\t\t\t\tcursor: \"pointer\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClick={() => setChangeStatus(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<StatusTag status={fault.status} type=\"fault\" size={\"16px\"} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tsm={12}\r\n\t\t\t\t\tmd={12}\r\n\t\t\t\t\tlg={8}\r\n\t\t\t\t\txl={9}\r\n\t\t\t\t\tclassName={classes.rightContainer}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className={classes.asset}>{getFullAddress(fault.asset)}</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\tclasses.system,\r\n\t\t\t\t\t\t\t!fault.system && classes.notAssigned\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<BlurOnRoundedIcon className={classes.systemIcon} />\r\n\t\t\t\t\t\t{fault.system ? fault.system.name : t(\"general.noSystemAssigned\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\tclasses.location,\r\n\t\t\t\t\t\t\t!fault.location && classes.notAssigned\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<RoomIcon className={classes.systemIcon} />\r\n\t\t\t\t\t\t{fault.location\r\n\t\t\t\t\t\t\t? fault.location.name\r\n\t\t\t\t\t\t\t: t(\"general.noLocationAssigned\")}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className={classes.title}>{fault.title}</div>\r\n\t\t\t\t\t<div className={classes.desc}>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className={classes.itemDates}>\r\n\t\t\t\t\t\t\t<div className={classes.openDate}>\r\n\t\t\t\t\t\t\t\t{`${t(\"general.createDate\")} ${format(\r\n\t\t\t\t\t\t\t\t\tparseISO(fault.createdAt),\r\n\t\t\t\t\t\t\t\t\tlang.dateformat\r\n\t\t\t\t\t\t\t\t)}`}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{Boolean(fault.closedDate) && fault.status.state === \"close\" && (\r\n\t\t\t\t\t\t\t\t<div className={classes.closedDate}>\r\n\t\t\t\t\t\t\t\t\t{`${t(\"general.closedDate\")} ${format(\r\n\t\t\t\t\t\t\t\t\t\tparseISO(fault.closedDate),\r\n\t\t\t\t\t\t\t\t\t\tlang.dateformat\r\n\t\t\t\t\t\t\t\t\t)}`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{fault.description}\r\n\t\t\t\t\t\t<div className={classes.tagsContainer}>\r\n\t\t\t\t\t\t\t{/* <IconButton \t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tclassName={classes.addTag}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<AddIcon className={classes.addTagIcon} />\r\n\t\t\t\t\t\t\t</IconButton> */}\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tfault.tags.map((tag) => \r\n\t\t\t\t\t\t\t\t\t<div className={classes.tag} key={tag._id} > \r\n\t\t\t\t\t\t\t\t\t\t{tag.value}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{Boolean(fault.images.length) && (\r\n\t\t\t\t\t\t<Carousel\r\n\t\t\t\t\t\t\timages={fault.images}\r\n\t\t\t\t\t\t\tisOpen={Boolean(fault.images.length)}\r\n\t\t\t\t\t\t\tsize={300}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tsm={12}\r\n\t\t\t\t\tmd={12}\r\n\t\t\t\t\tlg={4}\r\n\t\t\t\t\txl={3}\r\n\t\t\t\t\tclassName={classes.leftContainer}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<div className={classes.owner}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\t\t\t\tuser={fault.owner || null}\r\n\t\t\t\t\t\t\t\t\t\tshowTitle\r\n\t\t\t\t\t\t\t\t\t\tshowPhone\r\n\t\t\t\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\t\t\t\tsize={12}\r\n\t\t\t\t\t\t\t\t\t\tavatarSize={50}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xl={10} md={6} sm={6} xs={12}>\r\n\t\t\t\t\t\t\t<UserList\r\n\t\t\t\t\t\t\t\tusers={fault.relatedUsers}\r\n\t\t\t\t\t\t\t\tremoveTooltip={t(\"faultsModule.controls.removeRelatedUser\")}\r\n\t\t\t\t\t\t\t\taddTooltip={t(\"faultsModule.controls.addRelatedUser\")}\r\n\t\t\t\t\t\t\t\tplaceholder={t(\"faultsModule.noRelatedUsers\")}\r\n\t\t\t\t\t\t\t\ttitle={t(\"faultsModule.relatedUsers\")}\r\n\t\t\t\t\t\t\t\thandleRemove={removeRelatedUser}\r\n\t\t\t\t\t\t\t\thandleAdd={() => setAddRelatedUserModal(true)}\r\n\t\t\t\t\t\t\t\tmodule={\"faults\"}\r\n\t\t\t\t\t\t\t\towner={fault.owner}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.comments}>\r\n\t\t\t\t\t<CommentSection\r\n\t\t\t\t\t\tparent={fault}\r\n\t\t\t\t\t\tsaveComment={handleSaveComment}\r\n\t\t\t\t\t\tupdateComment={handleUpdateComment}\r\n\t\t\t\t\t\tmodule={\"faults\"}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t{changeOwner && (\r\n\t\t\t\t<UpdateOwner\r\n\t\t\t\t\thandleClose={() => setChangeOwner(false)}\r\n\t\t\t\t\thandleSave={updateOwner}\r\n\t\t\t\t\tisOpen={changeOwner}\r\n\t\t\t\t\tcurrentOwner={fault.owner}\r\n\t\t\t\t\ttitle={t(\"faultsModule.updateOwner\")}\r\n\t\t\t\t\tinstructions={t(\"faultsModule.updateOwnerInstructions\")}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\r\n\t\t\t{changeStatus && (\r\n\t\t\t\t<UpdateStatus\r\n\t\t\t\t\thandleClose={() => setChangeStatus(false)}\r\n\t\t\t\t\thandleSave={handleChangeStatus}\r\n\t\t\t\t\tisOpen={changeStatus}\r\n\t\t\t\t\tcurrentStatus={fault.status}\r\n\t\t\t\t\ttitle={t(\"faultsModule.changeStatus\")}\r\n\t\t\t\t\tinstructions={t(\"faultsModule.changeStatusInstructions\")}\r\n\t\t\t\t\tmodule={\"faults\"}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{addRelatedUserModal && (\r\n\t\t\t\t<AddRelatedUser\r\n\t\t\t\t\thandleClose={() => setAddRelatedUserModal(false)}\r\n\t\t\t\t\thandleSave={addRelatedUser}\r\n\t\t\t\t\tisOpen={addRelatedUserModal}\r\n\t\t\t\t\tfollowerList={[...fault.relatedUsers, fault.owner]}\r\n\t\t\t\t\ttitle={t(\"faultsModule.addRelatedUser\")}\r\n\t\t\t\t\tinstructions={t(\"faultsModule.addRelatedUserInstructions\")}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\toverflowY: \"overlay\",\r\n\t\theight: \"100%\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\theight: \"auto\",\r\n\t\t},\r\n\t},\r\n\trightContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tpadding: \"0 30px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\talignItems: \"center\",\r\n\t\t\tpadding: \"0 15px\",\r\n\t\t},\r\n\t},\r\n\tasset: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"16px\",\r\n\t\tbackground: \"black\",\r\n\t\twidth: \"fit-content\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tboxShadow: \"rgba(0,0,0,0.25) 0 0 5px 2px\",\r\n\t\ttextAlign: \"center\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t},\r\n\tsystem: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\twidth: \"fit-content\",\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\tmargin: \"10px 0\",\r\n\t},\r\n\tlocation: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\twidth: \"fit-content\",\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\tbackground: \"rgba(255,255,255,0.2)\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\tmargin: \"0px 0\",\r\n\t},\r\n\tsystemIcon: {\r\n\t\tmargin: \"0 10px 0 0\",\r\n\t\tfontSize: \"18px\",\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"22px\",\r\n\t\tpadding: \"15px 0\",\r\n\t\talignSelf: \"flex-end\",\r\n\t\twidth: \"100%\",\r\n\t\tmarginTop: \"20px\",\r\n\t},\r\n\tdesc: {\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tpadding: \"10px\",\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"95%\",\r\n\t\twordBreak: \"break-word\",\r\n\t},\r\n\tleftContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\talignItems: \"flex-end\",\r\n\t\tpadding: \"10px 30px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\talignItems: \"center\",\r\n\t\t\tpadding: \"10px 15px\",\r\n\t\t},\r\n\t},\r\n\towner: {\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tpadding: \"5px 30px\",\r\n\t\tborderRadius: \"10px\",\r\n\t\twidth: \"fit-content\",\r\n\t\theight: \"70px\",\r\n\t\tmargin: \"0 auto\",\r\n\t},\r\n\tcontrols: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t\tpadding: \"20px 30px 0px 30px\",\r\n\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"20px 15px 0px\",\r\n\t\t},\r\n\t},\r\n\tcontrolsGriditem: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t\tmargin: \"10px 0\",\r\n\t},\r\n\ttopHeaderGriditem: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tmargin: \"10px 0\",\r\n\t\twidth: \"100%\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\t\tbackground: \"black\",\r\n\t\t\tborderRadius: \"50px\",\r\n\t\t\tpadding: \"5px 5px 5px 25px\",\r\n\t\t},\r\n\t},\r\n\tfaultId: {\r\n\t\tpadding: \"10px 0\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tlinked: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tmargin: \"10px 0\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tpadding: \"10px 0\",\r\n\t\theight: \"300px\",\r\n\t},\r\n\tlinkedHeader: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"5px\",\r\n\t\tmargin: \"0px auto\",\r\n\t\twidth: \"80%\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\trelatedUsersList: {\r\n\t\tpadding: \"5px\",\r\n\t\toverflowY: \"auto\",\r\n\t},\r\n\tlistItem: {\r\n\t\twidth: \"250px\",\r\n\t\tborderRadius: \"5px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\t},\r\n\t},\r\n\tremoveUser: {\r\n\t\tcolor: \"white\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t},\r\n\t},\r\n\titemDates: {\r\n\t\tmargin: \"0 0 20px\",\r\n\t},\r\n\topenDate: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"14px\",\r\n\t\tpadding: \"7px 15px\",\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\twidth: \"fit-content\",\r\n\t\tborderRadius: \"50px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"11px\",\r\n\t\t\tpadding: \"4px 15px\",\r\n\t\t},\r\n\t},\r\n\tclosedDate: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"14px\",\r\n\t\tmargin: \"10px 0\",\r\n\t\tpadding: \"7px 15px\",\r\n\t\tbackground: \"green\",\r\n\t\twidth: \"fit-content\",\r\n\t\tborderRadius: \"50px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"11px\",\r\n\t\t\tpadding: \"4px 15px\",\r\n\t\t},\r\n\t},\r\n\tcomments: {\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t},\r\n\tstatus: {\r\n\t\tmargin: \"10px 0\",\r\n\t},\r\n\tnotAssigned: {\r\n\t\tfilter: \"brightness(60%)\",\r\n\t},\r\n\ttagsContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: '4px 0',\r\n\t\twidth: 'fit-content',\r\n\t\tborderRadius: '50px',\r\n\t\tmarginTop: '30px',\r\n\t\tflexFlow: 'wrap'\r\n\t},\r\n\ttag: {\r\n\t\tbackground: 'rgba(255,255,255,0.5)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '0px 10px',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t\tfontSize: '12px',\r\n\t\tmargin: '4px 3px',\r\n\t\theight: '22px',\r\n\t\tcolor: 'black',\r\n\t\tlineHeight: 1\r\n\t},\r\n\taddTag: {\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tfontSize: '11px',\r\n\t\theight: '22px',\r\n\t\twidth: '22px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.4)',\r\n\t\tpadding: 0,\r\n\t\tmargin: '4px 3px', \r\n\t},\r\n\taddTagIcon: {\r\n\t\tfontSize: '16px',\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\Document.js",["1022","1023","1024"],"import { Grid, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport React, { useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getFullAddress } from \"../../../api/assetsApi\";\r\nimport { getFileTypeName } from \"../../../api/documentsApi\";\r\nimport { ItemLink } from \"../../reuseables/ItemLink\";\r\nimport { UserItem } from \"../../user/UserItem\";\r\nimport { DocumentControls } from \"./DocumentControls\";\r\nimport dateFormat from \"dateformat\";\r\nimport { format, parseISO } from 'date-fns';\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\n\r\nexport const Document = ({ data, deleteFile, downloadFile, toggleEditMode, previewFile }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\r\n\treturn (\r\n\t\t<div className={classes.mainContainer}>\r\n\t\t\t<Grid container className={classes.docContainer}>\r\n\t\t\t\t<Grid item xs={9} className={classes.descContainer}>\r\n\t\t\t\t\t<div className={classes.description}>{data.description}</div>\r\n\t\t\t\t\t<div className={classes.docId}>{data.docId}</div>\r\n\t\t\t\t\t<div className={classes.createdAt}>{`${t(\r\n\t\t\t\t\t\t\"general.createDate\"\r\n\t\t\t\t\t)} ${format(parseISO(data.createdAt), lang.dateonly)}`}</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={3} className={classes.controls}>\r\n\t\t\t\t\t<DocumentControls\r\n\t\t\t\t\t\tdeleteFile={deleteFile(data._id, data.description)}\r\n\t\t\t\t\t\tdownloadFile={() => downloadFile(data.url)}\r\n\t\t\t\t\t\teditDocument={() => toggleEditMode(data._id)}\r\n\t\t\t\t\t\tpreviewFile={() => previewFile(data)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.dataContainer}>\r\n\t\t\t\t\t<Grid container className={classes.relationContainer}>\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t<div className={classes.relationLabel}>\r\n\t\t\t\t\t\t\t\t{t(\"documentsModule.upsert.asset\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.relationData}>\r\n\t\t\t\t\t\t\t\t{data.asset ? getFullAddress(data.asset) : t(\"general.noData\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container className={classes.relationContainer}>\r\n\t\t\t\t\t\t<Grid item xs={6} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t<div className={classes.relationLabel}>\r\n\t\t\t\t\t\t\t\t{t(\"documentsModule.upsert.system\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.relationData}>\r\n\t\t\t\t\t\t\t\t{data.system ? data.system.name : t(\"general.noData\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t<div className={classes.relationLabel}>\r\n\t\t\t\t\t\t\t\t{t(\"documentsModule.upsert.fault\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.relationData}>\r\n\t\t\t\t\t\t\t\t{data.fault ? (\r\n\t\t\t\t\t\t\t\t\t<ItemLink itemId={data.fault.faultId} module=\"faults\" />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\tt(\"general.noData\")\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container className={classes.relationContainer}>\r\n\t\t\t\t\t\t<Grid item xs={6} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t<div className={classes.relationLabel}>\r\n\t\t\t\t\t\t\t\t{t(\"documentsModule.upsert.task\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.relationData}>\r\n\t\t\t\t\t\t\t\t{data.task ? data.task.taskId : t(\"general.noData\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t<div className={classes.relationLabel}>\r\n\t\t\t\t\t\t\t\t{t(\"documentsModule.upsert.filetype\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.relationData}>\r\n\t\t\t\t\t\t\t\t{getFileTypeName(data.type)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container className={classes.relationContainer}>\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t<div className={classes.relationLabel}>\r\n\t\t\t\t\t\t\t\t{t(\"documentsModule.upsert.user\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.relationData}>\r\n\t\t\t\t\t\t\t\t{data.user ? (\r\n\t\t\t\t\t\t\t\t\t<div className={classes.userContainer}>\r\n\t\t\t\t\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\t\t\t\t\tuser={data.user}\r\n\t\t\t\t\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\t\t\t\t\tsize={11}\r\n\t\t\t\t\t\t\t\t\t\t\tavatarSize={30}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\tt(\"general.noData\")\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\tpadding: \"10px\",\r\n\t},\r\n\tdocContainer: {\r\n\t\tcolor: \"white\",\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tpadding: \"20px\",\r\n\t},\r\n\tdescContainer: {\r\n\t\tfontSize: \"16px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tdocId: {\r\n\t\tfontSize: \"13px\",\r\n\t\tpadding: \"7px\",\r\n\t},\r\n\trelationContainer: {\r\n\t\tpadding: \"5px 10px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tcolor: \"white\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\tgridItem: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t},\r\n\trelationLabel: {\r\n\t\tpadding: \"3px 0\",\r\n\t\tfontSize: \"12px\",\r\n\t\tcolor: \"rgba(255,255,255,0.6)\",\r\n\t},\r\n\trelationData: {\r\n\t\tfontSize: \"14px\",\r\n\t},\r\n\tcontrols: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t\talignItems: \"center\",\r\n\t\tpadding: \"10px 0\",\r\n\t},\r\n\texpandIcon: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px\",\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.5)\",\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: \"18px\",\r\n\t},\r\n\tdataContainer: {\r\n\t\tpadding: \"10px 10px 20px\",\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tmargin: \"10px 0 0\",\r\n\t},\r\n\tsideGridItem: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tpadding: \"10px\",\r\n\t},\r\n\tfileTypeContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\tborderRadius: \"5px\",\r\n\t\tpadding: \"15px 10px\",\r\n\t},\r\n\tfileTypeIcon: {\r\n\t\tfontSize: \"48px\",\r\n\t\tcolor: \"rgba(255,255,255,0.5)\",\r\n\t},\r\n\tfileTypeData: {\r\n\t\tdirection: \"rtl\",\r\n\t\tcolor: \"rgba(255,255,255,0.8)\",\r\n\t},\r\n\tuserContainer: {\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"5px 20px 5px 5px\",\r\n\t\twidth: \"fit-content\",\r\n\t},\r\n\tcreatedAt: {\r\n\t\tfontSize: \"12px\",\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tpadding: \"6px 15px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tmargin: \"5px 0 0 0\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\useQuery.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\Can.js",["1025","1026"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\UpsertAsset.js",["1027","1028","1029","1030"],"import {\r\n\tButton, FormHelperText,\r\n\tGrid,\r\n\tIconButton, makeStyles,\r\n\tMenuItem, Select,\r\n\tTextField\r\n} from \"@material-ui/core\";\r\nimport DeleteOutlineRoundedIcon from \"@material-ui/icons/DeleteOutlineRounded\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getAsset } from \"../../../api/assetsApi\";\r\nimport { createUserOptions } from \"../../../api/userApi\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport { ModalContainer } from \"../../reuseables/ModalContainer\";\r\n\r\nexport const UpsertAsset = ({\r\n\thandleClose,\r\n\thandleSave,\r\n\tassetId,\r\n\thandleUpdate,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst previewImageRef = useRef();\r\n\tconst [mode, setMode] = useState(assetId ? \"update\" : \"create\");\r\n\tconst { t } = useTranslation();\r\n\tconst [errors, setErrors] = useState([]);\r\n\tconst [userList, setUserList] = useState([]);\r\n\tconst [addInfoContext, setAddInfoContext] = useState(null);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [details, setDetails] = useState({\r\n\t\ttenant: auth.user.tenant,\r\n\t\taddress: {\r\n\t\t\tcountry: \"\",\r\n\t\t\tprovince: \"\",\r\n\t\t\tcity: \"\",\r\n\t\t\tstreet: \"\",\r\n\t\t\tstreetNumber: \"\",\r\n\t\t\tentrance: \"\",\r\n\t\t\tzipcode: \"\",\r\n\t\t},\r\n\t\towner: \"\",\r\n\t\ttype: \"\",\r\n\t\taddInfo: {},\r\n\t\tcreatedBy: auth.user._id,\r\n\t\timages: [],\r\n\t\tuploadedImages: [],\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tprepareData();\r\n\t}, []);\r\n\r\n\tconst prepareData = async () => {\r\n\t\tconst userOptions = await createUserOptions()\t\r\n\t\tsetUserList(userOptions);\r\n\t\tif (!assetId) {\r\n\t\t\tsetIsLoading(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst data = await getAsset(assetId, true)\r\n\t\tsetDetails({ ...data, images: [], uploadedImages: data.images });\r\n\t\tsetIsLoading(false);\r\n\t}\r\n\r\n\tconst validateFields = () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet errList = [];\r\n\t\t\tObject.entries({\r\n\t\t\t\t...details.address,\r\n\t\t\t\towner: details.owner,\r\n\t\t\t\ttype: details.type,\r\n\t\t\t}).forEach((entry) => {\r\n\t\t\t\tif ([\"province\", \"entrance\"].indexOf(entry[0]) !== -1) return;\r\n\t\t\t\tif (!entry[1]) {\r\n\t\t\t\t\terrList.push({ field: entry[0], text: t(\"errors.isRequired\") });\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (errList.length) {\r\n\t\t\t\tsetErrors(errList);\r\n\t\t\t\tresolve(false);\r\n\t\t\t}\r\n\t\t\tresolve(true);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tvalidateFields().then((res) => {\r\n\t\t\tif (!res) return;\r\n\t\t\tif (mode === \"create\") {\r\n\t\t\t\thandleSave(details);\r\n\t\t\t} else {\r\n\t\t\t\thandleUpdate(details);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (data) => (event) => {\r\n\t\tif (data.type) {\r\n\t\t\tsetDetails({\r\n\t\t\t\t...details,\r\n\t\t\t\t[data.type]: {\r\n\t\t\t\t\t...details[data.type],\r\n\t\t\t\t\t[data.field]: event.target.value,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t} else if (data.field === \"type\") {\r\n\t\t\tsetDetails({\r\n\t\t\t\t...details,\r\n\t\t\t\ttype: event.target.value,\r\n\t\t\t\taddInfo:\r\n\t\t\t\t\tevent.target.value === \"apartment\"\r\n\t\t\t\t\t\t? { floor: \"\", unit: \"\" }\r\n\t\t\t\t\t\t: { floors: \"\", units: \"\" },\r\n\t\t\t});\r\n\t\t\tsetAddInfoContext(event.target.value);\r\n\t\t} else {\r\n\t\t\tsetDetails({ ...details, [data.field]: event.target.value });\r\n\t\t}\r\n\t\tif (errors.length) {\r\n\t\t\tsetErrors(errors.filter((err) => err.field !== data.field));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleFileUpload = (event) => {\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\timages: event.target.files,\r\n\t\t});\r\n\t\tpreviewImageRef.current.src = URL.createObjectURL(event.target.files[0]);\r\n\t};\r\n\r\n\tconst removeImage = (i) => (event) => {\r\n\t\tlet im = details.uploadedImages;\r\n\t\tim.splice(i, 1);\r\n\t\tsetDetails({ ...details, uploadedImages: im });\r\n\t};\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress initial={true} />\r\n\t) : (\r\n\t\t<ModalContainer\r\n\t\t\thandleClose={handleClose}\r\n\t\t\ttitle={\r\n\t\t\t\tmode === \"create\"\r\n\t\t\t\t\t? t(\"assetsModule.createAsset\")\r\n\t\t\t\t\t: t(\"assetsModule.editAsset\")\r\n\t\t\t}\r\n\t\t\thandleConfirm={handleConfirm}\r\n\t\t>\r\n\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"assetsModule.addressDetails\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t{Object.keys(details.address).map((f, i) => (\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\t\tlabel={t(`assetsModule.${f}`)}\r\n\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `${f}`).length > 0}\r\n\t\t\t\t\t\t\t\t\tvalue={details.address[f]}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange({ type: \"address\", field: `${f}` })}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `${f}`).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t? t(\"errors.isRequired\")\r\n\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} sm={5} className={classes.section}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"assetsModule.assetType\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `type`).length > 0}\r\n\t\t\t\t\t\t\t\tvalue={details.type}\r\n\t\t\t\t\t\t\t\tonChange={handleChange({ type: \"\", field: `type` })}\r\n\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\tdisablePortal: true,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\tvalue={\"building\"}\r\n\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{t(\"assetsModule.building\")}\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\tvalue={\"apartment\"}\r\n\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{t(\"assetsModule.apartment\")}\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t{errors.filter((e) => e.field === `type`).length > 0 && (\r\n\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#f44336\", marginRight: \"15px\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{t(\"errors.isRequired\")}\r\n\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} sm={5} className={classes.section}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>{t(\"assetsModule.owner\")}</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `owner`).length > 0}\r\n\t\t\t\t\t\t\tvalue={details.owner}\r\n\t\t\t\t\t\t\tonChange={handleChange({ type: \"\", field: `owner` })}\r\n\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\tdisablePortal: true,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{userList.map((user, i) => (\r\n\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\tvalue={user.value}\r\n\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{user.label}\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t{errors.filter((e) => e.field === `type`).length > 0 && (\r\n\t\t\t\t\t\t\t<FormHelperText style={{ color: \"#f44336\", marginRight: \"15px\" }}>\r\n\t\t\t\t\t\t\t\t{t(\"errors.isRequired\")}\r\n\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcomponent={\"label\"}\r\n\t\t\t\t\t\t\tvariant={\"contained\"}\r\n\t\t\t\t\t\t\tclassName={classes.uploadBtn}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{t(\"faultsModule.upsert.uploadImages\")}\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\taccepts=\"image/*\"\r\n\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\tonChange={handleFileUpload}\r\n\t\t\t\t\t\t\t\thidden\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<span className={classes.filesUploaded}>\r\n\t\t\t\t\t\t\t{`${details.images.length} ${t(\r\n\t\t\t\t\t\t\t\t\"faultsModule.upsert.imagesSelected\"\r\n\t\t\t\t\t\t\t)}`}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tref={previewImageRef}\r\n\t\t\t\t\t\t\tsrc=\"#\"\r\n\t\t\t\t\t\t\tclassName={classes.previewImage}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{Boolean(details.uploadedImages.length) && (\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<Grid item xs={12} className={classes.uploadedImagesTitle}>\r\n\t\t\t\t\t\t\t\t{t(\"faultsModule.upsert.uploadedImages\")}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{details.uploadedImages.map((image, i) => (\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.imageRow} key={i}>\r\n\t\t\t\t\t\t\t\t\t<img src={image} className={classes.previewImage} />\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tonClick={removeImage(i)}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.removeImageBtn}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<DeleteOutlineRoundedIcon className={classes.removeImage} />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t{(Boolean(addInfoContext) || mode === \"update\") && (\r\n\t\t\t\t<Grid item xs={12} md={6} className={classes.section}>\r\n\t\t\t\t\t<Grid item xl={12}>\r\n\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t{t(\"assetsModule.additionalDetails\")}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xl={12} className={classes.fields}>\r\n\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t{Object.keys(details.addInfo).map((f, i) => (\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\t\t\tlabel={t(`assetsModule.${f}`)}\r\n\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `${f}`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\tvalue={details.addInfo[f]}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange({\r\n\t\t\t\t\t\t\t\t\t\t\ttype: \"addInfo\",\r\n\t\t\t\t\t\t\t\t\t\t\tfield: `${f}`,\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\t\troot: classes.rootInput,\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t</ModalContainer>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ticon: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"20px\",\r\n\t},\r\n\tsection: {\r\n\t\tmargin: \"10px 5px\",\r\n\t},\r\n\tsectionTitle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"7px 20px\",\r\n\t\tmarginLeft: \"25px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tborderRadius: \"8px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tmarginLeft: \"15px\",\r\n\t\t},\r\n\t},\r\n\tfields: {\r\n\t\tpadding: \"10px 20px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px\",\r\n\t\t},\r\n\t},\r\n\ttextContainer: {\r\n\t\tpadding: \"5px\",\r\n\t},\r\n\ttextField: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tselectInput: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmarginRight: \"7px\",\r\n\t\tmarginLeft: \"-5px\",\r\n\t\tmaxHeight: \"200px\",\r\n\t\toverflowY: \"auto\",\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: \"white\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(255,255,255,0.2)\",\r\n\t\t},\r\n\t},\r\n\tcontrols: {\r\n\t\tborderTop: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"10px 0\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t},\r\n\tcontrol: {\r\n\t\twidth: \"30%\",\r\n\r\n\t\tfontSize: \"16px\",\r\n\t\tmargin: \"5px\",\r\n\t\tpadding: \"5px 30px\",\r\n\t\tborderRadius: \"30px\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tsave: {\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"black\",\r\n\t\t},\r\n\t\t\"&:disabled\": {\r\n\t\t\tcolor: \"rgba(255,255,255,0.3)\",\r\n\t\t},\r\n\t},\r\n\tcancel: {\r\n\t\t\"&:hover\": {\r\n\t\t\tboxShadow: \"inset rgba(255,255,255,0.3) 0 0 2px 1px\",\r\n\t\t},\r\n\t},\r\n\tfilesUploaded: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"0 15px\",\r\n\t},\r\n\tuploadBtn: {\r\n\t\tmargin: \"9px 0\",\r\n\t\tbackground: \"rgba(0,0,0,0.1)\",\r\n\t\tcolor: \"white\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\t\"&:hover\": {\r\n\t\t\tboxShadow: \"inset white 0 0 2px 1px\",\r\n\t\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t},\r\n\t},\r\n\timageRow: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tpadding: \"10px 5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\tpreviewImage: {\r\n\t\theight: \"80px\",\r\n\t\twidth: \"auto\",\r\n\t\tborderRadius: \"5px\",\r\n\t\tmargin: \"0 10px\",\r\n\t},\r\n\tremoveImageBtn: {\r\n\t\tcolor: \"rgba(255,255,255,0.5)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"6px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\tborderColor: \"white\",\r\n\t\t},\r\n\t},\r\n\tuploadedImagesTitle: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px 5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBoxSelect.js",["1031","1032"],"import { ClickAwayListener, FormControl, IconButton, makeStyles, Menu, MenuItem, OutlinedInput } from '@material-ui/core';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport clsx from 'clsx';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam, removeQueryParam } from '../../api/genericApi';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { useQuery } from './customHooks/useQuery';\r\n\r\nexport const SearchBoxSelect = ({ placeholder, filterField, suggestionsFunc, reloadedLabel, reloadedValue }) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const cont = useRef();\r\n    const input = useRef();\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ onFocus, setOnFocus ] = useState(false);\r\n    const [ searchText, setSearchText ] = useState('');\r\n    const [ anchorEl, setAnchorEl ] = useState(null);\r\n    const [ menuOptions, setMenuOptions ] = useState([]);\r\n    const [ value, setValue ] = useState(reloadedValue || null);\r\n    \r\n    useEffect(() => {\r\n        if (Boolean(!searchText)) return;\r\n        const timeOutId = setTimeout(() => handleSearch(searchText), 700);\r\n        return () => clearTimeout(timeOutId);\r\n    }, [searchText])\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: addQueryParam(location.search, [{ name: filterField, value: value}])\r\n            });\r\n            return;\r\n        } else {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: removeQueryParam(location.search, filterField)\r\n            });\r\n        }\r\n    }, [value])\r\n\r\n    const handleChange = event => {\r\n        setSearchText(event.target.value)\r\n    }\r\n\r\n    const handleSearch = async searchText => {\r\n        if (searchText) {\r\n            const data = await suggestionsFunc(searchText);\r\n            setMenuOptions(data || []);\r\n            setAnchorEl(input.current)      \r\n        } else {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: removeQueryParam(location.search, filterField)\r\n            });\r\n        }\r\n    }\r\n    \r\n    const getTag = val => {\r\n        let data = menuOptions.find(op => val === op.value);\r\n        return createTag(data)\r\n    }\r\n\r\n    const createTag = data => {\r\n        if (!data) return;\r\n        return (\r\n            <div className={classes.tag}>\r\n                <label className={classes.tagLabel}>\r\n                    { data.label }\r\n                </label>\r\n                <IconButton \r\n                    className={classes.removeBtn}\r\n                    onClick={removeChoice(data.value)}\r\n                >\r\n                    <CloseRoundedIcon className={classes.tagRemove}/>\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const removeChoice = value => event => {\r\n        event.stopPropagation();\r\n        setValue(null)\r\n    }\r\n\r\n    const handleClick = val => event => {\r\n        setValue(val);\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={() => setOnFocus(false)}>\r\n            <div ref={cont} className={clsx(classes.container , onFocus && classes.focused, Boolean(value) && classes.selected)} xs={11} sm={9} md={8} lg={6}>\r\n                <SearchRoundedIcon className={classes.icon}/>\r\n                {\r\n                    value \r\n                    ?   query[filterField] === value\r\n                        ?  createTag(reloadedLabel && reloadedValue ? { label: reloadedLabel, value: reloadedValue} : null)\r\n                        :  getTag(value)\r\n                    :\r\n                    <FormControl variant='outlined' className={classes.form}>\r\n                        <OutlinedInput\r\n                            inputRef={input}\r\n                            value={ searchText || '' }\r\n                            onChange={handleChange}\r\n                            placeholder={placeholder}\r\n                            className={clsx(classes.searchInput)}\r\n                            onFocus={() => setOnFocus(true)}\r\n                        />\r\n                    </FormControl>\r\n                }\r\n                {\r\n                    Boolean(menuOptions.length) &&\r\n                    <Menu         \r\n                        anchorEl={anchorEl}\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={() => setAnchorEl(null)}\r\n                        classes={{\r\n                            paper : classes.menu\r\n                        }}\r\n                        getContentAnchorEl={null}\r\n                        keepMounted\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'center',\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center',\r\n                        }}\r\n                    >\r\n                    {\r\n                        menuOptions.map((v,i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    key={i}\r\n                                    onClick={handleClick(v.value)}\r\n                                    className={classes.menuitem}\r\n                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                >\r\n                                    {v.label}\r\n                                </MenuItem>\r\n                            )\r\n                            \r\n                        })\r\n                    }\r\n                    </Menu>\r\n                }\r\n            </div>   \r\n        </ClickAwayListener>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        margin: '5px',\r\n        padding: '0 5px',\r\n        maxWidth: '450px',\r\n        minHeight: '43px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '50px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        transition: 'box-shadow 0.2s ease-in',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            transition: 'box-shadow 0.2s ease-in'\r\n        }\r\n\r\n    },\r\n    focused: {\r\n        boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        background: 'rgba(0,0,0,0.1)',\r\n        backdropFilter: 'blur(40px)'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        \r\n    },\r\n    searchInput: {\r\n        height: '34px',\r\n        width: '98.5%',\r\n        margin: '3px 0.75%',\r\n        borderRadius: '5px 25px 25px 5px',\r\n        color: 'white',\r\n        '& input': {\r\n            padding: '12.5px 20px 12.5px 5px',\r\n        },\r\n        '& fieldset': {\r\n            border: '0'\r\n        } \r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        marginRight: '5px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        \r\n    },\r\n    menu: {\r\n        marginRight: '25px',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(10px)',\r\n        color: 'white'\r\n    },\r\n    menuitem: {\r\n        minWidth: '200px'\r\n    },\r\n    tag: {\r\n        padding: '5px 10px',\r\n        borderRadius: '50px',\r\n        boxShadow: 'rgba(0,0,0,0.25) 0px 0px 3px 1px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'white',\r\n        margin: '3px 0'\r\n    },\r\n    tagLabel: {\r\n        padding: '0 5px'\r\n    },\r\n    removeBtn: {\r\n        padding: '4px',\r\n        color: 'white'\r\n    },\r\n    tagRemove: {\r\n        fontSize: '16px'\r\n    },\r\n    selected: {\r\n        width: 'fit-content'\r\n    }\r\n}))\r\n\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterBySelect.js",["1033","1034"],"import { Button, IconButton, makeStyles, Menu, MenuItem } from '@material-ui/core';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam, removeQueryParam } from '../../api/genericApi';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { useQuery } from './customHooks/useQuery';\r\n\r\nexport const FilterBySelect = ({ filterField, placeholder, filterIcon, optionsFunc }) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ menuOptions, setMenuOptions] = useState([]);\r\n    const [ anchorEl, setAnchorEl ] = useState(null);\r\n    const [ value, setValue ] = useState(query[filterField] || '')\r\n\r\n    useEffect(() => {\r\n        optionsFunc()\r\n        .then(data => {\r\n            console.log(data)\r\n            setMenuOptions(data)\r\n        }) \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: addQueryParam(location.search, [{ name: filterField, value }])\r\n            });\r\n            return;\r\n        }\r\n        if(query[filterField]) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: removeQueryParam(location.search, filterField)\r\n            });\r\n        }     \r\n    }, [value])\r\n\r\n    const createTag = val => {\r\n        let data = menuOptions.find(op => val === op.value);\r\n        if (!data) return;\r\n        return (\r\n            <div className={classes.tag}>\r\n                <label className={classes.tagLabel}>\r\n                    { data.label }\r\n                </label>\r\n                <IconButton \r\n                    className={classes.removeBtn}\r\n                    onClick={removeChoice(data.value)}\r\n                >\r\n                    <CloseRoundedIcon className={classes.tagRemove}/>\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const removeChoice = value => event => {\r\n        event.stopPropagation();\r\n        setValue('')\r\n    }\r\n\r\n    const handleClick = val => event => {\r\n        setValue(val);\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                Boolean(menuOptions.length) &&\r\n                    <div item className={classes.select}>\r\n                        <Button \r\n                            className={classes.filterBy}\r\n                            onClick={event => setAnchorEl(event.currentTarget)}\r\n                            startIcon={filterIcon}\r\n                        >\r\n                            { value ? createTag(value) : <label className={classes.searchLabel}>{placeholder}</label>}\r\n                        </Button>\r\n                        <Menu\r\n                            anchorEl={anchorEl}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={() => setAnchorEl(null)}\r\n                            classes={{\r\n                                paper : classes.menu\r\n                            }}\r\n                            keepMounted\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                        >\r\n                            {\r\n                                menuOptions.map((v,i) => {\r\n                                    return (\r\n                                        <MenuItem\r\n                                            key={i}\r\n                                            onClick={handleClick(v.value)}\r\n                                            className={classes.menuitem}\r\n                                            style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                        >\r\n                                            {v.label}\r\n                                        </MenuItem>\r\n                                    )\r\n                                    \r\n                                })\r\n                            }\r\n                        </Menu>\r\n                    </div>\r\n            }          \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    select: {\r\n        margin: '5px',\r\n        height: '45px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    filterBy: {\r\n        textTransform: 'none',\r\n        color: 'white',\r\n        padding: '0 4px',\r\n        height: '45px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        whiteSpace: 'nowrap',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            \r\n        }\r\n    },\r\n    menu: {\r\n        marginTop: '55px',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(10px)',\r\n        color: 'white',\r\n        height: '200px'\r\n    },\r\n    menuitem: {\r\n        minWidth: '200px'\r\n    },\r\n    container: {\r\n        height: '45px',\r\n        border: '1px solid rgba(0,0,0,0.25)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            \r\n        }\r\n    },\r\n    focused: {\r\n        border: `2px solid ${theme.palette.primary.main}`\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        \r\n    },\r\n    searchInput: {\r\n        height: '34px',\r\n        width: '98.5%',\r\n        margin: '3px 0.75%',\r\n        borderRadius: '5px 25px 25px 5px',\r\n        color: 'white',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '& fieldset': {\r\n            border: '0'\r\n        } \r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 5px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    tag: {\r\n        padding: '5px 10px',\r\n        borderRadius: '50px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    tagLabel: {\r\n        padding: '0 5px'\r\n    },\r\n    removeBtn: {\r\n        padding: '4px',\r\n        color: 'white'\r\n    },\r\n    tagRemove: {\r\n        fontSize: '16px'\r\n    },\r\n    searchLabel: {\r\n        padding: '5px 20px 5px 10px', \r\n        cursor: 'pointer',\r\n        color: 'rgba(255,255,255,0.5)',\r\n        fontSize: '15px' \r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateOwner.js",["1035","1036"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Paper, FormControl, IconButton, useMediaQuery, Fade, Modal, Backdrop,Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { getUserList } from '../../api/userApi';\r\nimport clsx from 'clsx'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\n\r\n\r\nexport const UpdateOwner = ({ handleClose, handleSave, isOpen, currentOwner, title, instructions }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ selectedUser, setSelectedUser ] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        getUserList()\r\n        .then(data => {\r\n            if (currentOwner) {\r\n                setSelectedUser(currentOwner._id)\r\n            }\r\n            setUserList(data.filter(u => u._id !== currentOwner._id ));\r\n        })\r\n    }, [currentOwner])\r\n\r\n    const handleChange = event => {\r\n        setSelectedUser(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={isOpen}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xs={11} sm={7} md={5} lg={3} xl={3}>\r\n                        <Paper \r\n                            className={classes.paper} \r\n                            style={{ direction: lang.dir }}\r\n                            elevation={6}    \r\n                        >\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {title}\r\n                                </div>\r\n                                <IconButton className={classes.closeBtn} onClick={handleClose}>\r\n                                    <ClearRoundedIcon className={classes.icon}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div className={classes.instructions}>\r\n                                {instructions}\r\n                            </div>\r\n                            <FormControl variant='outlined' className={classes.textInput} >\r\n                                <Select\r\n                                    value={selectedUser}\r\n                                    onChange={handleChange}\r\n                                    className={classes.menu}\r\n                                    MenuProps={{\r\n                                        classes: {\r\n                                            paper: classes.menupaper\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        userList.map( (user, i) => {\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    className={classes.menuitem}\r\n                                                    value={user._id} \r\n                                                    key={i}\r\n                                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                                >\r\n                                                    {`${user.firstName} ${user.lastName}`}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div className={classes.controls}>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.save)}\r\n                                    onClick={() => handleSave(selectedUser)}\r\n                                    disabled={!selectedUser}\r\n                                >\r\n                                    {t(\"alert.confirm\")}\r\n                                </Button>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.cancel)}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    {t(\"alert.cancel\")}\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    \r\n                </Grid> \r\n                \r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px',\r\n        borderRadius: '10px',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '18px',\r\n        padding: '5px 10px',\r\n        height: 'fit-content'\r\n    },\r\n    closeBtn: {\r\n        fontSize: '20px',\r\n        height: '40px',\r\n        width: '40px'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        borderRadius: '25px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    instructions: {\r\n        width: 'auto',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '12px',\r\n        margin: '0px 10px'\r\n    },\r\n    menu: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(10px)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        marginTop: '55px',\r\n        marginRight: '7px',\r\n        maxHeight: '200px',\r\n        overflowY: 'auto',\r\n\r\n    },\r\n    menuitem: {\r\n        color: 'white'\r\n    },\r\n    textInput: {\r\n        margin: '20px 5px',\r\n        width: '300px',\r\n        '& input': {\r\n            color: 'white',\r\n            paddingLeft: '20px',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        }    \r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\UpsertSystem.js",["1037","1038","1039","1040"],"import DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n\tAvatar,\r\n\tChip,\r\n\tFormControlLabel,\r\n\tFormHelperText,\r\n\tGrid,\r\n\tmakeStyles,\r\n\tMenuItem,\r\n\tRadio,\r\n\tRadioGroup,\r\n\tSelect,\r\n\tTextField,\r\n} from \"@material-ui/core\";\r\nimport { ClearRounded } from \"@material-ui/icons\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getFullName, getLocale } from \"../../../api/genericApi\";\r\nimport { getAssetsSuggestions, getSystem } from \"../../../api/systemsApi\";\r\nimport { createUserOptions } from \"../../../api/userApi\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport { ModalContainer } from \"../../reuseables/ModalContainer\";\r\nimport { UserItem } from \"../../user/UserItem\";\r\n\r\nexport const UpsertSystem = ({\r\n\thandleClose,\r\n\thandleSave,\r\n\thandleUpdate,\r\n\tsystemId,\r\n\tdata,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { t } = useTranslation();\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [mode, setMode] = useState(systemId ? \"update\" : \"create\");\r\n\tconst [errors, setErrors] = useState([]);\r\n\tconst [assets, setAssets] = useState([]);\r\n\tconst [userList, setUserList] = useState([]);\r\n\tconst [details, setDetails] = useState({\r\n\t\tname: \"\",\r\n\t\tasset: \"\",\r\n\t\towner: \"\",\r\n\t\trelatedUsers: [],\r\n\t});\r\n\tconst [addData, setAddData] = useState({\r\n\t\tgeneral: {\r\n\t\t\tlocation: \"\",\r\n\t\t\tmanufacturingYear: \"\",\r\n\t\t\tSID: \"\",\r\n\t\t},\r\n\t\tmanufacturer: {\r\n\t\t\tname: \"\",\r\n\t\t\tcontactName: \"\",\r\n\t\t\temail: \"\",\r\n\t\t\tphoneNumber: \"\",\r\n\t\t\textension: \"\",\r\n\t\t},\r\n\t\tsupplier: {\r\n\t\t\tname: \"\",\r\n\t\t\tcontactName: \"\",\r\n\t\t\temail: \"\",\r\n\t\t\tphoneNumber: \"\",\r\n\t\t\textension: \"\",\r\n\t\t},\r\n\t\tinsurance: {\r\n\t\t\tname: \"\",\r\n\t\t\tcontanctName: \"\",\r\n\t\t\temail: \"\",\r\n\t\t\tphoneNumber: \"\",\r\n\t\t\textension: \"\",\r\n\t\t\texpiryDate: null,\r\n\t\t},\r\n\t\twarranty: {\r\n\t\t\tissuer: \"\",\r\n\t\t\texpiryDate: null,\r\n\t\t},\r\n\t});\r\n\r\n\tconst validateFields = () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet errList = [];\r\n\t\t\tif (handleUpdate) resolve(true);\r\n\t\t\tif (!details.owner) {\r\n\t\t\t\terrList.push({ field: \"owner\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (!details.asset) {\r\n\t\t\t\terrList.push({ field: \"asset\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (!details.name) {\r\n\t\t\t\terrList.push({ field: \"name\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\r\n\t\t\tif (errList.length) {\r\n\t\t\t\tsetErrors(errList);\r\n\t\t\t\tresolve(false);\r\n\t\t\t}\r\n\t\t\tresolve(true);\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tprepareData();\r\n\t}, []);\r\n\r\n\tconst prepareData = async () => {\r\n\t\tconst [userOptions, assetSuggestions] = await Promise.all([\r\n\t\t\tcreateUserOptions(),\r\n\t\t\tgetAssetsSuggestions(),\r\n\t\t]);\r\n\t\tsetUserList(userOptions);\r\n\t\tsetAssets(assetSuggestions);\r\n\t\tif (!systemId) {\r\n\t\t\tsetIsLoading(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst res = await getSystem(systemId);\r\n\t\tsetAddData(res.data);\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tvalidateFields().then((res) => {\r\n\t\t\tif (res) {\r\n\t\t\t\tif (mode === \"update\") {\r\n\t\t\t\t\thandleUpdate({ system: systemId, data: addData });\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\thandleSave({ ...details, data: addData });\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangeAddData = (obj) => (event) => {\r\n\t\tsetAddData({\r\n\t\t\t...addData,\r\n\t\t\t[obj.type]: {\r\n\t\t\t\t...addData[obj.type],\r\n\t\t\t\t[obj.field]: event.target.value,\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (field) => (event) => {\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\t[field]: event.target.value,\r\n\t\t});\r\n\t\tif (errors.length) {\r\n\t\t\tsetErrors(errors.filter((err) => err.field !== field));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleChangeMultiple = (event) => {\r\n\t\tsetDetails({ ...details, relatedUsers: event.target.value });\r\n\t};\r\n\r\n\tconst handleLinkedRemove = (realtedUser) => (event) => {\r\n\t\tevent.stopPropagation();\r\n\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\trelatedUsers: details.relatedUsers.filter((lu) => lu !== realtedUser),\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangeInsuranceExpiry = (date) => {\r\n\t\tsetAddData({\r\n\t\t\t...addData,\r\n\t\t\tinsurance: {\r\n\t\t\t\t...addData.insurance,\r\n\t\t\t\texpiryDate: date,\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangeWarrantyExpiry = (date) => {\r\n\t\tsetAddData({\r\n\t\t\t...addData,\r\n\t\t\twarranty: {\r\n\t\t\t\t...addData.warranty,\r\n\t\t\t\texpiryDate: date,\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress initial={true} />\r\n\t) : (\r\n\t\t<ModalContainer\r\n\t\t\thandleClose={handleClose}\r\n\t\t\ttitle={\r\n\t\t\t\tmode === \"update\"\r\n\t\t\t\t\t? t(\"systemsModule.updateSystemDetails\")\r\n\t\t\t\t\t: t(\"systemsModule.createSystem\")\r\n\t\t\t}\r\n\t\t\thandleConfirm={handleConfirm}\r\n\t\t>\r\n\t\t\t{mode === \"create\" && (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.section}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t\t{t(\"systemsModule.generalDetails\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\t\t\tlabel={t(`systemsModule.systemName`)}\r\n\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `name`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\tvalue={details.name}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange(\"name\")}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `name`).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t? t(\"errors.isRequired\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={6}\r\n\t\t\t\t\t\txl={6}\r\n\t\t\t\t\t\tclassName={classes.section}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t\t{t(\"systemsModule.owningAsset\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `asset`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\tvalue={details.asset}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange(`asset`)}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\t\tdisablePortal: true,\r\n\t\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{assets.map((asset, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={asset.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{asset.text}\r\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t{errors.filter((e) => e.field === \"asset\").length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"#f44336\", marginRight: \"15px\" }}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{t(\"errors.isRequired\")}\r\n\t\t\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.section}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t\t{t(\"systemsModule.systemOwner\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `owner`).length > 0}\r\n\t\t\t\t\t\t\t\t\tvalue={details.owner}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange(`owner`)}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\tdisablePortal: true,\r\n\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\trenderValue={(selected) => {\r\n\t\t\t\t\t\t\t\t\t\tlet user = userList.find((f) => f._id === selected);\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\tavatar={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ height: \"40px\", width: \"40px\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={user.avatar}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={getFullName(user)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{userList.map((user, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={user.value}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.userCont}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tavatarSize={40}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={13}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t{errors.filter((e) => e.field === \"owner\").length > 0 && (\r\n\t\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"#f44336\", marginRight: \"15px\" }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"errors.isRequired\")}\r\n\t\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={7}\r\n\t\t\t\t\t\txl={7}\r\n\t\t\t\t\t\tclassName={classes.section}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t\t{t(\"systemsModule.relatedUsers\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\tvalue={details.relatedUsers}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChangeMultiple}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\tdisablePortal: true,\r\n\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\trenderValue={(selected) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.chips}>\r\n\t\t\t\t\t\t\t\t\t\t\t{selected.map((value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet user = userList.find((f) => f._id === value);\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.chipsCont}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclickable\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tavatar={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ height: \"40px\", width: \"40px\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={user.avatar}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={getFullName(user)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonDelete={handleLinkedRemove(value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteIcon={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ClearRounded className={classes.removeIcon} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={(e) => e.stopPropagation()}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{userList.map((user, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={user.value}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.userCont}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tavatarSize={40}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={14}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)}\r\n\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"systemsModule.additionalDetails\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container className={classes.fields}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\tlabel={t(`systemsModule.location`)}\r\n\t\t\t\t\t\t\tvalue={addData.general.location}\r\n\t\t\t\t\t\t\tonChange={handleChangeAddData({\r\n\t\t\t\t\t\t\t\ttype: \"general\",\r\n\t\t\t\t\t\t\t\tfield: \"location\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\tlabel={t(`systemsModule.manufacturingYear`)}\r\n\t\t\t\t\t\t\tvalue={addData.general.manufacturingYear}\r\n\t\t\t\t\t\t\tonChange={handleChangeAddData({\r\n\t\t\t\t\t\t\t\ttype: \"general\",\r\n\t\t\t\t\t\t\t\tfield: \"manufacturingYear\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\tlabel={t(`systemsModule.SID`)}\r\n\t\t\t\t\t\t\tvalue={addData.general.SID}\r\n\t\t\t\t\t\t\tonChange={handleChangeAddData({ type: \"general\", field: \"SID\" })}\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"systemsModule.manufacturer\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container className={classes.fields}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\tlabel={t(`systemsModule.manufacturerDetails.name`)}\r\n\t\t\t\t\t\t\tvalue={addData.manufacturer.name}\r\n\t\t\t\t\t\t\tonChange={handleChangeAddData({\r\n\t\t\t\t\t\t\t\ttype: \"manufacturer\",\r\n\t\t\t\t\t\t\t\tfield: \"name\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\tlabel={t(`systemsModule.manufacturerDetails.contactName`)}\r\n\t\t\t\t\t\t\tvalue={addData.manufacturer.contactName}\r\n\t\t\t\t\t\t\tonChange={handleChangeAddData({\r\n\t\t\t\t\t\t\t\ttype: \"manufacturer\",\r\n\t\t\t\t\t\t\t\tfield: \"contactName\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\tlabel={t(`systemsModule.manufacturerDetails.email`)}\r\n\t\t\t\t\t\t\tvalue={addData.manufacturer.email}\r\n\t\t\t\t\t\t\tonChange={handleChangeAddData({\r\n\t\t\t\t\t\t\t\ttype: \"manufacturer\",\r\n\t\t\t\t\t\t\t\tfield: \"email\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\tlabel={t(`systemsModule.manufacturerDetails.phoneNumber`)}\r\n\t\t\t\t\t\t\tvalue={addData.manufacturer.phoneNumber}\r\n\t\t\t\t\t\t\tonChange={handleChangeAddData({\r\n\t\t\t\t\t\t\t\ttype: \"manufacturer\",\r\n\t\t\t\t\t\t\t\tfield: \"phoneNumber\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\tlabel={t(`systemsModule.manufacturerDetails.extension`)}\r\n\t\t\t\t\t\t\tvalue={addData.manufacturer.extension}\r\n\t\t\t\t\t\t\tonChange={handleChangeAddData({\r\n\t\t\t\t\t\t\t\ttype: \"manufacturer\",\r\n\t\t\t\t\t\t\t\tfield: \"extension\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"systemsModule.supplier\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container className={classes.fields}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\tlabel={t(`systemsModule.supplierDetails.name`)}\r\n\t\t\t\t\t\t\tvalue={addData.supplier.name}\r\n\t\t\t\t\t\t\tonChange={handleChangeAddData({\r\n\t\t\t\t\t\t\t\ttype: \"supplier\",\r\n\t\t\t\t\t\t\t\tfield: \"name\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\tlabel={t(`systemsModule.supplierDetails.contactName`)}\r\n\t\t\t\t\t\t\tvalue={addData.supplier.contactName}\r\n\t\t\t\t\t\t\tonChange={handleChangeAddData({\r\n\t\t\t\t\t\t\t\ttype: \"supplier\",\r\n\t\t\t\t\t\t\t\tfield: \"contactName\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\tlabel={t(`systemsModule.supplierDetails.email`)}\r\n\t\t\t\t\t\t\tvalue={addData.supplier.email}\r\n\t\t\t\t\t\t\tonChange={handleChangeAddData({\r\n\t\t\t\t\t\t\t\ttype: \"supplier\",\r\n\t\t\t\t\t\t\t\tfield: \"email\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\tlabel={t(`systemsModule.supplierDetails.phoneNumber`)}\r\n\t\t\t\t\t\t\tvalue={addData.supplier.phoneNumber}\r\n\t\t\t\t\t\t\tonChange={handleChangeAddData({\r\n\t\t\t\t\t\t\t\ttype: \"supplier\",\r\n\t\t\t\t\t\t\t\tfield: \"phoneNumber\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\tlabel={t(`systemsModule.supplierDetails.extension`)}\r\n\t\t\t\t\t\t\tvalue={addData.supplier.extension}\r\n\t\t\t\t\t\t\tonChange={handleChangeAddData({\r\n\t\t\t\t\t\t\t\ttype: \"supplier\",\r\n\t\t\t\t\t\t\t\tfield: \"extension\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"systemsModule.insurance\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container className={classes.fields}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\tlabel={t(`systemsModule.insuranceDetails.name`)}\r\n\t\t\t\t\t\t\tvalue={addData.insurance.name}\r\n\t\t\t\t\t\t\tonChange={handleChangeAddData({\r\n\t\t\t\t\t\t\t\ttype: \"insurance\",\r\n\t\t\t\t\t\t\t\tfield: \"name\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\tlabel={t(`systemsModule.insuranceDetails.contactName`)}\r\n\t\t\t\t\t\t\tvalue={addData.insurance.contactName}\r\n\t\t\t\t\t\t\tonChange={handleChangeAddData({\r\n\t\t\t\t\t\t\t\ttype: \"insurance\",\r\n\t\t\t\t\t\t\t\tfield: \"contactName\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\tlabel={t(`systemsModule.insuranceDetails.email`)}\r\n\t\t\t\t\t\t\tvalue={addData.insurance.email}\r\n\t\t\t\t\t\t\tonChange={handleChangeAddData({\r\n\t\t\t\t\t\t\t\ttype: \"insurance\",\r\n\t\t\t\t\t\t\t\tfield: \"email\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\tlabel={t(`systemsModule.insuranceDetails.phoneNumber`)}\r\n\t\t\t\t\t\t\tvalue={addData.insurance.phoneNumber}\r\n\t\t\t\t\t\t\tonChange={handleChangeAddData({\r\n\t\t\t\t\t\t\t\ttype: \"insurance\",\r\n\t\t\t\t\t\t\t\tfield: \"phoneNumber\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\tlabel={t(`systemsModule.insuranceDetails.extension`)}\r\n\t\t\t\t\t\t\tvalue={addData.insurance.extension}\r\n\t\t\t\t\t\t\tonChange={handleChangeAddData({\r\n\t\t\t\t\t\t\t\ttype: \"insurance\",\r\n\t\t\t\t\t\t\t\tfield: \"extension\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MuiPickersUtilsProvider\r\n\t\t\t\t\t\t\tutils={DateFnsUtils}\r\n\t\t\t\t\t\t\tlocale={getLocale(lang.code)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\tformat=\"dd/MM/yyyy\"\r\n\t\t\t\t\t\t\t\tlabel={t(`systemsModule.insuranceDetails.expiryDate`)}\r\n\t\t\t\t\t\t\t\tvalue={addData.insurance.expiryDate}\r\n\t\t\t\t\t\t\t\tonChange={handleChangeInsuranceExpiry}\r\n\t\t\t\t\t\t\t\tinputVariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tautoOk={true}\r\n\t\t\t\t\t\t\t\tdisablePast={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"systemsModule.warranty\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container className={classes.fields}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={8}\r\n\t\t\t\t\t\txl={8}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\t\tvalue={addData.warranty.issuer}\r\n\t\t\t\t\t\t\tonChange={handleChangeAddData({\r\n\t\t\t\t\t\t\t\ttype: \"warranty\",\r\n\t\t\t\t\t\t\t\tfield: \"issuer\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tclassName={classes.radioGroup}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\tvalue=\"supplier\"\r\n\t\t\t\t\t\t\t\tcontrol={<Radio color={\"white\"} className={classes.radioBtn} />}\r\n\t\t\t\t\t\t\t\tlabel={t(\"systemsModule.warrantyDetails.supplier\")}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\tvalue=\"manufacturer\"\r\n\t\t\t\t\t\t\t\tcontrol={<Radio color={\"white\"} className={classes.radioBtn} />}\r\n\t\t\t\t\t\t\t\tlabel={t(\"systemsModule.warrantyDetails.manufacturer\")}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\tvalue=\"\"\r\n\t\t\t\t\t\t\t\tcontrol={<Radio color={\"white\"} className={classes.radioBtn} />}\r\n\t\t\t\t\t\t\t\tlabel={t(\"systemsModule.warrantyDetails.nowarranty\")}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MuiPickersUtilsProvider\r\n\t\t\t\t\t\t\tutils={DateFnsUtils}\r\n\t\t\t\t\t\t\tlocale={getLocale(lang.code)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\tformat=\"dd/MM/yyyy\"\r\n\t\t\t\t\t\t\t\tlabel={t(`systemsModule.warrantyDetails.expiryDate`)}\r\n\t\t\t\t\t\t\t\tvalue={addData.warranty.expiryDate}\r\n\t\t\t\t\t\t\t\tonChange={handleChangeWarrantyExpiry}\r\n\t\t\t\t\t\t\t\tinputVariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tautoOk={true}\r\n\t\t\t\t\t\t\t\tdisablePast={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</ModalContainer>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ticonBtn: {\r\n\t\tmargin: \"10px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"20px\",\r\n\t},\r\n\tsection: {\r\n\t\tmargin: \"10px 5px\",\r\n\t},\r\n\tsectionTitle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"7px 20px\",\r\n\t\tmarginLeft: \"25px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tborderRadius: \"8px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tmarginLeft: \"15px\",\r\n\t\t},\r\n\t},\r\n\tfields: {\r\n\t\tpadding: \"10px 20px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px\",\r\n\t\t},\r\n\t},\r\n\ttextContainer: {\r\n\t\tpadding: \"5px\",\r\n\t},\r\n\ttextField: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tselectInput: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmarginRight: \"7px\",\r\n\t\tmarginLeft: \"-5px\",\r\n\t\tmaxHeight: \"200px\",\r\n\t\toverflowY: \"auto\",\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"100%\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\t},\r\n\t},\r\n\tcontrols: {\r\n\t\tborderTop: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"10px 0\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t},\r\n\tcontrol: {\r\n\t\twidth: \"30%\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\tfontSize: \"16px\",\r\n\t\tmargin: \"5px\",\r\n\t\tpadding: \"5px 30px\",\r\n\t\tborderRadius: \"30px\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tsave: {\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"black\",\r\n\t\t},\r\n\t\t\"&:disabled\": {\r\n\t\t\tcolor: \"rgba(255,255,255,0.3)\",\r\n\t\t},\r\n\t},\r\n\tcancel: {\r\n\t\t\"&:hover\": {\r\n\t\t\tboxShadow: \"inset rgba(255,255,255,0.3) 0 0 2px 1px\",\r\n\t\t},\r\n\t},\r\n\tchips: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexWrap: \"wrap\",\r\n\t},\r\n\tchip: {\r\n\t\theight: \"50px\",\r\n\t\tfontSize: \"14px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tcolor: \"white\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\t\tboxShadow: \"inset lightgrey 0px 0px 1px 1px\",\r\n\t\t},\r\n\t},\r\n\tuserCont: {\r\n\t\theight: \"fit-content\",\r\n\t\tpadding: 0,\r\n\t\tmargin: 0,\r\n\t\tmargin: \"5px 0\",\r\n\t},\r\n\tchipsCont: {\r\n\t\theight: \"fit-content\",\r\n\t\tpadding: 0,\r\n\t\tmargin: \"3px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\tboxShadow: \"inset rgba(0,0,0,0.5) 0px 0px 2px 1px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjutifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tremoveIcon: {\r\n\t\tcolor: \"rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"5px\",\r\n\t\tmarginRight: \"5px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\t\tcolor: \"white\",\r\n\t\t},\r\n\t},\r\n\tradioGroup: {\r\n\t\tcolor: \"white\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"row\",\r\n\t\talignitems: \"center\",\r\n\t},\r\n\tradioBtn: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"15px\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemAdditionalDetails.js",["1041","1042"],"import {\r\n\tCollapse,\r\n\tGrid,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tuseMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { format } from \"date-fns\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\n\r\nexport const SystemAdditionalDetails = ({\r\n\tdata,\r\n\tisOpen,\r\n\tsystemId,\r\n\ttoggleEdit,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down(\"md\"));\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst [systemData, setSystemData] = useState(null);\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsLoading(true);\r\n\t\tsetSystemData(data);\r\n\t\tsetIsLoading(false);\r\n\t}, [data]);\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress />\r\n\t) : (\r\n\t\t<Collapse in={isOpen}>\r\n\t\t\t<div className={classes.container}>\r\n\t\t\t\t<Grid container justify={\"center\"} className={classes.grid} spacing={2}>\r\n\t\t\t\t\t<Grid container className={classes.gridItem}>\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.headerRow}>\r\n\t\t\t\t\t\t\t<div className={classes.title}>\r\n\t\t\t\t\t\t\t\t{t(\"systemsModule.additionalDetails\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<IconButton className={classes.iconBtn} onClick={toggleEdit}>\r\n\t\t\t\t\t\t\t\t<EditRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item md={6} lg={3} xl={4} className={classes.fieldContainer}>\r\n\t\t\t\t\t\t\t<div className={classes.label}>{t(\"systemsModule.location\")}</div>\r\n\t\t\t\t\t\t\t<div className={classes.fieldData}>\r\n\t\t\t\t\t\t\t\t{systemData.general.location || t(\"general.noData\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\tclassName={classes.fieldContainer}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className={classes.label}>\r\n\t\t\t\t\t\t\t\t{t(\"systemsModule.manufacturingYear\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.fieldData}>\r\n\t\t\t\t\t\t\t\t{systemData.general.manufacturingYear || t(\"general.noData\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\tclassName={classes.fieldContainer}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className={classes.label}>{t(\"systemsModule.SID\")}</div>\r\n\t\t\t\t\t\t\t<div className={classes.fieldData}>\r\n\t\t\t\t\t\t\t\t{systemData.general.SID || t(\"general.noData\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\tclassName={classes.fieldContainer}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className={classes.label}>\r\n\t\t\t\t\t\t\t\t{t(\"systemsModule.warrantyDetails.issuer\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.fieldData}>\r\n\t\t\t\t\t\t\t\t{t(\r\n\t\t\t\t\t\t\t\t\t`systemsModule.warrantyDetails.${\r\n\t\t\t\t\t\t\t\t\t\tsystemData.warranty.issuer || \"nowarranty\"\r\n\t\t\t\t\t\t\t\t\t}`\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\tclassName={classes.fieldContainer}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className={classes.label}>\r\n\t\t\t\t\t\t\t\t{t(\"systemsModule.warrantyDetails.expiryDate\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.fieldData}>\r\n\t\t\t\t\t\t\t\t{systemData.warranty.expiryDate\r\n\t\t\t\t\t\t\t\t\t? format(\r\n\t\t\t\t\t\t\t\t\t\t\tnew Date(systemData.warranty.expiryDate),\r\n\t\t\t\t\t\t\t\t\t\t\tlang.dateformat\r\n\t\t\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t\t\t: t(\"systemsModule.warrantyDetails.nowarranty\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} lg={4} xl={4} className={classes.gridItem}>\r\n\t\t\t\t\t\t<div className={classes.card}>\r\n\t\t\t\t\t\t\t<div className={classes.cardTitle}>\r\n\t\t\t\t\t\t\t\t{t(\"systemsModule.manufacturer\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.cardRow}>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowLabel}>\r\n\t\t\t\t\t\t\t\t\t{t(\"systemsModule.manufacturerDetails.name\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowData}>\r\n\t\t\t\t\t\t\t\t\t{systemData.manufacturer.name || t(\"general.noData\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.cardRow}>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowLabel}>\r\n\t\t\t\t\t\t\t\t\t{t(\"systemsModule.manufacturerDetails.contactName\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowData}>\r\n\t\t\t\t\t\t\t\t\t{systemData.manufacturer.contactName || t(\"general.noData\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.cardRow}>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowLabel}>\r\n\t\t\t\t\t\t\t\t\t{t(\"systemsModule.manufacturerDetails.email\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowData}>\r\n\t\t\t\t\t\t\t\t\t{systemData.manufacturer.email || t(\"general.noData\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.cardRow}>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowLabel}>\r\n\t\t\t\t\t\t\t\t\t{t(\"systemsModule.manufacturerDetails.phoneNumber\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowData}>\r\n\t\t\t\t\t\t\t\t\t{systemData.manufacturer.phoneNumber || t(\"general.noData\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.cardRow}>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowLabel}>\r\n\t\t\t\t\t\t\t\t\t{t(\"systemsModule.manufacturerDetails.extension\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowData}>\r\n\t\t\t\t\t\t\t\t\t{systemData.manufacturer.extension || t(\"general.noData\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} lg={4} xl={4} className={classes.gridItem}>\r\n\t\t\t\t\t\t<div className={classes.card}>\r\n\t\t\t\t\t\t\t<div className={classes.cardTitle}>\r\n\t\t\t\t\t\t\t\t{t(\"systemsModule.supplier\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.cardRow}>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowLabel}>\r\n\t\t\t\t\t\t\t\t\t{t(\"systemsModule.supplierDetails.name\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowData}>\r\n\t\t\t\t\t\t\t\t\t{systemData.supplier.name || t(\"general.noData\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.cardRow}>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowLabel}>\r\n\t\t\t\t\t\t\t\t\t{t(\"systemsModule.supplierDetails.contactName\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowData}>\r\n\t\t\t\t\t\t\t\t\t{systemData.supplier.contactName || t(\"general.noData\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.cardRow}>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowLabel}>\r\n\t\t\t\t\t\t\t\t\t{t(\"systemsModule.supplierDetails.email\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowData}>\r\n\t\t\t\t\t\t\t\t\t{systemData.supplier.email || t(\"general.noData\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.cardRow}>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowLabel}>\r\n\t\t\t\t\t\t\t\t\t{t(\"systemsModule.supplierDetails.phoneNumber\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowData}>\r\n\t\t\t\t\t\t\t\t\t{systemData.supplier.phoneNumber || t(\"general.noData\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.cardRow}>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowLabel}>\r\n\t\t\t\t\t\t\t\t\t{t(\"systemsModule.supplierDetails.extension\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowData}>\r\n\t\t\t\t\t\t\t\t\t{systemData.supplier.extension || t(\"general.noData\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} lg={4} xl={4} className={classes.gridItem}>\r\n\t\t\t\t\t\t<div className={classes.card}>\r\n\t\t\t\t\t\t\t<div className={classes.cardTitle}>\r\n\t\t\t\t\t\t\t\t{t(\"systemsModule.insurance\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.cardRow}>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowLabel}>\r\n\t\t\t\t\t\t\t\t\t{t(\"systemsModule.insuranceDetails.name\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowData}>\r\n\t\t\t\t\t\t\t\t\t{systemData.insurance.name || t(\"general.noData\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.cardRow}>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowLabel}>\r\n\t\t\t\t\t\t\t\t\t{t(\"systemsModule.insuranceDetails.contactName\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowData}>\r\n\t\t\t\t\t\t\t\t\t{systemData.insurance.contactName || t(\"general.noData\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.cardRow}>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowLabel}>\r\n\t\t\t\t\t\t\t\t\t{t(\"systemsModule.insuranceDetails.email\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowData}>\r\n\t\t\t\t\t\t\t\t\t{systemData.insurance.email || t(\"general.noData\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.cardRow}>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowLabel}>\r\n\t\t\t\t\t\t\t\t\t{t(\"systemsModule.insuranceDetails.phoneNumber\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowData}>\r\n\t\t\t\t\t\t\t\t\t{systemData.insurance.phoneNumber || t(\"general.noData\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.cardRow}>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowLabel}>\r\n\t\t\t\t\t\t\t\t\t{t(\"systemsModule.insuranceDetails.extension\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.rowData}>\r\n\t\t\t\t\t\t\t\t\t{systemData.insurance.extension || t(\"general.noData\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t</Collapse>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tborderRadius: \"5px\",\r\n\t\tmargin: \"10px\",\r\n\t\tpadding: \"10px\",\r\n\t},\r\n\tgrid: {\r\n\t\tpadding: \"10px\",\r\n\t},\r\n\tgridItem: {\r\n\t\tdisplay: \"flex\",\r\n\t\tmargin: \"10px 0\",\r\n\t},\r\n\tfieldContainer: {\r\n\t\tpadding: \"10px\",\r\n\t\tmargin: \"15px 0\",\r\n\t\theight: \"60px\",\r\n\t},\r\n\tlabel: {\r\n\t\tpadding: \"5px 10px\",\r\n\t\tborderRadius: \"5px 5px 0px 0\",\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"fit-content\",\r\n\t\tfontSize: \"13px\",\r\n\t},\r\n\tfieldData: {\r\n\t\tpadding: \"15px 20px\",\r\n\t\twidth: \"200px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tborderRadius: \"0 5px 5px 5px\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tcard: {\r\n\t\tmargin: \"10px 0px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tborderRadius: \"5px\",\r\n\t\tpadding: \"10px\",\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tcardTitle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"20px\",\r\n\t\tpadding: \"10px\",\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\tborderRadius: \"5px\",\r\n\t},\r\n\tcardRow: {\r\n\t\tpadding: \"10px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tcolor: \"white\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\trowLabel: {\r\n\t\tpadding: \"3px 0\",\r\n\t\tfontSize: \"14px\",\r\n\t\tcolor: \"rgba(255,255,255,0.6)\",\r\n\t},\r\n\trowData: {\r\n\t\tfontSize: \"16px\",\r\n\t},\r\n\theaderRow: {\r\n\t\tcolor: \"white\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t\tpadding: \"0px 10px 10px 10px\",\r\n\t\tfontSize: \"20px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\ticonBtn: {\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"20px\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskMinified.js",[],"C:\\projects\\leev\\leev-fe\\src\\api\\documentsApi.js",["1043","1044"],"import axios from 'axios';\r\nimport i18next from 'i18next';\r\nimport path from 'path';\r\nimport { getUnauthorizedMessage } from './genericApi';\r\n\r\nexport const getDocument = async (documentId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/documents/getDocument`,\r\n\t\t\t{ documentId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tmodule: 'documents',\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getDocuments = async (tenant, filters) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/documents/getDocuments`,\r\n\t\t\t{ filters },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tmodule: 'documents',\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const deleteDocument = async (tenant, documentId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/documents/deleteDocument`, {\r\n\t\t\ttenant,\r\n\t\t\tdocumentId,\r\n\t\t},\r\n        {\r\n            headers: {\r\n                module: 'documents',\r\n                requesttype: 'delete',\r\n            },\r\n        });\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getFileTypeName = (type) => {\r\n\tif (type === '.doc' || type === '.docx') {\r\n\t\treturn 'MS Word';\r\n\t} else if (type === '.xls' || type === '.xlsx') {\r\n\t\treturn 'MS Excel';\r\n\t} else if (type === '.ppt' || type === '.pptx') {\r\n\t\treturn 'MS PowerPoint';\r\n\t} else if (type === '.csv') {\r\n\t\treturn 'CSV File';\r\n\t} else if (type === 'pdf') {\r\n\t\treturn 'PDF File';\r\n\t}\r\n\treturn 'Text File';\r\n};\r\n\r\nexport const downloadDocument = async (url) => {\r\n\tconst filename = path.basename(url);\r\n\ttry {\r\n\t\tconst res = await axios({\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: `${process.env.REACT_APP_BACKEND_URL}/documents/download?url=${url}`,\r\n            responseType: 'blob',\r\n            headers: {\r\n                module: 'documents',\r\n                requesttype: 'download'\r\n            }\r\n        });\r\n        if (res.status === 200) {\r\n            const file = window.URL.createObjectURL(new Blob([res.data]));\r\n            const link = document.createElement('a');\r\n            link.href = file;\r\n            link.setAttribute('download', filename);\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            return;\r\n        };\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const uploadDocument = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (!f[1]) return;\r\n\t\tformData.append(f[0], f[1]);\r\n\t});\r\n\tlet config = {\r\n\t\theaders: {\r\n            'Content-Type': `multipart/form-data`,\r\n            module: 'documents',\r\n            requesttype: 'upload'\r\n\t\t},\r\n\t};\r\n\ttry {\r\n\t\tconst res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/documents/createDocument`, formData, config);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateDocumentDetails = async (details) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/documents/updateDocumentDetails`, {\r\n\t\t\tdetails\r\n\t\t},\r\n        {\r\n            headers: {\r\n                module: 'documents',\r\n                requesttype: 'update',\r\n            },\r\n        });\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n} \r\n\r\nexport const getDocumentFromURL = async (url) => {\r\n\ttry {\r\n\t\tconst res = axios.get(url);\r\n\t\tconsole.log(res)\r\n\t} catch(e) {\r\n\t\tconsole.log(e)\r\n\t}\r\n}","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultsControls.js",["1045","1046"],"import {\r\n\tButton,\r\n\tButtonGroup,\r\n\tSlide,\r\n\tGrid,\r\n\tmakeStyles,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport BlurOnRoundedIcon from '@material-ui/icons/BlurOnRounded';\r\nimport ViewListRoundedIcon from '@material-ui/icons/ViewListRounded';\r\nimport ViewWeekRoundedIcon from '@material-ui/icons/ViewWeekRounded';\r\nimport clsx from 'clsx';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { getAsset, getFullAddress } from '../../../api/assetsApi';\r\nimport { getFaultsStatusListSuggestions } from '../../../api/faultsApi';\r\nimport { removeQueryParam } from '../../../api/genericApi';\r\nimport {\r\n\tgetAssetsSuggestions,\r\n\tgetSystemsByAssetOptions,\r\n} from '../../../api/systemsApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\n\r\nexport const FaultsControls = ({ viewType, setViewType }) => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [reloadedValue, setReloadedValue] = useState(null);\r\n\tconst [collapsed, setCollapsed] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (query.asset) {\r\n\t\t\thandleReloaded(query.asset).then((data) => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetReloadedValue(data);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetReloadedValue({\r\n\t\t\t\tlabel: '',\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\thistory.push({\r\n\t\t\t\tpath: location.pathname,\r\n\t\t\t\tsearch: removeQueryParam(location.search, 'system'),\r\n\t\t\t});\r\n\t\t}\r\n\t}, [location.search]);\r\n\r\n\tconst handleReloaded = async (assetId) => {\r\n\t\tconst res = await getAsset(assetId, false);\r\n\t\tif (res) {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: getFullAddress(res),\r\n\t\t\t\tvalue: res._id,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleCollapse = () => {\r\n\t\tif (collapsed) {\r\n\t\t\tsetCollapsed(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetCollapsed(true);\r\n\t};\r\n\r\n\tconst handleViewType = (type) => event => {\r\n\t\tsetViewType(type);\r\n\t\tsetCollapsed(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{downSm && (\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName={classes.sortandfilter}\r\n\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t<FilterListIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tendIcon={\r\n\t\t\t\t\t\t\t\tcollapsed ? (\r\n\t\t\t\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<ExpandMoreRoundedIcon />\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={toggleCollapse}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{t(\r\n\t\t\t\t\t\t\t\t`faultsModule.${\r\n\t\t\t\t\t\t\t\t\tcollapsed ? 'hide' : 'show'\r\n\t\t\t\t\t\t\t\t}Filters`\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t {\r\n                (!downSm || collapsed) &&\r\n\t\t\t<Slide in={true} direction={'up'} timeout={downSm ? 500 : 0}>\r\n\t\t\t\t<Grid container justify=\"center\" className={classes.filtersContainer}>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t{reloadedValue && (\r\n\t\t\t\t\t\t\t<SearchBoxSelect\r\n\t\t\t\t\t\t\t\tsuggestionsFunc={getAssetsSuggestions}\r\n\t\t\t\t\t\t\t\tplaceholder={t('systemsModule.filterByAsset')}\r\n\t\t\t\t\t\t\t\tfilterField={'asset'}\r\n\t\t\t\t\t\t\t\treloadedLabel={reloadedValue.label}\r\n\t\t\t\t\t\t\t\treloadedValue={reloadedValue.value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{query.asset && (\r\n\t\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\t\toptionsFunc={() => getSystemsByAssetOptions(query.asset)}\r\n\t\t\t\t\t\t\t\tplaceholder={t('systemsModule.filterBySystemName')}\r\n\t\t\t\t\t\t\t\tfilterIcon={<BlurOnRoundedIcon className={classes.icon} />}\r\n\t\t\t\t\t\t\t\tfilterField={'system'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{viewType === 'list' && (\r\n\t\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\t\toptionsFunc={getFaultsStatusListSuggestions}\r\n\t\t\t\t\t\t\t\tplaceholder={t('faultsModule.filterByStatus')}\r\n\t\t\t\t\t\t\t\tfilterIcon={<DoubleArrowIcon className={classes.icon} />}\r\n\t\t\t\t\t\t\t\tfilterField={'status'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={createUserOptions}\r\n\t\t\t\t\t\t\tplaceholder={t('faultsModule.filterByFaultOwner')}\r\n\t\t\t\t\t\t\tfilterIcon={<PersonRoundedIcon className={classes.icon} />}\r\n\t\t\t\t\t\t\tfilterField={'owner'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ButtonGroup className={classes.typeGroup}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\tclasses.modeBtn,\r\n\t\t\t\t\t\t\t\t\tclasses.listBtn,\r\n\t\t\t\t\t\t\t\t\tviewType === 'list'\r\n\t\t\t\t\t\t\t\t\t\t? classes.modeBtnActive\r\n\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t\t<ViewListRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={handleViewType('list')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{t('faultsModule.listMode')}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\tclasses.modeBtn,\r\n\t\t\t\t\t\t\t\t\tclasses.blocksBtn,\r\n\t\t\t\t\t\t\t\t\tviewType === 'blocks'\r\n\t\t\t\t\t\t\t\t\t\t? classes.modeBtnActive\r\n\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t\t<ViewWeekRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={handleViewType('blocks')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{t('faultsModule.blocksMode')}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Slide>\r\n}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tfiltersContainer: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            position: 'absolute',\r\n            bottom: '0',\r\n            background: 'rgba(0,0,0,0.8)',\r\n            backdropFilter: 'blur(22px)',\r\n            zIndex: 3,\r\n            padding: '40px 0 155px',\r\n            borderRadius: '30px 30px 0 0',\r\n            boxShadow: '0px -1px 1px 0px rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n\tgridItem: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'flex-start',\r\n\t\tflexWrap: 'wrap'\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tmarginLeft: '4px',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '6px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tsortandfilter: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'black',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '5px 25px 5px 3px',\r\n        whiteSpace: 'nowrap',\r\n        margin: '10px 0 0',\r\n        position: 'absolute',\r\n        bottom: '100px',\r\n        zIndex: 4,\r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    },\r\n\ttypeGroup: {\r\n\t\tmargin: '5px',\r\n\t\theight: '45px',\r\n\t},\r\n\tmodeBtn: {\r\n\t\tpadding: '0 15px 0 5px',\r\n\t\tcolor: 'white',\r\n\t\twidth: 'auto',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tlistBtn: {\r\n\t\tborderRadius: '25px 0 0 25px',\r\n\t},\r\n\tblocksBtn: {\r\n\t\tborderRadius: '0px 25px 25px 0px',\r\n\t},\r\n\tmodeBtnActive: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\UpsertFault.js",["1047","1048","1049","1050","1051","1052","1053"],"import {\r\n\tAvatar,\r\n\tButton,\r\n\tChip,\r\n\tFormHelperText,\r\n\tGrid,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tMenuItem,\r\n\tSelect,\r\n\tTextField,\r\n} from \"@material-ui/core\";\r\nimport DeleteOutlineRoundedIcon from \"@material-ui/icons/DeleteOutlineRounded\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { createTag, getFault, getFaultTagOptions } from \"../../../api/faultsApi\";\r\nimport { getFullName } from \"../../../api/genericApi\";\r\nimport {\r\n\tcreateLocationMenuOptions,\r\n\tgetLocationsByAsset,\r\n} from \"../../../api/locationsApi\";\r\nimport {\r\n\tcreateSystemMenuOptions,\r\n\tgetAssetsSuggestions,\r\n\tgetSystemsByAsset,\r\n} from \"../../../api/systemsApi\";\r\nimport { createUserOptions } from \"../../../api/userApi\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport { ModalContainer } from \"../../reuseables/ModalContainer\";\r\nimport { UserItem } from \"../../user/UserItem\";\r\nimport CheckCircleOutlinedIcon from '@material-ui/icons/CheckCircleOutlined';\r\nimport clsx from 'clsx'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ClearOutlinedIcon from '@material-ui/icons/ClearOutlined';\r\n\r\nexport const UpsertFault = ({\r\n\thandleClose,\r\n\thandleSave,\r\n\thandleUpdate,\r\n\tfaultId,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { t } = useTranslation();\r\n\tconst [mode, setMode] = useState(faultId ? \"update\" : \"create\");\r\n\tconst [errors, setErrors] = useState([]);\r\n\tconst [assets, setAssets] = useState([]);\r\n\tconst [systems, setSystems] = useState([]);\r\n\tconst [locations, setLocations] = useState([]);\r\n\tconst [userList, setUserList] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [tagValue, setTagValue] = useState(\"\");\r\n\tconst [tagOptions, setTagOptions] = useState([]);\r\n\tconst [details, setDetails] = useState({\r\n\t\ttenant: auth.user.tenant,\r\n\t\ttitle: \"\",\r\n\t\tdescription: \"\",\r\n\t\tasset: \"\",\r\n\t\tsystem: \"\",\r\n\t\tlocation: \"\",\r\n\t\towner: \"\",\r\n\t\trelatedUsers: [],\r\n\t\tcreatedBy: auth.user._id,\r\n\t\timages: [],\r\n\t\tuploadedImages: [],\r\n\t\ttags: []\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tprepareData();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!tagValue) {\r\n\t\t\tsetTagOptions([]);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tgetTagOptions();\r\n\t}, [tagValue]);\r\n\r\n\tconst prepareData = async () => {\r\n\t\tconst [userOptions, assetSuggestions] = await Promise.all([\r\n\t\t\tcreateUserOptions(),\r\n\t\t\tgetAssetsSuggestions(),\r\n\t\t]);\r\n\t\tsetUserList(userOptions);\r\n\t\tsetAssets(assetSuggestions);\r\n\t\tif (!faultId) {\r\n\t\t\tsetIsLoading(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst data = await getFault(faultId, true);\r\n\t\tawait Promise.all([\r\n\t\t\tloadSystemOptions(data.asset),\r\n\t\t\tloadLocationOptions(data.asset),\r\n\t\t]);\r\n\t\tif (!data) return;\r\n\t\tsetDetails({ ...data, images: [], uploadedImages: data.images });\r\n\t\tconsole.log(data)\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n\tconst validateFields = () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet errList = [];\r\n\t\t\tif (!details.owner) {\r\n\t\t\t\terrList.push({ field: \"owner\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (!details.asset) {\r\n\t\t\t\terrList.push({ field: \"asset\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (!details.system) {\r\n\t\t\t\terrList.push({ field: \"system\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (!details.system) {\r\n\t\t\t\terrList.push({ field: \"location\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (!details.title) {\r\n\t\t\t\terrList.push({ field: \"title\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\r\n\t\t\tif (errList.length) {\r\n\t\t\t\tsetErrors(errList);\r\n\t\t\t\tresolve(false);\r\n\t\t\t}\r\n\t\t\tresolve(true);\r\n\t\t});\r\n\t};\r\n\r\n\tconst loadSystemOptions = async (assetId) => {\r\n\t\tconst systems = await getSystemsByAsset(assetId);\r\n\t\tconst data = await createSystemMenuOptions(systems);\r\n\t\tsetSystems(data);\r\n\t\treturn true;\r\n\t};\r\n\r\n\tconst loadLocationOptions = async (assetId) => {\r\n\t\tconst locations = await getLocationsByAsset(assetId);\r\n\t\tconst data = await createLocationMenuOptions(locations);\r\n\t\tsetLocations(data);\r\n\t\treturn true;\r\n\t};\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tvalidateFields().then((res) => {\r\n\t\t\tif (!res) return;\r\n\t\t\tlet preped = {\r\n\t\t\t\t...details,\r\n\t\t\t\ttags: [...details.tags.map(t => t._id)]\r\n\t\t\t}\r\n\t\t\tif (mode === \"update\") {\r\n\t\t\t\thandleUpdate(preped);\r\n\t\t\t} else handleSave(preped);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (field) => async (event) => {\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\t[field]: event.target.value,\r\n\t\t});\r\n\t\tif (field === \"asset\") {\r\n\t\t\tif (event.target.value) {\r\n\t\t\t\tawait loadSystemOptions(event.target.value);\r\n\t\t\t\tawait loadLocationOptions(event.target.value);\r\n\t\t\t} else {\r\n\t\t\t\tsetDetails({\r\n\t\t\t\t\t...details,\r\n\t\t\t\t\tsystem: null,\r\n\t\t\t\t});\r\n\t\t\t\tsetSystems([]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (errors.length) {\r\n\t\t\tsetErrors(errors.filter((err) => err.field !== field));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleFileUpload = (event) => {\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\timages: event.target.files,\r\n\t\t});\r\n\t};\r\n\r\n\tconst removeImage = (i) => (event) => {\r\n\t\tlet im = details.uploadedImages;\r\n\t\tim.splice(i, 1);\r\n\t\tsetDetails({ ...details, uploadedImages: im });\r\n\t};\r\n\r\n\tconst handleTagValueChange = e => {\r\n\t\tlet val = e.target.value;\r\n\t\tsetTagValue(val);\r\n\t};\r\n\r\n\tconst getTagOptions = async () => {\r\n\t\tconst options = await getFaultTagOptions(faultId, tagValue);\r\n\t\tsetTagOptions(options.filter(o => {\r\n\t\t\tlet op = details.tags.find(dt => dt._id === o._id);\r\n\t\t\tif (!op) {\r\n\t\t\t\treturn o\r\n\t\t\t}\r\n\t\t}))\r\n\t}\r\n\r\n\tconst handleAddTag = tag => async event => {\r\n\t\tsetTagOptions(tagOptions.filter(o => {\r\n\t\t\treturn o._id !== tag._id\r\n\t\t}))\r\n\t\tsetDetails({\r\n\t\t\t...details, \r\n\t\t\ttags: [...details.tags, tag]\r\n\t\t})\r\n\t\tsetTagValue('')\r\n\t}\r\n\r\n\tconst handleRemoveTag = (tag) => event => {\r\n\t\tsetDetails({\r\n\t\t\t...details, \r\n\t\t\ttags: details.tags.filter(t => t._id !== tag._id)\r\n\t\t});\r\n\t}\r\n\r\n\tconst createAndAddTag = async () => {\r\n\t\tconst tag = await createTag(tagValue);\r\n\t\tconsole.log(tag)\r\n\t\tif (tag) {\r\n\t\t\tsetDetails({\r\n\t\t\t\t...details, \r\n\t\t\t\ttags: [ ...details.tags, tag]\r\n\t\t\t});\r\n\t\t};\r\n\t\tsetTagValue('');\r\n\t}\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress initial={true} />\r\n\t) : (\r\n\t\t<ModalContainer\r\n\t\t\thandleClose={handleClose}\r\n\t\t\ttitle={\r\n\t\t\t\tmode === \"update\"\r\n\t\t\t\t\t? t(\"faultsModule.upsert.updateFaultDetails\")\r\n\t\t\t\t\t: t(\"faultsModule.upsert.createFault\")\r\n\t\t\t}\r\n\t\t\thandleConfirm={handleConfirm}\r\n\t\t>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={12}\r\n\t\t\t\tsm={10}\r\n\t\t\t\tmd={10}\r\n\t\t\t\tlg={10}\r\n\t\t\t\txl={10}\r\n\t\t\t\tclassName={classes.section}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"faultsModule.upsert.asset\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `asset`).length > 0}\r\n\t\t\t\t\t\t\t\tvalue={details.asset}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(`asset`)}\r\n\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{assets.map((asset, i) => (\r\n\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tvalue={asset.value}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{asset.text}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t{errors.filter((e) => e.field === \"asset\").length > 0 && (\r\n\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#f44336\", marginRight: \"15px\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{t(\"errors.isRequired\")}\r\n\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={12}\r\n\t\t\t\tsm={5}\r\n\t\t\t\tmd={5}\r\n\t\t\t\tlg={5}\r\n\t\t\t\txl={5}\r\n\t\t\t\tclassName={classes.section}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"faultsModule.upsert.system\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `system`).length > 0}\r\n\t\t\t\t\t\t\t\tvalue={details.system}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(`system`)}\r\n\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{systems.map((system, i) => (\r\n\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tvalue={system.value}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{system.text}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t{errors.filter((e) => e.field === \"asset\").length > 0 && (\r\n\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#f44336\", marginRight: \"15px\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{t(\"errors.isRequired\")}\r\n\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={12}\r\n\t\t\t\tsm={5}\r\n\t\t\t\tmd={5}\r\n\t\t\t\tlg={5}\r\n\t\t\t\txl={5}\r\n\t\t\t\tclassName={classes.section}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"faultsModule.upsert.location\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `location`).length > 0}\r\n\t\t\t\t\t\t\t\tvalue={details.location}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(`location`)}\r\n\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{locations.map((location, i) => (\r\n\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tvalue={location.value}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{location.text}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t{errors.filter((e) => e.field === \"location\").length > 0 && (\r\n\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#f44336\", marginRight: \"15px\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{t(\"errors.isRequired\")}\r\n\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"faultsModule.upsert.generalDetails\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\tlabel={t(`faultsModule.upsert.title`)}\r\n\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `title`).length > 0}\r\n\t\t\t\t\t\t\t\tvalue={details.title}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(\"title\")}\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `title`).length > 0\r\n\t\t\t\t\t\t\t\t\t\t? t(\"errors.isRequired\")\r\n\t\t\t\t\t\t\t\t\t\t: `${60 - (details.title.length || 0)} ${t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"faultsModule.upsert.titleLimit\"\r\n\t\t\t\t\t\t\t\t\t\t  )}`\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\tmaxLength: 60,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `title`).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t? \"rgb(244, 67, 54)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"rgba(255,255,255,0.6)\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\tlabel={t(`faultsModule.upsert.description`)}\r\n\t\t\t\t\t\t\t\tvalue={details.description}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(\"description\")}\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\tmultiline={true}\r\n\t\t\t\t\t\t\t\trows={7}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"faultsModule.upsert.faultTags\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<div className={classes.addTagExplain}>\r\n\t\t\t\t\t\t\t\t{t(\"faultsModule.upsert.addTagExplanation\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.addTagRow}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\t\tlabel={t(`faultsModule.upsert.describe`)}\r\n\t\t\t\t\t\t\t\t\tvalue={tagValue}\r\n\t\t\t\t\t\t\t\t\tonChange={handleTagValueChange}\r\n\t\t\t\t\t\t\t\t\tclassName={clsx(classes.textField, classes.tagValueInput)}\r\n\t\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\t\thelperText={`${20 - (tagValue.length || 0)} ${t(\"faultsModule.upsert.titleLimit\")}`}\r\n\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\tmaxLength: 20,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"rgba(255,255,255,0.6)\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tstartIcon={<CheckCircleOutlinedIcon className={classes.addTagIcon} />}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.addTagButton}\r\n\t\t\t\t\t\t\t\t\tdisabled={!tagValue || tagOptions.length}\r\n\t\t\t\t\t\t\t\t\tonClick={createAndAddTag}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{t(\"faultsModule.addTag\")}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tBoolean(tagOptions.length) &&\r\n\t\t\t\t\t\t\t\t<div className={classes.optionsContainer}>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\ttagOptions.map(to => \r\n\t\t\t\t\t\t\t\t\t\t\t<Button className={classes.tagOptionBtn}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstartIcon={<AddIcon className={classes.icon}/>}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddTag(to)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{to.value}\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t<div className={classes.tagList}>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdetails.tags.length ? \r\n\t\t\t\t\t\t\t\tdetails.tags.map((tag) => \r\n\t\t\t\t\t\t\t\t\t<div className={classes.tag} key={tag._id} >\r\n\t\t\t\t\t\t\t\t\t\t{tag.value}\r\n\t\t\t\t\t\t\t\t\t\t<ClearOutlinedIcon className={classes.removeTagIcon} onClick={handleRemoveTag(tag)} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t) : \r\n\t\t\t\t\t\t\t\t<div className={classes.noTags}>\r\n\t\t\t\t\t\t\t\t\t{t(\"faultsModule.upsert.noTags\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={12}\r\n\t\t\t\tsm={6}\r\n\t\t\t\tmd={6}\r\n\t\t\t\tlg={4}\r\n\t\t\t\txl={4}\r\n\t\t\t\tclassName={classes.section}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"faultsModule.upsert.faultOwner\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `owner`).length > 0}\r\n\t\t\t\t\t\t\tvalue={details.owner}\r\n\t\t\t\t\t\t\tonChange={handleChange(`owner`)}\r\n\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\trenderValue={(selected) => {\r\n\t\t\t\t\t\t\t\tlet user = userList.find((f) => f._id === selected);\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\t\t\tavatar={\r\n\t\t\t\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ height: \"40px\", width: \"40px\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={user.avatar}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tlabel={getFullName(user)}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{userList.map((user, i) => (\r\n\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\tvalue={user.value}\r\n\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.userCont}>\r\n\t\t\t\t\t\t\t\t\t\t<UserItem user={user} avatarSize={40} size={13} showName />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t{errors.filter((e) => e.field === \"owner\").length > 0 && (\r\n\t\t\t\t\t\t\t<FormHelperText style={{ color: \"#f44336\", marginRight: \"15px\" }}>\r\n\t\t\t\t\t\t\t\t{t(\"errors.isRequired\")}\r\n\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Grid item xs={12} md={6} className={classes.section}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{mode === \"create\"\r\n\t\t\t\t\t\t\t? t(\"faultsModule.upsert.faultImages\")\r\n\t\t\t\t\t\t\t: t(\"faultsModule.upsert.addFaultImages\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tcomponent={\"label\"}\r\n\t\t\t\t\t\t\t\tvariant={\"contained\"}\r\n\t\t\t\t\t\t\t\tclassName={classes.uploadBtn}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{t(\"faultsModule.upsert.uploadImages\")}\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\taccepts=\"image/*\"\r\n\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\tonChange={handleFileUpload}\r\n\t\t\t\t\t\t\t\t\thidden\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<span className={classes.filesUploaded}>\r\n\t\t\t\t\t\t\t\t{`${details.images.length} ${t(\r\n\t\t\t\t\t\t\t\t\t\"faultsModule.upsert.imagesSelected\"\r\n\t\t\t\t\t\t\t\t)}`}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{Boolean(details.uploadedImages.length) && (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.uploadedImagesTitle}>\r\n\t\t\t\t\t\t\t\t\t{t(\"faultsModule.upsert.uploadedImages\")}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t{details.uploadedImages.map((image, i) => (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.imageRow} key={i}>\r\n\t\t\t\t\t\t\t\t\t\t<img src={image} className={classes.previewImage} />\r\n\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={removeImage(i)}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.removeImageBtn}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlineRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.removeImage}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</ModalContainer>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ticonBtn: {\r\n\t\tmargin: \"10px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"20px\",\r\n\t},\r\n\tsection: {\r\n\t\tmargin: \"10px 5px\",\r\n\t},\r\n\tsectionTitle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"7px 20px\",\r\n\t\tmarginLeft: \"25px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tborderRadius: \"8px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tmarginLeft: \"15px\",\r\n\t\t},\r\n\t},\r\n\tfields: {\r\n\t\tpadding: \"10px 20px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px\",\r\n\t\t},\r\n\t},\r\n\ttextContainer: {\r\n\t\tpadding: \"5px\",\r\n\t},\r\n\ttextField: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tselectInput: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t\theight: \"200px\",\r\n\t\toverflowY: \"auto\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmarginRight: \"7px\",\r\n\t\tmarginLeft: \"-5px\",\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"100%\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\t},\r\n\t},\r\n\tcontrols: {\r\n\t\tborderTop: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"10px 0\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t},\r\n\tcontrol: {\r\n\t\twidth: \"30%\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\tfontSize: \"16px\",\r\n\t\tmargin: \"5px\",\r\n\t\tpadding: \"5px 30px\",\r\n\t\tborderRadius: \"30px\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tsave: {\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"black\",\r\n\t\t},\r\n\t\t\"&:disabled\": {\r\n\t\t\tcolor: \"rgba(255,255,255,0.3)\",\r\n\t\t},\r\n\t},\r\n\tcancel: {\r\n\t\t\"&:hover\": {\r\n\t\t\tboxShadow: \"inset rgba(255,255,255,0.3) 0 0 2px 1px\",\r\n\t\t},\r\n\t},\r\n\tchips: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexWrap: \"wrap\",\r\n\t},\r\n\tchip: {\r\n\t\theight: \"50px\",\r\n\t\tfontSize: \"14px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tcolor: \"white\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\t\tboxShadow: \"inset lightgrey 0px 0px 1px 1px\",\r\n\t\t},\r\n\t},\r\n\tuserCont: {\r\n\t\theight: \"fit-content\",\r\n\t\tpadding: 0,\r\n\t\tmargin: 0,\r\n\t\tmargin: \"5px 0\",\r\n\t},\r\n\tchipsCont: {\r\n\t\theight: \"fit-content\",\r\n\t\tpadding: 0,\r\n\t\tmargin: \"3px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\tboxShadow: \"inset rgba(0,0,0,0.5) 0px 0px 2px 1px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjutifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tremoveIcon: {\r\n\t\tcolor: \"rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"5px\",\r\n\t\tmarginRight: \"5px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\t\tcolor: \"white\",\r\n\t\t},\r\n\t},\r\n\tradioGroup: {\r\n\t\tcolor: \"white\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"row\",\r\n\t\talignitems: \"center\",\r\n\t},\r\n\tradioBtn: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"15px\",\r\n\t},\r\n\tfilesUploaded: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"0 15px\",\r\n\t},\r\n\tuploadBtn: {\r\n\t\tmargin: \"9px 0\",\r\n\t\tbackground: \"rgba(0,0,0,0.1)\",\r\n\t\tcolor: \"white\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\t\"&:hover\": {\r\n\t\t\tboxShadow: \"inset white 0 0 2px 1px\",\r\n\t\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t},\r\n\t},\r\n\timageRow: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tpadding: \"10px 5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\tpreviewImage: {\r\n\t\theight: \"50px\",\r\n\t\twidth: \"100px\",\r\n\t},\r\n\tremoveImageBtn: {\r\n\t\tcolor: \"rgba(255,255,255,0.5)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"6px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\tborderColor: \"white\",\r\n\t\t},\r\n\t},\r\n\tuploadedImagesTitle: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px 5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\taddTagExplain: {\r\n\t\tfontSize: '12px',\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tmarginBottom: '8px'\r\n\t},\r\n\taddTagRow: {\r\n\t\tdisplay: 'flex'\r\n\t},\r\n\ttagValueInput: {\r\n\t\twidth: '60%',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\twidth: '75%',\r\n\t\t}\r\n\t},\r\n\taddTagButton: {\r\n\t\twidth: 'fit-content',\r\n\t\tcolor: 'white',\r\n\t\theight: '35px',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '5px 20px 5px 10px',\r\n\t\tfontSize: '13px',\r\n\t\tmargin: '10px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)'\r\n\t},\r\n\taddTagIcon: {\r\n\t\tfontSize: '24px'\r\n\t},\r\n\ttagList: {\r\n\t\tpadding: '10px',\r\n\t\tborderRadius: '5px',\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap'\r\n\t},\r\n\tnoTags: {\r\n\t\tborder: '1px solid rgba(255,255,255,0.5)',\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '12px',\r\n\t\twidth: 'fit-content',\r\n\t\theight: '22px',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '3px 10px',\r\n\t\tlineHeight: 1.8\r\n\t},\r\n\ttag: {\r\n\t\tbackground: 'rgba(255,255,255,0.5)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '0px 10px',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t\tfontSize: '12px',\r\n\t\tmargin: '4px 3px',\r\n\t\theight: '22px',\r\n\t\tcolor: 'black',\r\n\t\tlineHeight: 1,\r\n\t\twidth: 'fit-content',\r\n\t\tdisplay: 'flex'\r\n\t},\r\n\toptionsContainer: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\twidth: '60%',\r\n\t\tdisplay: 'flex',\r\n\t\tborderRadius: '5px',\r\n\t\tpadding: '10px',\r\n\t\tflexFlow: 'wrap',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\twidth: '90%',\r\n\t\t}\r\n\t},\r\n\ttagOptionBtn: {\r\n\t\tbackground: 'rgba(255,255,255,0.4)',\r\n\t\tborderRadius: '50px',\r\n\t\tmargin: '3px',\r\n\t\tfontSize: '13px',\r\n\t\tpadding: '3px 20px 3px 10px',\r\n\t\tcolor: 'white',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: theme.palette.leading,\r\n\t\t}\r\n\t},\r\n\tremoveTagIcon: {\r\n\t\tfontSize: '14px',\r\n\t\tcolor: 'rgba(0,0,0,0.5)',\r\n\t\tpadding: '0 0 0 5px'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\user\\UserItem.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ItemLink.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\DocumentControls.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViewControls.js",["1054"],"import { IconButton, makeStyles, Menu, MenuItem, ListItemIcon } from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport TransferWithinAStationRoundedIcon from '@material-ui/icons/TransferWithinAStationRounded';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { Can } from '../../reuseables/Can';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\n\r\nexport const FaultViewControls = ({\r\n\tfault,\r\n\teditFault,\r\n\tupdateOwner,\r\n\tchangeStatus,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst [data, setData] = useState(fault);\r\n\tconst [expanded, setExpanded] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n        setData(fault);\r\n\t}, [fault]);\r\n\r\n\tconst openInNewWindow = () => {\r\n\t\twindow.open(`${process.env.REACT_APP_FRONTEND_URL}/workspace/faults/${fault.faultId}`);\r\n\t};\r\n\r\n\tconst handleExpanded = (event) => {\r\n\t\tif (expanded) {\r\n\t\t\tsetExpanded(null);\r\n\t\t}\r\n\t\tsetExpanded(event.currentTarget);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<IconButton className={classes.expandIcon} onClick={handleExpanded}>\r\n\t\t\t\t<MoreVertIcon className={classes.icon} />\r\n\t\t\t</IconButton>\r\n\t\t\t<Menu\r\n\t\t\t\tonClick={() => setExpanded(null)}\r\n\t\t\t\tclassName={classes.container}\r\n\t\t\t\tanchorEl={expanded}\r\n\t\t\t\topen={Boolean(expanded)}\r\n\t\t\t\tonClose={() => setExpanded(null)}\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tpaper: classes.menu,\r\n\t\t\t\t}}\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t}}\r\n\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdirection: lang.code === 'he' ? 'rtl' : 'ltr',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={classes.menuHeader}\r\n\t\t\t\t>\r\n\t\t\t\t\t{t('tasksModule.controls.taskMenu')}\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tstyle={{ display: 'flex', justifyContent: 'flex-end' }}\r\n\t\t\t\t\t\tonClick={() => setExpanded(null)}\r\n\t\t\t\t\t\tclassName={classes.close}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CloseRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t<MenuItem\r\n\t\t\t\t\tstyle={{ direction: lang.code === 'he' ? 'rtl' : 'ltr' }}\r\n\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\tonClick={openInNewWindow}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t<OpenInNewIcon className={classes.icon} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t{t('general.openInNew')}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t\t<Can\r\n\t\t\t\t\tmodule=\"faults\"\r\n\t\t\t\t\taction=\"update\"\r\n\t\t\t\t\tuserList={[\r\n\t\t\t\t\t\t...data.relatedUsers.map((u) => u._id),\r\n\t\t\t\t\t\tdata.owner._id,\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdirection: lang.code === 'he' ? 'rtl' : 'ltr',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\tonClick={editFault}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<CreateIcon className={classes.icon} />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t{t('faultsModule.controls.editDetails')}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t</Can>\r\n\r\n\t\t\t\t<Can\r\n\t\t\t\t\tmodule=\"faults\"\r\n\t\t\t\t\taction=\"changeOwner\"\r\n\t\t\t\t\tuserList={[\r\n\t\t\t\t\t\t...data.relatedUsers.map((u) => u._id),\r\n\t\t\t\t\t\tdata.owner._id,\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdirection: lang.code === 'he' ? 'rtl' : 'ltr',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\tonClick={updateOwner}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<TransferWithinAStationRoundedIcon\r\n\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t{t('faultsModule.controls.changeOwner')}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t</Can>\r\n\t\t\t\t<Can\r\n\t\t\t\t\tmodule=\"faults\"\r\n\t\t\t\t\taction=\"changeStatus\"\r\n\t\t\t\t\tuserList={[\r\n\t\t\t\t\t\t...data.relatedUsers.map((u) => u._id),\r\n\t\t\t\t\t\tdata.owner._id,\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdirection: lang.code === 'he' ? 'rtl' : 'ltr',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\tonClick={changeStatus}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<DoubleArrowIcon className={classes.icon} />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t{t('faultsModule.controls.changeStatus')}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t</Can>\r\n\t\t\t</Menu>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\texpandIcon: {\r\n\t\tcolor: 'white',\r\n\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.5)',\r\n\t\t},\r\n\t},\r\n\ticonBtn: {\r\n\t\tcolor: 'white',\r\n\t\tmarginRight: '20px',\r\n\t\tborderRadius: '0 25px 25px 0',\r\n\t\t'&:hover': {\r\n\t\t\ttransform: 'scale(1.077)',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',\r\n\t},\r\n\tmenu: {\r\n\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\tcolor: 'white',\r\n\t\tboxShadow: 'rgba(0,0,0,0.4) 0 0 2px 1px',\r\n\t\tborderRadius: '10px',\r\n\t},\r\n\tmenuitem: {\r\n\t\tminWidth: '200px',\r\n\t},\r\n\tmenuHeader: {\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmarginBottom: '10px',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpadding: '5px 10px 5px 20px',\r\n\t\talignItems: 'center',\r\n\t\toutline: 'none',\r\n\t},\r\n\tclose: {\r\n\t\tpadding: '6px',\r\n\t\tmargin: 0,\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultLink.js",["1055"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport const FaultLink = ({ faultId, size }) => {\r\n\r\n    return (\r\n        <Link\r\n            to={`/workspace/faults/${faultId}`}\r\n            style={{ textDecoration: 'none' }}\r\n        >\r\n           <span style={{\r\n               color: 'white',\r\n               fontSize: `${size}px`,\r\n               whiteSpace: 'nowrap'\r\n           }}>\r\n             {faultId}\r\n           </span>\r\n        </Link>\r\n    )\r\n}","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UserList.js",["1056"],"import {\r\n\tIconButton,\r\n\tList,\r\n\tListItem,\r\n\tmakeStyles,\r\n\tTooltip,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getFullName } from '../../api/genericApi';\r\nimport { UserItem } from '../user/UserItem';\r\nimport { AlertDialog } from './AlertDialog';\r\nimport { Can } from './Can';\r\n\r\nexport const UserList = ({\r\n\tusers,\r\n\thandleRemove,\r\n\tremoveTooltip,\r\n\thandleAdd,\r\n\taddTooltip,\r\n\ttitle,\r\n\tplaceholder,\r\n    module,\r\n    owner\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst { t } = useTranslation();\r\n\tconst [userList, setUserList] = useState(users || []);\r\n\tconst [liHover, setLiHover] = useState(null);\r\n\tconst [alertDialog, setAlertDialog] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetUserList(users);\r\n\t}, [users]);\r\n\r\n\tuseEffect(() => {\r\n\t}, [alertDialog]);\r\n\r\n\tconst toggleHover = (index) => (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tsetLiHover(index);\r\n\t};\r\n\r\n\tconst removeUser = (user) => (event) => {\r\n\t\tsetAlertDialog({\r\n\t\t\thandleConfirm: async () => {\r\n\t\t\t\tconst res = await handleRemove(user._id);\r\n\t\t\t\tsetAlertDialog(null);\r\n\t\t\t},\r\n\t\t\thandleCancel: () => setAlertDialog(null),\r\n\t\t\ttext: `${t('general.removeUserConfirmation.part1')} ${getFullName(\r\n\t\t\t\tuser\r\n\t\t\t)} ${t('general.removeUserConfirmation.part2')}?`,\r\n\t\t\ttitle: `${t('general.removeUserFromFollowing')}`,\r\n\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={classes.linked}\r\n\t\t\tstyle={{ minWidth: `200px`, width: '100%' }}\r\n\t\t>\r\n\t\t\t<div className={classes.topRow}>\r\n\t\t\t\t<div className={classes.linkedHeader}>{title}</div>\r\n\t\t\t\t<Can module={module} action={'changeRelatedUsers'} userList={[...users.map(u => u._id), owner._id]} >\r\n\t\t\t\t\t<Tooltip title={addTooltip}>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tclassName={classes.addUser}\r\n\t\t\t\t\t\t\tonClick={handleAdd}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AddRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</Can>\r\n\t\t\t</div>\r\n\r\n\t\t\t<List className={classes.followingList}>\r\n\t\t\t\t{Boolean(userList.length) ? (\r\n\t\t\t\t\tuserList.map((user, i) => (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\tonMouseEnter={toggleHover(i)}\r\n\t\t\t\t\t\t\tonMouseLeave={() => setLiHover(null)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\tavatarSize={40}\r\n\t\t\t\t\t\t\t\tsize={11}\r\n\t\t\t\t\t\t\t\tshowTitle\r\n\t\t\t\t\t\t\t\tshowPhone\r\n\t\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\t/>\r\n                            <Can module={module} action={'changeRelatedUsers'} userList={[...users.map(u => u._id), owner._id]}>\r\n                                {(liHover === i || downSm) && (\r\n                                    <Tooltip title={removeTooltip}>\r\n                                        <IconButton\r\n                                            className={classes.removeUser}\r\n                                            onClick={removeUser(user)}\r\n                                        >\r\n                                            <ClearRounded\r\n                                                className={classes.icon}\r\n                                            />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                )}\r\n                            </Can>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<ListItem className={classes.placeholder}>\r\n\t\t\t\t\t\t{placeholder}\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t)}\r\n\t\t\t</List>\r\n\t\t\t{Boolean(alertDialog) && (\r\n\t\t\t\t<AlertDialog\r\n\t\t\t\t\tisOpen={Boolean(alertDialog)}\r\n\t\t\t\t\talertDialog={alertDialog}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tlinked: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'flex-start',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tmargin: '10px 0',\r\n\t\tborderRadius: '10px',\r\n\t\tpadding: '10px 0',\r\n\t\theight: '300px',\r\n\t},\r\n\ttopRow: {\r\n\t\tmargin: '0px auto',\r\n\t\twidth: '90%',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tlinkedHeader: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t\tpadding: '5px 5px 10px',\r\n\t},\r\n\tfollowingList: {\r\n\t\tpadding: '5px 0',\r\n\t\toverflowY: 'auto',\r\n\t},\r\n\tlistItem: {\r\n\t\twidth: '100%',\r\n\t\tborderRadius: '5px',\r\n\t\tpadding: '8px',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\t},\r\n\t},\r\n\tremoveUser: {\r\n\t\tcolor: 'white',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\t},\r\n\t},\r\n\taddUser: {\r\n\t\tcolor: 'white',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '5px',\r\n\t\tmargin: '0 0 10px 0',\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t},\r\n\tplaceholder: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tborderRadius: '25px',\r\n\t\tcolor: 'white',\r\n\t\tpadding: '10px 20px',\r\n\t\twidth: '90%',\r\n\t\tmargin: '10px auto',\r\n\t\tfontSize: '13px',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateStatus.js",["1057","1058","1059"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Paper, FormControl, IconButton, useMediaQuery, Fade, Modal, Backdrop,Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport clsx from 'clsx'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { getStatusList } from '../../api/genericApi';\r\n\r\n\r\n\r\nexport const UpdateStatus = ({ handleClose, handleSave, isOpen, currentStatus, title, instructions, module }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ statusList, setStatusList ] = useState([]);\r\n    const [ selectedStatus, setSelectedStatus ] = useState('')\r\n    \r\n    useEffect(() => {\r\n        getStatusList(module)\r\n        .then(data => {\r\n            if (currentStatus) {\r\n                setSelectedStatus(currentStatus._id)\r\n            }\r\n            setStatusList(data.filter(s => s._id !== currentStatus._id ));\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = event => {\r\n        setSelectedStatus(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={isOpen}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xs={11} sm={7} md={5} lg={3} xl={3}>\r\n                        <Paper \r\n                            className={classes.paper} \r\n                            style={{ direction: lang.dir }}\r\n                            elevation={6}    \r\n                        >\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {title}\r\n                                </div>\r\n                                <IconButton className={classes.closeBtn} onClick={handleClose}>\r\n                                    <ClearRoundedIcon className={classes.icon}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div className={classes.instructions}>\r\n                                {instructions}\r\n                            </div>\r\n                            <FormControl variant='outlined' className={classes.textInput} >\r\n                                <Select\r\n                                    value={selectedStatus}\r\n                                    onChange={handleChange}\r\n                                    className={classes.menu}\r\n                                    MenuProps={{\r\n                                        classes: {\r\n                                            paper: classes.menupaper\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        statusList.map( (status, i) => {\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    className={classes.menuitem}\r\n                                                    value={status._id} \r\n                                                    key={i}\r\n                                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                                >\r\n                                                    {t(`${module}Module.statuses.${status.statusId}`)}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div className={classes.controls}>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.save)}\r\n                                    onClick={() => handleSave(selectedStatus)}\r\n                                    disabled={!selectedStatus}\r\n                                >\r\n                                    {t(\"alert.confirm\")}\r\n                                </Button>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.cancel)}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    {t(\"alert.cancel\")}\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    \r\n                </Grid> \r\n                \r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px',\r\n        borderRadius: '10px',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '18px',\r\n        padding: '5px 10px',\r\n        height: 'fit-content'\r\n    },\r\n    closeBtn: {\r\n        fontSize: '20px',\r\n        height: '40px',\r\n        width: '40px'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        borderRadius: '25px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    instructions: {\r\n        width: 'auto',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '12px',\r\n        margin: '0px 10px'\r\n    },\r\n    menu: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(10px)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        marginTop: '55px',\r\n        marginRight: '7px',\r\n        maxHeight: '200px',\r\n        overflowY: 'auto',\r\n        \r\n\r\n    },\r\n    menuitem: {\r\n        color: 'white'\r\n    },\r\n    textInput: {\r\n        margin: '20px 5px',\r\n        width: '300px',\r\n        '& input': {\r\n            color: 'white',\r\n            paddingLeft: '20px',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        }    \r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\StatusTag.js",["1060","1061"],"\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport CheckCircleOutlineRoundedIcon from '@material-ui/icons/CheckCircleOutlineRounded';\r\nimport HourglassEmptyRoundedIcon from '@material-ui/icons/HourglassEmptyRounded';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport clsx from 'clsx';\r\nimport { green, red, yellow } from '@material-ui/core/colors';\r\n\r\nexport const StatusTag = ({status, type, size}) => {\r\n\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n\r\n    return (\r\n        <div \r\n            className={clsx(classes.statusTag,classes[status.statusId])}\r\n            style={{ fontSize: size || '14px'}}    \r\n        >\r\n            {\r\n                status.statusId  === 'ready' ? \r\n                <PlayCircleOutlineIcon className={classes.icon}/> :\r\n                status.statusId  === 'inProgress' ? \r\n                <CachedIcon className={classes.icon} /> :\r\n                status.statusId  === 'pending' ?\r\n                <HourglassEmptyRoundedIcon className={classes.icon}className={classes.icon} /> : \r\n                status.statusId  === 'closed' ?\r\n                <CheckCircleOutlineRoundedIcon className={classes.icon} /> : null\r\n            }\r\n            <div className={classes.title}>\r\n                {t(`${type}sModule.statuses.${status.statusId}`)}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    statusTag: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'fit-content',\r\n        padding: '2px 5px',\r\n        borderRadius: '25px',\r\n        whiteSpace: 'nowrap'\r\n\r\n    },\r\n    title: {\r\n        padding: '7px 10px 7px 0px'\r\n    },\r\n    ready: {\r\n       \r\n        background: red[600],\r\n        color: 'white'\r\n    },\r\n    inProgress: {\r\n        background: yellow[500],\r\n        color: 'black',\r\n        \r\n    },\r\n    pending: {\r\n        background: 'rgba(255,255,255,0.4)',\r\n        color: 'black'\r\n    },\r\n    closed: {\r\n        background: green[800],\r\n        color: 'white'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        padding: '0 5px'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CommentSection.js",["1062","1063","1064","1065","1066","1067"],"import {\r\n\tAvatar,\r\n\tButton,\r\n\tClickAwayListener,\r\n\tFormControl,\r\n\tGrid,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tOutlinedInput,\r\n\tuseMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { green, red } from \"@material-ui/core/colors\";\r\nimport ClearRoundedIcon from \"@material-ui/icons/ClearRounded\";\r\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport clsx from \"clsx\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { getDatediffString } from \"../../api/genericApi\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { LanguageContext } from \"../../context/LanguageContext\";\r\nimport { Can } from \"./Can\";\r\nimport AddAPhotoRoundedIcon from \"@material-ui/icons/AddAPhotoRounded\";\r\nimport { ClearRounded } from \"@material-ui/icons\";\r\nimport { EnvContext } from \"../../context/EnvContext\";\r\n\r\nexport const CommentSection = ({\r\n\tparent,\r\n\tsaveComment,\r\n\tupdateComment,\r\n\tmodule,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { env ,setEnv } = useContext(EnvContext);\r\n\tconst ctx = useRef(null);\r\n\tconst [commentList, setCommentList] = useState(parent.comments || []);\r\n\tconst [parentId, setParentId] = useState(parent._id);\r\n\tconst [text, setText] = useState(\"\");\r\n\tconst [textFocused, setTextFocused] = useState(false);\r\n\tconst [editComment, setEditComment] = useState(null);\r\n\tconst [numOfComments, setNumOfComments] = useState(3);\r\n\tconst [commentImage, setCommentImage] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCommentList(parent.comments);\r\n\t\tsetParentId(parent._id);\r\n\t}, [parent]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (commentImage && ctx.current) {\r\n\t\t\tctx.current.focus();\r\n\t\t\tctx.current.scrollIntoView();\r\n\t\t}\r\n\t}, [commentImage]);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetText(event.target.value);\r\n\t};\r\n\r\n\tconst handleSendComment = (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tsaveComment(parentId, auth.user._id, text, commentImage)\r\n\t\t\t.then((data) => {\r\n\t\t\t\tif (!data) return;\r\n\t\t\t\tsetCommentList(data.comments);\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tsetText(\"\");\r\n\t\t\t\tsetTextFocused(false);\r\n\t\t\t\tsetCommentImage(null);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleEditChange = (event) => {\r\n\t\tsetEditComment({\r\n\t\t\t...editComment,\r\n\t\t\ttext: event.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleUpdateComment = async () => {\r\n\t\tconst res = await updateComment(\r\n\t\t\tparentId,\r\n\t\t\teditComment._id,\r\n\t\t\teditComment.text\r\n\t\t);\r\n\t\tsetCommentList(res.comments);\r\n\t\tsetEditComment(null);\r\n\t};\r\n\r\n\tconst handleFileUpload = (event) => {\r\n\t\tsetCommentImage(event.target.files[0]);\r\n\t};\r\n\r\n\tconst toggleInputFocused = () => {\r\n\t\tif (textFocused) {\r\n\t\t\tsetTextFocused(false);\r\n\t\t\tsetEnv({ ...env, inputFocused: false})\r\n\t\t} else {\r\n\t\t\tsetTextFocused(true);\r\n\t\t\tsetEnv({ ...env, inputFocused: true})\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid container className={classes.mainContainer}>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<div className={classes.title}>{t(\"comments.title\")}</div>\r\n\t\t\t</Grid>\r\n\t\t\t{numOfComments < commentList.length && (\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName={classes.showMore}\r\n\t\t\t\t\t\tonClick={() => setNumOfComments(numOfComments + 3)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{t(\"comments.showMore\")}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{ commentList.slice(Math.max(commentList.length - numOfComments, 0)).map((c, i) => (\r\n\t\t\t\t<Grid item xs={12} className={clsx(classes.comment)} key={i}>\r\n\t\t\t\t\t<div className={classes.commentContainer}>\r\n\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\tclassName={classes.avatar}\r\n\t\t\t\t\t\t\talt={\"abc\"}\r\n\t\t\t\t\t\t\tsrc={c.user.avatar}\r\n\t\t\t\t\t\t\tstyle={{ height: \"50px\", width: \"50px\" }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className={classes.data}>\r\n\t\t\t\t\t\t\t<div className={classes.commenter}>\r\n\t\t\t\t\t\t\t\t{`${c.user.firstName} ${c.user.lastName}`}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{Boolean(editComment) && editComment._id === c._id ? (\r\n\t\t\t\t\t\t\t\t<div className={classes.editContainer}>\r\n\t\t\t\t\t\t\t\t\t<FormControl variant=\"outlined\" className={classes.form}>\r\n\t\t\t\t\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={editComment.text || \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleEditChange}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={t(\"comments.add\")}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\t\t\t\tclasses.textInput,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttextFocused ? classes.focused : null\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\tonFocus={() => setTextFocused(true)}\r\n\t\t\t\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tinputMultiline: classes.multiLine,\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.save}\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleUpdateComment}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<SaveRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.cancel}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setEditComment(null)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<ClearRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div className={classes.commentText}>{`${c.text}`}</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tBoolean(c.image) &&\r\n\t\t\t\t\t\t\t\t<div className={classes.commentImage}>\r\n\t\t\t\t\t\t\t\t\t<img src={c.image} className={classes.cImage}/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.commentFooter}>\r\n\t\t\t\t\t\t{/* <div className={classes.footerField}> \r\n                                <Button className={classes.footerBtn}> \r\n                                    {t(\"comments.reply\")}\r\n                                </Button>\r\n                            </div> */}\r\n\t\t\t\t\t\t{c.user._id == auth.user._id && (\r\n\t\t\t\t\t\t\t<div className={classes.footerField}>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName={classes.footerBtn}\r\n\t\t\t\t\t\t\t\t\tonClick={() => setEditComment(c)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{t(\"comments.edit\")}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div className={classes.footerField}>\r\n\t\t\t\t\t\t\t{` · `}\r\n\t\t\t\t\t\t\t<div className={classes.timePassed}>\r\n\t\t\t\t\t\t\t\t{`${getDatediffString(c.createdAt)}`}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t))}\r\n\r\n\t\t\t<Can\r\n\t\t\t\tmodule={module}\r\n\t\t\t\taction={\"comment\"}\r\n\t\t\t\tuserList={[...parent.relatedUsers.map((u) => u._id), parent.owner._id]}\r\n\t\t\t>\r\n\t\t\t\t<ClickAwayListener onClickAway={() => setTextFocused(false)}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t{commentImage && (\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\t\t\tmd={8}\r\n\t\t\t\t\t\t\t\tlg={6}\r\n\t\t\t\t\t\t\t\txl={6}\r\n\t\t\t\t\t\t\t\tclassName={classes.imagePreviewContainer}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div className={classes.imagePreview}>\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.removeImage}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setCommentImage(null)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<ClearRounded className={classes.removeImageIcon} />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tsrc={URL.createObjectURL(commentImage)}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.image}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\t\tmd={8}\r\n\t\t\t\t\t\t\tlg={6}\r\n\t\t\t\t\t\t\txl={6}\r\n\t\t\t\t\t\t\tclassName={classes.addComment}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FormControl variant=\"outlined\" className={classes.form}>\r\n\t\t\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\t\t\tvalue={text || \"\"}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\tplaceholder={t(\"comments.add\")}\r\n\t\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\t\tclasses.textInput,\r\n\t\t\t\t\t\t\t\t\t\ttextFocused ? classes.focused : null\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\tonFocus={toggleInputFocused}\r\n\t\t\t\t\t\t\t\t\tonBlur={toggleInputFocused}\r\n\t\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\t\t\tinputMultiline: classes.multiLine,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tinputRef={ctx}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName={classes.addPhotoBtn}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcomponent={\"label\"}\r\n\t\t\t\t\t\t\t\tvariant={\"contained\"}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<AddAPhotoRoundedIcon\r\n\t\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\t\tclasses.icon,\r\n\t\t\t\t\t\t\t\t\t\tlang.dir === \"rtl\" ? classes.mirror : null\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\tstyle={{ paddingBottom: \"3px\" }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\taccept=\"image/*\"\r\n\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\tonChange={handleFileUpload}\r\n\t\t\t\t\t\t\t\t\thidden\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName={classes.postBtn}\r\n\t\t\t\t\t\t\t\tonClick={handleSendComment}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<SendRoundedIcon\r\n\t\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\t\tclasses.icon,\r\n\t\t\t\t\t\t\t\t\t\tlang.dir === \"rtl\" ? classes.mirror : null\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</ClickAwayListener>\r\n\t\t\t</Can>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\tpadding: '10px 30px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tpadding: '0',\r\n\t\t}\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"20px\",\r\n\t\tpadding: \"20px 30px 10px\",\r\n\t\tmarginBottom: \"10px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\taddComment: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tpadding: \"5px 10px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tposition: \"relative\",\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: \"0 10px\",\r\n\t},\r\n\tform: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"100%\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tpadding: \"10px\",\r\n\t},\r\n\ttextInput: {\r\n\t\tpadding: \"15px 10px\",\r\n\t\tborderRadius: \"42px\",\r\n\t\t\"& input\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\twidth: \"80%\",\r\n\t\t},\r\n\t\t\"& label\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\tpaddingLeft: \"5px\",\r\n\t\t},\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderColor: \"rgba(255,255,255,0.6)\",\r\n\t\t\tborderRadius: \"42px\",\r\n\t\t},\r\n\t},\r\n\tfocused: {\r\n\t\tboxShadow: \"rgba(0,0,0,0.25) 2px 3px 2px 0px\",\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t},\r\n\tpostBtn: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"7px\",\r\n\t\tposition: \"absolute\",\r\n\t\tmargin: \"auto 0\",\r\n\t\tright: \"25px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\t},\r\n\t},\r\n\taddPhotoBtn: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"7px\",\r\n\t\tposition: \"absolute\",\r\n\t\tmargin: \"auto 0\",\r\n\t\tright: \"60px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: \"24px\",\r\n\t},\r\n\tmirror: {\r\n\t\ttransform: \"scaleX(-1)\",\r\n\t},\r\n\tcomment: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tmargin: \"5px 0\",\r\n\t},\r\n\tcommentContainer: {\r\n\t\twidth: \"fit-content\",\r\n\t\tdisplay: \"flex\",\r\n\t\tpadding: \"10px 30px 10px 0px\",\r\n\t\tmargin: \"0px 10px\",\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tborderRadius: \"35px\",\r\n\t},\r\n\tcommenter: {\r\n\t\tcolor: \"rgba(255,255,255,0.6)\",\r\n\t\tfontSize: \"13px\",\r\n\t\tpadding: \"5px\",\r\n\t},\r\n\tcommentText: {\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tcommentFooter: {\r\n\t\tdisplay: \"flex\",\r\n\t\tmarginLeft: \"40px\",\r\n\t\theight: \"20px\",\r\n\t},\r\n\tfooterField: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tfontSize: \"11px\",\r\n\t\tcolor: \"rgba(255,255,255,0.4)\",\r\n\t},\r\n\tfooterBtn: {\r\n\t\tfontSize: \"12px\",\r\n\t\tpadding: \"1px 2px\",\r\n\t\tmargin: \"0px 2px\",\r\n\t\tminWidth: \"0\",\r\n\t\twidth: \"fit-content\",\r\n\t\tcolor: \"rgba(255,255,255,0.4)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\ttextDecoration: \"underline\",\r\n\t\t\tboxShadow: \"none\",\r\n\t\t\tbackground: \"transparent\",\r\n\t\t},\r\n\t},\r\n\ttimePassed: {\r\n\t\tfontSize: \"12px\",\r\n\t\tpadding: \"0px 2px\",\r\n\t\tmargin: \"0 2px\",\r\n\t\tminWidth: \"0\",\r\n\t\twidth: \"fit-content\",\r\n\t\tcolor: \"rgba(255,255,255,0.4)\",\r\n\t},\r\n\tmultiLine: {\r\n\t\tpadding: \"0px 20px\",\r\n\t\twidth: \"85%\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\twidth: \"70%\",\r\n\t\t},\r\n\t},\r\n\tshowMore: {\r\n\t\tmargin: \"5px 30px\",\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"5px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tboxShadow: \"none\",\r\n\t\t\tbackground: \"inherit\",\r\n\t\t\ttextDecoration: \"underline\",\r\n\t\t},\r\n\t},\r\n\tsave: {\r\n\t\tbackground: green[800],\r\n\t\tpadding: \"8px\",\r\n\t\tmargin: \"18px 5px\",\r\n\t},\r\n\tcancel: {\r\n\t\tbackground: red[800],\r\n\t\tpadding: \"8px\",\r\n\t\tmargin: \"18px 5px\",\r\n\t},\r\n\teditContainer: {\r\n\t\theight: \"auto\",\r\n\t\tmargin: \"auto 0\",\r\n\t\twidth: \"100%\",\r\n\t\tdispaly: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\timagePreviewContainer: {\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\twidth: \"-webkit-fill-available\",\r\n\t\tpadding: \"10px\",\r\n\t\tmargin: \"10px 30px 0\",\r\n\t},\r\n\timagePreview: {\r\n\t\tposition: \"relative\",\r\n\t\twidth: \"fit-content\",\r\n\t},\r\n\timage: {\r\n\t\twidth: \"100px\",\r\n\t\tborderRadius: \"10px\",\r\n\t},\r\n\tremoveImage: {\r\n\t\tbackground: \"black\",\r\n\t\tpadding: \"4px\",\r\n\t\tborder: \"1px solid white\",\r\n\t\tposition: \"absolute\",\r\n\t\tright: \"-10px\",\r\n\t\ttop: \"-10px\",\r\n\t},\r\n\tremoveImageIcon: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"14px\",\r\n\t},\r\n\tcommentImage: {\r\n\t\tmargin: '10px 0'\r\n\t},\r\n\tcImage: {\r\n\t\tborderRadius: '10px',\r\n\t\tmaxWidth: '300px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tmaxWidth: '100%'\r\n\t\t}\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\Carousel.js",["1068","1069","1070","1071"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { makeStyles, Slide, Paper, IconButton, Backdrop, Modal } from '@material-ui/core'\r\nimport ChevronLeftRoundedIcon from '@material-ui/icons/ChevronLeftRounded';\r\nimport ChevronRightRoundedIcon from '@material-ui/icons/ChevronRightRounded';\r\nimport clsx from 'clsx';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport ZoomInRoundedIcon from '@material-ui/icons/ZoomInRounded';\r\nimport ZoomOutRoundedIcon from '@material-ui/icons/ZoomOutRounded';\r\nimport ZoomOutMapRoundedIcon from '@material-ui/icons/ZoomOutMapRounded';\r\n\r\nexport const Carousel = ({ images, isOpen, size }) => {\r\n    \r\n    const classes = useStyles();\r\n    const [ slideIn, setSlideIn ] = useState(isOpen);\r\n    const [ slideDirection, setSlideDirection ] = useState('left');\r\n    const [ index, setIndex ] = useState(0);\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ photoViewMode, setPhotoViewMode ] = useState(false);\r\n    const [ picSize, setPicSize ] = useState(size)\r\n\r\n    useEffect(() => {\r\n        if (photoViewMode) {\r\n            setPicSize(800)\r\n        }\r\n    }, [photoViewMode])\r\n\r\n    const handleClick = dir => event => {\r\n        setSlideDirection(dir);\r\n        setSlideIn(false);\r\n \r\n        setTimeout(() => {\r\n            setIndex((index - (dir === 'left' ? 1 : -1) + images.length) % images.length);\r\n            setSlideIn(true);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZoom = up => {\r\n        if (up) {\r\n            if (picSize === 1300) return;\r\n            setPicSize(picSize + 100)\r\n        } else {\r\n            if (picSize === 300) return;\r\n            setPicSize(picSize - 100)\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setPicSize(300);\r\n        setPhotoViewMode(false);\r\n    }\r\n\r\n    return (\r\n        <CarouselWrapper\r\n            isModal={photoViewMode}\r\n            wrapper={ children => \r\n                <Modal\r\n                    open={true}\r\n                    onClose={handleClose}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                        timeout: 500\r\n                    }}\r\n                    className={classes.modal}\r\n                >\r\n                    <div className={classes.content} >\r\n                        <CarouselControls \r\n                            handleZoom={handleZoom} \r\n                            picSize={picSize} \r\n                            handleClose={handleClose}\r\n                        />\r\n                        {children}\r\n                    </div>\r\n                    \r\n                </Modal>\r\n            }\r\n        >\r\n            <div \r\n                className={classes.container}\r\n                style={{ cursor: photoViewMode ? 'default' : 'pointer'}}\r\n            >\r\n                <IconButton\r\n                    className={clsx(classes.arrow, classes.arrowLeft)}\r\n                    onClick={handleClick('left')}\r\n                    style={{ left: lang.drection === 'rtl' ? '97%' : '3%' }}\r\n                >\r\n                    <ChevronLeftRoundedIcon className={classes.icon}/>\r\n                </IconButton>\r\n                <CarouselSlide image={images[index]} size={picSize} setPhotoViewMode={setPhotoViewMode}/>\r\n                <IconButton\r\n                    className={clsx(classes.arrow, classes.arrowRight)}\r\n                    onClick={handleClick('right')}\r\n                    style={{ right: lang.drection === 'rtl' ? '97%' : '3%' }}\r\n                >\r\n                    <ChevronRightRoundedIcon className={classes.icon}/>\r\n                </IconButton>\r\n            </div>\r\n        </CarouselWrapper>\r\n        \r\n    )\r\n}\r\n\r\nconst CarouselSlide = ({image, size, setPhotoViewMode}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper \r\n            className={classes.paper} \r\n            elevation={0} \r\n            style={{ height: `${size}px`}}\r\n            onClick={() => setPhotoViewMode(true)}\r\n        >\r\n            <img src={image} className={classes.image} />\r\n        </Paper>   \r\n    )\r\n}\r\n\r\nconst CarouselControls = ({handleZoom, picSize, handleClose}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.controls}>\r\n            <div className={classes.close}>\r\n                <IconButton\r\n                    className={classes.iconBtn}\r\n                    onClick={handleClose}\r\n                >\r\n                    <ClearRounded className={classes.icon} />\r\n                </IconButton>\r\n            </div>\r\n            \r\n            <div className={classes.zoomControl}>\r\n                <IconButton \r\n                    className={classes.iconBtn} \r\n                    onClick={() => handleZoom(true)} \r\n                    disabled={picSize === 1300}\r\n                >\r\n                    <ZoomInRoundedIcon className={classes.icon} />\r\n                </IconButton>\r\n                <IconButton \r\n                    className={classes.iconBtn} \r\n                    onClick={() => handleZoom(false)}\r\n                    disabled={picSize === 300}\r\n                >\r\n                    <ZoomOutRoundedIcon className={classes.icon} />\r\n                </IconButton>\r\n                <IconButton className={classes.iconBtn} >\r\n                    <ZoomOutMapRoundedIcon className={classes.icon} />\r\n                </IconButton>\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nconst CarouselWrapper = ({isModal, wrapper, children }) =>\r\n    isModal ? wrapper(children) : children\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        position: 'relative',\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        padding: '10px 5px',\r\n        borderRadius: '10px',\r\n        outline: 'none'\r\n    },\r\n    content: {\r\n        height: '100%', \r\n        width: '100%', \r\n        outline: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        padding: 0,\r\n        margin: 0,\r\n        width: '100%',\r\n        direction: 'ltr',\r\n        background: 'transparent',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        userSelect: 'none'\r\n    },\r\n    image: {\r\n        maxHeight: '90%',\r\n        maxWidth: '90%',\r\n        borderRadius: '5px',\r\n        objectFit: 'cover',\r\n        userSelect: 'none'\r\n    },\r\n    arrow: {\r\n        position: 'absolute',\r\n        background: 'rgba(0,0,0,0.6)',\r\n        color: 'white',\r\n        zIndex: 1,\r\n        padding: '5px',\r\n\r\n    },\r\n    arrowLeft: {\r\n        top: '50%',\r\n        transform: 'translateY(-50%)'\r\n    },\r\n    arrowRight: {\r\n        top: '50%',\r\n        transform: 'translateY(-50%)'\r\n    },\r\n    icon: {\r\n        fontSize: '32px',\r\n    },\r\n    iconBtn: {\r\n        background: 'rgba(255,255,255,0.6)',\r\n        color: 'black',\r\n        padding: '8px',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.8)',\r\n            color: 'white',\r\n        }\r\n\r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        position: 'absolute',\r\n        top: 0,\r\n        width: '90%',\r\n        padding: '2% 5%',\r\n        zIndex: 1\r\n    },\r\n    zoomControl: {\r\n        width: '170px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AddRelatedUser.js",["1072","1073","1074"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Paper, FormControl, IconButton, useMediaQuery, Fade, Modal, Backdrop,Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { getUserList } from '../../api/userApi';\r\nimport clsx from 'clsx'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\n\r\n\r\nexport const AddRelatedUser = ({ handleClose, handleSave, isOpen, followerList, title, instructions }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ selectedUser, setSelectedUser ] = useState('')\r\n    \r\n    useEffect(() => {\r\n        getUserList()\r\n        .then(data => {  \r\n            setUserList(data.filter(u => Boolean(!followerList.find(f => f._id === u._id))));\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = event => {\r\n        setSelectedUser(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={isOpen}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xs={11} sm={7} md={5} lg={3} xl={3}>\r\n                        <Paper \r\n                            className={classes.paper} \r\n                            style={{ direction: lang.dir }}\r\n                            elevation={6}    \r\n                        >\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {title}\r\n                                </div>\r\n                                <IconButton className={classes.closeBtn} onClick={handleClose}>\r\n                                    <ClearRoundedIcon className={classes.icon}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div className={classes.instructions}>\r\n                                {instructions}\r\n                            </div>\r\n                            <FormControl variant='outlined' className={classes.textInput} >\r\n                                <Select\r\n                                    value={selectedUser}\r\n                                    onChange={handleChange}\r\n                                    className={classes.menu}\r\n                                    MenuProps={{\r\n                                        classes: {\r\n                                            paper: classes.menupaper,\r\n                                           \r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        userList.map( (user, i) => {\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    className={classes.menuitem}\r\n                                                    value={user._id} \r\n                                                    key={i}\r\n                                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                                >\r\n                                                    {`${user.firstName} ${user.lastName}`}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div className={classes.controls}>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.save)}\r\n                                    onClick={handleSave(selectedUser)}\r\n                                    disabled={!selectedUser}\r\n                                >\r\n                                    {t(\"alert.confirm\")}\r\n                                </Button>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.cancel)}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    {t(\"alert.cancel\")}\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    \r\n                </Grid> \r\n                \r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px',\r\n        borderRadius: '10px',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '18px',\r\n        padding: '5px 10px',\r\n        height: 'fit-content'\r\n    },\r\n    closeBtn: {\r\n        fontSize: '20px',\r\n        height: '40px',\r\n        width: '40px'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        borderRadius: '25px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    instructions: {\r\n        width: 'auto',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '12px',\r\n        margin: '0px 10px'\r\n    },\r\n    menu: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(10px)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        maxHeight: '200px',\r\n        overflowY: 'auto',\r\n        marginTop: '60px',\r\n        marginRight: '7px',\r\n    },\r\n    menuitem: {\r\n        color: 'white'\r\n    },\r\n    textInput: {\r\n        margin: '20px 5px',\r\n        width: '300px',\r\n        '& input': {\r\n            color: 'white',\r\n            paddingLeft: '20px',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        }    \r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\api\\faultsApi.js",["1075"],"import axios from 'axios';\r\nimport i18next from 'i18next';\r\nimport { getFullAddress } from './assetsApi';\r\nimport { getUnauthorizedMessage } from './genericApi';\r\n\r\naxios.defaults.headers.common['token'] = localStorage.getItem('wb_token');\r\n\r\nexport const getFaultsStatusList = async () => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/statuses/getStatusList`,\r\n\t\t\t{ module: 'faults' },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport const getFaultsStatusListSuggestions = async () => {\r\n\tconst data = await getFaultsStatusList();\r\n\tlet statusList = [];\r\n\tif (data.length) {\r\n\t\tdata.forEach((st) => {\r\n\t\t\tstatusList.push({\r\n\t\t\t\tlabel: i18next.t(`faultsModule.statuses.${st.statusId}`),\r\n\t\t\t\tvalue: st._id,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\treturn statusList;\r\n};\r\n\r\nexport const getMinifiedFaults = async (filters) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/getFaults`,\r\n\t\t\t{ filters },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getFaults = async (filters) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/getFaults`,\r\n\t\t\t{ filters },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getFault = async (faultId, plain) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/getFault`,\r\n\t\t\t{ faultId, plain: plain },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn null;\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const createNewFault = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (f[0] === 'images') {\r\n\t\t\tfor (let i = 0; i < details.images.length; i++) {\r\n\t\t\t\tformData.append('images', details.images[i]);\r\n\t\t\t}\r\n\t\t} else if (Array.isArray(f[1])) { \r\n\t\t\tconsole.log(f[1])\r\n\t\t\tformData.append(f[0], JSON.stringify(f[1]));\r\n\t\t} else {\r\n\t\t\tformData.append(f[0], f[1]);\r\n\t\t}\r\n\t});\r\n\r\n\tlet config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': `multipart/form-data`,\r\n\t\t\ttoken: localStorage.getItem('wb_token'),\r\n\t\t\tmodule: 'faults',\r\n\t\t\trequesttype: 'create',\r\n\t\t},\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/createFault`,\r\n\t\t\tformData,\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateFault = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (f[0] === 'images') {\r\n\t\t\tfor (let i = 0; i < details.images.length; i++) {\r\n\t\t\t\tformData.append('images', details.images[i]);\r\n\t\t\t}\r\n\t\t} else if (f[0] === 'uploadedImages') {\r\n\t\t\tformData.append('uploadedImages', JSON.stringify(f[1]));\r\n\t\t} else if (Array.isArray(f[1])) { \r\n\t\t\tformData.append(f[0], JSON.stringify(f[1]));\r\n\t\t} else {\r\n\t\t\tformData.append(f[0], f[1]);\r\n\t\t}\r\n\t});\r\n\tlet config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': `multipart/form-data`,\r\n\t\t\ttoken: localStorage.getItem('wb_token'),\r\n\t\t\tmodule: 'faults',\r\n\t\t\trequesttype: 'update',\r\n\t\t},\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/updateFaultData`,\r\n\t\t\tformData,\r\n\t\t\tconfig\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateFaultOwner = async (faultId, userId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/updateFaultOwner`,\r\n\t\t\t{ faultId, userId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeOwner',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn null;\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const removeRelatedUser = async (faultId, userId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/removeRelatedUser`,\r\n\t\t\t{ faultId, userId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeRelatedUsers',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const addRelatedUser = async (faultId, userId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/addRelatedUser`,\r\n\t\t\t{ faultId, userId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeRelatedUsers',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const saveFaultComment = async (faultId, userId, text, image) => {\r\n\ttry {\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append('faultId', faultId)\r\n\t\tformData.append('userId', userId)\r\n\t\tformData.append('text', text)\r\n\t\tformData.append('image', image || null)\r\n\t\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/addFaultComment`,\r\n\t\t\tformData,\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': `multipart/form-data`,\r\n\t\t\t\t\trequesttype: 'comment',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateFaultComment = async (faultId, commentId, text) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/updateFaultComment`,\r\n\t\t\t{ faultId, commentId, text },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'comment',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateFaultStatus = async (faultId, status) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/changeFaultStatus`,\r\n\t\t\t{ faultId, status },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeStatus',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getFaultOptionsByAssetOrSystem = async (asset, system) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/getFaultOptions`,\r\n\t\t\t{ asset, system },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tlet options = [];\r\n\t\tif (!res) return [];\r\n\t\tres.data.forEach((f) => {\r\n\t\t\toptions.push({ label: f.faultId, value: f._id });\r\n\t\t});\r\n\t\treturn options;\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport const createExternalFault = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (f[0] === 'images' && details.images) {\r\n\t\t\tfor (let i = 0; i < details.images.length; i++) {\r\n\t\t\t\tformData.append('images', details.images[i]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tformData.append(f[0], f[1]);\r\n\t\t}\r\n\t});\r\n\r\n\tlet config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': `multipart/form-data`\r\n\t\t},\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/createExternalFault`,\r\n\t\t\tformData,\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n}\r\n\r\nexport const createTag = async (value) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/createTag`,\r\n\t\t\t{ value },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'update',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const addFaultTag = async (faultId, tagId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/addFaultTag`,\r\n\t\t\t{ faultId, tagId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'update',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const removeFaultTag = async (faultId, tagId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/removeFaultTag`,\r\n\t\t\t{ faultId, tagId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'update',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getFaultTagOptions = async (faultId, searchText) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/getFaultTagOptions`,\r\n\t\t\t{ faultId, searchText },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'update',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterByMultiSelect.js",["1076","1077"],"import { Button, IconButton, makeStyles, Menu, MenuItem } from '@material-ui/core';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam, removeQueryParam } from '../../api/genericApi';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { useQuery } from './customHooks/useQuery';\r\n\r\nexport const FilterByMultiSelect = ({ filterField, placeholder, filterIcon, optionsFunc }) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ menuOptions, setMenuOptions] = useState([]);\r\n    const [ orgMenuOptions, setOrgMenuOptions ] = useState([])\r\n    const [ anchorEl, setAnchorEl ] = useState(null);\r\n    const [ values, setValues ] = useState( query[filterField] || [])\r\n\r\n    useEffect(() => {\r\n        optionsFunc()\r\n        .then(data => {\r\n            setOrgMenuOptions(data);\r\n            if (query[filterField]) {\r\n                data = data.filter(op => query[filterField].indexOf(op.value) === -1 )\r\n            }\r\n            setMenuOptions(data);\r\n            \r\n        }) \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (values.length) {\r\n            \r\n            history.push({\r\n                path: location.pathname,\r\n                search: addQueryParam(location.search, [{ name: filterField, value: values }])\r\n            });\r\n            return;\r\n        }\r\n        if (query[filterField] && !values.length) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: removeQueryParam(location.search, filterField)\r\n            });\r\n        }\r\n        \r\n    }, [values])\r\n\r\n    useEffect(() => {\r\n        if(!menuOptions.length) {\r\n            setAnchorEl(null)\r\n        }\r\n    }, [menuOptions])\r\n\r\n    const createTag = (val, key) => {\r\n        let data = orgMenuOptions.find(op => val === op.value);\r\n        if (!data) return;\r\n        return (\r\n            <div className={classes.tag} key={key}>\r\n                <label className={classes.tagLabel}>\r\n                    { data.label }\r\n                </label>\r\n                <IconButton \r\n                    className={classes.removeBtn}\r\n                    onClick={removeChoice(data.value)}\r\n                >\r\n                    <CloseRoundedIcon className={classes.tagRemove}/>\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const removeChoice = value => event => {\r\n        event.stopPropagation();\r\n        getMenuOptions(value)\r\n        .then(data => {\r\n            setValues(values => values.filter(val => val !== value ));\r\n            if (!menuOptions.length) {\r\n                setAnchorEl(null)\r\n            }\r\n            setMenuOptions(data)\r\n        });  \r\n    }\r\n\r\n    const handleClick = val => event => {\r\n        setValues([...values, val]);\r\n        setMenuOptions(menuOptions => menuOptions.filter( op => op.value !== val));\r\n    }\r\n\r\n    const getMenuOptions = (value) => {\r\n        return new Promise((resolve, reject) => {\r\n            let mop = menuOptions;\r\n            mop.push(orgMenuOptions.find( op => op.value === value));\r\n            resolve(mop);\r\n        }) \r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                Boolean(orgMenuOptions.length) &&\r\n                <div className={classes.select}>\r\n                        <Button \r\n                            className={classes.filterBy}\r\n                            onClick={event => setAnchorEl(event.currentTarget)}\r\n                            startIcon={filterIcon}\r\n                        >\r\n                            { \r\n                                values.length \r\n                                ?   \r\n                                    <div className={classes.selectedContainer}>\r\n                                        {\r\n                                             values.map((val, i ) => createTag(val, i)) \r\n                                        }\r\n                                    </div>\r\n                               \r\n                                :   <label className={classes.searchLabel} >\r\n                                        {placeholder}\r\n                                    </label>\r\n                            }\r\n                        </Button>\r\n                        <Menu\r\n                            anchorEl={anchorEl}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={() => setAnchorEl(null)}\r\n                            classes={{\r\n                                paper : classes.menu\r\n                            }}\r\n                            keepMounted\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                        >\r\n                            {\r\n                                menuOptions.map((v,i) => {\r\n                                    return (\r\n                                        <MenuItem\r\n                                            key={i}\r\n                                            onClick={handleClick(v.value)}\r\n                                            className={classes.menuitem}\r\n                                            style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                        >\r\n                                            {v.label}\r\n                                        </MenuItem>\r\n                                    )\r\n                                    \r\n                                })\r\n                            }\r\n                        </Menu>\r\n               </div>\r\n            }          \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    select: {\r\n        margin: '5px',\r\n        height: 'auto',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    filterBy: {\r\n        textTransform: 'none',\r\n        color: 'white',\r\n        padding: '0 5px',\r\n        minHeight: '45px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '25px',\r\n        \r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        }\r\n    },\r\n    selectedContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        whiteSpace: 'nowrap',\r\n        flexWrap: 'wrap',\r\n        width: 'fit-content',\r\n        maxWidth: '400px'\r\n    },\r\n    menu: {\r\n        marginTop: '55px',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(10px)',\r\n        color: 'white',\r\n        height: '200px'\r\n    },\r\n    menuitem: {\r\n        minWidth: '200px'\r\n    },\r\n    container: {\r\n        height: '45px',\r\n        border: '1px solid rgba(0,0,0,0.25)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            \r\n        }\r\n    },\r\n    focused: {\r\n        boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        background: 'rgba(0,0,0,0.1)',\r\n        backdropFilter: 'blur(40px)'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        \r\n    },\r\n    searchInput: {\r\n        height: '34px',\r\n        width: '98.5%',\r\n        margin: '3px 0.75%',\r\n        borderRadius: '5px 25px 25px 5px',\r\n        color: 'white',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '& fieldset': {\r\n            border: '0'\r\n        } \r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 5px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    tag: {\r\n        padding: '5px 10px',\r\n        borderRadius: '50px',\r\n        boxShadow: 'rgba(0,0,0,0.25) 0px 0px 3px 1px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        margin: '3px'\r\n    },\r\n    tagLabel: {\r\n        padding: '0 5px'\r\n    },\r\n    removeBtn: {\r\n        padding: '4px',\r\n        color: 'white'\r\n    },\r\n    tagRemove: {\r\n        fontSize: '16px'\r\n    },\r\n    searchLabel: {\r\n        padding: '5px 20px 5px 10px', \r\n        cursor: 'pointer',\r\n        color: 'rgba(255,255,255,0.5)',\r\n        fontSize: '15px' \r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\tasksApi.js",["1078"],"import axios from 'axios';\r\nimport { getServerError, getUnauthorizedMessage, specialStringPurge } from './genericApi';\r\nimport i18next from 'i18next';\r\n\r\naxios.defaults.headers.common['token'] = localStorage.getItem('wb_token');\r\n\r\nexport const getTask = async (taskId, plain) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/getTask`,\r\n\t\t\t{ taskId, plain },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const createNewTask = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (f[0] === 'images') {\r\n\t\t\tfor (let i = 0; i < details.images.length; i++) {\r\n\t\t\t\tformData.append('images', details.images[i]);\r\n\t\t\t}\r\n\t\t} else if (f[1] instanceof Array) {\r\n\t\t\tformData.append(f[0], JSON.stringify(f[1]));\r\n\t\t} else {\r\n\t\t\tif (!f[1]) {\r\n\t\t\t\tformData.append(f[0], '');\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tformData.append(f[0], f[1]);\r\n\t\t}\r\n\t});\r\n\tlet config = {\r\n\t\theaders: {\r\n            'Content-Type': `multipart/form-data`,\r\n            requesttype: 'create',\r\n            module: 'tasks'\r\n\t\t},\r\n\t};\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/createTask`,\r\n\t\t\tformData,\r\n\t\t\tconfig\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getTasks = async (filters) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/getTasks`,\r\n\t\t\t{ filters },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateTaskOwner = async (taskId, owner) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/updateTaskOwner`,\r\n\t\t\t{ taskId, owner },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeOwner',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const completeTaskStep = async (taskId, order, isCompleted ) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/completeTaskStep`,\r\n\t\t\t{ taskId, order, isCompleted },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'completeSteps',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn getServerError();\r\n\t}\r\n};\r\n\r\nexport const updateTaskStatus = async (taskId, status) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/updateTaskStatus`,\r\n\t\t\t{ taskId, status },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeStatus',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const saveTaskComment = async (taskId, userId, text, image) => {\r\n\ttry {\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append('taskId', taskId)\r\n\t\tformData.append('userId', userId)\r\n\t\tformData.append('text', text)\r\n\t\tformData.append('image', image || null)\r\n\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/addTaskComment`,\r\n\t\t\tformData,\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': `multipart/form-data`,\r\n\t\t\t\t\trequesttype: 'comment',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateTaskComment = async (taskId, commentId, text) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/updateTaskComment`,\r\n\t\t\t{ taskId, commentId, text },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'comment',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const addTaskRelatedUser = async (taskId, userId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/addRelatedUser`,\r\n\t\t\t{ taskId, userId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeRelatedUsers',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const removeTaskRelatedUser = async (taskId, userId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/removeRelatedUser`,\r\n\t\t\t{ taskId, userId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeRelatedUsers',\r\n\t\t\t\t\tmodule: 'tasks'\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateTask = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (f[0] === 'images') {\r\n\t\t\tfor (let i = 0; i < details.images.length; i++) {\r\n\t\t\t\tformData.append('images', details.images[i]);\r\n\t\t\t}\r\n\t\t} else if (f[0] === 'uploadedImages') {\r\n\t\t\tformData.append('uploadedImages', JSON.stringify(f[1]));\r\n\t\t} else if (f[1] instanceof Array) {\r\n\t\t\tformData.append(f[0], JSON.stringify(f[1]));\r\n\t\t} else {\r\n\t\t\tif (f[1] === null) {\r\n\t\t\t\tformData.append(f[0], '');\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tformData.append(f[0], f[1]);\r\n\t\t}\r\n\t});\r\n\tlet config = {\r\n\t\theaders: {\r\n            'Content-Type': `multipart/form-data`,\r\n            requesttype: 'update',\r\n            module: 'tasks'\r\n\t\t},\r\n\t};\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/updateTask`,\r\n\t\t\tformData,\r\n\t\t\tconfig\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getTasksStatusList = async () => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/statuses/getStatusList`,\r\n\t\t\t{ module: 'tasks' },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'tasks'\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getTasksStatusListSuggestions = async () => {\r\n\tconst data = await getTasksStatusList();\r\n\tlet statusList = [];\r\n\tif (data.length) {\r\n\t\tdata.forEach((st) => {\r\n\t\t\tstatusList.push({\r\n\t\t\t\tlabel: i18next.t(`tasksModule.statuses.${st.statusId}`),\r\n\t\t\t\tvalue: st._id,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\treturn statusList;\r\n};\r\n\r\nexport const updateTaskSchedule = async (taskId, schedule) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/updateTaskSchedule`,\r\n\t\t\t{ taskId, schedule },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'update',\r\n\t\t\t\t\tmodule: 'tasks'\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getTaskOptionsByAssetOrSystem = async (asset, system) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/getTaskOptions`,\r\n\t\t\t{ asset, system },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n                    requesttype: 'read',\r\n\t\t\t\t\tmodule: 'tasks'\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tlet options = [];\r\n\t\tif (!res) return [];\r\n\t\tres.data.forEach((t) => {\r\n\t\t\toptions.push({ label: t.taskId, value: t._id });\r\n\t\t});\r\n\t\treturn options;\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlockView.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultListView.js",["1079","1080","1081"],"import { Grid, List, ListItem, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { FaultsContext } from '../../../context/FaultsContext';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { FaultMinified } from './FaultMinified';\r\nimport { FaultView } from './FaultView';\r\n\r\nexport const FaultListView = ({ faults }) => {\r\n    \r\n    const location = useLocation();\r\n    const classes = useStyles();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    const { setFaults } = useContext(FaultsContext);\r\n    const [ faultView, setFaultView ] = useState(faults.length ? faults[0] : null);\r\n    const [ faultsData, setFaultsData ] = useState([]);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setFaultsData(faults);\r\n        setIsLoading(false);\r\n    }, [faults])\r\n   \r\n    const updateFaultState = (faultId, field, data) => {\r\n        setIsLoading(true);\r\n        let faultIndex = faultsData.findIndex(f => f._id === faultId);\r\n        if (!faultIndex && faultIndex !== 0) return;\r\n        let lf = [...faultsData];\r\n        lf[faultIndex][field] = data;\r\n        setFaults(lf);\r\n        setIsLoading(false);\r\n    }\r\n \r\n    return (\r\n        <Grid container className={classes.main} justify='flex-start'>\r\n            <Grid item xs={12} md={5} lg={3} xl={3} className={classes.faultList}>\r\n                <List className={classes.list}>\r\n                {   \r\n                    isLoading ? \r\n                    null\r\n                    :\r\n                    faultsData.map((f,i) => \r\n                        <ListItem \r\n                            button \r\n                            className={classes.item}\r\n                            onClick={() => setFaultView(f)}\r\n                        >  \r\n                            <FaultMinified \r\n                                data={f}\r\n                                key={i}\r\n                            />\r\n                        </ListItem>\r\n                        \r\n                    )\r\n                }\r\n                </List>\r\n            </Grid>\r\n            {\r\n                !downSm &&\r\n                Boolean(faultView) &&\r\n                <Grid item md={7} lg={9} xl={9} className={classes.faultPresenter}>\r\n                    <FaultView \r\n                        fid={faultView.faultId}\r\n                        updateFaultState={updateFaultState}\r\n                        faultData={faultView}\r\n                    />\r\n                </Grid>\r\n            }\r\n            \r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    main: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        height: '70vh',\r\n        [theme.breakpoints.down('sm')]: {\r\n            border: '0',\r\n            height: 'auto'\r\n        }\r\n    },\r\n    faultList: {\r\n        borderRight: '1px solid rgba(255,255,255,0.2)',\r\n        height: '100%',\r\n        overflowY: 'scroll',\r\n        '&::-webkit-scrollbar': {\r\n            display: 'none'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            border: '0',\r\n            overflowY: 'unset',\r\n        }\r\n    },\r\n    list: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        padding: 0,\r\n        overflowY: 'unset'\r\n    },\r\n    item: {\r\n        height:'200px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '10px 0'\r\n        }\r\n    },\r\n    faultPresenter: {\r\n        background: 'rgba(0,0,0,0.1)',\r\n        height: '100%'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\usePermissions.js",["1082","1083"],"import React, { useContext, useState } from 'react';\r\nimport { getMinPermLevel } from '../../../api/permissionsApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\n\r\nexport const usePermissions = ({ module, action, userList }) => {\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { permissions } = auth.user.role;\r\n\tconst { isAdmin } = auth.user;\r\n\r\n\tif (isAdmin) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tconst minPermLevel = getMinPermLevel(action);\r\n    let permLevel = permissions.find((p) => p.module === module);\r\n\tif (permLevel) {\r\n\t\tpermLevel = permLevel.action\r\n\t}\r\n \r\n\tif (permLevel < minPermLevel) {\r\n\t\treturn false;\r\n\t} else if (permLevel === 1) {\r\n       \r\n\t\tif (userList) {\r\n\t\t\tif (userList.includes(auth.user._id)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n        }\r\n        return false;\r\n\t}\r\n\treturn true;\r\n};\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\permissionsApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\TimeActive.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultMinified.js",["1084","1085"],"import { Grid, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getFullAddress } from \"../../../api/assetsApi\";\r\nimport { StatusTag } from \"../../reuseables/StatusTag\";\r\nimport { UserItem } from \"../../user/UserItem\";\r\nimport { FaultLink } from \"./FaultLink\";\r\n\r\nconst LinkWrapper = ({ withLink, faultId, children}) => {\r\n\tif (withLink) {\r\n\t\treturn (\r\n\t\t\t<Link\r\n\t\t\tto={`/workspace/faults/${faultId}`}\r\n\t\t\tstyle={{ textDecoration: \"none\" }}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</Link>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{children}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\n\r\nexport const FaultMinified = ({ data, withLink }) => {\r\n\tconst classes = useStyles();\r\n\tconst [fault, setFault] = useState(data);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetFault(data);\r\n\t}, [data]);\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t\t<LinkWrapper withLink={withLink} faultId={fault.faultId} >\r\n\t\t\t\t<Grid container className={classes.container} alignItems=\"flex-start\">\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tclassName={classes.topRow}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<div className={classes.asset}>\r\n\t\t\t\t\t\t\t{getFullAddress(fault.asset, true)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid xs={12} item className={classes.title}>\r\n\t\t\t\t\t{fault.title}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tclassName={classes.bottomRow}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid item xs={5} className={classes.userData}>\r\n\t\t\t\t\t\t<UserItem size={13} avatarSize={40} user={fault.owner} />\r\n\t\t\t\t\t\t<FaultLink faultId={fault.faultId} size={14} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={7} className={classes.status}>\r\n\t\t\t\t\t\t<StatusTag status={fault.status} type={\"fault\"} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t</LinkWrapper>\r\n\t\t\t\r\n\t\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\tposition: \"relative\",\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"15px 5px\",\r\n\t\tdisplay: \"-webkit-box\",\r\n\t\tWebkitLineClamp: \"2\",\r\n\t\tWebkitBoxOrient: \"vertical\",\r\n\t\toverflow: \"hidden\",\r\n\t\ttextOverflow: \"ellipsis\",\r\n\t\theight: \"60px\",\r\n\t},\r\n\ttopRow: {\r\n\t\tpadding: \"5px\",\r\n\t\tmaxHeight: \"60px\",\r\n\t},\r\n\tuserData: {\r\n\t\tpadding: \"5px 0px\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t},\r\n\tbottomRow: {\r\n\t\theight: \"50px\",\r\n\t},\r\n\tasset: {\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tpadding: \"5px 15px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tboxShadow: \"rgba(0,0,0,0.3) 1px 1px 5px 2px\",\r\n\t\twidth: \"fit-content\",\r\n\t\ttextAlign: \"center\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t},\r\n\tfaultLink: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t\tmargin: \"3px 0\",\r\n\t},\r\n\tstatus: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n\tlink: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemRelatedUsers.js",["1086","1087"],"import React, { useState, useContext } from 'react';\r\nimport { Grid, makeStyles, Collapse, Tooltip, IconButton, useMediaQuery, Fade } from '@material-ui/core';\r\nimport { UserItem } from '../../user/UserItem';\r\nimport { getFullName } from '../../../api/genericApi';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { AlertDialog } from '../../reuseables/AlertDialog';\r\nimport { addUser, removeSystemUser } from '../../../api/systemsApi';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport { AddRelatedUser } from './AddRelatedUser';\r\nimport { Can } from '../../reuseables/Can';\r\nimport { SnackbarContext } from '../../../context/SnackbarContext';\r\n\r\nexport const SystemRelatedUsers = ({ userList, data, setData, systemId, isOpen }) => {\r\n\tconst classes = useStyles();\r\n    const downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n    const { setSnackbar } = useContext(SnackbarContext);\r\n\tconst [relatedUsers, setRelatedUsers] = useState(userList || []);\r\n\tconst [showControls, setShowControls] = useState(null);\r\n\tconst [showAddRelatedUser, setShowAddRelatedUser] = useState(false);\r\n\tconst [alertDialog, setAlertDialog] = useState(null);\r\n\tconst { t, i18n } = useTranslation();\r\n\r\n\tconst confirmRemove = (relatedUser) => (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tlet toRemove = relatedUsers.find((user) => user._id === relatedUser._id);\r\n\t\tsetAlertDialog({\r\n\t\t\ttext: `${t('systemsModule.userRemoveConfirmText')} ${getFullName(toRemove)}?`,\r\n\t\t\ttitle: t('systemsModule.userRemoveConfirmTitle'),\r\n\t\t\thandleConfirm: async () => {\r\n\t\t\t\tconst res = await removeSystemUser(systemId, relatedUser._id);\r\n\t\t\t\tif (res.status === 403) {\r\n                    setSnackbar(res)\r\n                } else if (res) {\r\n\t\t\t\t\tsetData(res);\r\n\t\t\t\t\tsetAlertDialog(null);\r\n\t\t\t\t\tsetRelatedUsers([]);\r\n\t\t\t\t\tsetRelatedUsers(res.relatedUsers);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thandleCancel: () => setAlertDialog(null),\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleAddRelatedUser = () => {\r\n\t\tif (showAddRelatedUser) {\r\n\t\t\tsetShowAddRelatedUser(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetShowAddRelatedUser(true);\r\n\t};\r\n\r\n\tconst handleAddLinekdUser = async (userId) => {\r\n\t\tconst res = await addUser(systemId, userId);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res)\r\n\t\t} else if (res) {\r\n\t\t\tsetData(res);\r\n\t\t\tsetRelatedUsers(res.relatedUsers);\r\n\t\t\tsetShowAddRelatedUser(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Collapse in={isOpen}>\r\n\t\t\t<div className={classes.linkedusers}>\r\n\t\t\t\t<Grid container justify=\"flex-start\" className={classes.container} alignItems=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.titleContainer}>\r\n\t\t\t\t\t\t<div className={classes.title}>{t('systemsModule.assignedUsers')}</div>\r\n\t\t\t\t\t\t<Can\r\n\t\t\t\t\t\t\tmodule=\"systems\"\r\n                            action=\"changeRelatedUsers\"\r\n\t\t\t\t\t\t\tuserList={[...data.relatedUsers.map((u) => u._id), data.owner]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<IconButton className={classes.addBtn} onClick={handleAddRelatedUser}>\r\n\t\t\t\t\t\t\t\t<AddRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t\t{showAddRelatedUser && (\r\n\t\t\t\t\t\t\t\t<AddRelatedUser\r\n\t\t\t\t\t\t\t\t\tisOpen={showAddRelatedUser}\r\n\t\t\t\t\t\t\t\t\thandleClose={handleAddRelatedUser}\r\n\t\t\t\t\t\t\t\t\trelatedUsers={relatedUsers}\r\n\t\t\t\t\t\t\t\t\thandleSave={handleAddLinekdUser}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{relatedUsers.length ? (\r\n\t\t\t\t\t\trelatedUsers.map((relatedUser, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={7} md={6} lg={3} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userCont}\r\n\t\t\t\t\t\t\t\t\t\tonMouseEnter={() => setShowControls(i)}\r\n\t\t\t\t\t\t\t\t\t\tonMouseLeave={() => setShowControls(null)}\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\t\t\t\t\tuser={relatedUser}\r\n\t\t\t\t\t\t\t\t\t\t\tshowTitle\r\n\t\t\t\t\t\t\t\t\t\t\tshowPhone\r\n\t\t\t\t\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\t\t\t\t\tavatarSize={'50px'}\r\n\t\t\t\t\t\t\t\t\t\t\tsize={12}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<Can\r\n\t\t\t\t\t\t\t\t\t\t\tmodule=\"systems\"\r\n\t\t\t\t\t\t\t\t\t\t\taction=\"changeRelatedUsers\"\r\n\t\t\t\t\t\t\t\t\t\t\tuserList={[...data.relatedUsers.map((u) => u._id), data.owner]}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Fade in={showControls === i || downSm}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.removeUser')}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.removeuser}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={confirmRemove(relatedUser)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ClearRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className={classes.noUsers}>{t('systemsModule.noUsersAssigned')}</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{Boolean(alertDialog) && <AlertDialog alertDialog={alertDialog} open={Boolean(alertDialog)} />}\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t</Collapse>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tlinkedusers: {\r\n\t\twidth: 'auto',\r\n\t\tmargin: '10px',\r\n\t\tborderRadius: '25px',\r\n\t\tbackground: 'rgba(0,0,0,0.1)',\r\n\t\tboxShadow: '0px 0px 5px 2px rgba(0,0,0,0.2)',\r\n\t},\r\n\tcontainer: {\r\n\t\twidth: 'auto',\r\n\t\tpadding: '5px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tborderRadius: '5px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tgridItem: {\r\n\t\tborderRadius: '10px',\r\n\t\tpadding: '5px 10px',\r\n\t\tmargin: '5px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.5)',\r\n\t\t\tboxShadow: '-0px 0px 5px 2px rgba(0,0,0,0.2)',\r\n\t\t},\r\n\t},\r\n\ttitleContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmargin: '0 10px',\r\n\t\tpadding: '5px 5px 10px',\r\n\t},\r\n\taddBtn: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '2px',\r\n\t\tborderRadius: '50px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.2)',\r\n\t\t},\r\n\t},\r\n\tcell: {\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tuserCont: {\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpadding: '5px 10px',\r\n\t\tposition: 'relative',\r\n\t},\r\n\tremoveuser: {\r\n\t\tpadding: '4px',\r\n\t\tmargin: 'auto 4px',\r\n\t\theight: '50%',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.1)',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',\r\n\t\tpadding: '8px',\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t},\r\n\tnoUsers: {\r\n\t\tmargin: '10px',\r\n\t\tpadding: '0px 0 15px',\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '14px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tpadding: '10px 20px',\r\n\t\tborderRadius: '25px',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemControls.js",["1088","1089","1090","1091","1092"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tPaper,\r\n\tuseMediaQuery,\r\n\tTooltip,\r\n\tCollapse,\r\n\tGrid,\r\n} from '@material-ui/core';\r\nimport { UserItem } from '../../user/UserItem';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport TransferWithinAStationRoundedIcon from '@material-ui/icons/TransferWithinAStationRounded';\r\nimport { useTranslation } from 'react-i18next';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport AssignmentRoundedIcon from '@material-ui/icons/AssignmentRounded';\r\nimport DescriptionRoundedIcon from '@material-ui/icons/DescriptionRounded';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { Can } from '../../reuseables/Can';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { addQueryParam } from '../../../api/genericApi';\r\n\r\nexport const SystemControls = ({\r\n\teditName,\r\n\texpanded,\r\n\tshowLinkedUsersToggle,\r\n\ttoggleEditOwner,\r\n\ttoggleAdditionalDetails,\r\n\tsystem\r\n}) => {\r\n\t\r\n\tconst classes = useStyles();\r\n\tconst location = useLocation();\r\n\tconst history = useHistory();\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\r\n\tconst handleReferralClick = type => event => {\r\n\t\thistory.push(type + addQueryParam(location.search, [{ name: 'asset', value: system.asset._id }, { name: 'system', value: [system._id]}]));\r\n    }\r\n\r\n\treturn (\r\n\t\t<Collapse in={(!downSm && !editName) || expanded}>\r\n\t\t\t<Grid container className={classes.actionsContainer}>\r\n\t\t\t\t<Grid item lg={9}>\r\n\t\t\t\t\t<Grid container className={classes.actions}>\r\n\t\t\t\r\n\t\t\t\t\t\t<Grid item lg={2} className={classes.iconItem}>\r\n\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.moreDetails')}>\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\t\t\t\tonClick={toggleAdditionalDetails}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<MoreHorizIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Grid item lg={2} className={classes.iconItem}>\r\n\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.showTasks')}>\r\n\t\t\t\t\t\t\t\t<IconButton className={classes.iconBtn} onClick={handleReferralClick('tasks')}>\r\n\t\t\t\t\t\t\t\t\t<AssignmentRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item lg={2} className={classes.iconItem}>\r\n\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.showFaults')} onClick={handleReferralClick('faults')}>\r\n\t\t\t\t\t\t\t\t<IconButton className={classes.iconBtn}>\r\n\t\t\t\t\t\t\t\t\t<WarningRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item lg={2} className={classes.iconItem}>\r\n\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.showDocuments')}onClick={handleReferralClick('documents')}>\r\n\t\t\t\t\t\t\t\t<IconButton className={classes.iconBtn}>\r\n\t\t\t\t\t\t\t\t\t<DescriptionRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Can module='systems' action='changeOwner' >\r\n\t\t\t\t\t\t<Grid item lg={2} className={classes.iconItem}> \r\n\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.changeOwner')}>\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\t\t\t\tonClick={toggleEditOwner}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<TransferWithinAStationRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t<Grid item lg={2} className={classes.iconItem}>\r\n\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.showUsers')}>\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\t\t\t\tonClick={showLinkedUsersToggle}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<PersonRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item lg={3} className={classes.ownerInfo}>\r\n\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\tuser={system.owner}\r\n\t\t\t\t\t\tavatarSize={40}\r\n\t\t\t\t\t\tshowPhone\r\n\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\tsize={12}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Collapse>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tactionsContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: '5px',\r\n\t\tmargin: 'auto 0',\r\n\t\tjustifyContent: 'space-between',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tflexDirection: 'column-reverse',\r\n\t\t\talignItems: 'center',\r\n\t\t\tmargin: 'auto',\r\n\t\t},\r\n\t},\r\n\tactions: {\r\n        margin: 'auto 0',\r\n        display: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'flex-end',\r\n        height: '100%',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\t\tborderRadius: '50px',\r\n\t\t\tmargin: '10px 0',\r\n\t\t\tpadding: '5px 0',\r\n\t\t},\r\n\t},\r\n\ticonBtn: {\r\n\t\tpadding: '0px',\r\n\t\theight: 'fit-content',\r\n\t\twidth: 'fit-content',\r\n\t\tmargin: '0 20px',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tmargin: '5px 10px',\r\n\t\t},\r\n\t},\r\n\tuserIcon: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '8px',\r\n\t\tborderRadius: '50px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.2)',\r\n\t\t},\r\n\t},\r\n\townerInfo: {\r\n\t\theight: 'auto',\r\n\t\tpadding: '5px 20px 5px 10px',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tmarginTop: '5px',\r\n\t\t\tborderRadius: '50px',\r\n\t\t\twidth: '170px',\r\n\t\t\tpadding: '5px 20px 5px 5px',\r\n\t\t},\r\n    },\r\n    iconItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlock.js",["1093","1094"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { FaultMinified } from './FaultMinified';\r\nimport { Link } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\n\r\nexport const FaultBlock = ({ data }) => {\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div \r\n            className={clsx(classes.faultContainer)}\r\n        >\r\n            <FaultMinified data={data} withLink={true} />\r\n        </div>                               \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({ \r\n   faultContainer: {\r\n    padding: '10px',\r\n    border: '1px solid rgba(255,255,255,0.2)',\r\n    borderRadius: '7px',\r\n    background: 'rgba(0,0,0,0.4)',\r\n    margin : '5px 0'\r\n   }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemName.js",["1095","1096"],"import React, { useState } from 'react';\r\nimport { makeStyles, useMediaQuery, Button, Fade, OutlinedInput, FormControl, InputLabel, ClickAwayListener, IconButton, } from '@material-ui/core';\r\nimport SaveRoundedIcon from '@material-ui/icons/SaveRounded';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { updateSystemName } from '../../../api/systemsApi'\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\r\nimport { green, red } from '@material-ui/core/colors';\r\n\r\nexport const SystemName = ({ systemId, editName, setEditName, setSystemName, title }) => {\r\n\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const [ textValue, setTextValue ] = useState(title);\r\n    const [ editNameHover, setEditNameHover ] = useState(false);\r\n\r\n    const handleChange = event => {\r\n        setTextValue(event.target.value);\r\n    };\r\n\r\n    const handleSave = async () => {\r\n         await updateSystemName(systemId, textValue);\r\n         setSystemName(textValue);\r\n         setEditName(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                editName ?\r\n                <ClickAwayListener onClickAway={() => setEditName(false)}>\r\n                    <div className={classes.editContainer}>\r\n                        <FormControl variant='outlined' className={classes.textInput}>\r\n                            <InputLabel htmlFor='olip' shrink>{t(\"systemsModule.systemName\")}</InputLabel>\r\n                            <OutlinedInput\r\n                                autoFocus\r\n                                notched\r\n                                id='olip' \r\n                                value={ textValue }\r\n                                onChange={handleChange}\r\n                                labelWidth={75}\r\n                                className={classes.input} \r\n                            />\r\n                        </FormControl>\r\n                        <IconButton \r\n                            className={classes.save}\r\n                            onClick={handleSave}\r\n                        >\r\n                            <SaveRoundedIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                        <IconButton \r\n                            className={classes.cancel}\r\n                            onClick={() => setEditName(false)}\r\n                        >\r\n                            <ClearRoundedIcon className={classes.icon} />\r\n                        </IconButton>\r\n                       </div> \r\n                </ClickAwayListener>\r\n                \r\n                : \r\n                <Button \r\n                    className={classes.systemName}\r\n                    onMouseEnter={() => setEditNameHover(true)}\r\n                    onMouseLeave={() => setEditNameHover(false)}\r\n                    onClick={() => { setEditNameHover(false); setEditName(true)}}\r\n                >\r\n                    { title }\r\n                    {\r\n                        editNameHover &&\r\n                        <Fade in={true} timeout={700}>\r\n                            <EditRoundedIcon style={{ \r\n                                margin: '0 10px 0 0',\r\n                                fontSize: '16px'\r\n                            }}/>\r\n                        </Fade>\r\n                        \r\n                    }\r\n                </Button>\r\n            }\r\n        </React.Fragment>                    \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    editContainer: {\r\n        height: 'auto',\r\n        margin: 'auto 0',\r\n        width: '100%',\r\n        dispaly: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    systemName: {\r\n        width: 'auto',\r\n        color: 'white',\r\n        margin: 'auto 20px',\r\n        fontSize: '16px',\r\n        whiteSpace: 'wrap',\r\n        borderRadius: '50px',\r\n        padding: '5px 20px',\r\n        textAlign: 'left'\r\n    },\r\n    textInput: {\r\n        width: '65%',\r\n        margin: '15px 5px 15px 10px',\r\n        '& label.Mui-focused': {\r\n            color: 'white',\r\n        },\r\n        '& label': {\r\n            color: 'white'\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: 'white',\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'rgba(255,255,255,0.7)',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'rgba(255,255,255,0.7)',\r\n              },\r\n        },\r\n        \r\n    },\r\n    input: {\r\n        color: 'white',\r\n        height: '45px',\r\n        borderRadius: '25px',\r\n        padding: '10px',\r\n        '&:focus': {\r\n            border: '2px solid white'\r\n        }\r\n\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        fontSize: '20px',\r\n        padding: '0px',\r\n        '&hover': {\r\n\r\n        }\r\n    },\r\n    save: {\r\n        background: green[800],\r\n        padding: '8px',\r\n        margin: '18px 5px',\r\n        \r\n    },\r\n    cancel: {\r\n        background: red[800],\r\n        padding: '8px',\r\n        margin: '18px 5px',\r\n       \r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBox.js",["1097","1098","1099"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam, removeQueryParam, queryParamsToObject, specialStringPurge} from '../../api/genericApi';\r\nimport { OutlinedInput, FormControl, makeStyles, Grid, ClickAwayListener } from '@material-ui/core'\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport { useQuery } from './customHooks/useQuery';\r\nimport clsx from 'clsx';\r\n\r\nexport const SearchBox = ({ placeholder, filterField, returnValue }) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const [ onFocus, setOnFocus ] = useState(false);\r\n    const [ searchText, setSearchText ] = useState(specialStringPurge(query[filterField]) || '');\r\n    \r\n    useEffect(() => {\r\n        if (Boolean(searchText) && searchText === specialStringPurge(query[filterField])) return;\r\n        const timeOutId = setTimeout(() => handleSearch(searchText), 700);\r\n        return () => clearTimeout(timeOutId);\r\n    }, [searchText])\r\n\r\n    const handleChange = event => {\r\n        setSearchText(event.target.value)\r\n    }\r\n\r\n    const handleSearch = searchText => {\r\n        if (returnValue) {\r\n            returnValue(searchText);\r\n            return;\r\n       }\r\n        if (searchText) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: addQueryParam(location.search, [{ name: filterField, value: searchText}])\r\n            });\r\n            return; \r\n        }\r\n        history.push({\r\n            path: location.pathname,\r\n            search: removeQueryParam(location.search, filterField)\r\n        });\r\n        \r\n    }\r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={() => setOnFocus(false)}>\r\n            <div className={clsx(classes.container , onFocus && classes.focused)} xs={11} sm={9} md={8} lg={6}>\r\n                    <SearchRoundedIcon className={classes.icon}/>\r\n                    <FormControl variant='outlined' className={classes.form}>\r\n                        <OutlinedInput\r\n                            value={ searchText || '' }\r\n                            onChange={handleChange}\r\n                            placeholder={placeholder}\r\n                            className={clsx(classes.searchInput)}\r\n                            onFocus={() => setOnFocus(true)}\r\n                        />\r\n                    </FormControl>\r\n            </div>\r\n        </ClickAwayListener>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        margin: '5px',\r\n        height: '45px',\r\n        maxWidth: '450px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        transition: 'box-shadow 0.2s ease-in',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            transition: 'box-shadow 0.2s ease-in'\r\n        }\r\n\r\n    },\r\n    focused: {\r\n        boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        background: 'rgba(0,0,0,0.1)',\r\n        backdropFilter: 'blur(40px)'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        \r\n    },\r\n    searchInput: {\r\n        height: '34px',\r\n        width: '98.5%',\r\n        margin: '3px 0.75%',\r\n        borderRadius: '5px 25px 25px 5px',\r\n        color: 'white',\r\n        '& input': {\r\n            padding: '12.5px 20px 12.5px 5px',\r\n        },\r\n        '& fieldset': {\r\n            border: '0'\r\n        } \r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 5px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        \r\n    }\r\n}))\r\n\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SortBy.js",["1100","1101"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { makeStyles, ButtonGroup, Button, Menu, MenuItem } from '@material-ui/core'\r\nimport SortRoundedIcon from '@material-ui/icons/SortRounded';\r\nimport ArrowDropUpOutlinedIcon from '@material-ui/icons/ArrowDropUpOutlined';\r\nimport ArrowDropDownOutlinedIcon from '@material-ui/icons/ArrowDropDownOutlined';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam } from '../../api/genericApi';\r\nimport { useQuery } from './customHooks/useQuery';\r\nimport { useTranslation } from 'react-i18next'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\n\r\nexport const SortBy = ({menuOptions, handleSortChange}) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const { t, i18n } = useTranslation();\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ values, setValues ] = useState({\r\n        sortBy: query.sortBy || '',\r\n        sortOrder: query.sortOrder || 'asc' \r\n    })\r\n    const [ anchorEl, setAnchorEl ] = useState(null);\r\n \r\n    useEffect(() => {\r\n        if (!values.sortBy) return;\r\n        history.push({\r\n            path: location.pathname,\r\n            search: addQueryParam(location.search, [{ name: 'sortBy', value: values.sortBy}, {name: 'sortOrder', value: values.sortOrder}])\r\n        })\r\n    }, [values])\r\n\r\n    const handleClick = menuOption => event => {\r\n        setValues({\r\n            ...values, \r\n            sortBy: menuOption\r\n        })\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleChange = () => {\r\n        if (values.sortBy) {\r\n            setValues({\r\n                ...values, \r\n                sortOrder: values.sortOrder === 'asc' ? 'desc' : 'asc'\r\n            })\r\n        }\r\n    }\r\n    \r\n    const getOptionText = (option) => {\r\n        const result = menuOptions.find( mo => option === mo.field);\r\n        if (result) {\r\n            return result.text\r\n        }\r\n        return t(\"sort.sortBy\")\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup \r\n                className={classes.sort}\r\n            >\r\n\r\n                <Button \r\n                    className={classes.sortBy}\r\n                    onClick={event => setAnchorEl(event.currentTarget)}\r\n                    startIcon={<SortRoundedIcon className={classes.icon}/>}\r\n                >\r\n                    {values.sortBy ? getOptionText(values.sortBy) : `${t(\"sort.sortBy\")}`}\r\n                </Button>\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={() => setAnchorEl(null)}\r\n                    classes={{\r\n                        paper : classes.menu\r\n                    }}\r\n                    keepMounted\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                >\r\n                    {\r\n                        menuOptions.map((v,i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    key={i}\r\n                                    onClick={handleClick(v.field)}\r\n                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                >\r\n                                    {v.text}\r\n                                </MenuItem>\r\n                            )\r\n                            \r\n                        })\r\n                    }\r\n                </Menu>\r\n                <Button\r\n                    endIcon={ values.sortOrder === 'asc' ? <ArrowDropUpOutlinedIcon /> : <ArrowDropDownOutlinedIcon />}\r\n                    onClick={handleChange}\r\n                    className={classes.sortOrder}\r\n                >\r\n                    { `${ values.sortOrder === 'asc' ? `${t(\"sort.asc\")}` : `${t(\"sort.desc\")}`}`}\r\n                </Button> \r\n            </ButtonGroup>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    sort: {\r\n        margin: '5px',\r\n        height: '45px',\r\n        \r\n    },\r\n    sortBy: {\r\n        borderRadius: '25px 0 0 25px',\r\n        padding: '0 15px 0 3px',\r\n        color: 'white',\r\n        width: 'auto',\r\n        whiteSpace: 'nowrap',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    sortOrder: {\r\n        borderRadius: '0px 25px 25px 0px',\r\n        padding: '0 10px',\r\n        color: 'white',\r\n        width: 'auto',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    menu: {\r\n        marginTop: '55px',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(10px)',\r\n        color: 'white'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 6px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        \r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetControls.js",["1102"],"import {\r\n\tIconButton, ListItemIcon, makeStyles, Menu, MenuItem\r\n} from '@material-ui/core';\r\nimport AssignmentRoundedIcon from \"@material-ui/icons/AssignmentRounded\";\r\nimport BlurOnRoundedIcon from \"@material-ui/icons/BlurOnRounded\";\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport DescriptionRoundedIcon from \"@material-ui/icons/DescriptionRounded\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport PeopleOutlineRoundedIcon from \"@material-ui/icons/PeopleOutlineRounded\";\r\nimport WarningRoundedIcon from \"@material-ui/icons/WarningRounded\";\r\nimport React, { useContext, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\r\n\r\nexport const AssetControls = ({ data, toggleEditMode }) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [expanded, setExpanded] = useState(null);\r\n\r\n\r\n\tconst openInNewWindow = () => {\r\n\t\twindow.open(`${process.env.REACT_APP_FRONTEND_URL}/workspace/assets/${data._id}`);\r\n\t};\r\n\r\n\tconst handleExpanded = (event) => {\r\n\t\tif (expanded) {\r\n\t\t\tsetExpanded(null);\r\n\t\t}\r\n\t\tsetExpanded(event.currentTarget);\r\n\t};\r\n\r\n\tconst handleReferralClick = (type) => (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tif (type === 'residents') {\r\n\t\t\thistory.push(`assets/${data._id}?tab=residents`);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\thistory.push(`/workspace/${type}?asset=${data._id}`);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\ttoggleEditMode && \r\n\t\t\t\t<IconButton className={classes.expandIcon} onClick={toggleEditMode}>\r\n\t\t\t\t\t<EditRoundedIcon className={classes.icon} />\r\n\t\t\t\t</IconButton>\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t<IconButton className={classes.expandIcon} onClick={openInNewWindow}>\r\n\t\t\t\t<OpenInNewIcon className={classes.icon} />\r\n\t\t\t</IconButton>\r\n\t\t\t<IconButton className={classes.expandIcon} onClick={handleExpanded}>\r\n\t\t\t\t<MoreVertIcon className={classes.icon} />\r\n\t\t\t</IconButton>\r\n\t\t\t<Menu\r\n\t\t\t\tonClick={() => setExpanded(null)}\r\n\t\t\t\tclassName={classes.container}\r\n\t\t\t\tanchorEl={expanded}\r\n\t\t\t\topen={Boolean(expanded)}\r\n\t\t\t\tonClose={() => setExpanded(null)}\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tpaper: classes.menu,\r\n\t\t\t\t}}\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t}}\r\n\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdirection: lang.code === 'he' ? 'rtl' : 'ltr',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={classes.menuHeader}\r\n\t\t\t\t>\r\n\t\t\t\t\t{t('assetsModule.assetsMenu')}\r\n\t\t\t\t\t<ListItemIcon\r\n\t\t\t\t\t\tstyle={{ display: 'flex', justifyContent: 'flex-end' }}\r\n\t\t\t\t\t\tonClick={() => setExpanded(null)}\r\n\t\t\t\t\t\tclassName={classes.close}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CloseRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<MenuItem\r\n\t\t\t\t\tstyle={{ direction: lang.code === 'he' ? 'rtl' : 'ltr' }}\r\n\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\tonClick={handleReferralClick('systems')}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ListItemIcon\r\n\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<BlurOnRoundedIcon className={classes.typeIcon} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t{t('assetsModule.systems')}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t\t<MenuItem\r\n\t\t\t\t\tstyle={{ direction: lang.code === 'he' ? 'rtl' : 'ltr' }}\r\n\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\tonClick={handleReferralClick(\"tasks\")}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ListItemIcon\r\n\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<AssignmentRoundedIcon className={classes.typeIcon} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t{t('assetsModule.tasks')}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t\t<MenuItem\r\n\t\t\t\t\tstyle={{ direction: lang.code === 'he' ? 'rtl' : 'ltr' }}\r\n\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\tonClick={handleReferralClick(\"faults\")}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ListItemIcon\r\n\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<WarningRoundedIcon className={classes.typeIcon} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t{t('assetsModule.faults')}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t\t<MenuItem\r\n\t\t\t\t\tstyle={{ direction: lang.code === 'he' ? 'rtl' : 'ltr' }}\r\n\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\tonClick={handleReferralClick(\"faults\")}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ListItemIcon\r\n\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DescriptionRoundedIcon className={classes.typeIcon} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t{t('assetsModule.documents')}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t\t<MenuItem\r\n\t\t\t\t\tstyle={{ direction: lang.code === 'he' ? 'rtl' : 'ltr' }}\r\n\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\tonClick={handleReferralClick(\"residents\")}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ListItemIcon className={classes.icon}>\r\n\t\t\t\t\t\t<PeopleOutlineRoundedIcon className={classes.typeIcon} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t{t('assetsModule.residents')}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t</Menu>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\texpandIcon: {\r\n\t\tcolor: 'white',\r\n\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\tmargin: '0 5px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.5)',\r\n\t\t},\r\n\t},\r\n\ticonBtn: {\r\n\t\tcolor: 'white',\r\n\t\tmarginRight: '20px',\r\n\t\tborderRadius: '0 25px 25px 0',\r\n\t\tfontSize: '14px',\r\n\t\t'&:hover': {\r\n\t\t\ttransform: 'scale(1.077)',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',\r\n\t},\r\n\tmenu: {\r\n\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\tcolor: 'white',\r\n\t\tboxShadow: 'rgba(0,0,0,0.4) 0 0 2px 1px',\r\n\t\tborderRadius: '10px',\r\n\t},\r\n\tmenuitem: {\r\n\t\tminWidth: '150px',\r\n\t\tcolor: 'white',\r\n\t\tmarginRight: '20px',\r\n\t\tborderRadius: '0 25px 25px 0',\r\n\t\tfontSize: '14px',\r\n\t\t'&:hover': {\r\n\t\t\ttransform: 'scale(1.077)',\r\n\t\t},\r\n\t},\r\n\tmenuHeader: {\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmarginBottom: '10px',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpadding: '5px 10px 5px 20px',\r\n\t\talignItems: 'center',\r\n\t\toutline: 'none',\r\n\t},\r\n\tclose: {\r\n\t\tpadding: '6px',\r\n\t\tmargin: 0,\r\n\t},\r\n\ttypeIcon: {\r\n\t\tfontSize: '18px'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\AddRelatedUser.js",["1103","1104","1105"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Paper, FormControl, IconButton, useMediaQuery, Fade, Modal, Backdrop,Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { getUserList } from '../../../api/userApi';\r\nimport clsx from 'clsx'\r\n\r\n\r\n\r\nexport const AddRelatedUser = ({ handleClose, handleSave, isOpen, relatedUsers }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ selectedUser, setSelectedUser ] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        getUserList()\r\n        .then(data => {\r\n            let ul = relatedUsers.map(l => l._id);\r\n            setUserList(data.filter(u => ul.indexOf(u._id) === -1 ));\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = event => {\r\n        setSelectedUser(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={isOpen}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xl={3}>\r\n                        <Paper \r\n                            className={classes.paper} \r\n                            style={{ direction: lang.dir }}\r\n                            elevation={6}    \r\n                        >\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {t(\"systemsModule.addRelatedUserTitle\")}\r\n                                </div>\r\n                                <IconButton className={classes.closeBtn} onClick={handleClose}>\r\n                                    <ClearRoundedIcon className={classes.icon}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div className={classes.instructions}>\r\n                                {t(\"systemsModule.chooseUserToAdd\")}\r\n                            </div>\r\n                            <FormControl variant='outlined' className={classes.textInput} >\r\n                                <Select\r\n                                    value={selectedUser}\r\n                                    onChange={handleChange}\r\n                                    className={classes.menu}\r\n                                    MenuProps={{\r\n                                        classes: {\r\n                                            paper: classes.menupaper,\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        userList.map( (user, i) => {\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    className={classes.menuitem}\r\n                                                    value={user._id} \r\n                                                    key={i}\r\n                                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                                >\r\n                                                    {`${user.firstName} ${user.lastName}`}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div className={classes.controls}>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.save)}\r\n                                    onClick={() => handleSave(selectedUser)}\r\n                                    disabled={!selectedUser}\r\n                                >\r\n                                    {t(\"alert.confirm\")}\r\n                                </Button>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.cancel)}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    {t(\"alert.cancel\")}\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    \r\n                </Grid> \r\n                \r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px',\r\n        borderRadius: '10px',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '18px',\r\n        padding: '5px 10px',\r\n        height: 'fit-content'\r\n    },\r\n    closeBtn: {\r\n        fontSize: '20px',\r\n        height: '40px',\r\n        width: '40px'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        borderRadius: '25px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    instructions: {\r\n        width: 'auto',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '12px',\r\n        margin: '0px 10px'\r\n    },\r\n    menu: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(10px)',\r\n        maxHeight: '200px',\r\n        overflowY: 'auto',\r\n    },\r\n    menuitem: {\r\n        color: 'white'\r\n    },\r\n    textInput: {\r\n        margin: '20px 5px',\r\n        width: '300px',\r\n        '& input': {\r\n            color: 'white',\r\n            paddingLeft: '20px',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        }    \r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Notification.js",["1106","1107","1108","1109","1110","1111","1112","1113","1114","1115"],"import {\r\n\tmakeStyles,\r\n    useMediaQuery,\r\n    IconButton,\r\n    Button,\r\n    Avatar\r\n} from '@material-ui/core';\r\nimport AddLocationOutlinedIcon from '@material-ui/icons/AddLocationOutlined';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport CheckCircleOutlineRoundedIcon from '@material-ui/icons/CheckCircleOutlineRounded';\r\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport { getDatediffString, getFullName, updateStateField } from '../../../api/genericApi';\r\nimport { generateNotificationBody, generateNotificationHeader } from '../../../api/notificationsApi';\r\nimport { useHistory } from 'react-router';\r\nimport clsx from 'clsx';\r\n\r\nexport const Notification = ({ data, updateNotificationReadStatus }) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\tconst { t, i18n } = useTranslation();\r\n    const [ notification, setNotification ] = useState(data);\r\n     \r\n    useEffect(() => {\r\n        setNotification(data);\r\n    }, [data])\r\n    \r\n    const GenerateText = () => {\r\n        return (\r\n            <div className={classes.textContainer}>\r\n                <div className={classes.generateNotificationHeader}>\r\n                    {generateNotificationHeader(notification)}\r\n                </div>\r\n                <div className={classes.generateNotificationBody}>\r\n                    {generateNotificationBody(notification)}\r\n                </div>\r\n                <div className={classes.timePassed}>\r\n                    {getDatediffString(notification.createdAt)}\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    const handleClick = async () => {\r\n        await updateNotificationReadStatus(notification._id, true);\r\n        history.push(`/workspace/${notification.actionOn.objectType}/${notification.actionOn.externalId}`)\r\n    }\r\n\r\n    const handleNotificationStatus = event => {\r\n        event.stopPropagation();\r\n        updateNotificationReadStatus(notification._id, !notification.read)\r\n    }\r\n\r\n\treturn (\r\n        <Button \r\n            className={classes.container}\r\n            onClick={handleClick}\r\n        >\r\n            <div className={classes.sideIconContainer}>\r\n                {          \r\n                    <Avatar src={notification.actionBy ? notification.actionBy.avatar : null } alt={'ab'} className={classes.avatar} /> \r\n                }\r\n            </div>\r\n            <div className={clsx(classes.contentContainer, notification.read && classes.read)}>\r\n                <GenerateText />\r\n            </div>\r\n            <div className={classes.readContainer}>\r\n                {\r\n                    notification.read ? \r\n                    null : \r\n                    <FiberManualRecordIcon className={classes.icon} />\r\n                }\r\n            </div>\r\n            <Button \r\n                className={classes.markAsRead}\r\n                onClick={handleNotificationStatus}\r\n            >\r\n                {notification.read ? t(\"notificationsModule.markAsUnread\"): t(\"notificationsModule.markAsRead\")}\r\n            </Button>\r\n        </Button>\r\n\t);\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        height: '110px',\r\n        padding: '0',\r\n        textAlign: 'left',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.6)'\r\n        }\r\n    },\r\n    sideIconContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n        width: '20%'\r\n    },\r\n    contentContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n        width: '70%',\r\n        color: 'white'\r\n    },\r\n    textContainer: {\r\n        fontSize: '14px',\r\n        padding: '10px',\r\n        wordBreak: 'nobreak',\r\n        width: '100%',\r\n        \r\n    },\r\n    readContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n        width: '10%'\r\n    },\r\n    avatar: {\r\n        width: '50px',\r\n        height: '50px'\r\n    },\r\n    icon: {\r\n        color: 'rgba(255,255,255,0.8)',\r\n        fontSize: '13px'\r\n    },\r\n    generateNotificationHeader: {\r\n        fontSize: '14px',\r\n        color: 'rgba(255,255,255,0.7)',\r\n        padding: '0',\r\n        height: '25px'\r\n    },\r\n    generateNotificationBody: {\r\n        padding: '3px',\r\n        lineHeight: '20px'\r\n    },\r\n    timePassed:  {\r\n        fontSize: '12px',\r\n        color: 'rgba(255,255,255,0.6)'\r\n    },\r\n    markAsRead: {\r\n        position: 'absolute',\r\n        top: '7px',\r\n        right: '5px',\r\n        fontSize: '12px',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        padding: 0,\r\n        borderRadius: '50px',\r\n        border: '1px solid transparent',\r\n        padding: '2px 5px',\r\n        '&:hover': {\r\n            color: 'white',\r\n           border: '1px solid rgba(255,255,255,0.6)',\r\n        }\r\n    },\r\n    read: {\r\n        opacity: '0.4'\r\n    }\r\n  \r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UpsertUser.js",["1116","1117","1118","1119","1120","1121"],"import DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n\tFormControlLabel,\r\n\tFormHelperText,\r\n\tGrid, makeStyles,\r\n\tMenuItem, Select,\r\n\tSwitch,\r\n\tTextField\r\n} from \"@material-ui/core\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport heLocale from \"date-fns/locale/he\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getTenantOptions } from \"../../../api/adminApi\";\r\nimport { getFullName, getSuccessMessage } from \"../../../api/genericApi\";\r\nimport {\r\n\tcreateLocationMenuOptions,\r\n\tgetLocationsByAsset\r\n} from \"../../../api/locationsApi\";\r\nimport { getRoles, getRolesSuggestions } from \"../../../api/permissionsApi\";\r\nimport { getAssetsSuggestions } from \"../../../api/systemsApi\";\r\nimport {\r\n\tcreateUser,\r\n\tgetUserDataById,\r\n\tupdateUserData\r\n} from \"../../../api/userApi\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { SnackbarContext } from \"../../../context/SnackbarContext\";\r\nimport { Can } from \"../../reuseables/Can\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport { ModalContainer } from \"../../reuseables/ModalContainer\";\r\n\r\nexport const UpsertUser = ({ handleClose, userId, reloadUsers }) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { t } = useTranslation();\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst [mode, setMode] = useState(userId ? \"update\" : \"create\");\r\n\tconst [errors, setErrors] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [roles, setRoles] = useState([]);\r\n\tconst [residentOwner, setResidentOwner] = useState(false);\r\n\tconst [assets, setAssets] = useState([]);\r\n\tconst [locations, setLocations] = useState([]);\r\n\tconst [tenants, setTenants] = useState([]);\r\n\tconst [details, setDetails] = useState({\r\n\t\ttenant: auth.user.isAdmin\r\n\t\t\t? null\r\n\t\t\t: mode === \"create\"\r\n\t\t\t? auth.user.tenant\r\n\t\t\t: null,\r\n\t\temail: \"\",\r\n\t\tfirstName: \"\",\r\n\t\tlastName: \"\",\r\n\t\tbirthDate: null,\r\n\t\trole: null,\r\n\t\tphoneNumber: \"\",\r\n\t\temployedBy: \"\",\r\n\t\tdata: {\r\n\t\t\tisResident: false,\r\n\t\t\tisOwner: false,\r\n\t\t\tasset: \"\",\r\n\t\t\tlocation: \"\",\r\n\t\t},\r\n\t\tisActive: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tprepareData();\r\n\t}, [details.tenant]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (details.data.isResident || details.data.isOwner) {\r\n\t\t\tsetResidentOwner(true);\r\n\t\t} else if (!details.data.isResident && !details.data.isOwner) {\r\n\t\t\tsetResidentOwner(false);\r\n\t\t}\r\n\t\tif (details.data.asset) {\r\n\t\t\tpopulateLocations(details.data.asset);\r\n\t\t}\r\n\t}, [details.data]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (residentOwner) {\r\n\t\t\tpopulateAssets();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tclearResidentData();\r\n\t}, [residentOwner]);\r\n\r\n\tconst prepareData = async () => {\r\n\t\tif (!tenants.length && auth.user.isAdmin) {\r\n\t\t\tconst tenants = await getTenantOptions();\r\n\t\t\tsetTenants(tenants);\r\n\t\t}\r\n\r\n\t\tconst roles = await getRoles(details.tenant);\r\n\t\tif (!roles || roles.status === 403 || roles.status === 500) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\tconst suggestions = await getRolesSuggestions(roles);\r\n\t\tsetRoles(suggestions || []);\r\n\t\tif (!userId || details.tenant) {\r\n\t\t\tsetIsLoading(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst userData = await getUserDataById(userId);\r\n\t\tif (!userData) return;\r\n\t\tsetDetails({\r\n\t\t\t...userData,\r\n\t\t\trole: userData.role._id,\r\n\t\t});\r\n\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n\tconst populateAssets = async () => {\r\n\t\tlet res = await getAssetsSuggestions();\r\n\t\tif ([403, 500].includes(res.status)) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t\thandleClose();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetAssets(res);\r\n\t};\r\n\r\n\tconst populateLocations = async (asset) => {\r\n\t\tconst res = await getLocationsByAsset(asset);\r\n\t\tif ([403, 500].includes(res.status)) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t\thandleClose();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst ops = await createLocationMenuOptions(res);\r\n\t\tsetLocations(ops);\r\n\t};\r\n\r\n\tconst clearResidentData = () => {\r\n\t\tsetLocations([]);\r\n\t\tsetAssets([]);\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\tdata: {\r\n\t\t\t\t...details.data,\r\n\t\t\t\tlocation: \"\",\r\n\t\t\t\tasset: \"\",\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\tconst validateFields = () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet errList = [];\r\n\t\t\tif (!details.tenant) {\r\n\t\t\t\terrList.push({ field: \"tenant\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (!details.email) {\r\n\t\t\t\terrList.push({ field: \"email\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (!details.firstName) {\r\n\t\t\t\terrList.push({ field: \"firstName\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (!details.lastName) {\r\n\t\t\t\terrList.push({ field: \"lastName\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (!details.phoneNumber) {\r\n\t\t\t\terrList.push({ field: \"phoneNumber\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (!details.role) {\r\n\t\t\t\terrList.push({ field: \"role\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\r\n\t\t\tif (errList.length) {\r\n\t\t\t\tsetErrors(errList);\r\n\t\t\t\tresolve(false);\r\n\t\t\t}\r\n\t\t\tresolve(true);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleUserSave = async (details) => {\r\n\t\tconst res = await createUser(details);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t\treturn;\r\n\t\t} else if (res) {\r\n\t\t\tsetSnackbar(getSuccessMessage(\"user\", getFullName(res), \"created\"));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleUpdateUser = async (details) => {\r\n\t\tconst res = await updateUserData(details);\r\n\t\tif (res.status === 403 || res.status === 405) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t\treturn;\r\n\t\t} else if (res) {\r\n\t\t\tsetSnackbar(getSuccessMessage(\"user\", getFullName(res), \"updated\"));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tvalidateFields()\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (!res) throw \"\";\r\n\t\t\t\tif (mode === \"update\") {\r\n\t\t\t\t\treturn handleUpdateUser({ userId, ...details });\r\n\t\t\t\t}\r\n\t\t\t\treturn handleUserSave(details);\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\treloadUsers(true);\r\n\t\t\t\thandleClose();\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\treturn;\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (field) => async (event) => {\r\n\t\tlet val = [\"isActive\", \"isResident\", \"isOwner\"].includes(field)\r\n\t\t\t? event.target.checked\r\n\t\t\t: event.target.value;\r\n\t\tif (\r\n\t\t\t[\"isResident\", \"isOwner\", \"asset\", \"location\", \"unitNumber\"].includes(\r\n\t\t\t\tfield\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tsetDetails({\r\n\t\t\t\t...details,\r\n\t\t\t\temployedBy: \"\",\r\n\t\t\t\tdata: {\r\n\t\t\t\t\t...details.data,\r\n\t\t\t\t\t[field]: val,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetDetails({\r\n\t\t\t\t...details,\r\n\t\t\t\t[field]: val,\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (errors.length) {\r\n\t\t\tsetErrors(errors.filter((err) => err.field !== field));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleChangeDate = (date) => {\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\tbirthDate: date,\r\n\t\t});\r\n\t};\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress initial={true}/>\r\n\t) : (\r\n\t\t<ModalContainer\r\n\t\t\thandleClose={handleClose}\r\n\t\t\ttitle={\r\n\t\t\t\tmode === \"update\"\r\n\t\t\t\t\t? t(\"users.upsert.editUserDetails\")\r\n\t\t\t\t\t: t(\"users.upsert.createUser\")\r\n\t\t\t}\r\n\t\t\thandleConfirm={handleConfirm}\r\n\t\t\tpaperStyles={{ background: 'linear-gradient(148deg, rgba(85,85,85,1) 0%, rgba(100,100,100,1) 35%, rgba(130,130,130,1) 100%)'}}\r\n\t\t>\r\n\t\t\t{auth.user.isAdmin && (\r\n\t\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t{t(\"clientsModule.name\")}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\t\tvalue={details.tenant}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange(`tenant`)}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === \"tenant\").length > 0}\r\n\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\tdisablePortal: true,\r\n\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{tenants.map((t, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={t.value}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{t.label}\r\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t{errors.filter((e) => e.field === \"tenant\").length > 0 && (\r\n\t\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"#f44336\", marginRight: \"15px\" }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"errors.isRequired\")}\r\n\t\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"users.upsert.generalDetails\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\tlabel={t(`users.email`)}\r\n\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `email`).length > 0}\r\n\t\t\t\t\t\t\t\tvalue={details.email}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(\"email\")}\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `email`).length > 0 &&\r\n\t\t\t\t\t\t\t\t\tt(\"errors.isRequired\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\tmaxLength: 60,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `email`).length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\"rgb(244, 67, 54)\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\tlabel={t(`users.firstName`)}\r\n\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `firstName`).length > 0}\r\n\t\t\t\t\t\t\t\tvalue={details.firstName}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(\"firstName\")}\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `firstName`).length > 0 &&\r\n\t\t\t\t\t\t\t\t\tt(\"errors.isRequired\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\tmaxLength: 60,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `firstName`).length >\r\n\t\t\t\t\t\t\t\t\t\t\t\t0 && \"rgb(244, 67, 54)\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\tlabel={t(`users.lastName`)}\r\n\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `lastName`).length > 0}\r\n\t\t\t\t\t\t\t\tvalue={details.lastName}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(\"lastName\")}\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `lastName`).length > 0 &&\r\n\t\t\t\t\t\t\t\t\tt(\"errors.isRequired\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\tmaxLength: 60,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `lastName`).length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\"rgb(244, 67, 54)\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\tlabel={t(`users.phoneNumber`)}\r\n\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `phoneNumber`).length > 0\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvalue={details.phoneNumber}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(\"phoneNumber\")}\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `phoneNumber`).length > 0 &&\r\n\t\t\t\t\t\t\t\t\tt(\"errors.isRequired\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\tmaxLength: 60,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `phoneNumber`).length >\r\n\t\t\t\t\t\t\t\t\t\t\t\t0 && \"rgb(244, 67, 54)\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils} locale={heLocale}>\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tformat=\"dd/MM/yyyy\"\r\n\t\t\t\t\t\t\t\t\tlabel={t(`users.birthDate`)}\r\n\t\t\t\t\t\t\t\t\tvalue={details.birthDate}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChangeDate}\r\n\t\t\t\t\t\t\t\t\tinputVariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\tautoOk={true}\r\n\t\t\t\t\t\t\t\t\tdisableFuture={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{!(details.data.isResident || details.data.isOwner) && (\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\t\tlabel={t(`users.employedBy`)}\r\n\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `employedBy`).length > 0\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tvalue={details.employedBy}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange(\"employedBy\")}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `employedBy`).length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\tt(\"errors.isRequired\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\tmaxLength: 60,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `employedBy`).length >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t0 && \"rgb(244, 67, 54)\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Can module=\"roles\" action=\"update\">\r\n\t\t\t\t<Grid item xs={12} sm={6} lg={4} className={classes.section}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<div className={classes.sectionTitle}>{t(\"users.upsert.role\")}</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `role`).length > 0}\r\n\t\t\t\t\t\t\t\t\tvalue={details.role}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange(`role`)}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{roles.map((role, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={role.value}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{role.name}\r\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t{errors.filter((e) => e.field === \"asset\").length > 0 && (\r\n\t\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"#f44336\", marginRight: \"15px\" }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"errors.isRequired\")}\r\n\t\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Can>\r\n\r\n\t\t\t<Can module=\"roles\" action=\"update\">\r\n\t\t\t\t<Grid item xs={12} sm={6} lg={4} className={classes.section}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t{t(\"users.upsert.activity\")}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tclassName={classes.switchLabel}\r\n\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={details.isActive}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange(\"isActive\")}\r\n\t\t\t\t\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tswitchBase: classes.switchBase,\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked: classes.checked,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttrack: classes.track,\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\tdetails.isActive\r\n\t\t\t\t\t\t\t\t\t\t\t? t(\"users.upsert.userActive\")\r\n\t\t\t\t\t\t\t\t\t\t\t: t(\"users.upsert.userInactive\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Can>\r\n\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"users.upsert.residency\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\tclassName={classes.switchLabel}\r\n\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\t\tchecked={details.data.isResident}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange(\"isResident\")}\r\n\t\t\t\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\t\t\t\tswitchBase: classes.switchBase,\r\n\t\t\t\t\t\t\t\t\t\t\tchecked: classes.checked,\r\n\t\t\t\t\t\t\t\t\t\t\ttrack: classes.track,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\tdetails.data.isResident\r\n\t\t\t\t\t\t\t\t\t\t? t(\"users.upsert.isResident\")\r\n\t\t\t\t\t\t\t\t\t\t: t(\"users.upsert.notResident\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\tclassName={classes.switchLabel}\r\n\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\t\tchecked={details.data.isOwner}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange(\"isOwner\")}\r\n\t\t\t\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\t\t\t\tswitchBase: classes.switchBase,\r\n\t\t\t\t\t\t\t\t\t\t\tchecked: classes.checked,\r\n\t\t\t\t\t\t\t\t\t\t\ttrack: classes.track,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\tdetails.data.isOwner\r\n\t\t\t\t\t\t\t\t\t\t? t(\"users.upsert.isOwner\")\r\n\t\t\t\t\t\t\t\t\t\t: t(\"users.upsert.notOwner\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{Boolean(assets.length) && (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\tsm={5}\r\n\t\t\t\t\t\t\t\t\tmd={5}\r\n\t\t\t\t\t\t\t\t\tlg={5}\r\n\t\t\t\t\t\t\t\t\txl={5}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.section}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t\t\t\t\t{t(\"locationsModule.owningAsset\")}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.data.asset}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange(`asset`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisablePortal: true,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{assets.map((asset, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={asset.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{asset.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\tsm={5}\r\n\t\t\t\t\t\t\t\t\tmd={5}\r\n\t\t\t\t\t\t\t\t\tlg={5}\r\n\t\t\t\t\t\t\t\t\txl={5}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.section}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t\t\t\t\t{t(\"locationsModule.locationName\")}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.data.location}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange(`location`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisablePortal: true,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{locations.map((location, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={location.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{location.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6} lg={4} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t\t\t\t\t{t(\"users.upsert.unitNumber\")}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `unitNumber`)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.data.unitNumber}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange(\"unitNumber\")}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `unitNumber`)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.length > 0 && t(\"errors.isRequired\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: 60,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `unitNumber`)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.length > 0 && \"rgb(244, 67, 54)\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</ModalContainer>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ticonBtn: {\r\n\t\tmargin: \"10px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"20px\",\r\n\t},\r\n\tsection: {\r\n\t\tmargin: \"10px 5px\",\r\n\t},\r\n\tsectionTitle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"7px 20px\",\r\n\t\tmarginLeft: \"25px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tborderRadius: \"8px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tmarginLeft: \"15px\",\r\n\t\t},\r\n\t},\r\n\tfields: {\r\n\t\tpadding: \"10px 20px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px\",\r\n\t\t},\r\n\t},\r\n\ttextContainer: {\r\n\t\tpadding: \"5px\",\r\n\t},\r\n\ttextField: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tselectInput: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t\theight: \"200px\",\r\n\t\toverflowY: \"auto\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmarginRight: \"7px\",\r\n\t\tmarginLeft: \"-5px\",\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"100%\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\t},\r\n\t},\r\n\tcontrols: {\r\n\t\tborderTop: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"10px 0\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t},\r\n\tcontrol: {\r\n\t\twidth: \"30%\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\tfontSize: \"16px\",\r\n\t\tmargin: \"5px\",\r\n\t\tpadding: \"5px 30px\",\r\n\t\tborderRadius: \"30px\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tsave: {\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"black\",\r\n\t\t},\r\n\t\t\"&:disabled\": {\r\n\t\t\tcolor: \"rgba(255,255,255,0.3)\",\r\n\t\t},\r\n\t},\r\n\tcancel: {\r\n\t\t\"&:hover\": {\r\n\t\t\tboxShadow: \"inset rgba(255,255,255,0.3) 0 0 2px 1px\",\r\n\t\t},\r\n\t},\r\n\tchips: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexWrap: \"wrap\",\r\n\t},\r\n\tchip: {\r\n\t\theight: \"50px\",\r\n\t\tfontSize: \"14px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tcolor: \"white\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\t\tboxShadow: \"inset lightgrey 0px 0px 1px 1px\",\r\n\t\t},\r\n\t},\r\n\tuserCont: {\r\n\t\theight: \"fit-content\",\r\n\t\tpadding: 0,\r\n\t\tmargin: 0,\r\n\t\tmargin: \"5px 0\",\r\n\t},\r\n\tchipsCont: {\r\n\t\theight: \"fit-content\",\r\n\t\tpadding: 0,\r\n\t\tmargin: \"3px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\tboxShadow: \"inset rgba(0,0,0,0.5) 0px 0px 2px 1px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjutifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tremoveIcon: {\r\n\t\tcolor: \"rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"5px\",\r\n\t\tmarginRight: \"5px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\t\tcolor: \"white\",\r\n\t\t},\r\n\t},\r\n\tradioGroup: {\r\n\t\tcolor: \"white\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"row\",\r\n\t\talignitems: \"center\",\r\n\t},\r\n\tradioBtn: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"15px\",\r\n\t},\r\n\tfilesUploaded: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"0 15px\",\r\n\t},\r\n\tuploadBtn: {\r\n\t\tmargin: \"9px 0\",\r\n\t\tbackground: \"rgba(0,0,0,0.1)\",\r\n\t\tcolor: \"white\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\t\"&:hover\": {\r\n\t\t\tboxShadow: \"inset white 0 0 2px 1px\",\r\n\t\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t},\r\n\t},\r\n\timageRow: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tpadding: \"10px 5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\tpreviewImage: {\r\n\t\theight: \"50px\",\r\n\t\twidth: \"100px\",\r\n\t},\r\n\tremoveImageBtn: {\r\n\t\tcolor: \"rgba(255,255,255,0.5)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"6px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\tborderColor: \"white\",\r\n\t\t},\r\n\t},\r\n\tuploadedImagesTitle: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px 5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\tswitchLabel: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px\",\r\n\t},\r\n\tswitchBase: {\r\n\t\tcolor: \"rgba(255,255,255,0.4)\",\r\n\t\t\"&$checked\": {\r\n\t\t\tcolor: \"rgba(255,255,255,1)\",\r\n\t\t},\r\n\t\t\"&$checked + $track\": {\r\n\t\t\tbackgroundColor: \"rgba(255,255,255,0.8)\",\r\n\t\t},\r\n\t},\r\n\tchecked: {},\r\n\ttrack: {\r\n\t\tbackgroundColor: \"rgba(255,255,255,0.4)\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\UpsertTask.js",["1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132"],"import {\r\n\tAvatar,\r\n\tButton,\r\n\tChip,\r\n\tCollapse,\r\n\tFormControlLabel,\r\n\tFormHelperText,\r\n\tGrid,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tMenuItem,\r\n\tSelect,\r\n\tSwitch,\r\n\tTextField,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteOutlineRoundedIcon from \"@material-ui/icons/DeleteOutlineRounded\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getFullName } from \"../../../api/genericApi\";\r\nimport {\r\n\tcreateLocationMenuOptions,\r\n\tgetLocationsByAsset,\r\n} from \"../../../api/locationsApi\";\r\nimport {\r\n\tcreateSystemMenuOptions,\r\n\tgetAssetsSuggestions,\r\n\tgetSystemsByAsset,\r\n} from \"../../../api/systemsApi\";\r\nimport { getTask } from \"../../../api/tasksApi\";\r\nimport { createUserOptions } from \"../../../api/userApi\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport { ModalContainer } from \"../../reuseables/ModalContainer\";\r\nimport { ScheduleItem } from \"../../reuseables/scheduler/ScheduleItem\";\r\nimport { UserItem } from \"../../user/UserItem\";\r\nimport { TaskSteps } from \"./TaskSteps\";\r\n\r\nexport const UpsertTask = ({\r\n\thandleClose,\r\n\thandleSave,\r\n\thandleUpdate,\r\n\ttaskId,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { t } = useTranslation();\r\n\tconst [mode, setMode] = useState(taskId ? \"update\" : \"create\");\r\n\tconst [errors, setErrors] = useState([]);\r\n\tconst [assets, setAssets] = useState([]);\r\n\tconst [systems, setSystems] = useState([]);\r\n\tconst [locations, setLocations] = useState([]);\r\n\tconst [userList, setUserList] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [details, setDetails] = useState({\r\n\t\ttenant: auth.user.tenant,\r\n\t\ttitle: \"\",\r\n\t\tdescription: \"\",\r\n\t\tasset: \"\",\r\n\t\tsystem: \"\",\r\n\t\tlocation: \"\",\r\n\t\towner: \"\",\r\n\t\trelatedUsers: [],\r\n\t\tcreatedBy: auth.user._id,\r\n\t\tisRepeatable: false,\r\n\t\tschedule: [],\r\n\t\tisUsingSteps: false,\r\n\t\tsteps: [],\r\n\t\tisSequential: false,\r\n\t\timages: [],\r\n\t\tuploadedImages: [],\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!details.isUsingSteps) {\r\n\t\t\tsetDetails({ ...details, steps: [], isSequential: false });\r\n\t\t} else if (mode === \"create\") {\r\n\t\t\tsetDetails({\r\n\t\t\t\t...details,\r\n\t\t\t\tsteps: [{ order: 1, description: \"\", isCompleted: false }],\r\n\t\t\t});\r\n\t\t}\r\n\t}, [details.isUsingSteps]);\r\n\r\n\tuseEffect(() => {\r\n\t\tprepareData();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (details.isRepeatable) {\r\n\t\t\tif (!details.schedule.length) {\r\n\t\t\t\tsetDetails({\r\n\t\t\t\t\t...details,\r\n\t\t\t\t\tschedule: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttenant: auth.user.tenant,\r\n\t\t\t\t\t\t\tcreatedBy: auth.user._id,\r\n\t\t\t\t\t\t\tstartDate: \"\",\r\n\t\t\t\t\t\t\tinterval: \"\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetDetails({\r\n\t\t\t\t...details,\r\n\t\t\t\tschedule: [],\r\n\t\t\t});\r\n\t\t}\r\n\t}, [details.isRepeatable]);\r\n\r\n\tconst prepareData = async () => {\r\n\t\tconst [userOptions, assetSuggestions] = await Promise.all([\r\n\t\t\tcreateUserOptions(),\r\n\t\t\tgetAssetsSuggestions(),\r\n\t\t]);\r\n\t\tsetUserList(userOptions);\r\n\t\tsetAssets(assetSuggestions);\r\n\t\tif (!taskId) {\r\n\t\t\tsetIsLoading(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst data = await getTask(taskId, true);\r\n\t\tawait Promise.all([\r\n\t\t\tloadSystemOptions(data.asset),\r\n\t\t\tloadLocationOptions(data.asset),\r\n\t\t]);\r\n\t\tif (!data) return;\r\n\t\tsetDetails({ ...data, images: [], uploadedImages: data.images });\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n\tconst validateFields = () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet errList = [];\r\n\t\t\tif (!details.owner) {\r\n\t\t\t\terrList.push({ field: \"owner\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (!details.title) {\r\n\t\t\t\terrList.push({ field: \"title\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\r\n\t\t\tif (details.isRepeatable) {\r\n\t\t\t\tdetails.schedule.forEach((sc, i) => {\r\n\t\t\t\t\tif (!sc.interval) {\r\n\t\t\t\t\t\terrList.push({\r\n\t\t\t\t\t\t\tfield: `schedule-interval-${i}`,\r\n\t\t\t\t\t\t\ttext: t(\"errors.isRequired\"),\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!sc.startDate) {\r\n\t\t\t\t\t\terrList.push({\r\n\t\t\t\t\t\t\tfield: `schedule-startDate-${i}`,\r\n\t\t\t\t\t\t\ttext: t(\"errors.isRequired\"),\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (errList.length) {\r\n\t\t\t\tsetErrors(errList);\r\n\t\t\t\tresolve(false);\r\n\t\t\t}\r\n\t\t\tresolve(true);\r\n\t\t});\r\n\t};\r\n\r\n\tconst loadSystemOptions = async (assetId) => {\r\n\t\treturn getSystemsByAsset(assetId)\r\n\t\t\t.then((systems) => {\r\n\t\t\t\treturn createSystemMenuOptions(systems);\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetSystems(data);\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst loadLocationOptions = async (assetId) => {\r\n\t\treturn getLocationsByAsset(assetId)\r\n\t\t\t.then((locations) => {\r\n\t\t\t\treturn createLocationMenuOptions(locations);\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetLocations(data);\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tvalidateFields().then((res) => {\r\n\t\t\tif (!res) return;\r\n\t\t\tif (mode === \"update\") {\r\n\t\t\t\thandleUpdate(details);\r\n\t\t\t} else handleSave(details);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (field) => async (event) => {\r\n\t\tif (field === \"isUsingSteps\" || field === \"isRepeatable\") {\r\n\t\t\tsetDetails({\r\n\t\t\t\t...details,\r\n\t\t\t\t[field]: event.target.checked,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetDetails({\r\n\t\t\t\t...details,\r\n\t\t\t\t[field]: event.target.value,\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (field === \"asset\") {\r\n\t\t\tif (event.target.value) {\r\n\t\t\t\tawait loadSystemOptions(event.target.value);\r\n\t\t\t\tawait loadLocationOptions(event.target.value);\r\n\t\t\t} else {\r\n\t\t\t\tsetDetails({\r\n\t\t\t\t\t...details,\r\n\t\t\t\t\tsystem: null,\r\n\t\t\t\t});\r\n\t\t\t\tsetSystems([]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (errors.length) {\r\n\t\t\tsetErrors(errors.filter((err) => err.field !== field));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleFileUpload = (event) => {\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\timages: event.target.files,\r\n\t\t});\r\n\t};\r\n\r\n\tconst removeImage = (i) => (event) => {\r\n\t\tlet im = details.uploadedImages;\r\n\t\tim.splice(i, 1);\r\n\t\tsetDetails({ ...details, uploadedImages: im });\r\n\t};\r\n\r\n\tconst toggleIsSequential = (event) => {\r\n\t\tsetDetails({ ...details, isSequential: event.target.checked });\r\n\t};\r\n\r\n\tconst handleStepChange = (pos) => (event) => {\r\n\t\tlet st = [...details.steps];\r\n\t\tst[pos].description = event.target.value;\r\n\t\tsetDetails({ ...details, steps: st });\r\n\t};\r\n\r\n\tconst handleAddStep = () => {\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\tsteps: [\r\n\t\t\t\t...details.steps,\r\n\t\t\t\t{\r\n\t\t\t\t\torder: details.steps.length + 1,\r\n\t\t\t\t\tdescription: \"\",\r\n\t\t\t\t\tisCompleted: false,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleRemoveStep = (order) => (event) => {\r\n\t\tlet sts = [...details.steps];\r\n\t\tsts.splice(order - 1, 1);\r\n\t\tsts.forEach((s, i) => {\r\n\t\t\tsts[i].order = i + 1;\r\n\t\t});\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\tsteps: sts,\r\n\t\t\tisUsingSteps: sts.length ? true : false,\r\n\t\t\tisSequential: sts.length ? details.isSequential : false,\r\n\t\t});\r\n\t};\r\n\r\n\tconst updateSchedules = async (data, index) => {\r\n\t\tlet scs = [...details.schedule];\r\n\t\tscs[index] = data;\r\n\t\tsetErrors(\r\n\t\t\terrors.filter((e) => {\r\n\t\t\t\tif (e.field.includes(\"schedule\") && e.field.split(\"-\")[2] == index) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t})\r\n\t\t);\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\tschedule: scs,\r\n\t\t});\r\n\t};\r\n\r\n\tconst removeSchedule = (index) => (event) => {\r\n\t\tlet scs = details.schedule.filter((s, i) => s._id !== index && index !== i);\r\n\t\tsetErrors(\r\n\t\t\terrors.filter((e) => {\r\n\t\t\t\tif (e.field.includes(\"schedule\") && e.field.split(\"-\")[2] == index) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t})\r\n\t\t);\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\tschedule: scs,\r\n\t\t\tisRepeatable: !scs.length ? false : details.isRepeatable,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleAddSchedule = () => {\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\tschedule: [\r\n\t\t\t\t...details.schedule,\r\n\t\t\t\t{\r\n\t\t\t\t\ttenant: auth.user.tenant,\r\n\t\t\t\t\tcreatedBy: auth.user._id,\r\n\t\t\t\t\tstartDate: \"\",\r\n\t\t\t\t\tinterval: \"\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t});\r\n\t};\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress initial={true} />\r\n\t) : (\r\n\t\t<ModalContainer\r\n\t\t\thandleClose={handleClose}\r\n\t\t\ttitle={\r\n\t\t\t\tmode === \"update\"\r\n\t\t\t\t\t? t(\"tasksModule.upsert.updateTaskDetails\")\r\n\t\t\t\t\t: t(\"tasksModule.upsert.createTask\")\r\n\t\t\t}\r\n\t\t\thandleConfirm={handleConfirm}\r\n\t\t>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={12}\r\n\t\t\t\tsm={10}\r\n\t\t\t\tmd={10}\r\n\t\t\t\tlg={10}\r\n\t\t\t\txl={10}\r\n\t\t\t\tclassName={classes.section}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"tasksModule.upsert.asset\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `asset`).length > 0}\r\n\t\t\t\t\t\t\t\tvalue={details.asset}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(`asset`)}\r\n\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{assets.map((asset, i) => (\r\n\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tvalue={asset.value}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{asset.text}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t{errors.filter((e) => e.field === \"asset\").length > 0 && (\r\n\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#f44336\", marginRight: \"15px\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{t(\"errors.isRequired\")}\r\n\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={12}\r\n\t\t\t\tsm={5}\r\n\t\t\t\tmd={5}\r\n\t\t\t\tlg={5}\r\n\t\t\t\txl={5}\r\n\t\t\t\tclassName={classes.section}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"tasksModule.upsert.system\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `system`).length > 0}\r\n\t\t\t\t\t\t\t\tvalue={details.system}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(`system`)}\r\n\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{systems.map((system, i) => (\r\n\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tvalue={system.value}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{system.text}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t{errors.filter((e) => e.field === \"asset\").length > 0 && (\r\n\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#f44336\", marginRight: \"15px\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{t(\"errors.isRequired\")}\r\n\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={12}\r\n\t\t\t\tsm={5}\r\n\t\t\t\tmd={5}\r\n\t\t\t\tlg={5}\r\n\t\t\t\txl={5}\r\n\t\t\t\tclassName={classes.section}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"tasksModule.upsert.location\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `location`).length > 0}\r\n\t\t\t\t\t\t\t\tvalue={details.location}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(`location`)}\r\n\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{locations.map((location, i) => (\r\n\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tvalue={location.value}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{location.text}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t{errors.filter((e) => e.field === \"location\").length > 0 && (\r\n\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#f44336\", marginRight: \"15px\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{t(\"errors.isRequired\")}\r\n\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"tasksModule.upsert.generalDetails\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\tlabel={t(`tasksModule.upsert.title`)}\r\n\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `title`).length > 0}\r\n\t\t\t\t\t\t\t\tvalue={details.title}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(\"title\")}\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `title`).length > 0\r\n\t\t\t\t\t\t\t\t\t\t? t(\"errors.isRequired\")\r\n\t\t\t\t\t\t\t\t\t\t: `${60 - details.title.length} ${t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"tasksModule.upsert.titleLimit\"\r\n\t\t\t\t\t\t\t\t\t\t  )}`\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\tmaxLength: 60,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `title`).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t? \"rgb(244, 67, 54)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"rgba(255,255,255,0.6)\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\tlabel={t(`tasksModule.upsert.description`)}\r\n\t\t\t\t\t\t\t\tvalue={details.description}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(\"description\")}\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\tmultiline={true}\r\n\t\t\t\t\t\t\t\trows={7}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"tasksModule.upsert.steps\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\tclassName={classes.switchLabel}\r\n\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\t\tchecked={details.isUsingSteps}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange(\"isUsingSteps\")}\r\n\t\t\t\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\t\t\t\tswitchBase: classes.switchBase,\r\n\t\t\t\t\t\t\t\t\t\t\tchecked: classes.checked,\r\n\t\t\t\t\t\t\t\t\t\t\ttrack: classes.track,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlabel={t(\"tasksModule.upsert.isUsingSteps\")}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<TaskSteps\r\n\t\t\t\t\t\t\t\t\tdata={details.steps}\r\n\t\t\t\t\t\t\t\t\thandleChange={handleStepChange}\r\n\t\t\t\t\t\t\t\t\tisUsingSteps={details.isUsingSteps}\r\n\t\t\t\t\t\t\t\t\tisSequential={details.isSequential}\r\n\t\t\t\t\t\t\t\t\ttoggleIsSequential={toggleIsSequential}\r\n\t\t\t\t\t\t\t\t\taddStep={handleAddStep}\r\n\t\t\t\t\t\t\t\t\tremoveStep={handleRemoveStep}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t{mode === \"create\" && (\r\n\t\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t{t(\"tasksModule.upsert.repeatableTask\")}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tclassName={classes.switchLabel}\r\n\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={details.isRepeatable}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange(\"isRepeatable\")}\r\n\t\t\t\t\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tswitchBase: classes.switchBase,\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked: classes.checked,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttrack: classes.track,\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlabel={t(\"tasksModule.upsert.isRepeatable\")}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<div className={classes.notificationsInstructions}>\r\n\t\t\t\t\t\t\t\t{t(\"tasksModule.upsert.notificationsInstructions\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Collapse in={details.isRepeatable}>\r\n\t\t\t\t\t\t\t{details.schedule.map((sc, i) => (\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.scheduleContainer}\r\n\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<ScheduleItem\r\n\t\t\t\t\t\t\t\t\t\tscData={sc}\r\n\t\t\t\t\t\t\t\t\t\tupdateSchedules={updateSchedules}\r\n\t\t\t\t\t\t\t\t\t\tremoveSchedule={removeSchedule}\r\n\t\t\t\t\t\t\t\t\t\tindex={i}\r\n\t\t\t\t\t\t\t\t\t\tintervalError={\r\n\t\t\t\t\t\t\t\t\t\t\terrors.filter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\te.field.includes(\"interval\") &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\te.field.split(\"-\")[2] == i\r\n\t\t\t\t\t\t\t\t\t\t\t).length\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tdateError={\r\n\t\t\t\t\t\t\t\t\t\t\terrors.filter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\te.field.includes(\"startDate\") &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\te.field.split(\"-\")[2] == i\r\n\t\t\t\t\t\t\t\t\t\t\t).length\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName={classes.addBtn}\r\n\t\t\t\t\t\t\t\t\tstartIcon={<AddIcon className={classes.addIcon} />}\r\n\t\t\t\t\t\t\t\t\tonClick={handleAddSchedule}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{t(\"tasksModule.upsert.addScheduling\")}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={12}\r\n\t\t\t\tsm={6}\r\n\t\t\t\tmd={6}\r\n\t\t\t\tlg={4}\r\n\t\t\t\txl={4}\r\n\t\t\t\tclassName={classes.section}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"tasksModule.upsert.taskOwner\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `owner`).length > 0}\r\n\t\t\t\t\t\t\tvalue={details.owner}\r\n\t\t\t\t\t\t\tonChange={handleChange(`owner`)}\r\n\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\trenderValue={(selected) => {\r\n\t\t\t\t\t\t\t\tlet user = userList.find((f) => f._id === selected);\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\t\t\tavatar={\r\n\t\t\t\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ height: \"40px\", width: \"40px\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={user.avatar}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tlabel={getFullName(user)}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{userList.map((user, i) => (\r\n\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\tvalue={user.value}\r\n\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.userCont}>\r\n\t\t\t\t\t\t\t\t\t\t<UserItem user={user} avatarSize={40} size={13} showName />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t{errors.filter((e) => e.field === \"owner\").length > 0 && (\r\n\t\t\t\t\t\t\t<FormHelperText style={{ color: \"#f44336\", marginRight: \"15px\" }}>\r\n\t\t\t\t\t\t\t\t{t(\"errors.isRequired\")}\r\n\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} md={6} className={classes.section}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{mode === \"create\"\r\n\t\t\t\t\t\t\t? t(\"tasksModule.upsert.taskImages\")\r\n\t\t\t\t\t\t\t: t(\"tasksModule.upsert.addTaskImages\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tcomponent={\"label\"}\r\n\t\t\t\t\t\t\t\tvariant={\"contained\"}\r\n\t\t\t\t\t\t\t\tclassName={classes.uploadBtn}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{t(\"tasksModule.upsert.uploadImages\")}\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\taccept=\"image/*\"\r\n\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\tonChange={handleFileUpload}\r\n\t\t\t\t\t\t\t\t\thidden\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<span className={classes.filesUploaded}>\r\n\t\t\t\t\t\t\t\t{`${details.images.length} ${t(\r\n\t\t\t\t\t\t\t\t\t\"tasksModule.upsert.imagesSelected\"\r\n\t\t\t\t\t\t\t\t)}`}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{Boolean(details.uploadedImages.length) && (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.uploadedImagesTitle}>\r\n\t\t\t\t\t\t\t\t\t{t(\"tasksModule.upsert.uploadedImages\")}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t{details.uploadedImages.map((image, i) => (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.imageRow} key={i}>\r\n\t\t\t\t\t\t\t\t\t\t<img src={image} className={classes.previewImage} />\r\n\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={removeImage(i)}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.removeImageBtn}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlineRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.removeImage}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</ModalContainer>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ticonBtn: {\r\n\t\tmargin: \"10px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"20px\",\r\n\t},\r\n\tsection: {\r\n\t\tmargin: \"10px 5px\",\r\n\t},\r\n\tsectionTitle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"7px 20px\",\r\n\t\tmarginLeft: \"25px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tborderRadius: \"8px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tmarginLeft: \"15px\",\r\n\t\t},\r\n\t},\r\n\tfields: {\r\n\t\tpadding: \"10px 20px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px\",\r\n\t\t},\r\n\t},\r\n\ttextContainer: {\r\n\t\tpadding: \"5px\",\r\n\t},\r\n\ttextField: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tselectInput: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t\theight: \"200px\",\r\n\t\toverflowY: \"auto\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmarginRight: \"7px\",\r\n\t\tmarginLeft: \"-5px\",\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"100%\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\t},\r\n\t},\r\n\tcontrols: {\r\n\t\tborderTop: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"10px 0\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t},\r\n\tcontrol: {\r\n\t\twidth: \"30%\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\tfontSize: \"16px\",\r\n\t\tmargin: \"5px\",\r\n\t\tpadding: \"5px 30px\",\r\n\t\tborderRadius: \"30px\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tsave: {\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"black\",\r\n\t\t},\r\n\t\t\"&:disabled\": {\r\n\t\t\tcolor: \"rgba(255,255,255,0.3)\",\r\n\t\t},\r\n\t},\r\n\tcancel: {\r\n\t\t\"&:hover\": {\r\n\t\t\tboxShadow: \"inset rgba(255,255,255,0.3) 0 0 2px 1px\",\r\n\t\t},\r\n\t},\r\n\tchips: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexWrap: \"wrap\",\r\n\t},\r\n\tchip: {\r\n\t\theight: \"50px\",\r\n\t\tfontSize: \"14px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tcolor: \"white\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\t\tboxShadow: \"inset lightgrey 0px 0px 1px 1px\",\r\n\t\t},\r\n\t},\r\n\tuserCont: {\r\n\t\theight: \"fit-content\",\r\n\t\tpadding: 0,\r\n\t\tmargin: 0,\r\n\t\tmargin: \"5px 0\",\r\n\t},\r\n\tchipsCont: {\r\n\t\theight: \"fit-content\",\r\n\t\tpadding: 0,\r\n\t\tmargin: \"3px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\tboxShadow: \"inset rgba(0,0,0,0.5) 0px 0px 2px 1px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjutifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tremoveIcon: {\r\n\t\tcolor: \"rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"5px\",\r\n\t\tmarginRight: \"5px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\t\tcolor: \"white\",\r\n\t\t},\r\n\t},\r\n\tradioGroup: {\r\n\t\tcolor: \"white\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"row\",\r\n\t\talignitems: \"center\",\r\n\t},\r\n\tradioBtn: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"15px\",\r\n\t},\r\n\tfilesUploaded: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"0 15px\",\r\n\t},\r\n\tuploadBtn: {\r\n\t\tmargin: \"9px 0\",\r\n\t\tbackground: \"rgba(0,0,0,0.1)\",\r\n\t\tcolor: \"white\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\t\"&:hover\": {\r\n\t\t\tboxShadow: \"inset white 0 0 2px 1px\",\r\n\t\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t},\r\n\t},\r\n\timageRow: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tpadding: \"10px 5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\tpreviewImage: {\r\n\t\theight: \"50px\",\r\n\t\twidth: \"100px\",\r\n\t},\r\n\tremoveImageBtn: {\r\n\t\tcolor: \"rgba(255,255,255,0.5)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"6px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\tborderColor: \"white\",\r\n\t\t},\r\n\t},\r\n\tuploadedImagesTitle: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px 5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\tswitchLabel: {\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tswitchBase: {\r\n\t\tcolor: \"rgba(255,255,255,0.4)\",\r\n\t\t\"&$checked\": {\r\n\t\t\tcolor: \"rgba(255,255,255,1)\",\r\n\t\t},\r\n\t\t\"&$checked + $track\": {\r\n\t\t\tbackgroundColor: \"rgba(255,255,255,0.8)\",\r\n\t\t},\r\n\t},\r\n\tchecked: {},\r\n\ttrack: {\r\n\t\tbackgroundColor: \"rgba(255,255,255,0.4)\",\r\n\t},\r\n\tnotificationsInstructions: {\r\n\t\tcolor: \"rgba(255,255,255,0.6)\",\r\n\t\tfontSize: \"12px\",\r\n\t\tmarginBottom: \"10px\",\r\n\t},\r\n\taddBtn: {\r\n\t\tcolor: \"rgba(255,255,255,0.6)\",\r\n\t\tfontSize: \"16px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.6)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"8px 30px 8px 15px\",\r\n\t\tmargin: \"10px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(255,255,255,0.8)\",\r\n\t\t\tcolor: \"rgba(0,0,0,0.8)\",\r\n\t\t},\r\n\t},\r\n\ticonBtn: {\r\n\t\tcolor: \"rgba(255,255,255,0.6)\",\r\n\t\tfontSize: \"16px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.6)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"10px\",\r\n\t\tmargin: \"0 10px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(255,255,255,0.8)\",\r\n\t\t\tcolor: \"rgba(0,0,0,0.8)\",\r\n\t\t},\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskSteps.js",["1133","1134","1135","1136"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, Grid, Collapse, TextField, FormControlLabel, Checkbox, IconButton, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\n\r\n\r\nexport const TaskSteps = ({ data,  isUsingSteps, handleChange, isSequential, toggleIsSequential, addStep, removeStep }) => {\r\n\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const [ isSeq, setIsSeq ] = useState(isSequential);\r\n    const [ steps, setSteps ] = useState(data || [{ order: 1, description: '', isCompleted: false }]);\r\n\r\n    useEffect(() => {\r\n        setSteps(data)\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        setIsSeq(isSequential);\r\n    }, [isSequential])\r\n\r\n    return (\r\n        <Collapse in={isUsingSteps} >\r\n            <Grid container>\r\n                {/* <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox \r\n                                checked={isSeq} \r\n                                onChange={toggleIsSequential}\r\n                                classes={{ root: classes.checkbox, checked: classes.checked}}\r\n                            />\r\n                        }\r\n                        className={classes.isSequential} \r\n                        label={t(\"tasksModule.upsert.isSequential\")}\r\n                    />\r\n                </Grid> */}\r\n                {\r\n                    steps.map((step, i) => \r\n                    <Grid container className={classes.textContainer}>\r\n                        <Grid item xs={10}>\r\n                            <TextField\r\n                                variant={\"outlined\"}\r\n                                label={`${t(`tasksModule.upsert.step`)} ${step.order}`}\r\n                                value={ step.description }\r\n                                onChange={handleChange(i)}\r\n                                className={classes.textField}\r\n                                size={'medium'}\r\n                                multiline={true}\r\n                                helperText={ `${60 - step.description.length} ${t(\"tasksModule.upsert.titleLimit\")}` }\r\n                                inputProps={{\r\n                                    maxLength: 60\r\n                                }}\r\n                                FormHelperTextProps={{\r\n                                    style: { color: 'rgba(255,255,255,0.6)' }\r\n                                }}\r\n                                \r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <IconButton\r\n                                className={classes.iconBtn}\r\n                                onClick={removeStep(step.order)}\r\n                            >\r\n                                <DeleteOutlineRoundedIcon className={classes.icon} />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                    ) \r\n                }\r\n                <Grid item xs={12}>\r\n                    <Button \r\n                        className={classes.addBtn}\r\n                        startIcon={ <AddIcon className={classes.addIcon} />}\r\n                        onClick={addStep}\r\n                    >\r\n                        {t(\"tasksModule.upsert.addStep\")}\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Collapse>\r\n\r\n    )\r\n} \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textContainer: {\r\n        padding: '5px',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    textField: {\r\n        width: '100%',\r\n        '& fieldset': {\r\n            borderRadius: '5px',\r\n        },  \r\n    },\r\n    isSequential: {\r\n        color: 'white',\r\n        padding: '0px 15px 10px'\r\n    },\r\n    checkbox: {\r\n        color: 'rgba(255,255,255,0.2)',\r\n        '&$checked': {\r\n          color: 'rgba(255,255,255,0.8)',\r\n        },\r\n    },\r\n    checked: {},\r\n    addBtn: {\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '16px',\r\n        border: '1px solid rgba(255,255,255,0.6)' ,\r\n        borderRadius: '50px',\r\n        padding: '5px 30px 5px 15px',\r\n        margin: '5px',\r\n        whiteSpace: 'nowrap',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.8)',\r\n            color: 'rgba(0,0,0,0.8)',\r\n\r\n        }   \r\n    },\r\n    iconBtn: {\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '16px',\r\n        border: '1px solid rgba(255,255,255,0.6)' ,\r\n        borderRadius: '50px',\r\n        padding: '10px',\r\n        margin: '0 10px 20px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.8)',\r\n            color: 'rgba(0,0,0,0.8)',\r\n\r\n        }   \r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskView.js",["1137"],"import { Grid, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport BlurOnRoundedIcon from \"@material-ui/icons/BlurOnRounded\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport clsx from \"clsx\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { getFullAddress } from \"../../../api/assetsApi\";\r\nimport { getNextIterationDate } from \"../../../api/genericApi\";\r\nimport {\r\n\taddTaskRelatedUser,\r\n\tcompleteTaskStep,\r\n\tgetTask,\r\n\tremoveTaskRelatedUser,\r\n\tsaveTaskComment,\r\n\tupdateTaskComment,\r\n\tupdateTaskOwner,\r\n\tupdateTaskSchedule,\r\n\tupdateTaskStatus,\r\n} from \"../../../api/tasksApi\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { SnackbarContext } from \"../../../context/SnackbarContext\";\r\nimport { UpsertContext } from \"../../../context/UpsertContext\";\r\nimport { AddRelatedUser } from \"../../reuseables/AddRelatedUser\";\r\nimport { Can } from \"../../reuseables/Can\";\r\nimport { Carousel } from \"../../reuseables/Carousel\";\r\nimport { CommentSection } from \"../../reuseables/CommentSection\";\r\nimport { ItemLink } from \"../../reuseables/ItemLink\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport { ReturnToPrevios } from \"../../reuseables/ReturnToPrevious\";\r\nimport { Scheduler } from \"../../reuseables/scheduler/Scheduler\";\r\nimport { StatusTag } from \"../../reuseables/StatusTag\";\r\nimport { TimeActive } from \"../../reuseables/TimeActive\";\r\nimport { UpdateOwner } from \"../../reuseables/UpdateOwner\";\r\nimport { UpdateStatus } from \"../../reuseables/UpdateStatus\";\r\nimport { UserList } from \"../../reuseables/UserList\";\r\nimport { UserItem } from \"../../user/UserItem\";\r\nimport { TaskViewControls } from \"./TaskViewControls\";\r\n\r\nexport const TaskView = () => {\r\n\tconst history = useHistory();\r\n\tconst { t } = useTranslation();\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst { setUpsertData } = useContext(UpsertContext);\r\n\tconst [task, setTask] = useState(null);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst { taskId } = useParams();\r\n\tconst [changeOwner, setChangeOwner] = useState(false);\r\n\tconst [addRelatedUserModal, setAddRelatedUserModal] = useState(null);\r\n\tconst [changeStatus, setChangeStatus] = useState(null);\r\n\tconst [scheduling, setScheduling] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tprepareData();\r\n\t}, []);\r\n\r\n\tconst prepareData = async () => {\r\n\t\tconst res = await getTask(taskId);\r\n\t\tif (!res) {\r\n\t\t\thistory.push(\"/workspace/tasks\");\r\n\t\t} else if (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t\thistory.push(\"/workspace/tasks\");\r\n\t\t}\r\n\t\tsetTask(res);\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n\tconst updateOwner = (userId) => {\r\n\t\tupdateTaskOwner(task._id, userId).then((res) => {\r\n\t\t\tif (res.status === 403) {\r\n\t\t\t\tsetSnackbar(res);\r\n\t\t\t} else if (res) {\r\n\t\t\t\tsetTask({\r\n\t\t\t\t\t...task,\r\n\t\t\t\t\towner: res.owner,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tsetChangeOwner(false);\r\n\t\t});\r\n\t};\r\n\r\n\tconst removeRelatedUser = async (userId) => {\r\n\t\tconst res = await removeTaskRelatedUser(task._id, userId);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t} else if (res) {\r\n\t\t\tsetTask({\r\n\t\t\t\t...task,\r\n\t\t\t\trelatedUsers: res.relatedUsers,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst addRelatedUser = (userId) => async (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tconst res = await addTaskRelatedUser(task._id, userId);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t} else if (res) {\r\n\t\t\tsetTask({\r\n\t\t\t\t...task,\r\n\t\t\t\trelatedUsers: res.relatedUsers,\r\n\t\t\t});\r\n\t\t}\r\n\t\tsetAddRelatedUserModal(null);\r\n\t};\r\n\r\n\tconst handleChangeStatus = async (statusId) => {\r\n\t\tconst res = await updateTaskStatus(task._id, statusId);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t} else if (res) {\r\n\t\t\tsetTask({\r\n\t\t\t\t...task,\r\n\t\t\t\tstatus: res.status,\r\n\t\t\t});\r\n\t\t}\r\n\t\tsetChangeStatus(null);\r\n\t};\r\n\r\n\tconst handleSaveComment = async (taskId, userId, text, image) => {\r\n\t\tconst res = await saveTaskComment(taskId, userId, text, image);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t\treturn Promise.resolve(null);\r\n\t\t}\r\n\t\treturn Promise.resolve(res);\r\n\t};\r\n\r\n\tconst handleUpdateComment = async (taskId, commentId, text) => {\r\n\t\tconst res = await updateTaskComment(taskId, commentId, text);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t\treturn Promise.resolve(null);\r\n\t\t}\r\n\t\treturn Promise.resolve(res);\r\n\t};\r\n\r\n\tconst handleUpdateSchedule = async (schedule) => {\r\n\t\tconst res = await updateTaskSchedule(task._id, schedule);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t} else if (res) {\r\n\t\t\tsetTask({\r\n\t\t\t\t...task,\r\n\t\t\t\tschedule: res.schedule,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleCompleteStep = (step) => async (event) => {\r\n\t\tconst { order, isCompleted } = step;\r\n\t\tconsole.log(isCompleted);\r\n\t\tconst res = await completeTaskStep(task._id, order, !isCompleted);\r\n\t\tif (res.status === 403 || res.status === 500) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconsole.log(res);\r\n\t\tsetTask({\r\n\t\t\t...task,\r\n\t\t\tsteps: res.steps,\r\n\t\t});\r\n\t};\r\n\r\n\tconst toggleEditMode = () => {\r\n\t\tsetUpsertData({ itemId: task._id, module: \"tasks\" });\r\n\t};\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress />\r\n\t) : (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tclassName={classes.container}\r\n\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\talignItems=\"flex-start\"\r\n\t\t\t>\r\n\t\t\t\t<Grid container className={classes.controls}>\r\n\t\t\t\t\t<div className={classes.topHeaderGriditem}>\r\n\t\t\t\t\t\t<div className={classes.taskId}>\r\n\t\t\t\t\t\t\t<ItemLink itemId={task.taskId} module={\"tasks\"} size={18} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<ReturnToPrevios />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Grid item xs={12} className={classes.controlsGriditem}>\r\n\t\t\t\t\t\t<TaskViewControls\r\n\t\t\t\t\t\t\ttask={task}\r\n\t\t\t\t\t\t\teditTask={toggleEditMode}\r\n\t\t\t\t\t\t\tupdateOwner={() => setChangeOwner(true)}\r\n\t\t\t\t\t\t\tchangeStatus={() => setChangeStatus(true)}\r\n\t\t\t\t\t\t\thandleScheduler={() => setScheduling(true)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{!task.isRepeatable ? (\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\tclassName={classes.controlsGriditem}\r\n\t\t\t\t\t\t\tonClick={() => setChangeStatus(true)}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tjustifyContent: \"flex-start\",\r\n\t\t\t\t\t\t\t\tcursor: \"pointer\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<StatusTag status={task.status} type=\"task\" size={\"16px\"} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.controlsGriditem}>\r\n\t\t\t\t\t\t\t<div className={classes.repeatableContainer}>\r\n\t\t\t\t\t\t\t\t<div className={classes.repeatableMark}>\r\n\t\t\t\t\t\t\t\t\t{t(\"tasksModule.repeatableTask\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.repeatableMarkInstructions}>\r\n\t\t\t\t\t\t\t\t\t{t(\"tasksModule.repeatableTaskInstructions\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tsm={12}\r\n\t\t\t\t\tmd={8}\r\n\t\t\t\t\tlg={8}\r\n\t\t\t\t\txl={9}\r\n\t\t\t\t\tclassName={classes.rightContainer}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className={classes.asset}>{getFullAddress(task.asset)}</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\tclasses.system,\r\n\t\t\t\t\t\t\t!task.system && classes.notAssigned\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<BlurOnRoundedIcon className={classes.systemIcon} />\r\n\t\t\t\t\t\t{task.system ? task.system.name : t(\"general.noSystemAssigned\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\tclasses.location,\r\n\t\t\t\t\t\t\t!task.location && classes.notAssigned\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<RoomIcon className={classes.systemIcon} />\r\n\t\t\t\t\t\t{task.location\r\n\t\t\t\t\t\t\t? task.location.name\r\n\t\t\t\t\t\t\t: t(\"general.noLocationAssigned\")}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{!task.asset && (\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<div className={classes.taskNotLinkedToAsset}>\r\n\t\t\t\t\t\t\t\t<InfoOutlinedIcon className={classes.infoIcon} />\r\n\t\t\t\t\t\t\t\t{t(\"tasksModule.taskNotLinkedToAsset\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className={classes.title}>{task.title}</div>\r\n\t\t\t\t\t<div className={classes.desc}>\r\n\t\t\t\t\t\t<div className={classes.itemDates}>\r\n\t\t\t\t\t\t\t<div className={classes.openDate}>\r\n\t\t\t\t\t\t\t\t{`${t(\"general.createDate\")} ${format(\r\n\t\t\t\t\t\t\t\t\tparseISO(task.createdAt),\r\n\t\t\t\t\t\t\t\t\tlang.dateformat\r\n\t\t\t\t\t\t\t\t)}`}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{Boolean(task.closedDate) && (\r\n\t\t\t\t\t\t\t\t<div className={classes.closedDate}>\r\n\t\t\t\t\t\t\t\t\t{`${t(\"general.closedDate\")} ${format(\r\n\t\t\t\t\t\t\t\t\t\tparseISO(task.closedDate),\r\n\t\t\t\t\t\t\t\t\t\tlang.dateformat\r\n\t\t\t\t\t\t\t\t\t)}`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{task.description}\r\n\t\t\t\t\t\t<div className={classes.timeActive}>\r\n\t\t\t\t\t\t\t<TimeActive createDate={task.createdAt} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{task.isRepeatable && Boolean(task.schedule.length) && (\r\n\t\t\t\t\t\t<div className={classes.taskSchedulesContainer}>\r\n\t\t\t\t\t\t\t<div className={classes.schedulesTitle}>\r\n\t\t\t\t\t\t\t\t{t(\"tasksModule.taskIterations\")}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Grid container className={classes.scheduleContainer}>\r\n\t\t\t\t\t\t\t\t{task.schedule.map((s, i) => (\r\n\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\t\txl={3}\r\n\t\t\t\t\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.schedulesItem}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.scheduleGridItem}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.scheduleTitle}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t(\"scheduler.startDate\")}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.scheduleData}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{format(parseISO(s.startDate), lang.dateonly)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.scheduleGridItem}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.scheduleTitle}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t(\"scheduler.repeatEvery\")}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.scheduleData}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t(`dates.${s.interval}`)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.scheduleGridItem}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.scheduleTitle}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t(\"scheduler.nextIteration\")}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.scheduleData}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{format(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetNextIterationDate(s.startDate, s.interval),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlang.dateonly\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{Boolean(task.steps.length) && (\r\n\t\t\t\t\t\t<div className={classes.stepsContainer}>\r\n\t\t\t\t\t\t\t<div className={classes.stepsTitle}>\r\n\t\t\t\t\t\t\t\t{t(\"tasksModule.taskSteps\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{task.steps.map((step, i) => (\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\t\tclassName={classes.stepContainer}\r\n\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={2} sm={1} className={classes.stepGridItem}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.stepOrder}>{step.order}</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={8} sm={10} className={classes.stepGridItem}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.stepDesc}>{step.description}</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t{!task.isRepeatable && (\r\n\t\t\t\t\t\t\t\t\t\t<Can\r\n\t\t\t\t\t\t\t\t\t\t\tmodule=\"tasks\"\r\n\t\t\t\t\t\t\t\t\t\t\taction=\"completeSteps\"\r\n\t\t\t\t\t\t\t\t\t\t\tuserList={[\r\n\t\t\t\t\t\t\t\t\t\t\t\t...task.relatedUsers.map((u) => u._id),\r\n\t\t\t\t\t\t\t\t\t\t\t\ttask.owner._id,\r\n\t\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={2} sm={1} className={classes.stepGridItem}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstep.isCompleted && classes.stepCompletedTrue,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses.stepCompleted\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleCompleteStep(step)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DoneIcon\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstep.isCompleted && classes.stepCompletedTrueIcon,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses.stepCompletedIcon\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{Boolean(task.images.length) && (\r\n\t\t\t\t\t\t<Carousel\r\n\t\t\t\t\t\t\timages={task.images}\r\n\t\t\t\t\t\t\tisOpen={Boolean(task.images.length)}\r\n\t\t\t\t\t\t\tsize={300}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tsm={12}\r\n\t\t\t\t\tmd={4}\r\n\t\t\t\t\tlg={3}\r\n\t\t\t\t\txl={3}\r\n\t\t\t\t\tclassName={classes.leftContainer}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className={classes.owner}>\r\n\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\tuser={task.owner}\r\n\t\t\t\t\t\t\tshowTitle\r\n\t\t\t\t\t\t\tshowPhone\r\n\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\tsize={12}\r\n\t\t\t\t\t\t\tavatarSize={50}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<UserList\r\n\t\t\t\t\t\tusers={task.relatedUsers}\r\n\t\t\t\t\t\tremoveTooltip={t(\"tasksModule.controls.removeRelatedUser\")}\r\n\t\t\t\t\t\taddTooltip={t(\"tasksModule.controls.addRelatedUser\")}\r\n\t\t\t\t\t\tplaceholder={t(\"tasksModule.noRelatedUsers\")}\r\n\t\t\t\t\t\ttitle={t(\"tasksModule.relatedUsers\")}\r\n\t\t\t\t\t\thandleRemove={removeRelatedUser}\r\n\t\t\t\t\t\thandleAdd={() => setAddRelatedUserModal(true)}\r\n\t\t\t\t\t\tmodule={\"tasks\"}\r\n\t\t\t\t\t\towner={task.owner}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{!task.isRepeatable && (\r\n\t\t\t\t\t<Grid item xs={12} className={classes.comments}>\r\n\t\t\t\t\t\t<CommentSection\r\n\t\t\t\t\t\t\tparent={task}\r\n\t\t\t\t\t\t\tsaveComment={handleSaveComment}\r\n\t\t\t\t\t\t\tupdateComment={handleUpdateComment}\r\n\t\t\t\t\t\t\tmodule={\"tasks\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t\t{changeOwner && (\r\n\t\t\t\t<UpdateOwner\r\n\t\t\t\t\thandleClose={() => setChangeOwner(false)}\r\n\t\t\t\t\thandleSave={updateOwner}\r\n\t\t\t\t\tisOpen={changeOwner}\r\n\t\t\t\t\tcurrentOwner={task.owner}\r\n\t\t\t\t\ttitle={t(\"tasksModule.updateOwner\")}\r\n\t\t\t\t\tinstructions={t(\"tasksModule.updateOwnerInstructions\")}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{changeStatus && (\r\n\t\t\t\t<UpdateStatus\r\n\t\t\t\t\thandleClose={() => setChangeStatus(false)}\r\n\t\t\t\t\thandleSave={handleChangeStatus}\r\n\t\t\t\t\tisOpen={changeStatus}\r\n\t\t\t\t\tcurrentStatus={task.status}\r\n\t\t\t\t\ttitle={t(\"tasksModule.changeStatus\")}\r\n\t\t\t\t\tinstructions={t(\"tasksModule.changeStatusInstructions\")}\r\n\t\t\t\t\tmodule={\"tasks\"}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{addRelatedUserModal && (\r\n\t\t\t\t<AddRelatedUser\r\n\t\t\t\t\thandleClose={() => setAddRelatedUserModal(false)}\r\n\t\t\t\t\thandleSave={addRelatedUser}\r\n\t\t\t\t\tisOpen={addRelatedUserModal}\r\n\t\t\t\t\tfollowerList={[...task.relatedUsers, task.owner]}\r\n\t\t\t\t\ttitle={t(\"tasksModule.addRelatedUser\")}\r\n\t\t\t\t\tinstructions={t(\"tasksModule.addRelatedUserInstructions\")}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\r\n\t\t\t{Boolean(scheduling) && (\r\n\t\t\t\t<Scheduler\r\n\t\t\t\t\tscData={task.schedule}\r\n\t\t\t\t\thandleClose={() => setScheduling(null)}\r\n\t\t\t\t\thandleSave={handleUpdateSchedule}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\toverflowY: \"overlay\",\r\n\t\theight: \"100%\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\theight: \"calc(100% - 64px)\",\r\n\t\t},\r\n\t},\r\n\trightContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tpadding: \"0 30px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\talignItems: \"center\",\r\n\t\t\tpadding: \"0 15px\",\r\n\t\t},\r\n\t},\r\n\tasset: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"16px\",\r\n\t\tbackground: \"black\",\r\n\t\twidth: \"fit-content\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tboxShadow: \"rgba(0,0,0,0.25) 0 0 5px 2px\",\r\n\t\ttextAlign: \"center\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t},\r\n\tsystem: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\twidth: \"fit-content\",\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\tmargin: \"10px 0\",\r\n\t},\r\n\tlocation: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\twidth: \"fit-content\",\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\tbackground: \"rgba(255,255,255,0.2)\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\tmargin: \"0px 0\",\r\n\t},\r\n\tsystemIcon: {\r\n\t\tmargin: \"0 10px 0 0\",\r\n\t\tfontSize: \"18px\",\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"22px\",\r\n\t\tpadding: \"15px 0\",\r\n\t\talignSelf: \"flex-end\",\r\n\t\twidth: \"100%\",\r\n\t\tmarginTop: \"20px\",\r\n\t},\r\n\tdesc: {\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tpadding: \"20px\",\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"90%\",\r\n\t\twordBreak: \"break-word\",\r\n\t},\r\n\tleftContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\talignItems: \"flex-end\",\r\n\t\tpadding: \"10px 30px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\talignItems: \"center\",\r\n\t\t\tpadding: \"10px 15px\",\r\n\t\t},\r\n\t},\r\n\towner: {\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tpadding: \"5px 30px\",\r\n\t\tborderRadius: \"10px\",\r\n\t\twidth: \"fit-content\",\r\n\t\theight: \"70px\",\r\n\t},\r\n\tcontrols: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t\tpadding: \"20px 30px 0px 30px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"20px 15px 0px\",\r\n\t\t},\r\n\t},\r\n\ttopHeaderGriditem: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tmargin: \"10px 0\",\r\n\t\twidth: \"100%\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\t\tbackground: \"black\",\r\n\t\t\tborderRadius: \"50px\",\r\n\t\t\tpadding: \"5px 5px 5px 25px\",\r\n\t\t},\r\n\t},\r\n\tcontrolsGriditem: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t\tmargin: \"10px 0\",\r\n\t},\r\n\ttaskId: {\r\n\t\tpadding: \"5px 0\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tlinked: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tmargin: \"10px 0\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tpadding: \"10px 0\",\r\n\t\theight: \"300px\",\r\n\t},\r\n\tlinkedHeader: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"5px\",\r\n\t\tmargin: \"0px auto\",\r\n\t\twidth: \"80%\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\tfollowingList: {\r\n\t\tpadding: \"5px\",\r\n\t\toverflowY: \"auto\",\r\n\t},\r\n\tlistItem: {\r\n\t\twidth: \"250px\",\r\n\t\tborderRadius: \"5px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\t},\r\n\t},\r\n\tremoveUser: {\r\n\t\tcolor: \"white\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t},\r\n\t},\r\n\titemDates: {\r\n\t\tmargin: \"0 0 20px\",\r\n\t},\r\n\topenDate: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"14px\",\r\n\t\tpadding: \"7px 15px\",\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\twidth: \"fit-content\",\r\n\t\tborderRadius: \"50px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"11px\",\r\n\t\t\tpadding: \"4px 15px\",\r\n\t\t},\r\n\t},\r\n\tclosedDate: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"14px\",\r\n\t\tmargin: \"10px 0\",\r\n\t\tpadding: \"7px 15px\",\r\n\t\tbackground: \"green\",\r\n\t\twidth: \"fit-content\",\r\n\t\tborderRadius: \"50px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"11px\",\r\n\t\t\tpadding: \"4px 15px\",\r\n\t\t},\r\n\t},\r\n\tcomments: {\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t},\r\n\tstatus: {\r\n\t\tmargin: \"10px 0\",\r\n\t},\r\n\ttimeActive: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tpadding: \"20px 0 0\",\r\n\t},\r\n\tstepsContainer: {\r\n\t\tcolor: \"white\",\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tborderRadius: \"10px\",\r\n\t\twidth: \"90%\",\r\n\t\tmargin: \"10px 0\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px 0\",\r\n\t\t\twidth: \"100%\",\r\n\t\t},\r\n\t},\r\n\tstepsTitle: {\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"10px\",\r\n\t\tfontSize: \"16px\",\r\n\t\tmarginBottom: \"10px\",\r\n\t},\r\n\tstepContainer: {\r\n\t\tpadding: \"5px\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t},\r\n\tstepOrder: {\r\n\t\tbackground: \"black\",\r\n\t\theight: \"40px\",\r\n\t\twidth: \"40px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t\tmargin: \"auto\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"14px\",\r\n\t\t},\r\n\t},\r\n\tstepDesc: {\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmargin: \"0 5px\",\r\n\t\twidth: \"-webkit-fill-available\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"13px\",\r\n\t\t},\r\n\t},\r\n\tstepCompleted: {\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"6px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"transparent\",\r\n\t\t},\r\n\t},\r\n\tstepCompletedIcon: {\r\n\t\tcolor: \"rgba(255,255,255,0.2)\",\r\n\t},\r\n\tstepCompletedTrue: {\r\n\t\tbackground: \"green\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"green\",\r\n\t\t},\r\n\t},\r\n\tstepCompletedTrueIcon: {\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tstepGridItem: {\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t},\r\n\trepeatableContainer: {\r\n\t\twidth: \"fit-content\",\r\n\t\tpadding: \"10px 30px\",\r\n\t\tcolor: \"white\",\r\n\t\tbackground: \"rgba(200,50,0,0.7)\",\r\n\t\tborderRadius: \"5px\",\r\n\t},\r\n\trepeatableMark: {\r\n\t\tfontSize: \"20px\",\r\n\t\tmargin: \"5px 0\",\r\n\t},\r\n\trepeatableMarkInstructions: {\r\n\t\tfontSize: \"14px\",\r\n\t\tcolor: \"rgba(255,255,255,0.7)\",\r\n\t\tmargin: \"5px 0\",\r\n\t},\r\n\ttaskSchedulesContainer: {\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"90%\",\r\n\t\tmargin: \"10px 0\",\r\n\t},\r\n\tschedulesTitle: {\r\n\t\tfontSize: \"20px\",\r\n\t\tpadding: \"10px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmarginBottom: \"10px\",\r\n\t},\r\n\tscheduleContainer: {\r\n\t\tborderRadius: \"10px\",\r\n\t},\r\n\tschedulesItem: {\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\tmargin: \"10px\",\r\n\t},\r\n\tscheduleGridItem: {\r\n\t\tpadding: \"5px\",\r\n\t},\r\n\tscheduleTitle: {\r\n\t\tfontSize: \"14px\",\r\n\t\tpadding: \"5px 0\",\r\n\t\tcolor: \"rgba(255,255,255,0.6)\",\r\n\t},\r\n\tscheduleData: {\r\n\t\tfontSize: \"18px\",\r\n\t},\r\n\tnotAssigned: {\r\n\t\tfilter: \"brightness(60%)\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TasksList.js",["1138","1139"],"import { Fade, Grid, makeStyles } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useLocation } from \"react-router\";\r\nimport { getServerError } from \"../../../api/genericApi\";\r\nimport { getTasks } from \"../../../api/tasksApi\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { SnackbarContext } from \"../../../context/SnackbarContext\";\r\nimport { useQuery } from \"../../reuseables/customHooks/useQuery\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport { NoDataFound } from \"../../reuseables/NoDataFound\";\r\nimport { TaskMinified } from \"./TaskMinified\";\r\nimport { TasksControls } from \"./TasksControls\";\r\n\r\nexport const TasksList = ({ repeatable }) => {\r\n\tconst classes = useStyles();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { t } = useTranslation();\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [tasks, setTasks] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetTasks({ ...query, isRepeatable: repeatable })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (!res || res.status === 403) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t\tif (res.status === 500) {\r\n\t\t\t\t\tsetSnackbar(getServerError());\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tsetTasks(res);\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t});\r\n\t}, [isLoading]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsLoading(true);\r\n\t}, [location.search]);\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Grid xs={12} className={classes.moduleContainer}>\r\n\t\t\t\t<div className={classes.pageModule}>\r\n\t\t\t\t\t{repeatable\r\n\t\t\t\t\t\t? t(\"tasksModule.repeatableTasks\")\r\n\t\t\t\t\t\t: t(\"tasksModule.tasks\")}\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<TasksControls />\r\n\t\t\t</Grid>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<LoadingProgress />\r\n\t\t\t) : (\r\n\t\t\t\t<Fade in={!isLoading}>\r\n\t\t\t\t\t<Grid container className={classes.listContainer}>\r\n\t\t\t\t\t\t{tasks.length ? (\r\n\t\t\t\t\t\t\ttasks.map((task, i) => <TaskMinified data={task} key={i} />)\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<NoDataFound />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Fade>\r\n\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tlistContainer: {\r\n\t\tpadding: \"10px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px 0\",\r\n\t\t},\r\n\t},\r\n\tminiTask: {\r\n\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t},\r\n\tmoduleContainer: {\r\n\t\tposition: \"sticky\",\r\n\t\ttop: 0,\r\n\t\tzIndex: 2,\r\n\t},\r\n\tpageModule: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px 40px\",\r\n\t\tfontSize: \"16px\",\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tboxShadow: \"0 0px 2px 1px rgba(255,255,255,0.3)\",\r\n\t\tmargin: \"0px auto 5px\",\r\n\t\twidth: \"30%\",\r\n\t\ttextAlign: \"center\",\r\n\t\tborderRadius: \"0 0 25px 25px\",\r\n\t\tlineHeight: \"1\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tbackground: \"black\",\r\n\t\t\twidth: \"100vw\",\r\n\t\t\tpadding: \"20px 0\",\r\n\t\t\tborderRadius: 0,\r\n\t\t\tmargin: 0,\r\n\t\t},\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskViewControls.js",["1140","1141","1142"],"import {\r\n\tMenuItem,\r\n\tmakeStyles,\r\n\tIconButton,\r\n\tListItemIcon,\r\n\tMenu,\r\n\tFade,\r\n} from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport TransferWithinAStationRoundedIcon from '@material-ui/icons/TransferWithinAStationRounded';\r\nimport AccessAlarmRoundedIcon from '@material-ui/icons/AccessAlarmRounded';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport clsx from 'clsx';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport { Can } from '../../reuseables/Can';\r\n\r\nexport const TaskViewControls = ({\r\n\ttask,\r\n\teditTask,\r\n\tupdateOwner,\r\n\tchangeStatus,\r\n\thandleScheduler,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [expanded, setExpanded] = useState(null);\r\n\tconst [data, setData] = useState(task);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetData(task);\r\n\t}, [task]);\r\n\r\n\tconst openInNewWindow = () => {\r\n\t\twindow.open(`${process.env.REACT_APP_FRONTEND_URL}/workspace/tasks/${task.taskId}`);\r\n\t};\r\n\r\n\tconst handleExpanded = (event) => {\r\n\t\tif (expanded) {\r\n\t\t\tsetExpanded(null);\r\n\t\t}\r\n\t\tsetExpanded(event.currentTarget);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<IconButton className={classes.expandIcon} onClick={handleExpanded}>\r\n\t\t\t\t<MoreVertIcon className={classes.icon} />\r\n\t\t\t</IconButton>\r\n\t\t\t<Menu\r\n\t\t\t\tonClick={() => setExpanded(null)}\r\n\t\t\t\tclassName={classes.container}\r\n\t\t\t\tanchorEl={expanded}\r\n\t\t\t\topen={Boolean(expanded)}\r\n\t\t\t\tonClose={() => setExpanded(null)}\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tpaper: classes.menu,\r\n\t\t\t\t}}\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t}}\r\n\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdirection: lang.code === 'he' ? 'rtl' : 'ltr',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={classes.menuHeader}\r\n\t\t\t\t>\r\n\t\t\t\t\t{t('tasksModule.controls.taskMenu')}\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tstyle={{ display: 'flex', justifyContent: 'flex-end' }}\r\n\t\t\t\t\t\tonClick={() => setExpanded(null)}\r\n\t\t\t\t\t\tclassName={classes.close}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CloseRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t<MenuItem\r\n\t\t\t\t\tstyle={{ direction: lang.code === 'he' ? 'rtl' : 'ltr' }}\r\n\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\tonClick={openInNewWindow}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t<OpenInNewIcon className={classes.icon} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t{t('general.openInNew')}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t\t<Can\r\n\t\t\t\t\tmodule=\"tasks\"\r\n\t\t\t\t\taction=\"update\"\r\n\t\t\t\t\tuserList={[\r\n\t\t\t\t\t\t...data.relatedUsers.map((u) => u._id),\r\n\t\t\t\t\t\tdata.owner._id,\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdirection: lang.code === 'he' ? 'rtl' : 'ltr',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\tonClick={editTask}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<CreateIcon className={classes.icon} />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t{t('tasksModule.controls.editDetails')}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t</Can>\r\n\r\n\t\t\t\t<Can\r\n\t\t\t\t\tmodule=\"tasks\"\r\n\t\t\t\t\taction=\"changeOwner\"\r\n\t\t\t\t\tuserList={[\r\n\t\t\t\t\t\t...data.relatedUsers.map((u) => u._id),\r\n\t\t\t\t\t\tdata.owner._id,\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdirection: lang.code === 'he' ? 'rtl' : 'ltr',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\tonClick={updateOwner}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<TransferWithinAStationRoundedIcon\r\n\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t{t('tasksModule.controls.changeOwner')}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t</Can>\r\n\r\n\t\t\t\t<Can\r\n\t\t\t\t\tmodule=\"tasks\"\r\n\t\t\t\t\taction=\"changeStatus\"\r\n\t\t\t\t\tuserList={[\r\n\t\t\t\t\t\t...data.relatedUsers.map((u) => u._id),\r\n\t\t\t\t\t\tdata.owner._id,\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tshouldRender={!task.isRepeatable}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdirection: lang.code === 'he' ? 'rtl' : 'ltr',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\tonClick={changeStatus}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<DoubleArrowIcon className={classes.icon} />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t{t('tasksModule.controls.changeStatus')}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t</Can>\r\n\t\t\t\t<Can\r\n\t\t\t\t\tmodule=\"tasks\"\r\n\t\t\t\t\taction=\"changeSchedule\"\r\n\t\t\t\t\tuserList={[\r\n\t\t\t\t\t\t...data.relatedUsers.map((u) => u._id),\r\n\t\t\t\t\t\tdata.owner._id,\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tshouldRender={data.isRepeatable}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdirection: lang.code === 'he' ? 'rtl' : 'ltr',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\tonClick={handleScheduler}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<AccessAlarmRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t{t('tasksModule.controls.schedule')}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t</Can>\r\n\t\t\t</Menu>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\texpandIcon: {\r\n\t\tcolor: 'white',\r\n\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.5)',\r\n\t\t},\r\n\t},\r\n\ticonBtn: {\r\n\t\tcolor: 'white',\r\n\t\tmarginRight: '20px',\r\n\t\tborderRadius: '0 25px 25px 0',\r\n\t\t'&:hover': {\r\n\t\t\ttransform: 'scale(1.077)',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',\r\n\t},\r\n\tmenu: {\r\n\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\tcolor: 'white',\r\n\t\tboxShadow: 'rgba(0,0,0,0.4) 0 0 2px 1px',\r\n\t\tborderRadius: '10px',\r\n\t},\r\n\tmenuitem: {\r\n\t\tminWidth: '200px',\r\n\t},\r\n\tmenuHeader: {\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmarginBottom: '10px',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpadding: '5px 10px 5px 20px',\r\n\t\talignItems: 'center',\r\n\t\toutline: 'none',\r\n\t},\r\n\tclose: {\r\n\t\tpadding: '6px',\r\n\t\tmargin: 0,\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TasksControls.js",["1143","1144"],"import {\r\n\tButton,\r\n\tSlide,\r\n\tGrid,\r\n\tmakeStyles,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport BlurOnRoundedIcon from '@material-ui/icons/BlurOnRounded';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { getAsset, getFullAddress } from '../../../api/assetsApi';\r\nimport { removeQueryParam } from '../../../api/genericApi';\r\nimport {\r\n\tgetAssetsSuggestions,\r\n\tgetSystemsByAssetOptions,\r\n} from '../../../api/systemsApi';\r\nimport { getTasksStatusListSuggestions } from '../../../api/tasksApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\n\r\nexport const TasksControls = () => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [reloadedValue, setReloadedValue] = useState(null);\r\n\tconst [collapsed, setCollapsed] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (query.asset) {\r\n\t\t\thandleReloaded(query.asset).then((data) => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetReloadedValue(data);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetReloadedValue({\r\n\t\t\t\tlabel: '',\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\thistory.push({\r\n\t\t\t\tpath: location.pathname,\r\n\t\t\t\tsearch: removeQueryParam(location.search, 'system'),\r\n\t\t\t});\r\n\t\t}\r\n\t}, [location.search]);\r\n\r\n\tconst handleReloaded = async (assetId) => {\r\n\t\tconst res = await getAsset(assetId, false);\r\n\t\tif (res) {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: getFullAddress(res),\r\n\t\t\t\tvalue: res._id,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleCollapse = () => {\r\n\t\tif (collapsed) {\r\n\t\t\tsetCollapsed(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetCollapsed(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{downSm && (\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName={classes.sortandfilter}\r\n\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t<FilterListIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tendIcon={\r\n\t\t\t\t\t\t\t\tcollapsed ? (\r\n\t\t\t\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<ExpandMoreRoundedIcon />\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={toggleCollapse}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{t(\r\n\t\t\t\t\t\t\t\t`tasksModule.${\r\n\t\t\t\t\t\t\t\t\tcollapsed ? 'hide' : 'show'\r\n\t\t\t\t\t\t\t\t}Filters`\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{\r\n\t\t\t\t(!downSm || collapsed) &&\r\n\t\t\t\t<Slide in={true} direction={'up'} timeout={downSm ? 500 : 0}>\r\n\t\t\t\t<Grid container justify=\"center\" className={classes.filtersContainer}>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t{reloadedValue && (\r\n\t\t\t\t\t\t\t<SearchBoxSelect\r\n\t\t\t\t\t\t\t\tsuggestionsFunc={getAssetsSuggestions}\r\n\t\t\t\t\t\t\t\tplaceholder={t('systemsModule.filterByAsset')}\r\n\t\t\t\t\t\t\t\tfilterField={'asset'}\r\n\t\t\t\t\t\t\t\treloadedLabel={reloadedValue.label}\r\n\t\t\t\t\t\t\t\treloadedValue={reloadedValue.value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{query.asset && (\r\n\t\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\t\toptionsFunc={() =>\r\n\t\t\t\t\t\t\t\t\tgetSystemsByAssetOptions(query.asset)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder={t(\r\n\t\t\t\t\t\t\t\t\t'systemsModule.filterBySystemName'\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t\t<BlurOnRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfilterField={'system'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={getTasksStatusListSuggestions}\r\n\t\t\t\t\t\t\tplaceholder={t('tasksModule.filterByStatus')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<DoubleArrowIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'status'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={createUserOptions}\r\n\t\t\t\t\t\t\tplaceholder={t('tasksModule.filterByTaskOwner')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<PersonRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'owner'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Slide>\r\n\t\t\t}\r\n\t\t\t\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tfiltersContainer: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            position: 'absolute',\r\n            bottom: '0',\r\n            background: 'rgba(0,0,0,0.8)',\r\n            backdropFilter: 'blur(22px)',\r\n            zIndex: 3,\r\n            padding: '40px 0 155px',\r\n            borderRadius: '30px 30px 0 0',\r\n            boxShadow: '0px -1px 1px 0px rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n\tgridItem: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'flex-start',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tmarginLeft: '4px',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '6px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tsortandfilter: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'black',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '5px 25px 5px 3px',\r\n        whiteSpace: 'nowrap',\r\n        margin: '10px 0 0',\r\n        position: 'absolute',\r\n        bottom: '100px',\r\n        zIndex: 4,\r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    },\r\n\ttypeGroup: {\r\n\t\tmargin: '5px',\r\n\t\theight: '45px',\r\n\t},\r\n\tmodeBtn: {\r\n\t\tpadding: '0 15px 0 5px',\r\n\t\tcolor: 'white',\r\n\t\twidth: 'auto',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tlistBtn: {\r\n\t\tborderRadius: '25px 0 0 25px',\r\n\t},\r\n\tblocksBtn: {\r\n\t\tborderRadius: '0px 25px 25px 0px',\r\n\t},\r\n\tmodeBtnActive: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\scheduler\\Scheduler.js",["1145"],"import {\r\n\tBackdrop,\r\n\tButton,\r\n\tFade,\r\n\tGrid,\r\n\tmakeStyles,\r\n\tModal,\r\n\tPaper,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { ScheduleItem } from \"./ScheduleItem\";\r\nimport clsx from \"clsx\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\n\r\nexport const Scheduler = ({ scData, handleSave, handleClose }) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { t } = useTranslation();\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst [schedules, setSchedules] = useState([\r\n\t\t{\r\n\t\t\ttenant: auth.user.tenant,\r\n\t\t\tcreatedBy: auth.user._id,\r\n\t\t\tstartDate: \"\",\r\n\t\t\tinterval: \"\",\r\n\t\t},\r\n\t]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSchedules(scData);\r\n\t}, [scData]);\r\n\r\n\tconst updateSchedules = async (data, index) => {\r\n\t\tlet scs = [...schedules];\r\n\t\tscs[index] = data;\r\n\t\tsetSchedules(scs);\r\n\t};\r\n\r\n\tconst removeSchedule = (index) => (event) => {\r\n\t\tlet scs = schedules.filter((s, i) => s._id !== index && index !== i);\r\n\t\tsetSchedules(scs);\r\n\t};\r\n\r\n\tconst handleAddSchedule = () => {\r\n\t\tsetSchedules([\r\n\t\t\t...schedules,\r\n\t\t\t{\r\n\t\t\t\ttenant: auth.user.tenant,\r\n\t\t\t\tcreatedBy: auth.user._id,\r\n\t\t\t\tstartDate: \"\",\r\n\t\t\t\tinterval: \"\",\r\n\t\t\t},\r\n\t\t]);\r\n\t};\r\n\r\n\tconst handleConfirm = async () => {\r\n\t\tawait handleSave(schedules);\r\n\t\thandleClose();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\topen={true}\r\n\t\t\tonClose={handleClose}\r\n\t\t\tcloseAfterTransition\r\n\t\t\tBackdropComponent={Backdrop}\r\n\t\t\tBackdropProps={{\r\n\t\t\t\ttimeout: 500,\r\n\t\t\t}}\r\n\t\t\tclassName={classes.modal}\r\n\t\t>\r\n\t\t\t<Fade in={true}>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tstyle={{ outline: \"0\" }}\r\n\t\t\t\t\tclassName={classes.gridCont}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid item xs={12} sm={9} md={6} lg={6} xl={4}>\r\n\t\t\t\t\t\t<Paper\r\n\t\t\t\t\t\t\televation={6}\r\n\t\t\t\t\t\t\tclassName={classes.paper}\r\n\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.headerRow}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.title}>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"tasksModule.upsert.scheduleTitle\")}\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.notificationsInstructions}>\r\n\t\t\t\t\t\t\t\t\t\t\t{t(\"tasksModule.upsert.notificationsInstructions\")}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t{schedules.length ? (\r\n\t\t\t\t\t\t\t\t\tschedules.map((sc, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.scheduleContainer}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<ScheduleItem\r\n\t\t\t\t\t\t\t\t\t\t\t\tscData={sc}\r\n\t\t\t\t\t\t\t\t\t\t\t\tupdateSchedules={updateSchedules}\r\n\t\t\t\t\t\t\t\t\t\t\t\tremoveSchedule={removeSchedule}\r\n\t\t\t\t\t\t\t\t\t\t\t\tindex={i}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<div className={classes.noItems}>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"scheduler.noItems\")}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.addBtn}\r\n\t\t\t\t\t\t\t\t\t\tstartIcon={<AddIcon className={classes.addIcon} />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleAddSchedule}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"tasksModule.upsert.addScheduling\")}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.controls}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName={clsx(classes.control, classes.save)}\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleConfirm}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"controls.confirm\")}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName={clsx(classes.control, classes.cancel)}\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleClose}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"controls.cancel\")}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Fade>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmodal: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\toverflowY: \"overlay\",\r\n\t\theight: \"80vh\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\theight: \"81vh\",\r\n\t\t\tborderRadius: \"0\",\r\n\t\t\tborder: \"0\",\r\n\t\t\tpadding: \"10px 5px\",\r\n\t\t\tposition: \"absolute\",\r\n\t\t\ttop: 0,\r\n\t\t},\r\n\t\t\"&:focus\": {\r\n\t\t\toutline: \"none\",\r\n\t\t},\r\n\t},\r\n\theaderRow: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t\twidth: \"100%\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"20px 10px 10px\",\r\n\t\tfontSize: \"24px\",\r\n\t},\r\n\tscheduleContainer: {\r\n\t\tborderRadius: \"10px\",\r\n\t\tpadding: \"5px 0px\",\r\n\t\tmargin: \"0px\",\r\n\t\theight: \"fit-content\",\r\n\t},\r\n\ttextContainer: {\r\n\t\tpadding: \"5px\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tselectInput: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t\theight: \"200px\",\r\n\t\toverflowY: \"auto\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmarginRight: \"7px\",\r\n\t\tmarginLeft: \"-5px\",\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"100%\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\t},\r\n\t},\r\n\taddBtn: {\r\n\t\tcolor: \"rgba(255,255,255,0.6)\",\r\n\t\tfontSize: \"16px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.6)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"8px 30px 8px 15px\",\r\n\t\tmargin: \"10px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(255,255,255,0.8)\",\r\n\t\t\tcolor: \"rgba(0,0,0,0.8)\",\r\n\t\t},\r\n\t},\r\n\ticonBtn: {\r\n\t\tcolor: \"rgba(255,255,255,0.6)\",\r\n\t\tfontSize: \"16px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.6)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"10px\",\r\n\t\tmargin: \"0 10px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(255,255,255,0.8)\",\r\n\t\t\tcolor: \"rgba(0,0,0,0.8)\",\r\n\t\t},\r\n\t},\r\n\tnotificationsInstructions: {\r\n\t\tcolor: \"rgba(255,255,255,0.6)\",\r\n\t\tfontSize: \"12px\",\r\n\t\tpadding: \"10px 0\",\r\n\t},\r\n\trepeatLabel: {\r\n\t\tcolor: \"white\",\r\n\t},\r\n\ttextField: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\ttextField: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tcontrols: {\r\n\t\tborderTop: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tpadding: \"10px\",\r\n\t\tmarginTop: \"100px\",\r\n\t},\r\n\tcontrol: {\r\n\t\twidth: \"30%\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\tfontSize: \"16px\",\r\n\t\tmargin: \"5px\",\r\n\t\tpadding: \"5px 30px\",\r\n\t\tborderRadius: \"30px\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tsave: {\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"black\",\r\n\t\t},\r\n\t\t\"&:disabled\": {\r\n\t\t\tcolor: \"rgba(255,255,255,0.3)\",\r\n\t\t},\r\n\t},\r\n\tcancel: {\r\n\t\t\"&:hover\": {\r\n\t\t\tboxShadow: \"inset rgba(255,255,255,0.3) 0 0 2px 1px\",\r\n\t\t},\r\n\t},\r\n\tnoItems: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tmargin: \"10px\",\r\n\t\tbackground: \"rgba(0,0,0,0.5)\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\scheduler\\ScheduleItem.js",["1146","1147","1148","1149","1150"],"import {\r\n\tFormControl,\r\n\tFormHelperText,\r\n\tGrid,\r\n\tIconButton,\r\n\tInputLabel,\r\n\tmakeStyles,\r\n\tMenuItem,\r\n\tSelect,\r\n\tTextField\r\n} from '@material-ui/core';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getNextIterationDate } from '../../../api/genericApi';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { CustomDatePicker } from '../datepickers/CustomeDatePicker';\r\n\r\n\r\nconst intervals = ['day', 'week', 'month', 'year'];\r\n\r\nexport const ScheduleItem = ({\r\n\tscData,\r\n\tupdateSchedules,\r\n\tindex,\r\n\tremoveSchedule,\r\n\tdateError,\r\n\tintervalError\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { t } = useTranslation();\r\n\tconst [schedule, setSchedule] = useState(scData);\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateSchedules(schedule, index);\r\n\t}, [schedule]);\r\n\r\n\tconst handleChangeStartDate = (date) => {\r\n\t\tsetSchedule({\r\n\t\t\t...schedule,\r\n\t\t\tstartDate: date,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (fieldName, payload) => (event) => {\r\n\t\tsetSchedule({\r\n\t\t\t...schedule,\r\n\t\t\t[fieldName]: payload ? payload : event.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleCalcNextIteration = () => {\r\n\t\treturn getNextIterationDate(\r\n\t\t\tschedule.startDate,\r\n\t\t\tschedule.interval,\r\n\t\t\tlang.dateonly\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid container className={classes.textContainer}>\r\n\t\t\t<Grid container className={classes.gridItem} spacing={1}>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<CustomDatePicker\r\n\t\t\t\t\t\tlabel={t('scheduler.startDate')}\r\n\t\t\t\t\t\tdata={schedule.startDate}\r\n\t\t\t\t\t\thandleChange={handleChangeStartDate}\r\n\t\t\t\t\t\tisError={dateError}\r\n\t\t\t\t\t\thelperText={dateError ? t('errors.isRequired') : null}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<FormControl variant=\"outlined\" className={classes.formControl}>\r\n\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-age-native-simple\">{t('scheduler.repeatEvery')}</InputLabel>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\tvalue={schedule.interval}\r\n\t\t\t\t\t\t\tonChange={handleChange('interval')}\r\n\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\tlabel={t('scheduler.repeatEvery')}\r\n\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terror={Boolean(intervalError)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{intervals.map((interval, i) => {\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\tschedule.intervalNumber > 1 &&\r\n\t\t\t\t\t\t\t\t\tinterval === 'date'\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tvalue={interval}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tdirection: lang.dir,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{schedule.intervalNumber > 1\r\n\t\t\t\t\t\t\t\t\t\t\t? t(`dates.${interval}s`)\r\n\t\t\t\t\t\t\t\t\t\t\t: t(`dates.${interval}`)}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tBoolean(intervalError) &&\r\n\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tcolor: '#f44336',\r\n\t\t\t\t\t\t\t\tmarginRight: '15px',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{t('errors.isRequired')}\r\n\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={2} className={classes.remove}>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\tonClick={removeSchedule(index)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DeleteOutlineRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\t\r\n\ttextContainer: {\r\n\t\tpadding: '5px',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tselectInput: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: 'rgba(0,0,0,0.8)',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\theight: '200px',\r\n\t\toverflowY: 'auto',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmarginRight: '7px',\r\n\t\tmarginLeft: '-5px',\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: 'white',\r\n\t\twidth: '100%',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.1)',\r\n\t\t},\r\n\t},\r\n\taddBtn: {\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tfontSize: '16px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.6)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '5px 30px 5px 15px',\r\n\t\tmargin: '5px 5px 15px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.8)',\r\n\t\t\tcolor: 'rgba(0,0,0,0.8)',\r\n\t\t},\r\n\t},\r\n\ticonBtn: {\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tfontSize: '16px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.6)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '10px',\r\n\t\tmargin: '0',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.8)',\r\n\t\t\tcolor: 'rgba(0,0,0,0.8)',\r\n\t\t},\r\n\t},\r\n\tnotificationsInstructions: {\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tfontSize: '12px',\r\n\t\tpadding: '10px',\r\n\t},\r\n\tlabel: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '0 10px',\r\n\t},\r\n\ttextField: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\ttextField: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\tgridItem: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '5px 10px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tpadding: '5px',\r\n\t\t},\r\n\t},\r\n\tnextIteration: {\r\n\t\tpadding: '10px 20px',\r\n\t\tcolor: 'rgba(255,255,255,0.5)',\r\n\t\tfontSize: '16px',\r\n\t\ttextAlign: 'right',\r\n\t},\r\n\tremove: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end'\r\n\t},\r\n\tdayContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\talignItems: 'center',\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '14px',\r\n\t},\r\n\tday: {\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tborderRadius: '50px',\r\n\t\theight: '30px',\r\n\t\twidth: '30px',\r\n\t\tmargin: '0 3px',\r\n\t\tcursor: 'pointer',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.4)',\r\n\t\t},\r\n\t},\r\n\tdayChosen: {\r\n\t\tbackground: 'white',\r\n\t\tcolor: 'black',\r\n\t},\r\n\tintervalNumber: {\r\n\t\tpaddingRight: '10px',\r\n\t},\r\n\tformControl: {\r\n\t\twidth: '100%'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\datepickers\\CustomeDatePicker.js",["1151"],"import DateFnsUtils from '@date-io/date-fns';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport heLocale from 'date-fns/locale/he';\r\nimport React, {useContext} from 'react';\r\nimport { getLocale } from '../../../api/genericApi';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\n\r\nexport const CustomDatePicker = ({ data, handleChange, label, disablePast, isError, helperText, size, minDate, maxDate }) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\r\n\treturn (\r\n\t\r\n\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils} locale={getLocale(lang.code)}>\r\n\t\t\t\t<DatePicker\r\n\t\t\t\t\tformat={lang.dateonly}\r\n\t\t\t\t\tlabel={label}\r\n\t\t\t\t\tvalue={data || null}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tinputVariant={'outlined'}\r\n\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\tautoOk={true}\r\n\t\t\t\t\tampm={false}\r\n\t\t\t\t\tdisableToolbar={true}\r\n\t\t\t\t\tvariant={'inline'}\r\n\t\t\t\t\tdisablePast={disablePast}\r\n\t\t\t\t\terror={isError}\r\n\t\t\t\t\thelperText={helperText}\r\n\t\t\t\t\tsize={size ? size : 'medium'}\r\n\t\t\t\t\tminDate={minDate}\r\n\t\t\t\t\tmaxDate={maxDate}\r\n\t\t\t\t/>\r\n\t\t\t</MuiPickersUtilsProvider>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttextField: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px'\r\n\t\t},\r\n\t},\r\n\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\context\\authContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\AuthContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageBoolean.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\RepeatableTasks.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\Calender.js",["1152","1153","1154","1155"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, Grid } from \"@material-ui/core\";\r\nimport { getDaysInMonth, getMonth, getYear, format } from \"date-fns\";\r\nimport { getBrackets, getDateString } from \"../../../api/calenderApi\";\r\nimport { getTasks } from \"../../../api/tasksApi\";\r\nimport { CalenderHeaderRow } from \"./CalenderHeaderRow\";\r\nimport { CalenderRow } from \"./CalenderRow\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { EventsViewer } from \"./EventsViewer\";\r\n\r\nexport const Calender = ({}) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst [current, setCurrent] = useState({\r\n\t\tyear: getYear(new Date()),\r\n\t\tmonth: getMonth(new Date()),\r\n\t});\r\n\tconst [brackets, setBrackets] = useState([]);\r\n\tconst [bracketData, setBracketData] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetTasks({ isRepeatable: true })\r\n\t\t\t.then((rts) => {\r\n\t\t\t\treturn getBrackets(current, rts);\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetBrackets(data);\r\n\t\t\t});\r\n\t}, [current]);\r\n\r\n\tconst handleBracketClick = (bracket) => {\r\n\t\tgetDateString(bracket.date)\r\n\t\tsetBracketData({ ...bracket });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid container className={classes.mainContainer}>\r\n\t\t\t\t<Grid item xs={12} className={classes.moduleContainer}>\r\n\t\t\t\t\t<div className={classes.pageModule}>{t(\"calender.calender\")}</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.tableGrid}>\r\n\t\t\t\t\t<table className={classes.bracketsContainer}>\r\n\t\t\t\t\t\t<thead className={classes.tableHeader}>\r\n\t\t\t\t\t\t\t<CalenderHeaderRow />\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody className={classes.tableBody}>\r\n\t\t\t\t\t\t\t{brackets.chunk(7).map((c, i) => (\r\n\t\t\t\t\t\t\t\t<CalenderRow\r\n\t\t\t\t\t\t\t\t\tbrackets={c}\r\n\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\thandleBracketClick={handleBracketClick}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t{bracketData && (\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={4}\r\n\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\tclassName={classes.markDataGrid}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<EventsViewer\r\n\t\t\t\t\t\t\tbracketData={bracketData}\r\n\t\t\t\t\t\t\thandleClose={() => setBracketData(null)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\theight: \"calc(100vh - 64px)\",\r\n\t\twidth: \"100%\",\r\n\t\tposition: \"relative\",\r\n\t},\r\n\tmoduleContainer: {\r\n\t\tposition: 'sticky',\r\n\t\ttop: 0,\r\n\t\tzIndex: 2\r\n\t},\r\n\tpageModule: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px 40px\",\r\n\t\tfontSize: \"16px\",\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n        boxShadow: '0 0px 2px 1px rgba(255,255,255,0.3)',\r\n\t\tmargin: \"0px auto 5px\",\r\n\t\twidth: \"30%\",\r\n\t\ttextAlign: \"center\",\r\n\t\tborderRadius: \"0 0 25px 25px\",\r\n\t\tlineHeight: \"1\", \r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tbackground: \"black\",\r\n\t\t\twidth: \"100vw\",\r\n\t\t\tpadding: \"20px 0\",\r\n\t\t\tborderRadius: 0,\r\n\t\t\tmargin: 0\r\n\t\t}\r\n\t},\r\n\ttableGrid: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center'\r\n\t},\r\n\tbracketsContainer: {\r\n\t\twidth: \"90vw\",\r\n\t\theight: \"80vh\",\r\n\t\tcolor: \"white\",\r\n\t\ttableLayout: \"fixed\",\r\n\t},\r\n\ttableBody: {\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t},\r\n\tmarkDataGrid: {\r\n\t\tposition: \"absolute\",\r\n\t\tzIndex: 3,\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\tbackdropFilter: \"blur(40px)\",\r\n\t\theight: \"100%\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\calenderApi.js",["1156","1157","1158","1159","1160"],"import { addDays, endOfMonth, format, getDate, getDay, getDayOfYear, getDaysInMonth, getMonth, getYear, parseISO, startOfDay, toDate } from \"date-fns\";\r\nimport i18next from \"i18next\";\r\nimport { getTasks } from './tasksApi';\r\n\r\nexport const getBrackets = async (current, repeatableTasks) => {\r\n    const dates = await calculateDates(current);\r\n    return await calculateBrackets(dates, repeatableTasks);  \r\n}\r\n\r\nexport const calculateDates = async (current) => {\r\n    const { month, year } = current;\r\n    let dates = [];\r\n    const currentMonthDate = new Date(year, month, 1);\r\n    const daysInCurrentMonth = getDaysInMonth(currentMonthDate);\r\n    const firstDayOfMonth = getDay(currentMonthDate);\r\n    const lastDayOfMonth = getDay(endOfMonth(currentMonthDate));\r\n    if (firstDayOfMonth !== 0 ) {\r\n        for(let i = firstDayOfMonth; i > 0; i--) {\r\n            dates.push(addDays(currentMonthDate, -i));\r\n        }\r\n    };\r\n    for (let i = 0; i < daysInCurrentMonth; i++) {\r\n        dates.push(addDays(currentMonthDate, i));\r\n    }\r\n    let daysLeft = 42 - dates.length;\r\n    for(let i = 1; i <= daysLeft; i++) {\r\n        dates.push(addDays(endOfMonth(currentMonthDate), i));\r\n    }\r\n    return Promise.resolve(dates)\r\n}\r\n\r\nexport const calculateBrackets = async (dates, repeatableTasks) => {\r\n    let brackets = dates.map((d) => {\r\n        const dParts = getDateParts(d);\r\n        let bracket = { date: d, parts: dParts, data: [] };\r\n        repeatableTasks.forEach(rt => {\r\n            rt.schedule.forEach(rts => {\r\n                const startDate = parseISO(rts.startDate);\r\n                if (startOfDay(startDate) > startOfDay(d)) return;\r\n\r\n                let rtsParts = getDateParts(startDate);\r\n                if (rts.interval === 'day') {\r\n                    bracket.data.push(rt);\r\n                }\r\n                if (rts.interval === 'week') {\r\n                    if (dParts.weekDay == rtsParts.weekDay) {\r\n                        bracket.data.push(rt);\r\n                    }\r\n                }\r\n                if (rts.interval === 'month') {\r\n                    if (dParts.day == rtsParts.day) {\r\n                        bracket.data.push(rt);\r\n                    }\r\n                }\r\n                if (rts.interval === 'year') {\r\n                    if (dParts.yearDay == rtsParts.yearDay) {\r\n                        bracket.data.push(rt);\r\n                    }\r\n                }\r\n            })\r\n        });\r\n        return bracket;\r\n    });\r\n    return Promise.resolve(brackets);\r\n}\r\n\r\nexport const getDateParts = (date) => {\r\n    return {\r\n        day: getDate(date),\r\n        weekDay: getDay(date),\r\n        month: getMonth(date),\r\n        year: getYear(date),\r\n        yearDay: getDayOfYear(date)\r\n    }\r\n}\r\n\r\nexport const getDateString = (date) => {\r\n    date = toDate(new Date(date));\r\n    const dayOfWeek = format(date, 'EEEE').toLowerCase();\r\n    const monthName = format(date, 'LLLL').toLowerCase();\r\n    \r\n    return `${i18next.t('dates.day')} ${i18next.t(`dates.${dayOfWeek}`)}, ${format(date, 'd')} ${i18next.t(`dates.to`)}${i18next.t(`dates.${monthName}`)}, ${format(date, 'yyyy')}`\r\n}","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\CalenderHeaderRow.js",["1161","1162"],"import React from 'react';\r\nimport { makeStyles, Grid, useMediaQuery } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst weekDays = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\r\n\r\nexport const CalenderHeaderRow = ({}) => {\r\n\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const matches = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <tr className={classes.row}>\r\n            {\r\n                weekDays.map((wd, i) => \r\n                    <th className={classes.headerCell}>\r\n                        <div className={classes.dayHeader}>\r\n                            {t(`dates.${wd}${matches ? 'short' : ''}`)}\r\n                        </div>\r\n                    </th>\r\n                )\r\n            }\r\n        </tr>   \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    headerCell: {\r\n        width: '14.28%'\r\n    },\r\n    dayHeader: {\r\n        padding: '15px 10px',\r\n        background: 'rgba(0,0,0,0.6)',\r\n        width: 'auto'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\CalenderRow.js",["1163","1164"],"import React from 'react';\r\nimport { makeStyles, Grid, useMediaQuery } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { EventBracket } from './EventBracket';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nexport const CalenderRow = ({ brackets, handleBracketClick }) => {\r\n\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const matches = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <tr className={classes.row}>\r\n            {\r\n                brackets.map((b, i) =>\r\n                    <td className={classes.bracketData}  onClick={() => handleBracketClick({ tasks: b.data, date: b.date, parts: b.parts})}>\r\n                        <div className={classes.dataContainer}>\r\n                            <div className={classes.dayOfMonth}>\r\n                                {b.parts.day}\r\n                            </div>\r\n                            <div className={classes.eventsContainer}>\r\n                                {   \r\n                                    matches && b.data.length ?  \r\n                                    <FiberManualRecordIcon className={classes.eventsMarker} /> : \r\n                                    b.data.slice(0,2).map((e,i) => \r\n                                        <EventBracket data={e} key={i} />\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                )\r\n            }\r\n        </tr>   \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    row: {\r\n        padding: '10px',\r\n        height: '16.666%'\r\n    },\r\n    dayHeader: {\r\n\r\n    },\r\n    bracketData: {\r\n        padding: '10px',\r\n        verticalAlign: 'top',\r\n        width: '100px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            textAlign: 'center'\r\n        }\r\n    },\r\n    dataContainer: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between'\r\n    },\r\n    dayOfMonth: {\r\n\r\n    },\r\n    eventsMarker: {\r\n       \r\n        fontSize: '12px'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\RolesAndPermissions.js",["1165","1166"],"import { Grid, IconButton, List, ListItem, makeStyles, Tooltip } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getSuccessMessage } from '../../../api/genericApi';\r\nimport { createRole, filterRoles, getRoles, updateRole } from '../../../api/permissionsApi';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { SnackbarContext } from '../../../context/SnackbarContext';\r\nimport { Can } from '../../reuseables/Can';\r\nimport { LoadingProgress } from '../../reuseables/LoadingProgress';\r\nimport { SearchBox } from '../../reuseables/SearchBox';\r\nimport { UpsertRole } from './UpsertRole';\r\n\r\nexport const RolesAndPermissions = () => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n    const { lang } = useContext(LanguageContext);\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n    const [ roleList, setRoleList ] = useState([]);\r\n\tconst [ roles, setRoles ] = useState([]);\r\n    const [ addRole, setAddRole ] = useState(false);\r\n    const [ editRole, setEditRole ] = useState(false);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isLoading) return;\r\n\t\tgetRoles()\r\n\t\t\t.then((res) => {\r\n                console.log(res)\r\n\t\t\t\tif (res.status === 403) {\r\n\t\t\t\t\tsetSnackbar(res);\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t} else if (res) {\r\n\t\t\t\t\tsetRoleList(res);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.finally(() => setIsLoading(false));\r\n\t}, [isLoading]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRoles(roleList);\r\n\t}, [roleList]);\r\n\r\n\tconst handleSearch = async (searchText) => {\r\n\t\tif (!searchText) {\r\n\t\t\tsetRoles(roleList);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst filtered = await filterRoles(roleList, searchText);\r\n\t\tsetRoles(filtered);\r\n\t};\r\n\r\n\tconst handleSaveRole = (roleName, permissions) => {\r\n\t\tcreateRole(roleName, permissions)\r\n\t\t.then((res) => {\r\n\t\t\tif (res.status === 403) {\r\n\t\t\t\tsetSnackbar(res);\r\n\t\t\t\treturn;\r\n\t\t\t} else if (res) {\r\n\t\t\t\tsetSnackbar(getSuccessMessage('role', res.roleName, 'created'));\r\n\t\t\t}\r\n\t\t})\r\n\t\t.finally(() => setIsLoading(true));\r\n    };\r\n    \r\n    const handleUpdateRole = (roleId, roleName, permissions) => {\r\n        updateRole(roleId, roleName, permissions)\r\n        .then(res => {\r\n            if (res.status === 403) {\r\n                setSnackbar(res);\r\n                return;\r\n            } else if (res) {\r\n                setSnackbar(getSuccessMessage('role', res.roleName, 'updated'));\r\n            }\r\n        })\r\n        .finally(() => setIsLoading(true));\r\n    }\r\n\r\n    const closeAddEdit = () => {\r\n        setAddRole(false);\r\n        setEditRole(false);\r\n    }\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress initial={true} />\r\n\t) : (\r\n\t\t<Grid container className={classes.usersContainer}>\r\n\t\t\t<Grid item xs={10} className={classes.gridSearch}>\r\n\t\t\t\t<SearchBox placeholder={t(\"roles.filterByName\")} filterField={'sss'} returnValue={handleSearch} />\r\n\t\t\t</Grid>\r\n\t\t\t<Can module=\"users\" action=\"create\">\r\n\t\t\t\t<Grid item xs={2} className={classes.controls}>\r\n\t\t\t\t\t<Tooltip title={t('roles.addRole')}>\r\n\t\t\t\t\t\t<IconButton className={classes.controlBtn} onClick={() => setAddRole(true)}>\r\n\t\t\t\t\t\t\t<AddIcon className={classes.controlIcon} />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Can>\r\n\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<List className={classes.userList}>\r\n\t\t\t\t\t{!roles.length ? (\r\n\t\t\t\t\t\t<div className={classes.noUsersFound}>{t(\"roles.noRolesFound\")}</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\troles.map((r, i) => (\r\n\t\t\t\t\t\t\t<ListItem className={classes.listRow} key={i}>\r\n\t\t\t\t\t\t\t\t<Grid container className={classes.midGrid}>\r\n                                    <Grid item xs={2} className={classes.gridItem}>\t\r\n                                        <IconButton \r\n                                            className={classes.editBtn}\r\n                                            onClick={() => setEditRole(r._id)}    \r\n                                        >\r\n                                            <EditIcon className={classes.editIcon} />\r\n                                        </IconButton>\r\n                                    </Grid>\r\n                                    <Grid item xs={10} className={classes.gridItem}>\r\n                                        <div className={classes.role}>{r.roleName}</div>\r\n                                    </Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t)}\r\n\t\t\t\t</List>\r\n\t\t\t</Grid>\r\n\t\t\t{(addRole || editRole) &&\r\n            <UpsertRole\r\n                handleClose={() => closeAddEdit(false)} \r\n                handleSave={handleSaveRole}\r\n                handleUpdate={handleUpdateRole}\r\n                roleId={editRole} \r\n            />}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontrols: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '20px 10px',\r\n\t},\r\n\tcontrolBtn: {\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmargin: '5px',\r\n\t\tpadding: '10px',\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t},\r\n\teditBtn: {\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '10px',\r\n\t\tcolor: 'rgba(255,255,255,0.6)'\r\n\t},\r\n\teditIcon: {\r\n\t\tfontSize: '20px',\r\n\t\t[theme.breakpoints.down('xs')]: {\r\n\t\t\tfontSize: '16px',\r\n\t\t},\r\n\t},\r\n\tcontrolIcon: {\r\n\t\tfontSize: '24px',\r\n\t},\r\n\tuserList: {\r\n\t\tborderTop: '1px solid rgba(255,255,255,0.2)',\r\n        padding: 0,\r\n\t\toverflowY: 'overlay',\r\n\t},\r\n\tlistRow: {\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tposition: 'relative',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\t},\r\n\t},\r\n\tmidGrid: {\r\n\t\tpadding: '10px 0',\r\n\t},\r\n\tdataContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tgridItem: {\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'fle-xstart',\r\n\t\talignItems: 'center',\r\n        padding: '0 10px'\r\n\t},\r\n\t\r\n\trole: {\r\n\t\tfontSize: '18px',\r\n\t\tcolor: 'rgba(255,255,255,0.7)',\r\n\t},\r\n\tgridSearch: {\r\n\t\talignItems: 'center',\r\n\t\tpadding: '20px',\r\n\t},\r\n\tnoUsersFound: {\r\n\t\tbackground: 'black',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '10px 30px',\r\n\t\tcolor: 'white',\r\n\t\twidth: 'fit-content',\r\n\t\tmargin: '10px'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UpsertRole.js",["1167","1168","1169","1170","1171"],"import {\r\n\tBackdrop,\r\n\tButton,\r\n\tFade,\r\n\tGrid,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tModal,\r\n\tPaper,\r\n\tTextField\r\n} from \"@material-ui/core\";\r\nimport { ClearRounded } from \"@material-ui/icons\";\r\nimport clsx from \"clsx\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getServerError } from \"../../../api/genericApi\";\r\nimport {\r\n\tgetInitialPermissionsObject,\r\n\tgetRole\r\n} from \"../../../api/permissionsApi\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { SnackbarContext } from \"../../../context/SnackbarContext\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport { Permission } from \"./Permission\";\r\n\r\nexport const UpsertRole = ({\r\n\thandleClose,\r\n\thandleSave,\r\n\thandleUpdate,\r\n\troleId,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { t } = useTranslation();\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst [mode, setMode] = useState(roleId ? \"update\" : \"create\");\r\n\tconst [errors, setErrors] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [permissions, setPermissions] = useState(getInitialPermissionsObject());\r\n\tconst [roleName, setRoleName] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!roleId) {\r\n\t\t\tsetIsLoading(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tgetRole(roleId)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (!res || res.status === 500) {\r\n\t\t\t\t\tsetSnackbar(getServerError());\r\n\t\t\t\t\thandleClose();\r\n\t\t\t\t} else if (res.status === 403) {\r\n\t\t\t\t\tsetSnackbar(res);\r\n\t\t\t\t\thandleClose();\r\n\t\t\t\t}\r\n\t\t\t\tsetPermissions(res.permissions);\r\n\t\t\t\tsetRoleName(res.roleName);\r\n\t\t\t})\r\n\t\t\t.finally(() => setIsLoading(false));\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(permissions);\r\n\t}, [permissions]);\r\n\r\n\tconst validateFields = () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet errList = [];\r\n\t\t\tif (!roleName) {\r\n\t\t\t\terrList.push({ field: \"roleName\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\r\n\t\t\tif (errList.length) {\r\n\t\t\t\tsetErrors(errList);\r\n\t\t\t\tresolve(false);\r\n\t\t\t}\r\n\t\t\tresolve(true);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tvalidateFields()\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (!res) throw \"\";\r\n\t\t\t\tif (mode === \"update\") {\r\n\t\t\t\t\thandleUpdate(roleId, roleName, permissions);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\thandleSave(roleName, permissions);\r\n\t\t\t})\r\n\t\t\t.then(handleClose)\r\n\t\t\t.catch(() => {\r\n\t\t\t\treturn;\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleSliderChange = (module, field, value) => {\r\n\t\tconsole.log(module, field, value);\r\n\t\tsetPermissions((prevState) => {\r\n\t\t\treturn prevState.map((r) => {\r\n\t\t\t\tif (r.module === module) {\r\n\t\t\t\t\tr[field] = value;\r\n\t\t\t\t}\r\n\t\t\t\treturn r;\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress />\r\n\t) : (\r\n\t\t<Modal\r\n\t\t\topen={true}\r\n\t\t\tonClose={handleClose}\r\n\t\t\tcloseAfterTransition\r\n\t\t\tBackdropComponent={Backdrop}\r\n\t\t\tBackdropProps={{\r\n\t\t\t\ttimeout: 500,\r\n\t\t\t}}\r\n\t\t\tclassName={classes.modal}\r\n\t\t>\r\n\t\t\t<Fade in={true}>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tstyle={{ outline: \"0\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={10}\r\n\t\t\t\t\t\tmd={8}\r\n\t\t\t\t\t\tlg={8}\r\n\t\t\t\t\t\txl={6}\r\n\t\t\t\t\t\tclassName={classes.gridCont}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Paper\r\n\t\t\t\t\t\t\televation={6}\r\n\t\t\t\t\t\t\tclassName={classes.paper}\r\n\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.headerRow}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.title}>\r\n\t\t\t\t\t\t\t\t\t\t{mode === \"update\"\r\n\t\t\t\t\t\t\t\t\t\t\t? t(\"roles.upsert.editPermissions\")\r\n\t\t\t\t\t\t\t\t\t\t\t: t(\"roles.upsert.createRole\")}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.close}>\r\n\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleClose}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<ClearRounded className={classes.icon} />\r\n\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\t\tclassName={classes.permissionList}\r\n\t\t\t\t\t\t\t\t\tjustify=\"flex-start\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t(\"users.upsert.generalDetails\")}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={t(`roles.roleName`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `roleName`)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={roleName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRoleName(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `roleName`)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.length > 0 && t(\"errors.isRequired\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `roleName`)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.length > 0 && \"rgb(244, 67, 54)\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: 60,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t{permissions.map((r, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{t(`roles.${r.module}`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{Object.keys(r).map((rp) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (rp === \"module\") return;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst isBoolean = [\"create\", \"delete\"].includes(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trp\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Permission\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisBoolean={isBoolean}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmodule={r[\"module\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext={rp}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={r[rp]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleValueChange={handleSliderChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.controls}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName={clsx(classes.control, classes.save)}\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleConfirm}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"controls.confirm\")}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName={clsx(classes.control, classes.cancel)}\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleClose}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"controls.cancel\")}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Fade>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmodal: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t},\r\n\r\n\tgridCont: {\r\n\t\theight: \"fit-content\",\r\n\t},\r\n\tpermissionList: {\r\n\t\theight: \"calc(80vh - 138px)\",\r\n\t\toverflowY: \"overlay\",\r\n\t\tpadding: \"10px \",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px 0px\",\r\n\t\t\theight: \"calc(81vh - 138px)\",\r\n\t\t},\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: \"rgba(0,0,0,0.1)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\theight: \"80vh\",\r\n\t\toverflowY: \"overlay\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\theight: \"81vh\",\r\n\t\t\ttop: 0,\r\n\t\t\tborderRadius: \"0\",\r\n\t\t\tborder: \"0\",\r\n\t\t\tpadding: \"10px 5px\",\r\n\t\t},\r\n\t\t\"&:focus\": {\r\n\t\t\toutline: \"none\",\r\n\t\t},\r\n\t},\r\n\theaderRow: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t\twidth: \"100%\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\theight: \"64px\",\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"20px 10px 10px\",\r\n\t\tfontSize: \"20px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t},\r\n\ticonBtn: {\r\n\t\tmargin: \"10px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"24px\",\r\n\t},\r\n\tsection: {\r\n\t\tmargin: \"10px 5px\",\r\n\t\tpadding: \"10px 10px 50px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.6)\",\r\n\t},\r\n\tsectionTitle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"20px\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"24px\",\r\n\t\t},\r\n\t},\r\n\tfields: {\r\n\t\tpadding: \"10px 20px\",\r\n\t\tborderRadius: \"0px 10px 10px 10px\",\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px 0\",\r\n\t\t},\r\n\t},\r\n\ttextContainer: {\r\n\t\tpadding: \"5px\",\r\n\t},\r\n\ttextField: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tselectInput: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t\theight: \"000px\",\r\n\t\toverflowY: \"auto\",\r\n\t\tborder: \"1px solid rgba(055,055,055,0.0)\",\r\n\t\tmarginRight: \"7px\",\r\n\t\tmarginLeft: \"-5px\",\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"100%\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(055,055,055,0.1)\",\r\n\t\t},\r\n\t},\r\n\tcontrols: {\r\n\t\tborderTop: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"12px 0\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\theight: \"74px\",\r\n\t},\r\n\tcontrol: {\r\n\t\twidth: \"30%\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\tfontSize: \"16px\",\r\n\t\tmargin: \"5px\",\r\n\t\tpadding: \"5px 30px\",\r\n\t\tborderRadius: \"30px\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tsave: {\r\n\t\tbackground: \"rgba(0,0,0,0.0)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"black\",\r\n\t\t},\r\n\t\t\"&:disabled\": {\r\n\t\t\tcolor: \"rgba(255,255,255,0.3)\",\r\n\t\t},\r\n\t},\r\n\tcancel: {\r\n\t\t\"&:hover\": {\r\n\t\t\tboxShadow: \"inset rgba(255,255,255,0.3) 0 0 0px 1px\",\r\n\t\t},\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Permission.js",["1172","1173"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, Grid, Slider } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\n\r\n\r\nexport const Permission = ({ isBoolean, module, text, value, handleValueChange}) => {\r\n\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const [ val, setVal ] = useState(value)  \r\n\r\n    useEffect(() => {\r\n        handleValueChange(module, text, val)\r\n    }, [val])\r\n\r\n    const marks = [\r\n        {\r\n            value: 0,\r\n            label: t(`roles.noPermission`)\r\n        },\r\n        {\r\n            value: 1,\r\n            label: t(`roles.onlyMe`)\r\n        },\r\n        {\r\n            value: 2,\r\n            label: t(`roles.mineAndOthers`)\r\n        }\r\n    ]\r\n\r\n    const marksPoints = marks.map(m => {\r\n        if (isBoolean && m.value === 1) {\r\n            return false;\r\n        }\r\n        return m;\r\n    })\r\n\r\n    const getValColor = (val) => {\r\n        return { 0: 'red', 1: 'yellow', 2: 'green' }[val]\r\n    }\r\n\r\n   function textValue(v){\r\n       return marksPoints[v].label\r\n   }\r\n\r\n   const handleChange = (e,v) => {\r\n       setVal(v)\r\n   }\r\n    \r\n    return (\r\n        <Grid container className={classes.container} justify='center'>\r\n            <Grid item xs={12} className={classes.permText}>\r\n                <div className={classes.permTextLabel}>\r\n                    {t(`roles.${text}`)}\r\n                </div>\r\n                \r\n            </Grid>\r\n            <Grid item xs={11} lg={7} className={classes.gridItem}>\r\n                <div className={classes.sliderContainer}>\r\n                    <Slider\r\n                        track={false}\r\n                        value={val}\r\n                        getAriaValueText={textValue}\r\n                        aria-labelledby=\"discrete-slider-small-steps\"\r\n                        step={isBoolean ? 2 : 1}\r\n                        marks={marksPoints}\r\n                        min={0}\r\n                        max={2}\r\n                        valueLabelDisplay=\"off\"\r\n                        classes={{\r\n                            root: classes.rootSlider,\r\n                            track: classes.track,\r\n                            rail: classes.rail,\r\n                            mark: classes.mark,\r\n                            markLabelActive: classes.markLabelActive,\r\n                            thumb: classes.thumb\r\n                        }}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n            \r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        padding: '10px 0px 20px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        margin: '10px 0',\r\n        borderRadius: '5px',\r\n        [theme.breakpoints.down('sm')] :{\r\n            padding: '0px 0px 30px',\r\n            borderWidth: '0px 0px 1px',\r\n        }\r\n    },\r\n    gridItem: {\r\n       padding: '10px',\r\n       [theme.breakpoints.down('sm')] :{\r\n        padding: '10px 40px',\r\n    }\r\n    },\r\n    permTextLabel: {\r\n        padding: '10px 20px',\r\n\r\n        width: 'auto',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n\r\n    permText: {\r\n        color: 'white',\r\n        display: 'grid',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n       \r\n        paddingBottom: '10px'\r\n    },\r\n    sliderContainer: {\r\n       \r\n    },\r\n    rootSlider: {\r\n        color: 'white'\r\n    },\r\n    mark: {\r\n        color: 'rgba(255,255,255,0.6)',\r\n        height: '20px',\r\n        width: '2px'\r\n    },\r\n    rail: {\r\n        color: 'rgba(255,255,255,0.6)',\r\n        opacity: '1',\r\n\r\n    },\r\n    markLabelActive: { \r\n        color: 'white',\r\n        padding: '5px 20px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '50px' ,\r\n        margin: '10px 0'\r\n    },\r\n    thumb: {\r\n        color: 'white'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\EventBracket.js",["1174","1175","1176","1177"],"import React from \"react\";\r\nimport { makeStyles, Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const EventBracket = ({ data }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\r\n\treturn (\r\n\t\t<div className={classes.eventBracket}>\r\n\t\t\t<div className={classes.taskId}>{data.taskId}</div>\r\n\t\t\t<div className={classes.title}>{data.title}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\teventBracket: {\r\n\t\tbackground: \"#42A5F5\",\r\n\t\tborderRadius: \"5px\",\r\n\t\tmargin: \"5px 0\",\r\n\t\tfontSize: \"11px\",\r\n\t\tdisplay: \"flex\",\r\n\t},\r\n\ttaskId: {\r\n\t\tfontSize: \"11px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\tpadding: \"5px 10px\",\r\n\t\tbackground: \"black\",\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"5px 0px 0 5px\",\r\n\t},\r\n\ttitle: {\r\n\t\tpadding: \"5px\",\r\n\t\tcolor: \"white\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\toverflow: \"hidden\",\r\n\t\ttextOverflow: \"ellipsis\",\r\n\t\tborderRadius: \"0px 5px 5px 0px\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\EventsViewer.js",["1178","1179","1180","1181","1182","1183","1184","1185"],"import { IconButton, makeStyles } from \"@material-ui/core\";\r\nimport AssignmentRoundedIcon from \"@material-ui/icons/AssignmentRounded\";\r\nimport ClearRoundedIcon from \"@material-ui/icons/ClearRounded\";\r\nimport WarningRoundedIcon from \"@material-ui/icons/WarningRounded\";\r\nimport clsx from \"clsx\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getDateString } from \"../../../api/calenderApi\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { TaskMinified } from \"../tasks/TaskMinified\";\r\nexport const EventsViewer = ({ bracketData, handleClose }) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { t } = useTranslation();\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [data, setData] = useState(bracketData);\r\n\tconst [tasks, setTasks] = useState([]);\r\n\tconst [detailsActive, setDetailsActive] = useState(\"tasks\");\r\n\r\n\tuseEffect(() => {\r\n\t\tif (detailsActive === \"tasks\") {\r\n\t\t\tsetTasks(bracketData.tasks);\r\n\t\t} else {\r\n\t\t\tsetTasks([]);\r\n\t\t}\r\n\t}, [data]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (bracketData) {\r\n\t\t\tsetData(bracketData);\r\n\t\t}\r\n\t}, [bracketData]);\r\n\r\n\tconst handleChange = (event) => {};\r\n\r\n\tconst handleClick = (type) => (event) => {};\r\n\r\n\treturn (\r\n\t\t<div className={classes.container}>\r\n\t\t\t<div className={classes.topContainer}>\r\n\t\t\t\t<IconButton onClick={handleClose} className={classes.closeBtn}>\r\n\t\t\t\t\t<ClearRoundedIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<div className={classes.dateContainer}>{getDateString(data.date)}</div>\r\n\r\n\t\t\t\t<div className={classes.pillContainer}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={handleClick(\"tasks\")}\r\n\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\tclasses.openItems,\r\n\t\t\t\t\t\t\tclasses.openFaults,\r\n\t\t\t\t\t\t\tdetailsActive === \"tasks\" && classes.tabActive\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<WarningRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t{`${t(\"calender.todaysTasks\")}`}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={handleClick(\"events\")}\r\n\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\tclasses.openItems,\r\n\t\t\t\t\t\t\tclasses.openTasks,\r\n\t\t\t\t\t\t\tdetailsActive === \"events\" && classes.tabActive\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<AssignmentRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t{`${t(\"calender.events\")}`}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{detailsActive === \"tasks\" ? (\r\n\t\t\t\ttasks.length ? (\r\n\t\t\t\t\t<div className={classes.faultContainer}>\r\n\t\t\t\t\t\t{tasks.map((mdf, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className={classes.miniFault}>\r\n\t\t\t\t\t\t\t\t\t<TaskMinified data={mdf} asList={true} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className={classes.noFaults}>{t(\"calender.noTasks\")}</div>\r\n\t\t\t\t)\r\n\t\t\t) : null}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\twidth: \"100vw\",\r\n\t\t},\r\n\t},\r\n\ttopContainer: {\r\n\t\tposition: \"relative\",\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: \"16px\",\r\n\t\tcolor: \"white\",\r\n\t\tdisplay: \"grid\",\r\n\t\tborderRadius: \"5px\",\r\n\t\tpadding: \"0\",\r\n\t\tmargin: \"60px 0px 10px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tminWidth: \"300px\",\r\n\t\talignItems: \"flex-end\",\r\n\t\tbackground: \"rgb(140, 19, 171)\",\r\n\t\tborderRadius: \"50px\",\r\n\t},\r\n\tstreetName: {\r\n\t\tfontSize: \"16px\",\r\n\t\tcolor: \"white\",\r\n\t\tdisplay: \"grid\",\r\n\t\tborderRadius: \"5px\",\r\n\t\tpadding: \"7px 40px 7px 20px\",\r\n\t\tmargin: \"60px 10px 5px\",\r\n\t\twidth: \"fit-content\",\r\n\t\talignItems: \"flex-end\",\r\n\t\tbackground: \"rgb(140, 19, 171)\",\r\n\t\tborderRadius: \"50px\",\r\n\t},\r\n\tminiFault: {\r\n\t\theight: \"150px\",\r\n\t\tpadding: \"10px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tbackground: \"rgba(0,0,0,0.0)\",\r\n\t\tmargin: \"10px\",\r\n\t\tborderRadius: \"5px\",\r\n\t},\r\n\tminiTask: {\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tbackground: \"rgba(0,0,0,0.0)\",\r\n\t\tmargin: \"10px\",\r\n\t\tborderRadius: \"5px\",\r\n\t},\r\n\tfaultContainer: {\r\n\t\tborderTop: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmarginTop: \"5px\",\r\n\t\theight: \"calc(100% - 140px)\",\r\n\t\toverflow: \"overlay\",\r\n\t},\r\n\ttaskContainer: {\r\n\t\tborderTop: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmarginTop: \"5px\",\r\n\t\theight: \"calc(100% - 140px)\",\r\n\t\toverflow: \"overlay\",\r\n\t},\r\n\tmenu: {\r\n\t\tcolor: \"white\",\r\n\t\theight: \"40px\",\r\n\t\tmargin: \"5px 50px 5px 10px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tborderColor: \"white\",\r\n\t\t},\r\n\t},\r\n\tmenuTitle: {\r\n\t\tcolor: \"white\",\r\n\t\tmargin: \"60px 50px 0px 10px\",\r\n\t\theight: \"33px\",\r\n\t\tminWidth: \"200px\",\r\n\t\tbackground: \"rgb(140, 19, 171)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tfontSize: \"15px\",\r\n\t\tpadding: \"0\",\r\n\t\tlineHeight: 2,\r\n\t\t\"&:hover\": {\r\n\t\t\tborderColor: \"white\",\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmaxHeight: \"200px\",\r\n\t\toverflowY: \"auto\",\r\n\t\tmarginTop: \"60px\",\r\n\t\tmarginRight: \"7px\",\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tselectContainer: {\r\n\t\tpadding: \"0px 0\",\r\n\t},\r\n\ttextInput: {\r\n\t\tpadding: \"0px 0\",\r\n\t\tbackground: \"rgba(0,0,0,0.0)\",\r\n\t\tfontSize: \"16px\",\r\n\t\twidth: \"100%\",\r\n\t\t\"& input\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\tpaddingLeft: \"20px\",\r\n\t\t},\r\n\t\t\"& label\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\tpaddingLeft: \"5px\",\r\n\t\t},\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderColor: \"rgba(255,255,255,0.6)\",\r\n\t\t\tborderRadius: \"42px\",\r\n\t\t},\r\n\t},\r\n\tcloseBtn: {\r\n\t\tcolor: \"white\",\r\n\t\tmargin: \"6px\",\r\n\t\tposition: \"absolute\",\r\n\t\tright: 0,\r\n\t\tzIndex: 3,\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\t},\r\n\t},\r\n\tnoFaults: {\r\n\t\tcolor: \"white\",\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\tmargin: \"10px\",\r\n\t\tfontSize: \"14px\",\r\n\t\twidth: \"fit-content\",\r\n\t},\r\n\topenItems: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"5px 20px 5px 10px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tmargin: \"0px 10px 5px 0px\",\r\n\t\tfontSize: \"13px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\topacity: 0.7,\r\n\t\tcursor: \"pointer\",\r\n\t\t\"&:hover\": {\r\n\t\t\topacity: 1,\r\n\t\t\tboxShadow: \"inset rgba(0,0,0,0.4) 0 0 3px 1px\",\r\n\t\t},\r\n\t},\r\n\topenFaults: {\r\n\t\tbackground: \"#F03930\",\r\n\t},\r\n\topenTasks: {\r\n\t\tbackground: \"#6540EB\",\r\n\t},\r\n\ticon: {\r\n\t\tmarginRight: \"7px\",\r\n\t\tfontSize: \"18px\",\r\n\t\tpaddingBottom: \"2px\",\r\n\t},\r\n\tpillContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tpadding: \"5px 10px\",\r\n\t},\r\n\ttabActive: {\r\n\t\tborder: \"1px solid white\",\r\n\t\topacity: 1,\r\n\t},\r\n\toutlinedSelect: {\r\n\t\tpadding: \"10px\",\r\n\t},\r\n\tdateContainer: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"20px\",\r\n\t\tfontSize: \"24px\",\r\n\t\tmarginTop: \"40px\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetsList.js",["1186","1187","1188","1189"],"import { Grid, makeStyles } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n\tapplyFilters, getAssets, getFullAddress, removeAsset as removeAssetDB\r\n} from \"../../../api/assetsApi\";\r\nimport { getFaults } from \"../../../api/faultsApi\";\r\nimport { queryParamsToObject } from \"../../../api/genericApi\";\r\nimport { AlertDialog } from \"../../reuseables/AlertDialog\";\r\nimport { useQuery } from \"../../reuseables/customHooks/useQuery\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport { Asset } from \"./Asset\";\r\nimport { AssetsControls } from \"./AssetsControls\";\r\n\r\nexport const AssetsList = () => {\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst classes = useStyles();\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [assets, setAssets] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [alertDialog, setAlertDialog] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isLoading) return;\r\n\t\tprepareData();\r\n\t}, [isLoading]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsLoading(true);\r\n\t}, [location.search]);\r\n\r\n\tconst prepareData = async () => {\r\n\t\ttry {\r\n\t\t\tlet asts = await getAssets(query)\r\n\t\t\tif (!asts.length) return;\r\n\t\t\tasts = await applyFilters(queryParamsToObject(location.search), asts);\r\n\t\t\tif (!asts.length) return;\r\n\t\t\tlet fts = await getFaults({ assets: asts.map(a => a._id)})\r\n\t\t\tasts = asts.map(a => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...a,\r\n\t\t\t\t\tfaultCount: fts.reduce((val, f) => (f.asset._id == a._id && f.status.state === 'open' ? val + 1 : val),0)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tsetAssets(asts)\r\n\t\t\tsetIsLoading(false);\r\n\r\n\t\t} catch(e) {\r\n\t\t\tconsole.log(e.message);\r\n\t\t\tsetIsLoading(false);\r\n\t\t};\r\n\r\n\t\t\r\n\t}\r\n\r\n\tconst removeAsset = (assetId, data) => {\r\n\t\tsetAlertDialog({\r\n\t\t\thandleConfirm: async () => {\r\n\t\t\t\tconst res = await removeAssetDB(assetId);\r\n\t\t\t\tif (res) {\r\n\t\t\t\t\tsetAlertDialog(null);\r\n\t\t\t\t\tsetIsLoading(true);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thandleCancel: () => setAlertDialog(null),\r\n\t\t\ttext: `${t(\"assetsModule.deleteConfirmation\")} ${getFullAddress(data)}?`,\r\n\t\t\ttitle: `${t(\"assetsModule.deleteAsset\")}`,\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t<Grid item xs={12} className={classes.moduleContainer}>\r\n\t\t\t\t\t<div className={classes.pageModule}>{t(\"assetsModule.assets\")}</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} md={12}>\r\n\t\t\t\t\t<AssetsControls />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} lg={11} xl={10}>\r\n\t\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t\t\t<LoadingProgress />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\tassets.map((v, i) => (\r\n\t\t\t\t\t\t\t\t<Asset\r\n\t\t\t\t\t\t\t\t\tdata={v}\r\n\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t{Boolean(alertDialog) && (\r\n\t\t\t\t<AlertDialog open={Boolean(alertDialog)} alertDialog={alertDialog} />\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmoduleContainer: {\r\n\t\tposition: 'sticky',\r\n\t\ttop: 0,\r\n\t\tzIndex: 2\r\n\t},\r\n\tpageModule: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px 40px\",\r\n\t\tfontSize: \"16px\",\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n        boxShadow: '0 0px 2px 1px rgba(255,255,255,0.3)',\r\n\t\tmargin: \"0px auto 5px\",\r\n\t\twidth: \"30%\",\r\n\t\ttextAlign: \"center\",\r\n\t\tborderRadius: \"0 0 25px 25px\",\r\n\t\tlineHeight: \"1\", \r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tbackground: \"black\",\r\n\t\t\twidth: \"100vw\",\r\n\t\t\tpadding: \"20px 0\",\r\n\t\t\tborderRadius: 0,\r\n\t\t\tmargin: 0\r\n\t\t}\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetView.js",["1190","1191","1192","1193","1194","1195","1196"],"import {\r\n\tGrid, makeStyles,\r\n\tuseMediaQuery\r\n} from \"@material-ui/core\";\r\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\r\nimport VerticalSplitRoundedIcon from \"@material-ui/icons/VerticalSplitRounded\";\r\nimport clsx from \"clsx\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useLocation, useParams } from \"react-router\";\r\nimport {\r\n\tgetAssetExtended,\r\n\tgetShortAddress\r\n} from \"../../../api/assetsApi\";\r\nimport { getServerError, updateQueryParams } from \"../../../api/genericApi\";\r\nimport { updateLocation } from \"../../../api/locationsApi\";\r\nimport { SnackbarContext } from \"../../../context/SnackbarContext\";\r\nimport { UpsertContext } from \"../../../context/UpsertContext\";\r\nimport { useQuery } from \"../../reuseables/customHooks/useQuery\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport { ReturnToPrevios } from \"../../reuseables/ReturnToPrevious\";\r\nimport { UserItem } from \"../../user/UserItem\";\r\nimport { AssetControls } from \"./AssetControls\";\r\nimport { FaultsGrid } from \"./tableViews/FaultsGrid\";\r\nimport { LocationsGrid } from \"./tableViews/LocationsGrid\";\r\nimport { ResidentsGrid } from \"./tableViews/ResidentsGrid\";\r\nimport { SystemsGrid } from \"./tableViews/SystemsGrid\";\r\nimport { TasksGrid } from \"./tableViews/TasksGrid\";\r\n\r\nconst modules = [\"systems\", \"locations\", \"faults\", \"tasks\", \"residents\"];\r\n\r\nexport const AssetView = ({}) => {\r\n\tconst classes = useStyles();\r\n\tconst params = useParams();\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst { t } = useTranslation();\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst { setUpsertData } = useContext(UpsertContext); \r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [asset, setAsset] = useState(null);\r\n\tconst [module, setModule] = useState(\"systems\");\r\n\tconst [editMode, setEditMode] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetAssetExtended(params.assetId)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tif (!res || [403, 500].includes(res.status)) {\r\n\t\t\t\t\thistory.push(\"/workspace/assets\");\r\n\t\t\t\t\tsetSnackbar(res || getServerError());\r\n\t\t\t\t}\r\n\t\t\t\tsetAsset(res);\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tsetIsLoading(false); \r\n\t\t\t\tif (query.tab) return;\r\n\t\t\t\thistory.replace(`${location.pathname}?tab=systems`);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\r\n\tconst toggleEditMode = () => {\r\n\t\tsetUpsertData({ itemId: asset._id, module: 'assets' })\r\n\t};\r\n\r\n\tconst handleTabChange = (tabName) => (event) => {\r\n\t\thistory.push({\r\n\t\t\tpath: location.pathname,\r\n\t\t\tsearch: updateQueryParams(\r\n\t\t\t\tlocation.search,\r\n\t\t\t\t[{ name: \"tab\", value: tabName }],\r\n\t\t\t\t[]\r\n\t\t\t),\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleUpdateLocation = async (details) => {\r\n\t\tupdateLocation(details).then((res) => {\r\n\t\t\tif ([403, 500].includes(res.status)) {\r\n\t\t\t\tsetSnackbar(res);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\thistory.replace(`${location.pathname}?tab=locations`);\r\n\t\t});\r\n\t};\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress />\r\n\t) : (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t<Grid item xs={12} className={classes.gridItem}></Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\r\n\t\t\t\t\t<div className={classes.controlsContainer}>\r\n\t\t\t\t\t\t<AssetControls\r\n\t\t\t\t\t\t\tremoveAsset={() => null}\r\n\t\t\t\t\t\t\ttoggleEditMode={toggleEditMode}\r\n\t\t\t\t\t\t\tdata={asset}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ReturnToPrevios />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.addressContainer}>\r\n\t\t\t\t\t\t<div className={classes.addressMain}>{getShortAddress(asset)}</div>\r\n\t\t\t\t\t\t<div className={classes.addressSecondary}>\r\n\t\t\t\t\t\t\t{`${asset.address.country}, ${asset.address.zipcode}`}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.extraDetails}>\r\n\t\t\t\t\t\t{asset.addInfo.floors ? (\r\n\t\t\t\t\t\t\t<div className={clsx(classes.type, classes.floor)}>\r\n\t\t\t\t\t\t\t\t<VerticalSplitRoundedIcon className={classes.typeIcon} />\r\n\t\t\t\t\t\t\t\t<div className={classes.typeDetails}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.typeData}>\r\n\t\t\t\t\t\t\t\t\t\t{`${asset.addInfo.floors} ${t(\"assetsModule.floors\")}`}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t{asset.addInfo.floor ? (\r\n\t\t\t\t\t\t\t<div className={clsx(classes.type, classes.floor)}>\r\n\t\t\t\t\t\t\t\t<VerticalSplitRoundedIcon className={classes.typeIcon} />\r\n\t\t\t\t\t\t\t\t<div className={classes.typeDetails}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.typeData}>\r\n\t\t\t\t\t\t\t\t\t\t{`${t(\"assetsModule.floor\")} ${asset.addInfo.floor}`}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t{asset.addInfo.unit ? (\r\n\t\t\t\t\t\t\t<div className={clsx(classes.type, classes.unit)}>\r\n\t\t\t\t\t\t\t\t<HomeRoundedIcon className={classes.typeIcon} />\r\n\t\t\t\t\t\t\t\t<div className={classes.typeDetails}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.typeData}>\r\n\t\t\t\t\t\t\t\t\t\t{`${t(\"assetsModule.unit\")} ${asset.addInfo.unit}`}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t{asset.addInfo.units ? (\r\n\t\t\t\t\t\t\t<div className={clsx(classes.type, classes.units)}>\r\n\t\t\t\t\t\t\t\t<HomeRoundedIcon className={classes.typeIcon} />\r\n\t\t\t\t\t\t\t\t<div className={classes.typeDetails}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.typeData}>\r\n\t\t\t\t\t\t\t\t\t\t{`${asset.addInfo.units} ${t(\"assetsModule.units\")}`}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t<div className={classes.ownerContainer}>\r\n\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\tuser={asset.owner}\r\n\t\t\t\t\t\t\tshowTitle\r\n\t\t\t\t\t\t\tshowPhone\r\n\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\tavatarSize={matches ? 50 : 70}\r\n\t\t\t\t\t\t\tsize={matches ? 11 : 13}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.queryGrid}>\r\n\t\t\t\t\t<div className={classes.querySelector}>\r\n\t\t\t\t\t\t{modules.map((md, i) => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\tclasses.moduleBtn,\r\n\t\t\t\t\t\t\t\t\tquery.tab === md ? classes.active : null\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tonClick={handleTabChange(md)}\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{t(`sideMenu.${md}`)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container className={classes.tableGrid} justify=\"center\">\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tmd={10}\r\n\t\t\t\t\t\tlg={10}\r\n\t\t\t\t\t\txl={8}\r\n\t\t\t\t\t\tclassName={classes.tableContainer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{query.tab === \"systems\" ? (\r\n\t\t\t\t\t\t\t<SystemsGrid assetId={asset._id} />\r\n\t\t\t\t\t\t) : query.tab === \"faults\" ? (\r\n\t\t\t\t\t\t\t<FaultsGrid assetId={asset._id} />\r\n\t\t\t\t\t\t) : query.tab === \"tasks\" ? (\r\n\t\t\t\t\t\t\t<TasksGrid assetId={asset._id} />\r\n\t\t\t\t\t\t) : query.tab === \"locations\" ? (\r\n\t\t\t\t\t\t\t<LocationsGrid\r\n\t\t\t\t\t\t\t\tassetId={asset._id}\r\n\t\t\t\t\t\t\t\thandleUpdateLocation={handleUpdateLocation}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : query.tab === \"residents\" ? (\r\n\t\t\t\t\t\t\t<ResidentsGrid assetId={asset._id} />\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tgridItem: {\r\n\t\tposition: \"relative\",\r\n\t},\r\n\tcontrolsContainer: {\r\n\t\tpadding: \"20px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px\",\r\n\t\t},\r\n\t},\r\n\taddressContainer: {\r\n\t\tpadding: \"10px 50px\",\r\n\t\ttextAlign: \"center\",\r\n\t\tbackground: \"black\",\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"50px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tmargin: \"10px auto\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"16px\",\r\n\t\t\tpadding: \"3px\",\r\n\t\t\tpadding: \"10px 30px\",\r\n\t\t},\r\n\t},\r\n\taddressMain: {\r\n\t\tfontSize: \"20px\",\r\n\t\tpadding: \"5px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"16px\",\r\n\t\t\tpadding: \"3px\",\r\n\t\t},\r\n\t},\r\n\taddressSecondary: {\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"5px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"13px\",\r\n\t\t\tpadding: \"3px\",\r\n\t\t},\r\n\t},\r\n\textraDetails: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\theight: \"30px\",\r\n\t\tborderRadius: \"25px\",\r\n\t\tbackground: theme.palette.primary.main,\r\n\t\twidth: \"fit-content\",\r\n\t\tboxShadow: \"rgba(0,0,0,0.4) 0px 0px 5px 2px\",\r\n\t\tmargin: \"10px auto\",\r\n\t\tfontSize: \"18px\",\r\n\t\tpadding: \"5px 10px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"14px\",\r\n\t\t\tpadding: \"3px 10px\",\r\n\t\t},\r\n\t},\r\n\ttype: {\r\n\t\tposition: \"relative\",\r\n\t\tdisplay: \"flex\",\r\n\t\tpadding: \"5px 10px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tbackground: \"transparent\",\r\n\t\tcolor: \"white\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\ttypeIcon: {\r\n\t\tfontSize: \"24px\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\ttypeData: {\r\n\t\tpadding: \"0 10px 0 10px\",\r\n\t\tlineHeight: 1,\r\n\t},\r\n\townerContainer: {\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\twidth: \"fit-content\",\r\n\t\tpadding: \"10px 40px 10px 10px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tmargin: \"0 auto\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"7px 30px 7px 7px\",\r\n\t\t},\r\n\t},\r\n\tqueryGrid: {\r\n\t\toverflowX: \"overlay\",\r\n\t\twidth: \"100%\",\r\n\t\t\"&::-webkit-scrollbar\": {\r\n\t\t\tdisplay: \"none\",\r\n\t\t},\r\n\t\tmargin: \"10px 0\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"0\",\r\n\t\t},\r\n\t},\r\n\tquerySelector: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\twidth: \"fit-content\",\r\n\t\tmargin: \"0 auto\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborder: \"solid rgba(255,255,255,0.2)\",\r\n\t\t\tborderWidth: \"1px 0\",\r\n\t\t},\r\n\t},\r\n\tmoduleBtn: {\r\n\t\tcolor: \"rgba(255,255,255,0.6)\",\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"10px 30px\",\r\n\t\tmargin: \"3px\",\r\n\t\tcursor: \"pointer\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"13px\",\r\n\t\t\tpadding: \"8px 20px\",\r\n\t\t},\r\n\t},\r\n\tactive: {\r\n\t\tcolor: \"white\",\r\n\t\tbackground: \"black\",\r\n\t\tborder: \"2px solid white\",\r\n\t},\r\n\ttableContainer: {\r\n\t\tmargin: \"20px 0\",\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tborderRadius: \"10px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: \"0px\",\r\n\t\t\tmargin: \"0\",\r\n\t\t},\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\SystemsGrid.js",["1197","1198"],"import { Grid, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { getAssetData } from \"../../../../api/assetsApi\";\r\nimport { getServerError, removeQueryParam } from \"../../../../api/genericApi\";\r\nimport { SnackbarContext } from \"../../../../context/SnackbarContext\";\r\nimport { LoadingProgress } from \"../../../reuseables/LoadingProgress\";\r\nimport { UserItem } from \"../../../user/UserItem\";\r\n\r\nexport const SystemsGrid = ({ assetId }) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst { t } = useTranslation();\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [systems, setSystems] = useState([]);\r\n\tconst [faults, setFaults] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetAssetData(assetId, \"systems\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (!res || [403, 500].includes(res.status)) {\r\n\t\t\t\t\thistory.push({\r\n\t\t\t\t\t\tpath: location.pathname,\r\n\t\t\t\t\t\tsearch: removeQueryParam(location.search, \"tab\"),\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetSnackbar(res || getServerError());\r\n\t\t\t\t}\r\n\t\t\t\tsetSystems(res.systems);\r\n\t\t\t\tsetFaults(res.faults);\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t});\r\n\t}, []);\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress />\r\n\t) : (\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Grid container className={classes.headersContainer} justify=\"center\">\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t{t(\"systemsModule.systemName\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t{t(\"systemsModule.ownerHeader\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t{t(\"systemsModule.faults\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t{systems.length\r\n\t\t\t\t? systems.map((sys, i) => (\r\n\t\t\t\t\t\t<Grid container className={classes.rowContainer} justify=\"center\">\r\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t<div className={classes.cellData}>{sys.name}</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t<div className={clsx(classes.cellData, classes.userContainer)}>\r\n\t\t\t\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\t\t\t\tuser={sys.owner}\r\n\t\t\t\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\t\t\t\tavatarSize={matches ? 0 : 40}\r\n\t\t\t\t\t\t\t\t\t\tsize={matches ? 11 : 13}\r\n\t\t\t\t\t\t\t\t\t\tcolumn={matches}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t<div className={clsx(classes.cellData, classes.openFaults)}>\r\n\t\t\t\t\t\t\t\t\t{`${faults.reduce(\r\n\t\t\t\t\t\t\t\t\t\t(val, f) => (f.system == sys._id ? val + 1 : val),\r\n\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t)} ${t(\"mapModule.openFaults\")}`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t  ))\r\n\t\t\t\t: \"no rows\"}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\theadersContainer: {\r\n\t\tbackground: \"black\",\r\n\t\tborderBottom: \"2px solid rgba(255,255,255,0.2)\",\r\n\t\tposition: \"sticky\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\ttop: 0,\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: \"0px\",\r\n\t\t},\r\n\t},\r\n\theaderContainer: {\r\n\t\tcolor: \"white\",\r\n\t\ttextAlign: \"center\",\r\n\t\tpadding: \"15px 10px 10px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"13px\",\r\n\t\t},\r\n\t},\r\n\trowContainer: {\r\n\t\tpadding: \"5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.1)\",\r\n\t},\r\n\tcellGrid: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tcellData: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"fit-content\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"12px\",\r\n\t\t},\r\n\t},\r\n\tuserContainer: {\r\n\t\tminWidth: \"150px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tminWidth: \"fit-content\",\r\n\t\t},\r\n\t},\r\n\topenFaults: {\r\n\t\tbackground: \"#e53935\",\r\n\t\tpadding: \"5px 10px\",\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tfontSize: \"14px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"11px\",\r\n\t\t},\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\FaultsGrid.js",["1199"],"import {\r\n\tGrid, makeStyles, useMediaQuery\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { getAssetData } from \"../../../../api/assetsApi\";\r\nimport { getServerError, removeQueryParam } from \"../../../../api/genericApi\";\r\nimport { SnackbarContext } from \"../../../../context/SnackbarContext\";\r\nimport { ItemLink } from \"../../../reuseables/ItemLink\";\r\nimport { LoadingProgress } from \"../../../reuseables/LoadingProgress\";\r\nimport { StatusTag } from \"../../../reuseables/StatusTag\";\r\n\r\nexport const FaultsGrid = ({ assetId }) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst { t } = useTranslation();\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\tconst [ isLoading, setIsLoading ] = useState(true);\r\n\tconst [ faults, setFaults ] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetAssetData(assetId, 'faults')\r\n\t\t.then(res => {\r\n\t\t\tif (!res || [403, 500].includes(res.status)) {\r\n\t\t\t\thistory.push({\r\n\t\t\t\t\tpath: location.pathname,\r\n\t\t\t\t\tsearch: removeQueryParam(location.search, 'tab'),\r\n\t\t\t\t});\r\n\t\t\t\tsetSnackbar(res || getServerError());\r\n\t\t\t};\r\n\t\t\tsetFaults(res.faults)\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tsetIsLoading(false)\r\n\t\t})\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\tisLoading ? \r\n\t\t<LoadingProgress /> :\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Grid container className={classes.headersContainer} justify=\"center\">\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t{t(\"faultsModule.faultId\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t{t(\"faultsModule.title\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t{t(\"faultsModule.status\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t{faults.length\r\n\t\t\t\t? faults.map((fault, i) => (\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\tclassName={classes.rowContainer}\r\n\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t<div className={classes.cellData}>\r\n\t\t\t\t\t\t\t\t\t<ItemLink\r\n\t\t\t\t\t\t\t\t\t\titemId={fault.faultId}\r\n\t\t\t\t\t\t\t\t\t\tmodule={\"faults\"}\r\n\t\t\t\t\t\t\t\t\t\tsize={matches ? 13 : 16}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t<div className={clsx(classes.cellData)}>\r\n\t\t\t\t\t\t\t\t\t{fault.description}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t<div className={clsx(classes.cellData)}>\r\n\t\t\t\t\t\t\t\t\t<StatusTag\r\n\t\t\t\t\t\t\t\t\t\tstatus={fault.status}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"fault\"\r\n\t\t\t\t\t\t\t\t\t\tsize={matches ? 11 : 13}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t  ))\r\n\t\t\t\t: \"no rows\"}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\theadersContainer: {\r\n\t\tbackground: \"black\",\r\n\t\tborderBottom: \"2px solid rgba(255,255,255,0.2)\",\r\n\t\tposition: \"sticky\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\ttop: 0,\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: \"0px\",\r\n\t\t},\r\n\t},\r\n\theaderContainer: {\r\n\t\tcolor: \"white\",\r\n\t\ttextAlign: \"center\",\r\n\t\tpadding: \"15px 10px 10px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"13px\",\r\n\t\t},\r\n\t},\r\n\trowContainer: {\r\n\t\tpadding: \"5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.1)\",\r\n\t},\r\n\tcellGrid: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tcellData: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"fit-content\",\r\n\t\ttextAlign: \"center\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"12px\",\r\n\t\t},\r\n\t},\r\n\tuserContainer: {\r\n\t\tminWidth: \"150px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tminWidth: \"fit-content\",\r\n\t\t},\r\n\t},\r\n\topenFaults: {\r\n\t\tbackground: \"#e53935\",\r\n\t\tpadding: \"5px 10px\",\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tfontSize: \"14px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"11px\",\r\n\t\t},\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\TasksGrid.js",["1200"],"import { Grid, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { getAssetData } from \"../../../../api/assetsApi\";\r\nimport { getServerError, removeQueryParam } from \"../../../../api/genericApi\";\r\nimport { SnackbarContext } from \"../../../../context/SnackbarContext\";\r\nimport { ItemLink } from \"../../../reuseables/ItemLink\";\r\nimport { LoadingProgress } from \"../../../reuseables/LoadingProgress\";\r\nimport { StatusTag } from \"../../../reuseables/StatusTag\";\r\n\r\nexport const TasksGrid = ({ assetId }) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst { t } = useTranslation();\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [tasks, setTasks] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetAssetData(assetId, \"tasks\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (!res || [403, 500].includes(res.status)) {\r\n\t\t\t\t\thistory.push({\r\n\t\t\t\t\t\tpath: location.pathname,\r\n\t\t\t\t\t\tsearch: removeQueryParam(location.search, \"tab\"),\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetSnackbar(res || getServerError());\r\n\t\t\t\t}\r\n\t\t\t\tsetTasks(res.tasks);\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress />\r\n\t) : (\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Grid container className={classes.headersContainer} justify=\"center\">\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t{t(\"tasksModule.taskId\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t{t(\"tasksModule.title\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t{t(\"tasksModule.status\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t{tasks.length\r\n\t\t\t\t? tasks.map((task, i) => (\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\tclassName={classes.rowContainer}\r\n\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t<div className={classes.cellData}>\r\n\t\t\t\t\t\t\t\t\t<ItemLink\r\n\t\t\t\t\t\t\t\t\t\titemId={task.taskId}\r\n\t\t\t\t\t\t\t\t\t\tmodule={\"tasks\"}\r\n\t\t\t\t\t\t\t\t\t\tsize={matches ? 13 : 16}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t<div className={clsx(classes.cellData)}>\r\n\t\t\t\t\t\t\t\t\t{task.description}\r\n\t\t\t\t\t\t\t\t\t{/* <UserItem \r\n                                    user={sys.owner}\r\n                                    showName\r\n                                    avatarSize={matches ? 0 : 40}\r\n                                    size={matches ? 11 : 13}\r\n                                    column={matches}\r\n                                /> */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t<div className={clsx(classes.cellData)}>\r\n\t\t\t\t\t\t\t\t\t<StatusTag\r\n\t\t\t\t\t\t\t\t\t\tstatus={task.status}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"task\"\r\n\t\t\t\t\t\t\t\t\t\tsize={matches ? 11 : 13}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t  ))\r\n\t\t\t\t: \"no rows\"}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\theadersContainer: {\r\n\t\tbackground: \"black\",\r\n\t\tborderBottom: \"2px solid rgba(255,255,255,0.2)\",\r\n\t\tposition: \"sticky\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\ttop: 0,\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: \"0px\",\r\n\t\t},\r\n\t},\r\n\theaderContainer: {\r\n\t\tcolor: \"white\",\r\n\t\ttextAlign: \"center\",\r\n\t\tpadding: \"15px 10px 10px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"13px\",\r\n\t\t},\r\n\t},\r\n\trowContainer: {\r\n\t\tpadding: \"5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.1)\",\r\n\t},\r\n\tcellGrid: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tcellData: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"fit-content\",\r\n\t\ttextAlign: \"center\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"12px\",\r\n\t\t},\r\n\t},\r\n\tuserContainer: {\r\n\t\tminWidth: \"150px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tminWidth: \"fit-content\",\r\n\t\t},\r\n\t},\r\n\topentasks: {\r\n\t\tbackground: \"#e53935\",\r\n\t\tpadding: \"5px 10px\",\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tfontSize: \"14px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"11px\",\r\n\t\t},\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\locations\\UpsertLocation.js",["1201","1202","1203","1204"],"import {\r\n\tAvatar,\r\n\tChip,\r\n\tFormHelperText,\r\n\tGrid,\r\n\tmakeStyles,\r\n\tMenuItem,\r\n\tSelect,\r\n\tTextField,\r\n} from \"@material-ui/core\";\r\nimport { ClearRounded } from \"@material-ui/icons\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getFullName } from \"../../../api/genericApi\";\r\nimport { checkLocationName, getLocationData } from \"../../../api/locationsApi\";\r\nimport { getAssetsSuggestions } from \"../../../api/systemsApi\";\r\nimport { createUserOptions } from \"../../../api/userApi\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { SnackbarContext } from \"../../../context/SnackbarContext\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport { ModalContainer } from \"../../reuseables/ModalContainer\";\r\nimport { UserItem } from \"../../user/UserItem\";\r\n\r\nexport const UpsertLocation = ({\r\n\thandleClose,\r\n\thandleSave,\r\n\thandleUpdate,\r\n\tlocationId,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { t } = useTranslation();\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst [mode, setMode] = useState(locationId ? \"update\" : \"create\");\r\n\tconst [errors, setErrors] = useState([]);\r\n\tconst [assets, setAssets] = useState([]);\r\n\tconst [userList, setUserList] = useState([]);\r\n\tconst [details, setDetails] = useState({\r\n\t\tname: \"\",\r\n\t\tasset: \"\",\r\n\t\trelatedUsers: [],\r\n\t});\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tprepareData();\r\n\t}, []);\r\n\r\n\tconst prepareData = async () => {\r\n\t\tconst [userOptions, assetSuggestions] = await Promise.all([\r\n\t\t\tcreateUserOptions(),\r\n\t\t\tgetAssetsSuggestions(),\r\n\t\t]);\r\n\t\tsetUserList(userOptions);\r\n\t\tsetAssets(assetSuggestions);\r\n\t\tif (!locationId) {\r\n\t\t\tsetIsLoading(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst res = await getLocationData(locationId);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t\thandleClose();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetDetails({\r\n\t\t\trelatedUsers: res.relatedUsers,\r\n\t\t\tname: res.name,\r\n\t\t\tasset: res.asset,\r\n\t\t});\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n\tconst validateFields = () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet errList = [];\r\n\t\t\tif (handleUpdate) resolve(true);\r\n\t\t\tif (!details.asset) {\r\n\t\t\t\terrList.push({ field: \"asset\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (!details.name) {\r\n\t\t\t\terrList.push({ field: \"name\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\r\n\t\t\tif (errList.length) {\r\n\t\t\t\tsetErrors(errList);\r\n\t\t\t\tresolve(false);\r\n\t\t\t}\r\n\t\t\tif (errors.length) {\r\n\t\t\t\tresolve(false);\r\n\t\t\t}\r\n\t\t\tresolve(true);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tvalidateFields().then((res) => {\r\n\t\t\tif (res) {\r\n\t\t\t\tif (mode === \"update\") {\r\n\t\t\t\t\thandleUpdate({ locationId, ...details });\r\n\t\t\t\t\thandleClose();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\thandleSave({ ...details });\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (field) => (event) => {\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\t[field]: event.target.value,\r\n\t\t});\r\n\t\tif (errors.length) {\r\n\t\t\tsetErrors(errors.filter((err) => err.field !== field));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleChangeMultiple = (event) => {\r\n\t\tsetDetails({ ...details, relatedUsers: event.target.value });\r\n\t};\r\n\r\n\tconst handleLinkedRemove = (realtedUser) => (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\trelatedUsers: details.relatedUsers.filter((lu) => lu !== realtedUser),\r\n\t\t});\r\n\t};\r\n\r\n\tconst checkName = (event) => {\r\n\t\tcheckLocationName({ asset: details.asset, name: details.name }).then(\r\n\t\t\t(res) => {\r\n\t\t\t\tif (res) {\r\n\t\t\t\t\tsetErrors([\r\n\t\t\t\t\t\t...errors,\r\n\t\t\t\t\t\t{ field: \"name\", text: t(\"errors.nameAlreadyExists\") },\r\n\t\t\t\t\t]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetErrors(errors.filter((err) => err.field !== \"name\"));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress initial={true} />\r\n\t) : (\r\n\t\t<ModalContainer\r\n\t\t\thandleClose={handleClose}\r\n\t\t\ttitle={\r\n\t\t\t\tmode === \"update\"\r\n\t\t\t\t\t? t(\"locationsModule.updateLocationDetails\")\r\n\t\t\t\t\t: t(\"locationsModule.createLocation\")\r\n\t\t\t}\r\n\t\t\thandleConfirm={handleConfirm}\r\n\t\t>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={12}\r\n\t\t\t\tsm={6}\r\n\t\t\t\tmd={6}\r\n\t\t\t\tlg={6}\r\n\t\t\t\txl={6}\r\n\t\t\t\tclassName={classes.section}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"locationsModule.owningAsset\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `asset`).length > 0}\r\n\t\t\t\t\t\t\t\tvalue={details.asset}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(`asset`)}\r\n\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\tdisablePortal: true,\r\n\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{assets.map((asset, i) => (\r\n\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tvalue={asset.value}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{asset.text}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t{errors.filter((e) => e.field === \"asset\").length > 0 && (\r\n\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#f44336\",\r\n\t\t\t\t\t\t\t\t\t\tmarginRight: \"15px\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{t(\"errors.isRequired\")}\r\n\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={12}\r\n\t\t\t\tsm={6}\r\n\t\t\t\tmd={6}\r\n\t\t\t\tlg={6}\r\n\t\t\t\txl={6}\r\n\t\t\t\tclassName={classes.section}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"locationsModule.locationName\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\tvalue={details.name}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(`name`)}\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\tonBlur={checkName}\r\n\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `name`).length > 0}\r\n\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `name`).length > 0\r\n\t\t\t\t\t\t\t\t\t\t? errors.filter((e) => e.field === `name`)[0].text\r\n\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={12}\r\n\t\t\t\tsm={6}\r\n\t\t\t\tmd={6}\r\n\t\t\t\tlg={7}\r\n\t\t\t\txl={7}\r\n\t\t\t\tclassName={classes.section}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"locationsModule.relatedUsers\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\tvalue={details.relatedUsers}\r\n\t\t\t\t\t\t\tonChange={handleChangeMultiple}\r\n\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\tdisablePortal: true,\r\n\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\trenderValue={(selected) => (\r\n\t\t\t\t\t\t\t\t<div className={classes.chips}>\r\n\t\t\t\t\t\t\t\t\t{selected.map((value) => {\r\n\t\t\t\t\t\t\t\t\t\tlet user = userList.find(\r\n\t\t\t\t\t\t\t\t\t\t\t(f) => f._id === value || f._id === value._id\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.chipsCont}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclickable\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tavatar={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: \"40px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"40px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={user.avatar}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={getFullName(user)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={getFullName(user)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonDelete={handleLinkedRemove(value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteIcon={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ClearRounded className={classes.removeIcon} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={(e) => e.stopPropagation()}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{userList.map((user, i) => (\r\n\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\tvalue={user.value}\r\n\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.userCont}>\r\n\t\t\t\t\t\t\t\t\t\t<UserItem showName user={user} avatarSize={40} size={14} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</ModalContainer>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ticonBtn: {\r\n\t\tmargin: \"10px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"20px\",\r\n\t},\r\n\tsection: {\r\n\t\tmargin: \"10px 5px\",\r\n\t},\r\n\tsectionTitle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"7px 20px\",\r\n\t\tmarginLeft: \"25px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tborderRadius: \"8px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tmarginLeft: \"15px\",\r\n\t\t},\r\n\t},\r\n\tfields: {\r\n\t\tpadding: \"10px 20px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px\",\r\n\t\t},\r\n\t},\r\n\ttextContainer: {\r\n\t\tpadding: \"5px\",\r\n\t},\r\n\ttextField: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tselectInput: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmarginRight: \"7px\",\r\n\t\tmarginLeft: \"-5px\",\r\n\t\tmaxHeight: \"200px\",\r\n\t\toverflowY: \"auto\",\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"100%\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\t},\r\n\t},\r\n\tcontrols: {\r\n\t\tborderTop: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"10px 0\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t},\r\n\tcontrol: {\r\n\t\twidth: \"30%\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\tfontSize: \"16px\",\r\n\t\tmargin: \"5px\",\r\n\t\tpadding: \"5px 30px\",\r\n\t\tborderRadius: \"30px\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tsave: {\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"black\",\r\n\t\t},\r\n\t\t\"&:disabled\": {\r\n\t\t\tcolor: \"rgba(255,255,255,0.3)\",\r\n\t\t},\r\n\t},\r\n\tcancel: {\r\n\t\t\"&:hover\": {\r\n\t\t\tboxShadow: \"inset rgba(255,255,255,0.3) 0 0 2px 1px\",\r\n\t\t},\r\n\t},\r\n\tchips: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexWrap: \"wrap\",\r\n\t},\r\n\tchip: {\r\n\t\theight: \"50px\",\r\n\t\tfontSize: \"14px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tcolor: \"white\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\t\tboxShadow: \"inset lightgrey 0px 0px 1px 1px\",\r\n\t\t},\r\n\t},\r\n\tuserCont: {\r\n\t\theight: \"fit-content\",\r\n\t\tpadding: 0,\r\n\t\tmargin: 0,\r\n\t\tmargin: \"5px 0\",\r\n\t},\r\n\tchipsCont: {\r\n\t\theight: \"fit-content\",\r\n\t\tpadding: 0,\r\n\t\tmargin: \"3px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\tboxShadow: \"inset rgba(0,0,0,0.5) 0px 0px 2px 1px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjutifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tremoveIcon: {\r\n\t\tcolor: \"rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"5px\",\r\n\t\tmarginRight: \"5px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\t\tcolor: \"white\",\r\n\t\t},\r\n\t},\r\n\tradioGroup: {\r\n\t\tcolor: \"white\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"row\",\r\n\t\talignitems: \"center\",\r\n\t},\r\n\tradioBtn: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"15px\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\locationsApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\LocationsGrid.js",["1205","1206"],"import {\r\n\tAvatar,\r\n\tButton,\r\n\tCollapse,\r\n\tGrid, makeStyles,\r\n\tuseMediaQuery\r\n} from \"@material-ui/core\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport clsx from \"clsx\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { getAssetData } from \"../../../../api/assetsApi\";\r\nimport { getFullName, getServerError, removeQueryParam } from \"../../../../api/genericApi\";\r\nimport { SnackbarContext } from \"../../../../context/SnackbarContext\";\r\nimport { UpsertContext } from \"../../../../context/UpsertContext\";\r\nimport { LoadingProgress } from \"../../../reuseables/LoadingProgress\";\r\nimport { UserItem } from \"../../../user/UserItem\";\r\n\r\n\r\nexport const LocationsGrid = ({ assetId, handleUpdateLocation }) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst { t } = useTranslation();\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst { setUpsertData } = useContext(UpsertContext);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\tconst [ isLoading, setIsLoading ] = useState(true);\r\n\tconst [ locations, setLocations ] = useState([]);\r\n\tconst [ faults, setFaults ] = useState([]);\r\n\tconst [expanded, setExpanded] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tprepareData();\r\n\t}, [])\r\n\t\r\n\tconst prepareData = async () => {\r\n\t\tconst res = await getAssetData(assetId, 'locations')\r\n\t\tif (!res || [403, 500].includes(res.status)) {\r\n\t\t\thistory.push({\r\n\t\t\t\tpath: location.pathname,\r\n\t\t\t\tsearch: removeQueryParam(location.search, 'tab'),\r\n\t\t\t});\r\n\t\t\tsetSnackbar(res || getServerError());\r\n\t\t};\r\n\t\tsetLocations(res.locations);\r\n\t\tsetFaults(res.faults);\r\n\t\tsetIsLoading(false)\r\n\t}\r\n\r\n\tconst handleExpanded = (locationId) => {\r\n\t\tif (expanded === locationId) {\r\n\t\t\tsetExpanded(null);\r\n\t\t} else {\r\n\t\t\tsetExpanded(locationId);\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleEditMode = (lcoationId) => event => {\r\n\t\tsetUpsertData({ itemId: lcoationId, module: 'locations' })\r\n\t}\r\n\treturn (\r\n\t\tisLoading ? \r\n\t\t<LoadingProgress /> :\r\n\t\t<React.Fragment>\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Grid container className={classes.headersContainer} justify=\"center\">\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t{t(\"locationsModule.locationName\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t{t(\"locationsModule.relatedUsers\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t{t(\"locationsModule.openFaults\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t{locations.length\r\n\t\t\t\t? locations.map((location, i) => (\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\tclassName={classes.rowContainer}\r\n\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t<div className={classes.cellData}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tendIcon={<EditIcon className={classes.editIcon} />}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.editBtn}\r\n\t\t\t\t\t\t\t\t\t\tonClick={toggleEditMode(location._id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{location.name}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t<div className={clsx(classes.cellData)}>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.relatedUsersContainer}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleExpanded(location._id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{location.relatedUsers.map((ru, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\t\t\t\talt={getFullName(ru)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={ru.avatar}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.ruavatar}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tleft: `${20 * i}px`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: matches ? \"30px\" : \"40px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: matches ? \"30px\" : \"40px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t<div className={clsx(classes.cellData, classes.openFaults)}>\r\n\t\t\t\t\t\t\t\t\t{`${faults.reduce(\r\n\t\t\t\t\t\t\t\t\t\t(val, f) => (f.location == location._id ? val + 1 : val),\r\n\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t)} ${t(\"mapModule.openFaults\")}`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Collapse in={expanded === location._id}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.relatedUsersList}>\r\n\t\t\t\t\t\t\t\t\t{location.relatedUsers.map((rl, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.relatedUser}>\r\n\t\t\t\t\t\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\t\t\t\t\t\tuser={rl}\r\n\t\t\t\t\t\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\t\t\t\t\t\tshowTitle\r\n\t\t\t\t\t\t\t\t\t\t\t\tshowPhone\r\n\t\t\t\t\t\t\t\t\t\t\t\tavatarSize={matches ? 40 : 60}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsize={matches ? 11 : 13}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t  ))\r\n\t\t\t\t: \"no rows\"}\r\n\t\t</Grid>\r\n\t\t</React.Fragment>\r\n\t\t\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\theadersContainer: {\r\n\t\tbackground: \"black\",\r\n\t\tborderBottom: \"2px solid rgba(255,255,255,0.2)\",\r\n\t\tposition: \"sticky\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\ttop: 0,\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: \"0px\",\r\n\t\t},\r\n\t},\r\n\theaderContainer: {\r\n\t\tcolor: \"white\",\r\n\t\ttextAlign: \"center\",\r\n\t\tpadding: \"15px 10px 10px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"13px\",\r\n\t\t},\r\n\t},\r\n\trowContainer: {\r\n\t\tpadding: \"5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.1)\",\r\n\t},\r\n\tcellGrid: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tcellData: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"fit-content\",\r\n\t\ttextAlign: \"center\",\r\n\t\tposition: \"relative\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"12px\",\r\n\t\t},\r\n\t},\r\n\tuserContainer: {\r\n\t\tminWidth: \"150px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tminWidth: \"fit-content\",\r\n\t\t},\r\n\t},\r\n\topenFaults: {\r\n\t\tbackground: \"#e53935\",\r\n\t\tpadding: \"5px 10px\",\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tfontSize: \"14px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"11px\",\r\n\t\t},\r\n\t},\r\n\trelatedUsersContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tposition: \"relative\",\r\n\t\twidth: \"fit-content\",\r\n\t\ttransform: \"translateX(25%)\",\r\n\t},\r\n\truavatar: {\r\n\t\tposition: \"relative\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.4)\",\r\n\t},\r\n\trelatedUsersList: {\r\n\t\tdisplay: \"flex\",\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tmargin: \"5px 0\",\r\n\t\tflexFlow: \"wrap\",\r\n\t\tpadding: \"10px 0\",\r\n\t},\r\n\trelatedUser: {\r\n\t\tpadding: \"10px 20px\",\r\n\t},\r\n\teditBtn: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t\twidth: '100%',\r\n\t\t'&:hover': {\r\n\t\t\tboxShadow: 'none',\r\n\t\t\tbackground: 'transparent'\r\n\t\t},\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tfontSize: '13px',\r\n\t\t}\r\n\t},\r\n\teditIcon: {\r\n\t\tfontSize: '16px'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Residents.js",["1207","1208","1209","1210"],"import { Avatar, Grid, IconButton, List, ListItem, makeStyles, Tooltip } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getFullName } from '../../../api/genericApi';\r\nimport { filterUsers, getResidentList } from '../../../api/userApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { SnackbarContext } from '../../../context/SnackbarContext';\r\nimport { Can } from '../../reuseables/Can';\r\nimport { LoadingProgress } from '../../reuseables/LoadingProgress';\r\nimport { SearchBox } from '../../reuseables/SearchBox';\r\nimport { UpsertUser } from './UpsertUser';\r\n\r\nexport const Residents = () => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { auth, setAuth } = useContext(AuthContext);\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst [userList, setUserList] = useState([]);\r\n\tconst [users, setUsers] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n    const [addUser, setAddUser] = useState(null);\r\n    const [editUser, setEditUser] = useState(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isLoading) return;\r\n\t\tgetResidentList()\r\n\t\t\t.then((res) => {\r\n\t\t\t\r\n\t\t\t\tif (res.status === 403) {\r\n\t\t\t\t\tsetSnackbar(res);\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t} else if (res) {\r\n\t\t\t\t\tsetUserList(res);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.finally(() => setIsLoading(false));\r\n\t}, [isLoading]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetUsers(userList);\r\n\t}, [userList]);\r\n\r\n\tconst handleSearch = async (searchText) => {\r\n\t\tif (!searchText) {\r\n\t\t\tsetUsers(userList);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst filtered = await filterUsers(userList, searchText);\r\n\t\tsetUsers(filtered);\r\n\t};\r\n\r\n    const closeAddEdit = () => {\r\n        setAddUser(false);\r\n        setEditUser(false);\r\n    }\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress initial={true} />\r\n\t) : (\r\n\t\t<Grid container className={classes.usersContainer}>\r\n\t\t\t<Grid item xs={10} className={classes.gridSearch}>\r\n\t\t\t\t<SearchBox placeholder={t(\"users.filterByName\")} filterField={'sss'} returnValue={handleSearch} />\r\n\t\t\t</Grid>\r\n\t\t\t<Can module=\"users\" action=\"create\">\r\n\t\t\t\t<Grid item xs={2} className={classes.controls}>\r\n\t\t\t\t\t<Tooltip title={t('users.addUser')}>\r\n\t\t\t\t\t\t<IconButton className={classes.controlBtn} onClick={() => setAddUser(true)}>\r\n\t\t\t\t\t\t\t<AddIcon className={classes.controlIcon} />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Can>\r\n\r\n\t\t\t<Grid item xs={12} className={classes.userGrid}>\r\n\t\t\t\t<List className={classes.userList}>\r\n\t\t\t\t\t{!users.length ? (\r\n\t\t\t\t\t\t<div className={classes.noUsersFound}>{t(\"users.noResidentsFound\")}</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tusers.map((u, i) => (\r\n\t\t\t\t\t\t\t<ListItem className={classes.listRow} key={i}>\r\n\t\t\t\t\t\t\t\t<Grid container className={classes.midGrid}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} sm={4} md={2} className={classes.avatarContainer}>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar src={u.avatar} className={classes.avatar} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={8} sm={8} md={10} className={classes.dataContainer}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container className={classes.rowData} justify=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={12} md={3} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.fullName}>{getFullName(u)}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.role}>{u.role.roleName}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={12} md={3} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.phoneNumber}>{u.phoneNumber}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={12} md={6} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.employedBy}>{u.employedBy}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Can module='users' action='update'>\r\n\t\t\t\t\t\t\t\t\t<IconButton \r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.editBtn}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setEditUser(u._id)}    \r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<EditIcon className={classes.editIcon} />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Can>\r\n                                \r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t)}\r\n\t\t\t\t</List>\r\n\t\t\t</Grid>\r\n\t\t\t{(addUser || editUser) &&\r\n            <UpsertUser \r\n                handleClose={() => closeAddEdit(false)} \r\n                userId={editUser}\r\n\t\t\t\treloadUsers={setIsLoading} \r\n            />}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tusersContainer: {\r\n\t\theight: '100%',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: 'calc(100% - 50px)'\r\n\t\t}\r\n\t},\r\n\tcontrols: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '20px 10px',\r\n\t},\r\n\tcontrolBtn: {\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmargin: '5px',\r\n\t\tpadding: '10px',\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t},\r\n\teditBtn: {\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmargin: '5px',\r\n\t\tpadding: '10px',\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tposition: 'absolute',\r\n\t\tleft: '5px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\ttop: '5px',\r\n\t\t\tleft: 'unset',\r\n\t\t\tright: '5px',\r\n\t\t},\r\n\t\t[theme.breakpoints.down('xs')]: {\r\n\t\t\tpadding: '7px',\r\n\t\t},\r\n\t},\r\n\teditIcon: {\r\n\t\tfontSize: '20px',\r\n\t\t[theme.breakpoints.down('xs')]: {\r\n\t\t\tfontSize: '16px',\r\n\t\t},\r\n\t},\r\n\tcontrolIcon: {\r\n\t\tfontSize: '24px',\r\n\t},\r\n\tuserGrid: {\r\n\t\theight: '100%'\r\n\t},\r\n\tuserList: {\r\n\t\tborderTop: '1px solid rgba(255,255,255,0.2)',\r\n\t\theight: 'calc(100% - 113px)',\r\n\t\toverflowY: 'overlay'\r\n\t},\r\n\tlistRow: {\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tposition: 'relative',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\t},\r\n\t},\r\n\tmidGrid: {\r\n\t\tpadding: '10px 0',\r\n\t},\r\n\tdataContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tgridItem: {\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\t[theme.breakpoints.down('xs')]: {\r\n\t\t\talignItems: 'flex-start',\r\n\t\t\tpaddingLeft: '10px',\r\n\t\t},\r\n\t},\r\n\tavatar: {\r\n\t\theight: '50px',\r\n\t\twidth: '50px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: '80px',\r\n\t\t\twidth: '80px',\r\n\t\t},\r\n\t},\r\n\trole: {\r\n\t\tfontSize: '14px',\r\n\t\tcolor: 'rgba(255,255,255,0.7)',\r\n\t},\r\n\tavatarContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\talignItems: 'center',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tpadding: '10px',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t},\r\n\t},\r\n\tphoneNumber: {\r\n\t\tpadding: '10px 20px',\r\n\t\tbackground: 'black',\r\n\t\tborderRadius: '50px',\r\n\t\tmargin: '10px 0',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tgridSearch: {\r\n\t\talignItems: 'center',\r\n\t\tpadding: '20px',\r\n\t},\r\n\tnoUsersFound: {\r\n\t\tbackground: 'black',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '10px 30px',\r\n\t\tcolor: 'white',\r\n\t\twidth: 'fit-content',\r\n\t\tmargin: '10px'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\ResidentsGrid.js",["1211"],"import {\r\n\tGrid, makeStyles, useMediaQuery\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { getAssetData } from \"../../../../api/assetsApi\";\r\nimport { getServerError, removeQueryParam } from \"../../../../api/genericApi\";\r\nimport { SnackbarContext } from \"../../../../context/SnackbarContext\";\r\nimport { LoadingProgress } from \"../../../reuseables/LoadingProgress\";\r\nimport { UserItem } from \"../../../user/UserItem\";\r\n\r\nexport const ResidentsGrid = ({ assetId }) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst { t } = useTranslation();\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\tconst [ isLoading, setIsLoading ] = useState(true);\r\n\tconst [ residents, setResidents ] = useState([]);\r\n\r\n    useEffect(() => {\r\n\t\tgetAssetData(assetId, 'residents')\r\n\t\t.then(res => {\r\n\t\t\tif (!res || [403, 500].includes(res.status)) {\r\n\t\t\t\thistory.push({\r\n\t\t\t\t\tpath: location.pathname,\r\n\t\t\t\t\tsearch: removeQueryParam(location.search, 'tab'),\r\n\t\t\t\t});\r\n\t\t\t\tsetSnackbar(res || getServerError());\r\n\t\t\t};\r\n\t\t\tsetResidents(res.residents);\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tsetIsLoading(false)\r\n\t\t})\r\n\t}, [])\r\n\r\n\treturn (\r\n        isLoading ? \r\n        <LoadingProgress /> :\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Grid container className={classes.headersContainer} justify=\"center\">\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t{t(\"users.resident\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t{t(\"users.upsert.unitNumber\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t{t(\"users.isOwnerResident\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t{residents.length\r\n\t\t\t\t? residents.map((resident, i) => (\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\tclassName={classes.rowContainer}\r\n\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t<div className={classes.cellData}>\r\n\t\t\t\t\t\t\t\t\t<UserItem \r\n                                        user={resident}\r\n                                        showName\r\n                                        showPhone\r\n                                        avatarSize={matches ? 0 : 40}\r\n                                        size={matches ? 11 : 13}\r\n                                        column={matches}\r\n                                    />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t<div className={clsx(classes.cellData)}>\r\n\t\t\t\t\t\t\t\t\t{resident.data.unitNumber}\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t<div className={clsx(classes.cellData)}>\r\n\t\t\t\t\t\t\t\t\t{resident.data.isOwner ? t(`users.owner`) : resident.data.isResident ? t(`users.owner`) : t('general.no')}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t  ))\r\n\t\t\t\t: \"no rows\"}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\theadersContainer: {\r\n\t\tbackground: \"black\",\r\n\t\tborderBottom: \"2px solid rgba(255,255,255,0.2)\",\r\n\t\tposition: \"sticky\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\ttop: 0,\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: \"0px\",\r\n\t\t},\r\n\t},\r\n\theaderContainer: {\r\n\t\tcolor: \"white\",\r\n\t\ttextAlign: \"center\",\r\n\t\tpadding: \"15px 10px 10px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"13px\",\r\n\t\t},\r\n\t},\r\n\trowContainer: {\r\n\t\tpadding: \"5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.1)\",\r\n\t},\r\n\tcellGrid: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tcellData: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"fit-content\",\r\n\t\ttextAlign: \"center\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"12px\",\r\n\t\t},\r\n\t},\r\n\tuserContainer: {\r\n\t\tminWidth: \"150px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tminWidth: \"fit-content\",\r\n\t\t},\r\n\t},\r\n\topenFaults: {\r\n\t\tbackground: \"#e53935\",\r\n\t\tpadding: \"5px 10px\",\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tfontSize: \"14px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"11px\",\r\n\t\t},\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\Dashboard.js",["1212","1213","1214"],"import { Grid, makeStyles } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useLocation, useRouteMatch } from \"react-router\";\r\nimport { getAsset, getFullAddress } from \"../../../api/assetsApi\";\r\nimport { getDashboardData } from \"../../../api/dashboardApi\";\r\nimport { removeQueryParam } from \"../../../api/genericApi\";\r\nimport { getAssetsSuggestions } from \"../../../api/systemsApi\";\r\nimport { useQuery } from \"../../reuseables/customHooks/useQuery\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport { SearchBoxSelect } from \"../../reuseables/SearchBoxSelect\";\r\nimport { AverageTimeToClose } from \"./charts/AverageTimeToClose\";\r\nimport { LastOperations } from \"./charts/LastOperations\";\r\nimport { OpenItems } from \"./charts/OpenItems\";\r\nimport { PendingFaults } from \"./charts/PendingFaults\";\r\nimport { UpcomingTasks } from \"./charts/UpcomingTasks\";\r\n\r\nexport const Dashboard = () => {\r\n\tconst { path } = useRouteMatch();\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst classes = useStyles();\r\n\tconst query = useQuery(location.search);\r\n\tconst { t } = useTranslation();\r\n\tconst [data, setData] = useState(null);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [reloadedValue, setReloadedValue] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (query.asset) {\r\n\t\t\thandleReloaded(query.asset).then((data) => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetReloadedValue(data);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetReloadedValue({\r\n\t\t\t\tlabel: \"\",\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\thistory.push({\r\n\t\t\t\tpath: location.pathname,\r\n\t\t\t\tsearch: removeQueryParam(location.search, \"asset\"),\r\n\t\t\t});\r\n\t\t}\r\n\t\tsetIsLoading(true);\r\n\t}, [location.search]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDashboardData({ asset: query.asset })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetData(res);\r\n\t\t\t})\r\n\t\t\t.finally(() => setIsLoading(false));\r\n\t}, [isLoading]);\r\n\r\n\tconst handleReloaded = async (assetId) => {\r\n\t\tconst res = await getAsset(assetId, false);\r\n\t\tif (res) {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: getFullAddress(res),\r\n\t\t\t\tvalue: res._id,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress />\r\n\t) : (\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Grid item xs={12} className={classes.moduleContainer}>\r\n\t\t\t\t<div className={classes.pageModule}>{t(\"sideMenu.dashboard\")}</div>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={12}\r\n\t\t\t\tclassName={clsx(classes.griditem, classes.filtersGrid)}\r\n\t\t\t>\r\n\t\t\t\t<SearchBoxSelect\r\n\t\t\t\t\tsuggestionsFunc={getAssetsSuggestions}\r\n\t\t\t\t\tplaceholder={t(\"filters.filterByAsset\")}\r\n\t\t\t\t\tfilterField={\"asset\"}\r\n\t\t\t\t\treloadedLabel={reloadedValue.label}\r\n\t\t\t\t\treloadedValue={reloadedValue.value}\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txl={8}\r\n\t\t\t\tlg={6}\r\n\t\t\t\txs={12}\r\n\t\t\t\tclassName={clsx(classes.griditem, classes.sideGrid)}\r\n\t\t\t>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<OpenItems openFaults={data.openFaults} openTasks={data.openTasks} />\r\n\t\t\t\t\t<AverageTimeToClose data={data.avgTimeToClose} />\r\n\t\t\t\t\t<PendingFaults pendingFaults={data.pendingFaults} />\r\n\t\t\t\t\t<UpcomingTasks upcomingTasks={data.upcomingTasks} />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txl={4}\r\n\t\t\t\tlg={6}\r\n\t\t\t\txs={12}\r\n\t\t\t\tclassName={clsx(classes.griditem, classes.lastOperations)}\r\n\t\t\t>\r\n\t\t\t\t<LastOperations operations={data.lastOperations} />\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={12}\r\n\t\t\t\tclassName={clsx(classes.griditem, classes.bottomGrid)}\r\n\t\t\t></Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tfiltersGrid: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tmargin: \"20px 0 0\",\r\n\t},\r\n\tmoduleContainer: {\r\n\t\tposition: \"sticky\",\r\n\t\ttop: 0,\r\n\t\tzIndex: 2,\r\n\t},\r\n\tpageModule: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px 40px\",\r\n\t\tfontSize: \"16px\",\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tboxShadow: \"0 0px 2px 1px rgba(255,255,255,0.3)\",\r\n\t\tmargin: \"0px auto 5px\",\r\n\t\twidth: \"30%\",\r\n\t\ttextAlign: \"center\",\r\n\t\tborderRadius: \"0 0 25px 25px\",\r\n\t\tlineHeight: \"1\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tbackground: \"black\",\r\n\t\t\twidth: \"100vw\",\r\n\t\t\tpadding: \"20px 0\",\r\n\t\t\tborderRadius: 0,\r\n\t\t\tmargin: 0,\r\n\t\t},\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\dashboardApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\LastOperations.js",["1215"],"import { Grid, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LanguageContext } from \"../../../../context/LanguageContext\";\r\nimport { StatusTag } from \"../../../reuseables/StatusTag\";\r\nimport { UserItem } from \"../../../user/UserItem\";\r\nimport DoubleArrowIcon from \"@material-ui/icons/DoubleArrow\";\r\nimport TransferWithinAStationRoundedIcon from \"@material-ui/icons/TransferWithinAStationRounded\";\r\nimport GroupAddRoundedIcon from \"@material-ui/icons/GroupAddRounded\";\r\nimport AddCommentRoundedIcon from \"@material-ui/icons/AddCommentRounded\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { getFullName } from \"../../../../api/genericApi\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n// import { FaultView } from './FaultView';\r\n// import { FaultViews } from './FaultViews';\r\n\r\nexport const LastOperations = ({ operations }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst [ops, setOps] = useState(operations);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\r\n\tuseEffect(() => {\r\n\t\tsetOps(operations);\r\n\t}, [operations]);\r\n\r\n\tconst getOperationMade = (op) => {\r\n\t\tif (op.actionType === 'addComment') {\r\n\t\t\tif (!op.payload.comment.text && op.payload.comment.image) {\r\n\t\t\t\treturn `${t(`dashboard.addCommentWithImage`).replace(\"%%itemid%%\", op.itemData.itemId)}`\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn `${t(`dashboard.${op.actionType}`).replace(\"%%itemid%%\", op.itemData.itemId)}`\r\n\t}\r\n\treturn (\r\n\t\t<Grid container justify=\"center\" className={classes.mainContainer}>\r\n\t\t\t<Grid item xs={12} className={classes.gridHeader}>\r\n\t\t\t\t<div className={classes.header}>{t(\"dashboard.lastOperations\")}</div>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} className={classes.gridData}>\r\n\t\t\t\t{ops.length ? (\r\n\t\t\t\t\tops.map((op, i) => (\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={`/workspace/${op.itemData.module}/${op.itemData.itemId}`}\r\n\t\t\t\t\t\t\tstyle={{ textDecoration: \"none\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className={classes.rowContainer} key={i}>\r\n\t\t\t\t\t\t\t\t<div className={classes.typeGrid}>\r\n\t\t\t\t\t\t\t\t\t<OperationType op={op} />\r\n\t\t\t\t\t\t\t\t\t<div className={classes.rowTime}>\r\n\t\t\t\t\t\t\t\t\t\t{format(parseISO(op.createdAt), lang.dateformat)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.top}>\r\n\t\t\t\t\t\t\t\t\t{matches ? (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className={classes.mobileActionby}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{` ${getFullName(op.actionBy)}`}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t{getOperationMade(op)}\r\n\t\t\t\t\t\t\t\t\t\t\t<OperationItem op={op} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.userContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuser={op.actionBy}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tavatarSize={30}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={10}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tshowTitle={matches ? false : true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.operationMade}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{getOperationMade(op)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.operationItem}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<OperationItem op={op} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className={classes.noData}>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc=\"https://img.icons8.com/ios-filled/100/4a90e2/remove-data.png\"\r\n\t\t\t\t\t\t\tclassName={classes.noDataImage}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className={classes.noDataText}>{t(\"dashboard.noData\")}</div>\r\n\t\t\t\t\t\t<div className={classes.noDataSecondary}>\r\n\t\t\t\t\t\t\t{t(\"dashboard.noDataSecondary\")}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst OperationItem = ({ op }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\r\n\tif (op.actionType === \"statusChange\" && op.payload.status) {\r\n\t\treturn matches ? (\r\n\t\t\tt(\r\n\t\t\t\t`${op.itemData.module.substr(\r\n\t\t\t\t\t0,\r\n\t\t\t\t\top.itemData.module.length - 1\r\n\t\t\t\t)}sModule.statuses.${op.payload.status.statusId}`\r\n\t\t\t)\r\n\t\t) : (\r\n\t\t\t<div className={classes.statusContainer}>\r\n\t\t\t\t{\r\n\t\t\t\t\t<StatusTag\r\n\t\t\t\t\t\tstatus={op.payload.status}\r\n\t\t\t\t\t\ttype={op.itemData.module.substr(0, op.itemData.module.length - 1)}\r\n\t\t\t\t\t\tsize={matches ? 10 : 12}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else if (\r\n\t\t[\"ownerChange\"].includes(op.actionType) &&\r\n\t\t(op.payload.owner)\r\n\t) {\r\n\t\treturn matches ? (\r\n\t\t\t<span style={{ fontWidth: '800'}}>\r\n\t\t\t\t{` ${getFullName(op.payload.owner)}`}\r\n\t\t\t</span>\r\n\t\t\t\r\n\t\t) : (\r\n\t\t\t<div className={classes.userContainer}>\r\n\t\t\t\t<UserItem\r\n\t\t\t\t\tuser={op.payload.owner || op.payload.relatedUser}\r\n\t\t\t\t\tshowName\r\n\t\t\t\t\tavatarSize={30}\r\n\t\t\t\t\tsize={10}\r\n\t\t\t\t\tshowPhone\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else if (op.actionType === \"detailsUpdate\" && op.payload) {\r\n\t\treturn null;\r\n\t} else if (op.actionType === \"addComment\" && op.payload.comment.text) {\r\n\t\treturn matches ? (\r\n\t\t\t<div className={classes.commentContainer}>\r\n\t\t\t\t{op.payload.comment.text}\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t<div className={classes.commentContainer}>\r\n\t\t\t\t{op.payload.comment.text}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nconst OperationType = ({ op }) => {\r\n\tconst { t } = useTranslation();\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.typeContainer}>\r\n\t\t\t{op.actionType === \"statusChange\" ? (\r\n\t\t\t\t<DoubleArrowIcon className={classes.typeIcon} />\r\n\t\t\t) : op.actionType === \"ownerChange\" ? (\r\n\t\t\t\t<TransferWithinAStationRoundedIcon className={classes.typeIcon} />\r\n\t\t\t) : op.actionType === \"relatedUserAdded\" ? (\r\n\t\t\t\t<GroupAddRoundedIcon className={classes.typeIcon} />\r\n\t\t\t) : op.actionType === \"addComment\" ? (\r\n\t\t\t\t<AddCommentRoundedIcon className={classes.typeIcon} />\r\n\t\t\t) : op.actionType === \"detailsUpdate\" ? (\r\n\t\t\t\t<EditRoundedIcon className={classes.typeIcon} />\r\n\t\t\t) : op.actionType === \"itemCreated\" ? (\r\n\t\t\t\t<AddIcon className={classes.typeIcon} />\r\n\t\t\t) : null}\r\n\t\t\t{t(`dashboard.actionTypes.${op.actionType}`)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\theight: \"800px\",\r\n\t\tpadding: \"20px 20px\",\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n\t\t\theight: \"80vh\",\r\n            position: 'sticky',\r\n            top: '98px',\r\n            width: '50vw',\r\n\t\t    padding: \"20px 20px\",\r\n\t\t},\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px 0\",\r\n\t\t\theight: \"auto\"\r\n\t\t},\r\n\t},\r\n\tgridHeader: {\r\n\t\tbackground: \"black\",\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\theight: \"60px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: 0,\r\n\t\t\tposition: \"sticky\",\r\n\t\t\ttop: '58px'\r\n\t\t},\r\n\t},\r\n\theader: {\r\n\t\tfontSize: \"18px\",\r\n\t\tpadding: \"20px 20px 0\"\r\n\t},\r\n\tgridData: {\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\tborderRadius: \"0 0 10px 10px\",\r\n\t\theight: \"calc(100% - 60px)\",\r\n\t\toverflow: \"auto\",\r\n\t\t\"&::-webkit-scrollbar\": {\r\n\t\t\twidth: \"0em\",\r\n\t\t},\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\toverflow: \"hidden\",\r\n\t\t},\r\n\t},\r\n\trowContainer: {\r\n\t\tpadding: \"10px 10px 10px\",\r\n\t\tborderBottom: \"1px solid rgba(0,0,0,0.3)\",\r\n\t},\r\n\ttop: {\r\n\t\tdisplay: \"flex\",\r\n\t},\r\n\tuserContainer: {\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"5px 20px 5px 5px\",\r\n\t\theight: 'fit-content',\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"5px 20px 5px 5px\",\r\n\t\t},\r\n\t},\r\n\toperationMade: {\r\n\t\tfontSize: \"13px\",\r\n\t\tcolor: \"white\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\ttextAlign: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tpadding: \"10px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"11px\",\r\n\t\t},\r\n\t},\r\n\toperationItem: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tcommentContainer: {\r\n\t\tfontSize: \"13px\",\r\n\t\tcolor: \"white\",\r\n\t\tbackground: \"rgba(0,0,0,0.7)\",\r\n\t\tpadding: \"7px 20px\",\r\n\t\tborderRadius: \"5px\",\r\n\t\twidth: 'fit-content',\r\n\t\tmargin: '5px'\r\n\t},\r\n\trowTime: {\r\n\t\ttextAlign: \"right\",\r\n\t\tcolor: \"rgba(255,255,255,0.4)\",\r\n\t\tfontSize: \"12px\",\r\n\t},\r\n\ttypeGrid: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tmarginBottom: \"10px\",\r\n\t},\r\n\ttypeContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tfontSize: \"11px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tpadding: \"3px 20px 3px 5px\",\r\n\t},\r\n\ttypeIcon: {\r\n\t\tborderRadius: \"50px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tfontSize: \"14px\",\r\n\t\tpadding: \"3px\",\r\n\t\tmarginRight: \"5px\",\r\n\t},\r\n\ttextContainer: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"13px\",\r\n\t},\r\n\tnoData: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\ttextAlign: \"center\",\r\n\t\tmarginTop: \"35px\",\r\n\t},\r\n\tnoDataText: {\r\n\t\tpadding: \"20px\",\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"22px\",\r\n\t},\r\n\tnoDataSecondary: {\r\n\t\tpadding: \"0px 30px\",\r\n\t\tfontSize: \"14px\",\r\n\t\tcolor: \"rgba(255,255,255,0.5)\",\r\n\t},\r\n\tmobileActionby: {\r\n\t\tfontWeight: '600',\r\n\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\OpenItems.js",["1216","1217","1218","1219"],"import { Grid, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LanguageContext } from \"../../../../context/LanguageContext\";\r\nimport clsx from \"clsx\";\r\n\r\nexport const OpenItems = ({ openFaults, openTasks }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\r\n\treturn (\r\n\t\t<Grid item xl={6} xs={12} className={classes.mainContainer}>\r\n\t\t\t<Grid container justify=\"center\" className={classes.container}>\r\n\t\t\t\t<ItemsCard items={openFaults} module={\"faults\"} />\r\n\t\t\t\t<ItemsCard items={openTasks} module={\"tasks\"} />\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst ItemsCard = ({ items, module }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\r\n\treturn (\r\n\t\t<Grid item xs={6} className={classes.cardContainer}>\r\n\t\t\t<div className={clsx(classes.moduleContainer, classes[module])}>\r\n\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t{t(`dashboard.open${module}`)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.totalContainer}>{items.total}</div>\r\n\t\t\t\t<div className={classes.statusesContainer}>\r\n\t\t\t\t\t{items.byStatus.map((bs, i) => (\r\n\t\t\t\t\t\t<div className={classes.rowContainer}>\r\n\t\t\t\t\t\t\t<div className={classes.stName}>\r\n\t\t\t\t\t\t\t\t{t(`${module}Module.statuses.${bs.statusId}`)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.stCount}>{bs.count}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcardContainer: {\r\n\t\tpadding: '20px 20px',\r\n        height: '360px',\r\n        color: 'white',\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: '20px 10px',\r\n            height: '300px'\r\n\t\t},\r\n\t},\r\n    moduleContainer: {\r\n        height: '100%',\r\n        borderRadius: '10px',\r\n        padding: '20px'\r\n    },\r\n    faults: {\r\n        background: 'linear-gradient(180deg, hsla(0, 70%, 56%, 1) 0%, hsla(0, 70%, 56%, 0) 100%)',\r\n    },\r\n    tasks: {\r\n        background: 'linear-gradient(180deg, hsla(234, 64%, 61%, 1) 0%, hsla(234, 64%, 61%, 0) 100%)', \r\n    },\r\n    headerContainer: {\r\n        fontSize: '20px',\r\n        textAlign: 'center',\r\n        padding: '10px',\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            fontSize: '16px',\r\n\t\t},\r\n    },\r\n    totalContainer: {\r\n        textAlign: 'center',\r\n        fontSize: '36px',\r\n        marginBottom: '20px'\r\n    },\r\n    statusesContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start'\r\n    },\r\n    rowContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        padding: '10px 20px',\r\n        width: '90%',\r\n        fontSize: '14px',\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            fontSize: '12px',\r\n\t\t},\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\AverageTimeToClose.js",["1220","1221","1222","1223","1224"],"import { Grid, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LanguageContext } from \"../../../../context/LanguageContext\";\r\nimport GaugeChart from \"react-gauge-chart\";\r\nimport clsx from \"clsx\";\r\n\r\nexport const AverageTimeToClose = ({ data }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\r\n    const getLabelText = (p) => {\r\n        if ( p < 60 ) {\r\n            return `${p.toFixed(0)} ${t(\"dates.minutes\")}`\r\n        } else if (p < 2880) {\r\n            return `${(p / 60).toFixed(0)} ${t(\"dates.hours\")}`\r\n        } else {\r\n            return `${(p / 1440).toFixed(0)} ${t(\"dates.days\")}`\r\n\r\n        }\r\n    }\r\n\r\n    const getPercentaeMarker = (data) => {\r\n        return data.avg / (data.max + data.min);\r\n    }\r\n\r\n\treturn (\r\n\t\t<Grid item xl={6} xs={12} className={classes.mainContainer}>\r\n\t\t\t<Grid container justify=\"center\" className={classes.container}>\r\n\t\t\t\t<Grid item xs={12} className={classes.gridHeader}>\r\n\t\t\t\t\t<div className={classes.header}>{t(\"dashboard.avgTimeToClose\")}</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.gridData}>\r\n                    {\r\n                        (data.avg) ?\r\n                        <React.Fragment>\r\n                            <div className={classes.gaugeContainer}>\r\n\t\t\t\t\t\t<GaugeChart\r\n\t\t\t\t\t\t\tnrOfLevels={20}\r\n\t\t\t\t\t\t\tcolors={[\"#15F800\", \"#F70000\"]}\r\n\t\t\t\t\t\t\tarcWidth={0.3}\r\n                            percent={getPercentaeMarker(data)}\r\n\t\t\t\t\t\t\tformatTextValue={() => getLabelText(data.avg)}\r\n\t\t\t\t\t\t\tcornerRadius={10}\r\n\t\t\t\t\t\t\tstyle={{ width: 375 }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.labelsContainer}>           \r\n                        <div className={classes.label}>{getLabelText(data.max)}</div> \r\n                        <div className={classes.label}>{getLabelText(data.min)}</div>   \r\n\t\t\t\t\t</div>\r\n                    <div className={classes.gaugeText}>\r\n                        {`* ${t(\"dashboard.gaugeText\")}`}\r\n                    </div>\r\n                        </React.Fragment> :\r\n                        <div className={classes.noData}>\r\n                            <img src=\"https://img.icons8.com/ios-filled/100/4a90e2/remove-data.png\" className={classes.noDataImage}/>\r\n                            <div className={classes.noDataText}>\r\n                                {t(\"dashboard.noData\")}\r\n                            </div>\r\n                            <div className={classes.noDataSecondary}>\r\n                                {t(\"dashboard.noDataSecondary\")}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\t\t\t\t\t\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {},\r\n\tcontainer: {\r\n\t\tpadding: \"20px 20px\",\r\n\t\theight: \"400px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px 0\",\r\n\t\t},\r\n\t},\r\n\tgridHeader: {\r\n\t\tbackground: \"black\",\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\theight: \"60px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: 0,\r\n\t\t},\r\n\t},\r\n\theader: {\r\n\t\tfontSize: \"18px\",\r\n\t\tpadding: \"20px 20px 0\",\r\n\t},\r\n\tgridData: {\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\tborderRadius: \"0 0 10px 10px\",\r\n\t\theight: \"calc(100% - 60px)\",\r\n\t\tdisplay: \"flex\",\r\n        flexDirection: 'column',\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: \"0\",\r\n\t\t},\r\n\t},\r\n\tgaugeContainer: {\r\n\t\twidth: \"fit-content\",\r\n\t},\r\n\tgauge: {\r\n\t\t\r\n\t},\r\n    labelsContainer: {\r\n        display: 'flex',\r\n        color: 'white',\r\n        width: '265px',\r\n        justifyContent: 'space-between',\r\n        padding: '0 55px'\r\n    },\r\n    label: {\r\n        fontSize: '18px'\r\n    },\r\n    gaugeText: {\r\n        textAlign: 'right',\r\n        fontSize: '12px',\r\n        color: 'rgba(255,255,255,0.5)',\r\n        margin: '10px auto 0px 10px'\r\n    },\r\n    noData: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        textAlign: 'center'\r\n    },\r\n    noDataText: {\r\n        padding: '20px',\r\n        color: 'white',\r\n        fontSize: '22px'\r\n    },\r\n    noDataSecondary: {\r\n        padding: '0px 30px',\r\n        fontSize: '14px',\r\n        color: 'rgba(255,255,255,0.5)'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\PendingFaults.js",["1225","1226","1227"],"import { Grid, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LanguageContext } from \"../../../../context/LanguageContext\";\r\nimport GaugeChart from \"react-gauge-chart\";\r\nimport clsx from \"clsx\";\r\nimport { StatusTag } from \"../../../reuseables/StatusTag\";\r\nimport { ItemLink } from \"../../../reuseables/ItemLink\";\r\nimport { differenceInMinutes, parseISO } from \"date-fns\";\r\n\r\nexport const PendingFaults = ({ pendingFaults }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\tconst [pfs, setPfs] = useState(pendingFaults);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetPfs(pendingFaults);\r\n\t}, [pendingFaults]);\r\n\r\n\tconst calculateTimePending = (pf) => {\r\n\t\tlet p = differenceInMinutes(new Date(), parseISO(pf.changeStatusDate));\r\n\t\tif (p < 60) {\r\n\t\t\treturn `${p.toFixed(0)} ${t(\"dates.minutes\")}`;\r\n\t\t} else if (p < 2880) {\r\n\t\t\treturn `${(p / 60).toFixed(0)} ${t(\"dates.hours\")}`;\r\n\t\t} else {\r\n\t\t\treturn `${(p / 1440).toFixed(0)} ${t(\"dates.days\")}`;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid item xl={6} xs={12} className={classes.mainContainer}>\r\n\t\t\t<Grid container justify=\"center\" className={classes.container}>\r\n\t\t\t\t<Grid item xs={12} className={classes.gridHeader}>\r\n\t\t\t\t\t<div className={classes.header}>\r\n\t\t\t\t\t\t{t(\"dashboard.pendingFaults\")}\r\n\t\t\t\t\t\t<div className={classes.statusHeaderContainer}>\r\n\t\t\t\t\t\t\t<StatusTag\r\n\t\t\t\t\t\t\t\tstatus={{ statusId: \"pending\" }}\r\n\t\t\t\t\t\t\t\ttype=\"fault\"\r\n\t\t\t\t\t\t\t\tsize={13}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.gridData}>\r\n\t\t\t\t\t{pfs.length ? (\r\n\t\t\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\tclassName={classes.headersContainer}\r\n\t\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.headerGrid}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"faultsModule.faultId\")}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.headerGrid}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"faultsModule.title\")}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.headerGrid}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"dashboard.timePending\")}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t{pfs.map((pf, i) => (\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\t\tclassName={classes.rowContainer}\r\n\t\t\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.cellData}>\r\n\t\t\t\t\t\t\t\t\t\t\t<ItemLink\r\n\t\t\t\t\t\t\t\t\t\t\t\titemId={pf.faultData.faultId}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmodule={\"faults\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsize={matches ? 13 : 16}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={clsx(classes.cellData)}>\r\n\t\t\t\t\t\t\t\t\t\t\t{pf.faultData.title}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={clsx(classes.cellData)}>\r\n\t\t\t\t\t\t\t\t\t\t\t{calculateTimePending(pf)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className={classes.noData}>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc=\"https://img.icons8.com/ios-filled/100/4a90e2/remove-data.png\"\r\n\t\t\t\t\t\t\t\tclassName={classes.noDataImage}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className={classes.noDataText}>{t(\"dashboard.noData\")}</div>\r\n\t\t\t\t\t\t\t<div className={classes.noDataSecondary}>\r\n\t\t\t\t\t\t\t\t{t(\"dashboard.noDataSecondary\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {},\r\n\tcontainer: {\r\n\t\tpadding: \"20px 20px\",\r\n\t\theight: \"400px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px 0\",\r\n\t\t\theight: \"auto\",\r\n\t\t},\r\n\t},\r\n\tgridHeader: {\r\n\t\tbackground: \"black\",\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\theight: \"60px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: 0,\r\n\t\t},\r\n\t},\r\n\theader: {\r\n\t\tfontSize: \"18px\",\r\n\t\tpadding: \"15px 20px 0\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tgridData: {\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\tborderRadius: \"0 0 10px 10px\",\r\n\t\theight: \"calc(100% - 60px)\",\r\n\t\toverflow: 'auto',\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: \"0\"\r\n\t\t},\r\n\t},\r\n\tstatusHeaderContainer: {\r\n\t\tpadding: \"0 10px\",\r\n\t},\r\n\theadersContainer: {\r\n\t\tbackground: \"rgba(255,255,255,0.2)\",\r\n\t\tborderBottom: \"2px solid rgba(255,255,255,0.2)\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tbackground: \"#575757\",\r\n\t\t\tposition: \"sticky\",\r\n\t\t\ttop: \"60px\"\r\n\t\t},\r\n\t},\r\n\theaderContainer: {\r\n\t\tcolor: \"white\",\r\n\t\ttextAlign: \"center\",\r\n\t\tpadding: \"15px 10px 10px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"13px\",\r\n\t\t},\r\n\t},\r\n\theaderGrid: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center'\r\n\t},\r\n\trowContainer: {\r\n\t\tpadding: \"10px 5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.1)\",\r\n\t},\r\n\tcellGrid: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tcellData: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"fit-content\",\r\n\t\ttextAlign: \"center\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"12px\",\r\n\t\t},\r\n\t},\r\n\tnoData: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\ttextAlign: \"center\",\r\n\t\tmarginTop: \"35px\",\r\n\t},\r\n\tnoDataText: {\r\n\t\tpadding: \"20px\",\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"22px\",\r\n\t},\r\n\tnoDataSecondary: {\r\n\t\tpadding: \"0px 30px\",\r\n\t\tfontSize: \"14px\",\r\n\t\tcolor: \"rgba(255,255,255,0.5)\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\UpcomingTasks.js",["1228","1229","1230","1231","1232"],"import { Grid, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LanguageContext } from \"../../../../context/LanguageContext\";\r\nimport GaugeChart from \"react-gauge-chart\";\r\nimport clsx from \"clsx\";\r\nimport { StatusTag } from \"../../../reuseables/StatusTag\";\r\nimport { ItemLink } from \"../../../reuseables/ItemLink\";\r\nimport { differenceInMinutes, format, parseISO } from \"date-fns\";\r\n\r\nexport const UpcomingTasks = ({ upcomingTasks }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\r\n\treturn (\r\n\t\t<Grid item xl={6} xs={12} className={classes.mainContainer}>\r\n\t\t\t<Grid container justify=\"center\" className={classes.container}>\r\n\t\t\t\t<Grid item xs={12} className={classes.gridHeader}>\r\n\t\t\t\t\t<div className={classes.header}>{t(\"dashboard.upcomingTasks\")}</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.gridData}>\r\n\t\t\t\t\t{upcomingTasks.length ? (\r\n\t\t\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\tclassName={classes.headersContainer}\r\n\t\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.headerGrid}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"tasksModule.taskId\")}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.headerGrid}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"tasksModule.title\")}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.headerGrid}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"scheduler.nextIteration\")}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t{upcomingTasks.map((ut, i) => (\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\t\tclassName={classes.rowContainer}\r\n\t\t\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.cellData}>\r\n\t\t\t\t\t\t\t\t\t\t\t<ItemLink\r\n\t\t\t\t\t\t\t\t\t\t\t\titemId={ut.data.taskId}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmodule={\"tasks\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsize={matches ? 13 : 16}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={clsx(classes.cellData)}>\r\n\t\t\t\t\t\t\t\t\t\t\t{ut.data.title}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={clsx(classes.cellData)}>\r\n\t\t\t\t\t\t\t\t\t\t\t{format(parseISO(ut.date), lang.dateonly)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className={classes.noData}>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc=\"https://img.icons8.com/ios-filled/100/4a90e2/remove-data.png\"\r\n\t\t\t\t\t\t\t\tclassName={classes.noDataImage}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className={classes.noDataText}>{t(\"dashboard.noData\")}</div>\r\n\t\t\t\t\t\t\t<div className={classes.noDataSecondary}>\r\n\t\t\t\t\t\t\t\t{t(\"dashboard.noDataSecondary\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {},\r\n\tcontainer: {\r\n\t\tpadding: \"20px 20px\",\r\n\t\theight: \"400px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px 0\",\r\n\t\t\theight: \"auto\",\r\n\t\t},\r\n\t},\r\n\tgridHeader: {\r\n\t\tbackground: \"black\",\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\theight: \"60px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: 0,\r\n\t\t\tposition: \"sticky\",\r\n\t\t\ttop: \"0px\",\r\n\t\t},\r\n\t},\r\n\theader: {\r\n\t\tfontSize: \"18px\",\r\n\t\tpadding: \"20px 20px 0\",\r\n\t},\r\n\tgridData: {\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\tborderRadius: \"0 0 10px 10px\",\r\n\t\theight: \"calc(100% - 60px)\",\r\n\t\toverflow: 'auto',\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: \"0\",\r\n\t\t},\r\n\t},\r\n\tstatusHeaderContainer: {\r\n\t\tpadding: \"0 10px\",\r\n\t},\r\n\theadersContainer: {\r\n\t\tbackground: \"rgba(255,255,255,0.2)\",\r\n\t\tborderBottom: \"2px solid rgba(255,255,255,0.2)\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n            background: \"#575757\",\r\n\t\t\tposition: \"sticky\",\r\n\t\t\ttop: '60px',\r\n\t\t}\r\n\t},\r\n\theaderContainer: {\r\n\t\tcolor: \"white\",\r\n\t\ttextAlign: \"center\",\r\n\t\tpadding: \"15px 10px 10px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"13px\",\r\n\t\t},\r\n\t},\r\n    headerGrid: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center'\r\n\t},\r\n\trowContainer: {\r\n\t\tpadding: \"10px 5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.1)\",\r\n\t},\r\n\tcellGrid: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tcellData: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"fit-content\",\r\n\t\ttextAlign: \"center\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"12px\",\r\n\t\t},\r\n\t},\r\n\tnoData: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\ttextAlign: \"center\",\r\n        marginTop: '35px'\r\n\t},\r\n\tnoDataText: {\r\n\t\tpadding: \"20px\",\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"22px\",\r\n\t},\r\n\tnoDataSecondary: {\r\n\t\tpadding: \"0px 30px\",\r\n\t\tfontSize: \"14px\",\r\n\t\tcolor: \"rgba(255,255,255,0.5)\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\user\\PasswordRecovery.js",["1233","1234","1235","1236","1237","1238","1239","1240","1241","1242","1243","1244","1245"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport {\r\n\tContainer,\r\n\tGrid,\r\n\tBox,\r\n\tTypography,\r\n\tFormControl,\r\n\tOutlinedInput,\r\n\tInputAdornment,\r\n\tInputLabel,\r\n\tIconButton,\r\n\tButton,\r\n\tLink,\r\n\tCircularProgress,\r\n\tmakeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff, Error } from \"@material-ui/icons\";\r\nimport {\r\n\tattemptToSignin,\r\n\thandleLS,\r\n\tsendRecoveryEmail,\r\n} from \"../../api/userApi\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LanguageContext } from \"../../context/LanguageContext\";\r\nimport { getLocalization } from \"../../api/genericApi\";\r\nimport { ChangeLanguage } from \"../reuseables/ChangeLanguage\";\r\n\r\nexport const PasswordRecovery = () => {\r\n\tconst classes = useStyles();\r\n\tconst loginButton = useRef();\r\n\tconst history = useHistory();\r\n\tconst { t } = useTranslation();\r\n\tconst [userEmail, setUserEmail] = useState(\"\");\r\n\tconst [emailSent, setEmailSent] = useState(false);\r\n\r\n\tconst [errors, setErrors] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetUserEmail(event.target.value);\r\n\t\tif (errors.length) {\r\n\t\t\tsetErrors([]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSubmit = async () => {\r\n\t\tsetIsLoading(true);\r\n\t\tlet isValid = await validateFields();\r\n\t\tif (isValid) {\r\n\t\t\tconst checkUser = await sendRecoveryEmail(userEmail);\r\n\t\t\tif (checkUser.status === 404) {\r\n\t\t\t\tsetErrors([{ field: \"userEmail\", message: t(\"errors.emailNotFound\") }]);\r\n\t\t\t} else {\r\n\t\t\t\tconst { response } = checkUser;\r\n\t\t\t\tif (response.includes(\"OK\")) {\r\n\t\t\t\t\tsetEmailSent(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n\tconst validateFields = async () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet errs = [];\r\n\t\t\tif (!userEmail) {\r\n\t\t\t\terrs.push({ field: \"userEmail\", message: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (errs.length) {\r\n\t\t\t\tsetErrors(errs);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\treject(false);\r\n\t\t\t}\r\n\t\t\tresolve(true);\r\n\t\t});\r\n\t};\r\n\r\n\tconst checkEnter = (e) => {\r\n\t\tif (e.keyCode === 13) {\r\n\t\t\thandleSubmit();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid container alignItems='center' justify=\"center\" className={classes.mainContainer}>\r\n            \r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\tclassName={classes.loginContainer}\r\n\t\t\t\txl={4}\r\n\t\t\t\tlg={4}\r\n\t\t\t\tmd={6}\r\n\t\t\t\tsm={6}\r\n\t\t\t\txs={11}\r\n\t\t\t>\r\n                <ChangeLanguage className={classes.changeLanguage}/>\r\n\t\t\t\t<Box className={classes.bannerContainer} bgcolor=\"primary.main\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc=\"https://leevstore.blob.core.windows.net/images/leev_logo_transparent.png\"\r\n\t\t\t\t\t\tclassName={classes.logo}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t\t{emailSent ? (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.instructions}>\r\n\t\t\t\t\t\t\t<Typography className={classes.headerText}>\r\n\t\t\t\t\t\t\t\t{`${t(\"login.emailSentSuccessfully\")} ${userEmail}`}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.submitContainer}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={() => history.push('/login')}\r\n\t\t\t\t\t\t\t>\t\r\n\t\t\t\t\t\t\t\t\t{t(\"login.backToLogin\")}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.headerContainer}>\r\n\t\t\t\t\t\t\t<Typography className={classes.header}>\r\n\t\t\t\t\t\t\t\t{t(\"login.recoverPassword\")}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.instructions}>\r\n\t\t\t\t\t\t\t<Typography className={classes.headerText}>\r\n\t\t\t\t\t\t\t\t{t(\"login.recoverPasswordText\")}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography className={classes.headerText}>\r\n\t\t\t\t\t\t\t\t{t(\"login.recoveryInstructions\")}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.inputsContainer}>\r\n\t\t\t\t\t\t\t<FormControl variant=\"outlined\" className={classes.textInput} autoComplete={\"off\"}>\r\n\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-input-email\">\r\n\t\t\t\t\t\t\t\t\t{t(\"login.email\")}\r\n\t\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === \"userEmail\").length > 0\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tid=\"outlined-input-email\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tvalue={userEmail}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\tlabelWidth={50}\r\n\t\t\t\t\t\t\t\t\tonKeyDown={checkEnter}\r\n                                    autoComplete={\"off\"}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t{errors.length > 0\r\n\t\t\t\t\t\t\t? errors.map((e, i) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Container\r\n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.errorContainer}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Error fontSize=\"inherit\" color={\"error\"} />\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.error}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"error\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{e.message}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.submitContainer}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t\t\tref={loginButton}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t\t\t\t\t<CircularProgress color={\"secondary\"} size={30} />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\tt(\"login.sendEmail\")\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\tmainContainer: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\tposition: \"fixed\",\r\n\t\tbackgroundImage: `url(https://leevstore.blob.core.windows.net/images/grey.jpg)`,\r\n\t\tbackgroundSize: \"cover\",\r\n\t},\r\n\tloginContainer: {\r\n\t\tborderRadius: \"10px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.18)\",\r\n\t\tpadding: \"0\",\r\n\t\tbackground: \"rgba(255, 255, 255, 0.2)\",\r\n\t\tboxShadow: \"0 8px 32px 0 rgb(0 0 0 / 37%)\",\r\n\t\tbackdropFilter: \"blur(8px)\",\r\n\t\t\"-webkit-backdrop-filter\": \"blur( 10px )\",\r\n\t\theight: \"fit-content\"\r\n\t},\r\n\tbannerContainer: {\r\n\t\twidth: \"100%\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\tpadding: \"0\",\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t},\r\n\tbanner: {\r\n\t\tcolor: grey[50],\r\n\t\tfontWeight: 600,\r\n\t\tfontSize: \"24px\",\r\n\t\tposition: \"relative\",\r\n\t\tmargin: \"auto\",\r\n\t\tfontFamily: \"Kaushan\",\r\n\t},\r\n\r\n\theaderContainer: {\r\n\t\twidth: \"100%\",\r\n\t\tdisplay: \"flex\",\r\n\t\tWebkitJustifyContent: \"center\",\r\n\t\tmargin: \"40px 0 0 0\",\r\n\t},\r\n\theaderText: {\r\n\t\ttextAlign: \"center\",\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"12px\",\r\n\t},\r\n\theader: {\r\n\r\n\t\tfontSize: \"24px\",\r\n\t\tfontWeight: \"300\",\r\n\t\theight: \"70%\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\r\n\tinputsContainer: {\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t\tpadding: \"0px 14px 0px\",\r\n\t},\r\n\ttextInput: {\r\n\t\twidth: \"80%\",\r\n\t\t\"& .MuiOutlinedInput-root\": {\r\n\t\t\t\"& input\": {\r\n\t\t\t\tpadding: \"18.5px 28px\",\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tsubmitContainer: {\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t\tpadding: \"14px 14px\",\r\n\t\tmarginBottom: \"40px\",\r\n\t},\r\n\tsubmitButton: {\r\n\t\twidth: \"80%\",\r\n\t\theight: \"50px\",\r\n\t\tmargin: \"auto\",\r\n\t\tposition: \"relative\",\r\n\t\tfontSize: \"16px\",\r\n\t\tborderRadius: \"50px\",\r\n\t},\r\n\tforgotPassContainer: {\r\n\t\twidth: \"100%\",\r\n\t\tpadding: \"0px 64px 60px\",\r\n\t},\r\n\tforgotPass: {\r\n\t\tfontSize: \"14px\",\r\n\t},\r\n\terrorContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"initial\",\r\n\t\twidth: \"75%\",\r\n\t\tpadding: \"0\",\r\n\t\tfontSize: \"18px\",\r\n\t},\r\n\terror: {\r\n\t\tmarginLeft: \"8px\",\r\n\t\tfontSize: \"12px\",\r\n\t},\r\n\tlogo: {\r\n\t\twidth: \"100px\",\r\n\t\theight: \"100px\",\r\n\t},\r\n\tlogoContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\theight: \"fit-content\",\r\n\t},\r\n\tinstructions: {\r\n\t\tmargin: \"20px auto\",\r\n\t\tpadding: \"15px 30px\",\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\twidth: \"fit-content\",\r\n\t\tborderRadius: \"5px\",\r\n        [theme.breakpoints.down('sm')]: {\r\n            borderRadius: \"0px\",\r\n        }\r\n\t},\r\n    changeLanguage: {\r\n        position: 'absolute'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ChangeLanguage.js",["1246"],"import { Button, makeStyles, Menu, MenuItem } from \"@material-ui/core\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { getLocalization } from \"../../api/genericApi\";\r\nimport { LanguageContext } from \"../../context/LanguageContext\";\r\n\r\nconst languages = [\"en\", \"he\"];\r\n\r\nexport const ChangeLanguage = ({ className }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang, setLang } = useContext(LanguageContext);\r\n    const [langMenu, setLangMenu] = useState(false);\r\n\r\n    const changeLanguage = (l) => (event) => {\r\n\t\tsetLang(getLocalization(l))\r\n\t\tsetLangMenu(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={className}>\r\n\t\t\t<Button\r\n\t\t\t\tclassName={classes.changeLanguage}\r\n\t\t\t\tonClick={(e) => setLangMenu(e.target)}\r\n\t\t\t>\r\n\t\t\t\t{lang.code ? lang.code.toUpperCase() : \"\"}\r\n\t\t\t</Button>\r\n\t\t\t<Menu\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tpaper: classes.langMenu,\r\n\t\t\t\t}}\r\n\t\t\t\tkeepMounted\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\thorizontal: \"right\",\r\n\t\t\t\t}}\r\n\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\thorizontal: \"right\",\r\n\t\t\t\t}}\r\n\t\t\t\tanchorEl={langMenu}\r\n\t\t\t\tkeepMounted\r\n\t\t\t\topen={Boolean(langMenu)}\r\n\t\t\t\tonClose={() => setLangMenu(null)}\r\n\t\t\t>\r\n\t\t\t\t{languages.map((l, i) => (\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\tonClick={changeLanguage(l)}\r\n\t\t\t\t\t\tclassName={classes.langItem}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{l.toUpperCase()}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t))}\r\n\t\t\t</Menu>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    langMenu: {\r\n        background: 'transparent',\r\n        backdropFilter: 'blur(10px)',\r\n        \r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n\r\n    },\r\n    changeLanguage: {\r\n        background: 'transparent',\r\n        color: 'white',\r\n        borderRadius: '0',\r\n        height: '70px'\r\n    },\r\n    langItem: {\r\n        color: 'white',\r\n        width: '100%',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.1)'\r\n        }\r\n    },\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\user\\ResetPassword.js",["1247","1248","1249","1250","1251","1252","1253","1254"],"import {\r\n\tBox,\r\n\tButton,\r\n\tCircularProgress,\r\n\tContainer,\r\n\tFormControl,\r\n\tGrid,\r\n\tIconButton,\r\n\tInputAdornment,\r\n\tInputLabel,\r\n\tmakeStyles,\r\n\tOutlinedInput,\r\n\tTypography,\r\n} from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { Error, Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport { changePassword, verifyResetPasswordHandle } from \"../../api/userApi\";\r\nimport { LanguageContext } from \"../../context/LanguageContext\";\r\nimport { ChangeLanguage } from \"../reuseables/ChangeLanguage\";\r\n\r\nexport const ResetPassword = () => {\r\n\tconst classes = useStyles();\r\n\tconst loginButton = useRef();\r\n\tconst location = useLocation();\r\n\tconst history = useHistory();\r\n\tconst params = useParams();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst [userId, setUserId] = useState(null);\r\n\tconst [userEmail, setUserEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(null);\r\n\tconst [verifyPassword, setVerifyPassword] = useState(null);\r\n\tconst [showPassword, setShowPassword] = useState(null);\r\n\tconst [pageError, setPageError] = useState(null);\r\n\tconst [success, setSuccess] = useState(false);\r\n    const [ redirectCounter , setRedirectCounter ] = useState(5);\r\n\r\n\tconst [errors, setErrors] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!success) return;\r\n        const arr = Array.from(Array(5).keys())\r\n        let i = 4;\r\n        let interval = setInterval(() => {\r\n            setRedirectCounter(arr[i]);\r\n            if (i === 0) {\r\n                clearInterval(interval);\r\n                history.push('/login')\r\n            }\r\n            i--;\r\n        }, 1000);\r\n\r\n    }, [success]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (params.handle == 0) {\r\n\t\t\tsetPageError(true);\r\n\t\t\thistory.replace(\"/reset/0\");\r\n\t\t}\r\n\t\tverifyResetPasswordHandle(params.handle).then((res) => {\r\n\t\t\tif (res.err) {\r\n\t\t\t\tsetPageError(true);\r\n\t\t\t\thistory.replace(\"/reset/0\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\thistory.replace(`/reset/resetnow`);\r\n\t\t\tsetUserId(res.data);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst handleChange = (field) => (event) => {\r\n\t\tif (field === \"password\") {\r\n\t\t\tsetPassword(event.target.value);\r\n\t\t} else {\r\n\t\t\tsetVerifyPassword(event.target.value);\r\n\t\t}\r\n\t\tsetErrors([]);\r\n\t};\r\n\r\n\tconst handleSubmit = async () => {\r\n\t\tsetIsLoading(true);\r\n\t\tlet isValid = await validateFields();\r\n\t\tif (isValid) {\r\n\t\t\tconst cp = await changePassword(userId, password);\r\n\t\t\tsetSuccess(true);\r\n\t\t}\r\n\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n\tconst validateFields = async () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet errs = [];\r\n\t\t\tif (!password) {\r\n\t\t\t\terrs.push({ field: \"password\", message: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (!verifyPassword) {\r\n\t\t\t\terrs.push({ field: \"verifyPassword\", message: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (verifyPassword != password) {\r\n\t\t\t\terrs.push({\r\n\t\t\t\t\tfield: \"verifyPassword\",\r\n\t\t\t\t\tmessage: t(\"errors.passwordsDontMatch\"),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (errs.length) {\r\n\t\t\t\tsetErrors(errs);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\treject(false);\r\n\t\t\t}\r\n\t\t\tresolve(true);\r\n\t\t});\r\n\t};\r\n\r\n\tconst checkEnter = (e) => {\r\n\t\tif (e.keyCode === 13) {\r\n\t\t\thandleSubmit();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClickShowPassword = (which) => (event) => {\r\n\t\tif (which === showPassword) {\r\n\t\t\tsetShowPassword(null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetShowPassword(which);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid\r\n\t\t\tcontainer\r\n\t\t\talignItems=\"center\"\r\n\t\t\tjustify=\"center\"\r\n\t\t\tclassName={classes.mainContainer}\r\n\t\t>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\tclassName={classes.loginContainer}\r\n\t\t\t\txl={4}\r\n\t\t\t\tlg={4}\r\n\t\t\t\tmd={6}\r\n\t\t\t\tsm={6}\r\n\t\t\t\txs={11}\r\n\t\t\t>\r\n\t\t\t\t<ChangeLanguage className={classes.changeLanguage} />\r\n\t\t\t\t<Box className={classes.bannerContainer} bgcolor=\"primary.main\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc=\"https://leevstore.blob.core.windows.net/images/leev_logo_transparent.png\"\r\n\t\t\t\t\t\tclassName={classes.logo}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t\t{pageError ? (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.instructions}>\r\n\t\t\t\t\t\t\t<Typography className={classes.headerText}>\r\n\t\t\t\t\t\t\t\t{`${t(\"login.resetFailed\")} ${userEmail}`}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.submitContainer}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={() => history.push(\"/login\")}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{t(\"login.backToLogin\")}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.headerContainer}>\r\n\t\t\t\t\t\t\t<Typography className={classes.header}>\r\n\t\t\t\t\t\t\t\t{t(\"login.passwordRenewal\")}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.instructions}>\r\n\t\t\t\t\t\t\t<Typography className={classes.headerText}>\r\n\t\t\t\t\t\t\t\t{t(\"login.resetPasswordText\")}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.inputsContainer}>\r\n\t\t\t\t\t\t\t<FormControl variant=\"outlined\" className={classes.textInput}>\r\n\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-input-password\">\r\n\t\t\t\t\t\t\t\t\t{t(\"login.newPassword\")}\r\n\t\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === \"password\").length > 0\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tid=\"outlined-input-password\"\r\n\t\t\t\t\t\t\t\t\ttype={showPassword === \"password\" ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange(\"password\")}\r\n\t\t\t\t\t\t\t\t\tlabelWidth={lang.code === \"en\" ? 120 : 95}\r\n\t\t\t\t\t\t\t\t\tonKeyDown={checkEnter}\r\n\t\t\t\t\t\t\t\t\tonCopy={(e) => e.preventDefault()}\r\n\t\t\t\t\t\t\t\t\tendAdornment={\r\n\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"toggle password visibility\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleClickShowPassword(\"password\")}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={(e) => e.preventDefault()}\r\n\t\t\t\t\t\t\t\t\t\t\t\tedge=\"end\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{showPassword === \"password\" ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Visibility />\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<VisibilityOff />\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.inputsContainer}>\r\n\t\t\t\t\t\t\t<FormControl variant=\"outlined\" className={classes.textInput}>\r\n\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-input-password\">\r\n\t\t\t\t\t\t\t\t\t{t(\"login.verifyPassword\")}\r\n\t\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === \"verifyPassword\").length >\r\n\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tid=\"outlined-input-password\"\r\n\t\t\t\t\t\t\t\t\ttype={showPassword === \"verifyPassword\" ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\t\t\tvalue={verifyPassword}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange(\"verifyPassword\")}\r\n\t\t\t\t\t\t\t\t\tlabelWidth={lang.code === \"en\" ? 130 : 95}\r\n\t\t\t\t\t\t\t\t\tonKeyDown={checkEnter}\r\n\t\t\t\t\t\t\t\t\tonPaste={(e) => e.preventDefault()}\r\n\t\t\t\t\t\t\t\t\tendAdornment={\r\n\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"toggle password visibility\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleClickShowPassword(\"verifyPassword\")}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={(e) => e.preventDefault()}\r\n\t\t\t\t\t\t\t\t\t\t\t\tedge=\"end\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{showPassword === \"verifyPassword\" ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Visibility />\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<VisibilityOff />\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t{errors.length > 0\r\n\t\t\t\t\t\t\t? errors.map((e, i) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Container\r\n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.errorContainer}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Error fontSize=\"inherit\" color={\"error\"} />\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.error}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"error\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{e.message}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.submitContainer}>\r\n\t\t\t\t\t\t\t{success ? (\r\n\t\t\t\t\t\t\t\t<div className={classes.success}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.successMessage}>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"login.passwordChangedSuccessfully\")}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.redirectingIn}>\r\n\t\t\t\t\t\t\t\t\t\t{`${t(\"login.redirectingToLogin\")} ${redirectCounter} ${t(\"dates.seconds\")}...`}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t\t\t\tref={loginButton}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t\t\t\t\t\t<CircularProgress color={\"secondary\"} size={30} />\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\tt(\"login.savePassword\")\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\tposition: \"fixed\",\r\n\t\tbackgroundImage: `url(https://leevstore.blob.core.windows.net/images/grey.jpg)`,\r\n\t\tbackgroundSize: \"cover\",\r\n\t},\r\n\tloginContainer: {\r\n\t\tborderRadius: \"10px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.18)\",\r\n\t\tpadding: \"0\",\r\n\t\tbackground: \"rgba(255, 255, 255, 0.2)\",\r\n\t\tboxShadow: \"0 8px 32px 0 rgb(0 0 0 / 37%)\",\r\n\t\tbackdropFilter: \"blur(8px)\",\r\n\t\t\"-webkit-backdrop-filter\": \"blur( 10px )\",\r\n\t\theight: \"fit-content\",\r\n\t},\r\n\tbannerContainer: {\r\n\t\twidth: \"100%\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\tpadding: \"0\",\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t},\r\n\tbanner: {\r\n\t\tcolor: grey[50],\r\n\t\tfontWeight: 600,\r\n\t\tfontSize: \"24px\",\r\n\t\tposition: \"relative\",\r\n\t\tmargin: \"auto\",\r\n\t\tfontFamily: \"Kaushan\",\r\n\t},\r\n\r\n\theaderContainer: {\r\n\t\twidth: \"100%\",\r\n\t\tdisplay: \"flex\",\r\n\t\tWebkitJustifyContent: \"center\",\r\n\t\tmargin: \"40px 0 0 0\",\r\n\t},\r\n\theaderText: {\r\n\t\ttextAlign: \"center\",\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"12px\",\r\n\t},\r\n\theader: {\r\n\t\tfontSize: \"24px\",\r\n\t\tfontWeight: \"300\",\r\n\t\theight: \"70%\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\r\n\tinputsContainer: {\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t\tpadding: \"0px 14px 0px\",\r\n\t},\r\n\ttextInput: {\r\n\t\twidth: \"80%\",\r\n\t\tmargin: \"5px\",\r\n\t\t\"& .MuiOutlinedInput-root\": {\r\n\t\t\t\"& input\": {\r\n\t\t\t\tpadding: \"18.5px 28px\",\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tsubmitContainer: {\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t\tpadding: \"14px 14px\",\r\n\t\tmarginBottom: \"40px\",\r\n\t},\r\n\tsubmitButton: {\r\n\t\twidth: \"80%\",\r\n\t\theight: \"50px\",\r\n\t\tmargin: \"auto\",\r\n\t\tposition: \"relative\",\r\n\t\tfontSize: \"16px\",\r\n\t\tborderRadius: \"50px\",\r\n\t},\r\n\tforgotPassContainer: {\r\n\t\twidth: \"100%\",\r\n\t\tpadding: \"0px 64px 60px\",\r\n\t},\r\n\tforgotPass: {\r\n\t\tfontSize: \"14px\",\r\n\t},\r\n\terrorContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"initial\",\r\n\t\twidth: \"75%\",\r\n\t\tpadding: \"0\",\r\n\t\tfontSize: \"18px\",\r\n\t},\r\n\terror: {\r\n\t\tmarginLeft: \"8px\",\r\n\t\tfontSize: \"12px\",\r\n\t},\r\n\tlogo: {\r\n\t\twidth: \"100px\",\r\n\t\theight: \"100px\",\r\n\t},\r\n\tlogoContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\theight: \"fit-content\",\r\n\t},\r\n\tinstructions: {\r\n\t\tmargin: \"20px auto\",\r\n\t\tpadding: \"15px 30px\",\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\twidth: \"fit-content\",\r\n\t\tborderRadius: \"5px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: \"0px\",\r\n\t\t},\r\n\t},\r\n\tchangeLanguage: {\r\n\t\tposition: \"absolute\",\r\n\t},\r\n\tsuccessMessage: {\r\n\t\tcolor: \"white\",\r\n\t\tbackground: \"#01b63A\",\r\n\t\ttextAlign: \"center\",\r\n\t\tpadding: \"10px 30px\",\r\n\t\tborderRadius: \"5px\",\r\n\t\tmargin: \"10px 0\",\r\n\t},\r\n\tredirectingIn: {\r\n\t\tcolor: \"white\",\r\n\t\tbackground: \"rgba(0,0,0,0.5)\",\r\n\t\tpadding: \"5px 10px\",\r\n\t\tfontSize: \"12px\",\r\n\t\ttextAlign: \"center\",\r\n\t\tborderRadius: \"50px\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\clients\\UpsertClient.js",["1255","1256","1257","1258"],"import {\r\n\tFormControlLabel,\r\n\tGrid,\r\n\tmakeStyles,\r\n\tMenuItem,\r\n\tSelect,\r\n\tSwitch,\r\n\tTextField,\r\n} from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { createTenant, getTenant, updateTenant } from \"../../../api/adminApi\";\r\nimport { getSuccessMessage, localizations } from \"../../../api/genericApi\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { SnackbarContext } from \"../../../context/SnackbarContext\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport { ModalContainer } from \"../../reuseables/ModalContainer\";\r\n\r\nexport const UpsertClient = ({ handleClose, tenantId }) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { t } = useTranslation();\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst [mode, setMode] = useState(tenantId ? \"update\" : \"create\");\r\n\tconst [errors, setErrors] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [details, setDetails] = useState({\r\n\t\tname: \"\",\r\n\t\tcontactName: \"\",\r\n\t\tcontactNumber: \"\",\r\n\t\tlang: \"\",\r\n\t\tisActive: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!tenantId) setIsLoading(false);\r\n\t\tgetTenant(tenantId)\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetDetails({\r\n\t\t\t\t\tname: data.name,\r\n\t\t\t\t\tcontactNumber: data.contactNumber,\r\n\t\t\t\t\tcontactName: data.contactName,\r\n\t\t\t\t\tlang: data.lang,\r\n\t\t\t\t\tisActive: data.isActive,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.finally(() => setIsLoading(false));\r\n\t}, []);\r\n\r\n\tconst validateFields = () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet errList = [];\r\n\t\t\tif (!details.name) {\r\n\t\t\t\terrList.push({ field: \"name\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (!details.contactName) {\r\n\t\t\t\terrList.push({ field: \"contactName\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (!details.contactNumber) {\r\n\t\t\t\terrList.push({ field: \"contactNumber\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (!details.lang) {\r\n\t\t\t\terrList.push({ field: \"lang\", text: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\r\n\t\t\tif (errList.length) {\r\n\t\t\t\tsetErrors(errList);\r\n\t\t\t\tresolve(false);\r\n\t\t\t}\r\n\t\t\tresolve(true);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleClientSave = async (details) => {\r\n\t\tconst res = await createTenant(details);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t\treturn;\r\n\t\t} else if (res) {\r\n\t\t\tsetSnackbar(getSuccessMessage(\"client\", res.name, \"created\"));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleUpdateClient = async (details) => {\r\n\t\tconst res = await updateTenant(details);\r\n\t\tif (res.status === 403 || res.status === 405) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t\treturn;\r\n\t\t} else if (res) {\r\n\t\t\tsetSnackbar(getSuccessMessage(\"client\", res.name, \"updated\"));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tvalidateFields()\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (!res) return;\r\n\t\t\t\tif (mode === \"update\") {\r\n\t\t\t\t\treturn handleUpdateClient({ tenantId, ...details });\r\n\t\t\t\t}\r\n\t\t\t\treturn handleClientSave(details);\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\thandleClose();\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (field) => async (event) => {\r\n\t\tlet val = [\"isActive\"].includes(field)\r\n\t\t\t? event.target.checked\r\n\t\t\t: event.target.value;\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\t[field]: val,\r\n\t\t});\r\n\t\tif (errors.length) {\r\n\t\t\tsetErrors(errors.filter((err) => err.field !== field));\r\n\t\t}\r\n\t};\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress initial={true} />\r\n\t) : (\r\n\t\t<ModalContainer\r\n\t\t\thandleClose={handleClose}\r\n\t\t\ttitle={\r\n\t\t\t\tmode === \"update\"\r\n\t\t\t\t\t? t(\"clientsModule.upsert.editClientDetails\")\r\n\t\t\t\t\t: t(\"clientsModule.upsert.createClient\")\r\n\t\t\t}\r\n\t\t\thandleConfirm={handleConfirm}\r\n\t\t>\r\n\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"clientsModule.upsert.generalDetails\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\tlabel={t(`clientsModule.name`)}\r\n\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `name`).length > 0}\r\n\t\t\t\t\t\t\t\tvalue={details.name}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(\"name\")}\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `name`).length > 0 &&\r\n\t\t\t\t\t\t\t\t\tt(\"errors.isRequired\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\tmaxLength: 60,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `name`).length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\"rgb(244, 67, 54)\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\tlabel={t(`clientsModule.contactName`)}\r\n\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `contactName`).length > 0\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvalue={details.contactName}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(\"contactName\")}\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `contactName`).length > 0 &&\r\n\t\t\t\t\t\t\t\t\tt(\"errors.isRequired\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\tmaxLength: 60,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `contactName`).length >\r\n\t\t\t\t\t\t\t\t\t\t\t\t0 && \"rgb(244, 67, 54)\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\tlabel={t(`clientsModule.contactNumber`)}\r\n\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `contactNumber`).length > 0\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\t\t\tvalue={details.contactNumber}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(\"contactNumber\")}\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `contactNumber`).length >\r\n\t\t\t\t\t\t\t\t\t\t0 && t(\"errors.isRequired\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\tmaxLength: 60,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `contactNumber`).length >\r\n\t\t\t\t\t\t\t\t\t\t\t\t0 && \"rgb(244, 67, 54)\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>{t(\"clientsModule.lang\")}</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tsm={6}\r\n\t\t\t\t\tmd={6}\r\n\t\t\t\t\tlg={4}\r\n\t\t\t\t\txl={4}\r\n\t\t\t\t\tclassName={classes.fields}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `lang`).length > 0}\r\n\t\t\t\t\t\t\t\tvalue={details.lang}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(`lang`)}\r\n\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{Object.entries(localizations).map((lng, i) => (\r\n\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tvalue={lng[1].code}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{t(`languages.${lng[0]}`)}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={12}\r\n\t\t\t\tsm={6}\r\n\t\t\t\tmd={6}\r\n\t\t\t\tlg={4}\r\n\t\t\t\txl={4}\r\n\t\t\t\tclassName={classes.section}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t{t(\"clientsModule.upsert.isActive\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\tclassName={classes.switchLabel}\r\n\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\t\tchecked={details.isActive}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange(\"isActive\")}\r\n\t\t\t\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\t\t\t\tswitchBase: classes.switchBase,\r\n\t\t\t\t\t\t\t\t\t\t\tchecked: classes.checked,\r\n\t\t\t\t\t\t\t\t\t\t\ttrack: classes.track,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\tdetails.isActive\r\n\t\t\t\t\t\t\t\t\t\t? t(\"clientsModule.upsert.active\")\r\n\t\t\t\t\t\t\t\t\t\t: t(\"clientsModule.upsert.inactive\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</ModalContainer>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmodal: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tbackdropFilter: \"blur(22px)\",\r\n\t\t\"input[type=number]::-webkit-inner-spin-button, input[type=number]::-webkit-outer-spin-button\":\r\n\t\t\t{\r\n\t\t\t\t\"-webkit-appearance\": \"none\",\r\n\t\t\t\tmargin: \"0\",\r\n\t\t\t},\r\n\t},\r\n\r\n\tgridCont: {\r\n\t\theight: \"fit-content\",\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\tborderRadius: \"5px\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\toverflowY: \"overlay\",\r\n\t\tmaxHeight: \"80vh\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tmaxHeight: \"81vh\",\r\n\t\t\ttop: 0,\r\n\t\t\tborderRadius: \"0\",\r\n\t\t\tborder: \"0\",\r\n\t\t\tpadding: \"10px 5px\",\r\n\t\t},\r\n\t\t\"&:focus\": {\r\n\t\t\toutline: \"none\",\r\n\t\t},\r\n\t},\r\n\theaderRow: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t\twidth: \"100%\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmarginBottom: \"10px\",\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"20px 10px 10px\",\r\n\t\tfontSize: \"20px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t},\r\n\ticonBtn: {\r\n\t\tmargin: \"10px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"20px\",\r\n\t},\r\n\tsection: {\r\n\t\tmargin: \"10px 5px\",\r\n\t},\r\n\tsectionTitle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"7px 20px\",\r\n\t\tmarginLeft: \"25px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tborderRadius: \"8px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tmarginLeft: \"15px\",\r\n\t\t},\r\n\t},\r\n\tfields: {\r\n\t\tpadding: \"10px 20px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px\",\r\n\t\t},\r\n\t},\r\n\ttextContainer: {\r\n\t\tpadding: \"5px\",\r\n\t},\r\n\ttextField: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tselectInput: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t\theight: \"200px\",\r\n\t\toverflowY: \"auto\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmarginRight: \"7px\",\r\n\t\tmarginLeft: \"-5px\",\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"100%\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\t},\r\n\t},\r\n\tcontrols: {\r\n\t\tborderTop: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"10px 0 0\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t},\r\n\tcontrol: {\r\n\t\twidth: \"30%\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\tfontSize: \"16px\",\r\n\t\tmargin: \"5px\",\r\n\t\tpadding: \"5px 30px\",\r\n\t\tborderRadius: \"5px\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tsave: {\r\n\t\tbackground: theme.palette.leading,\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: theme.palette.leading,\r\n\t\t\tfilter: \"brightness(120%)\",\r\n\t\t},\r\n\t\t\"&:disabled\": {\r\n\t\t\tcolor: \"rgba(255,255,255,0.3)\",\r\n\t\t},\r\n\t},\r\n\tcancel: {\r\n\t\t\"&:hover\": {\r\n\t\t\tboxShadow: \"inset white 0 0 3px 0px\",\r\n\t\t},\r\n\t},\r\n\tchips: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexWrap: \"wrap\",\r\n\t},\r\n\tchip: {\r\n\t\theight: \"50px\",\r\n\t\tfontSize: \"14px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tcolor: \"white\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\t\tboxShadow: \"inset lightgrey 0px 0px 1px 1px\",\r\n\t\t},\r\n\t},\r\n\tuserCont: {\r\n\t\theight: \"fit-content\",\r\n\t\tpadding: 0,\r\n\t\tmargin: 0,\r\n\t\tmargin: \"5px 0\",\r\n\t},\r\n\tchipsCont: {\r\n\t\theight: \"fit-content\",\r\n\t\tpadding: 0,\r\n\t\tmargin: \"3px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\tboxShadow: \"inset rgba(0,0,0,0.5) 0px 0px 2px 1px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjutifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tremoveIcon: {\r\n\t\tcolor: \"rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"5px\",\r\n\t\tmarginRight: \"5px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\t\tcolor: \"white\",\r\n\t\t},\r\n\t},\r\n\tradioGroup: {\r\n\t\tcolor: \"white\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"row\",\r\n\t\talignitems: \"center\",\r\n\t},\r\n\tradioBtn: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"15px\",\r\n\t},\r\n\tfilesUploaded: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"0 15px\",\r\n\t},\r\n\tuploadBtn: {\r\n\t\tmargin: \"9px 0\",\r\n\t\tbackground: \"rgba(0,0,0,0.1)\",\r\n\t\tcolor: \"white\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\t\"&:hover\": {\r\n\t\t\tboxShadow: \"inset white 0 0 2px 1px\",\r\n\t\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t},\r\n\t},\r\n\timageRow: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tpadding: \"10px 5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\tpreviewImage: {\r\n\t\theight: \"50px\",\r\n\t\twidth: \"100px\",\r\n\t},\r\n\tremoveImageBtn: {\r\n\t\tcolor: \"rgba(255,255,255,0.5)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"6px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\tborderColor: \"white\",\r\n\t\t},\r\n\t},\r\n\tuploadedImagesTitle: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px 5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\tswitchLabel: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px\",\r\n\t},\r\n\tswitchBase: {\r\n\t\tcolor: \"rgba(255,255,255,0.4)\",\r\n\t\t\"&$checked\": {\r\n\t\t\tcolor: \"rgba(255,255,255,1)\",\r\n\t\t},\r\n\t\t\"&$checked + $track\": {\r\n\t\t\tbackgroundColor: \"rgba(255,255,255,0.8)\",\r\n\t\t},\r\n\t},\r\n\tchecked: {},\r\n\ttrack: {\r\n\t\tbackgroundColor: \"rgba(255,255,255,0.4)\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\adminApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\clients\\Clients.js",["1259","1260","1261","1262","1263","1264"],"import { Grid, responsiveFontSizes } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router\";\r\nimport { getTenants } from \"../../../api/adminApi\";\r\nimport { DynamicTable } from \"../../reuseables/DynamicTable\";\r\nimport { ClientControls } from \"./ClientControls\";\r\n\r\nexport const Clients = () => {\r\n\tconst { path } = useRouteMatch();\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [rows, setRows] = useState([]);\r\n\tconst [page, setPage] = useState(0);\r\n\tconst [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetTenants(page, rowsPerPage).then((res) => {\r\n            console.log(responsiveFontSizes)\r\n\t\t\tsetRows(res);\r\n\t\t});\r\n\t}, [page, rowsPerPage]);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    }\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(event.target.value);\r\n        setPage(0);\r\n    }\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Grid item xs={12} xl={11}>\r\n\t\t\t\t<DynamicTable\r\n\t\t\t\t\trows={rows}\r\n\t\t\t\t\trowsPerPage={rowsPerPage}\r\n\t\t\t\t\tpage={page}\r\n\t\t\t\t\thandleChangePage={handleChangePage}\r\n\t\t\t\t\thandleChangeRowsPerPage={handleChangeRowsPerPage}\r\n\t\t\t\t\tcolumns={[\"_id\", \"name\", \"contactName\", \"contactNumber\", \"lang\"]}\r\n\t\t\t\t\tActions={ClientControls}\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\clients\\ClientControls.js",["1265","1266","1267","1268","1269"],"import {\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tMenu,\r\n\tMenuItem,\r\n\tListItemIcon,\r\n} from \"@material-ui/core\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport DoubleArrowIcon from \"@material-ui/icons/DoubleArrow\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { SnackbarContext } from \"../../../context/SnackbarContext\";\r\nimport { Can } from \"../../reuseables/Can\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { deleteTenant } from \"../../../api/adminApi\";\r\nimport { AlertDialog } from \"../../reuseables/AlertDialog\";\r\nimport { getSuccessMessage } from \"../../../api/genericApi\";\r\nimport { UpsertClient } from './UpsertClient'\r\n\r\nexport const ClientControls = ({\r\n    data\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n    const { setSnackbar } = useContext(SnackbarContext)\r\n\tconst [expanded, setExpanded] = useState(null);\r\n    const [ alertDialog, setAlertDialog ] = useState(null);\r\n    const [ editDetails, setEditDetails ] = useState(false);\r\n\r\n\tconst handleExpanded = (event) => {\r\n\t\tif (expanded) {\r\n\t\t\tsetExpanded(null);\r\n\t\t}\r\n\t\tsetExpanded(event.currentTarget);\r\n\t};\r\n\r\n    const deleteClient = () => {\r\n\t\tsetAlertDialog({\r\n\t\t\thandleConfirm: async () => {\r\n\t\t\t\tconst res = await deleteTenant(data._id);\r\n\t\t\t\tif (res) {\r\n\t\t\t\t\tsetAlertDialog(null);\r\n                    setSnackbar(getSuccessMessage('client', data.name, 'delete'))\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thandleCancel: () => setAlertDialog(null),\r\n\t\t\ttext: `${t(\"clientsModule.deleteConfirmation\")} ${data.name}?`,\r\n\t\t\ttitle: `${t(\"clientsModule.deleteClient\")}`,\r\n\t\t});\r\n\t};\r\n\r\n    const editClient = () => {\r\n        setEditDetails(data._id);\r\n    }\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<IconButton className={classes.expandIcon} onClick={handleExpanded}>\r\n\t\t\t\t<MoreVertIcon className={classes.icon} />\r\n\t\t\t</IconButton>\r\n\t\t\t<Menu\r\n\t\t\t\tonClick={() => setExpanded(null)}\r\n\t\t\t\tclassName={classes.container}\r\n\t\t\t\tanchorEl={expanded}\r\n\t\t\t\topen={Boolean(expanded)}\r\n\t\t\t\tonClose={() => setExpanded(null)}\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tpaper: classes.menu,\r\n\t\t\t\t}}\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\thorizontal: \"left\",\r\n\t\t\t\t}}\r\n\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\thorizontal: \"left\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdirection: lang.code === \"he\" ? \"rtl\" : \"ltr\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={classes.menuHeader}\r\n\t\t\t\t>\r\n\t\t\t\t\t{t(\"clientsModule.clientMenu\")}\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tstyle={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n\t\t\t\t\t\tonClick={() => setExpanded(null)}\r\n\t\t\t\t\t\tclassName={classes.close}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CloseRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t<MenuItem\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdirection: lang.code === \"he\" ? \"rtl\" : \"ltr\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\tonClick={editClient}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t<EditIcon className={classes.icon} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t{t(\"clientsModule.upsert.editClientDetails\")}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t\t<MenuItem\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdirection: lang.code === \"he\" ? \"rtl\" : \"ltr\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\tonClick={deleteClient}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t<DeleteIcon className={classes.icon} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t{t(\"clientsModule.delete\")}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t</Menu>\r\n            {\r\n                Boolean(alertDialog) && \r\n                <AlertDialog alertDialog={alertDialog} />\r\n            }\r\n            {\r\n                Boolean(editDetails) &&\r\n                <UpsertClient tenantId={data._id} handleClose={() => setEditDetails(null)}/>\r\n            }\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: \"flex\",\r\n\t},\r\n\texpandIcon: {\r\n\t\tcolor: \"white\",\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n        padding: '6px',\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.5)\",\r\n\t\t},\r\n\t},\r\n\ticonBtn: {\r\n\t\tcolor: \"white\",\r\n\t\tmarginRight: \"20px\",\r\n\t\tborderRadius: \"0 25px 25px 0\",\r\n        padding: '6px',\r\n\t\t\"&:hover\": {\r\n\t\t\ttransform: \"scale(1.077)\",\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: \"16px\",\r\n\t\tcolor: \"white\",\r\n        margin: 'auto'\r\n\t},\r\n\tmenu: {\r\n\t\tbackground: \"rgba(0,0,0,0.7)\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t\tcolor: \"white\",\r\n\t\tboxShadow: \"rgba(0,0,0,0.4) 0 0 2px 1px\",\r\n\t\tborderRadius: \"10px\",\r\n\t},\r\n\tmenuitem: {\r\n\t\tminWidth: \"200px\",\r\n\t},\r\n\tmenuHeader: {\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmarginBottom: \"10px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tpadding: \"5px 10px 5px 20px\",\r\n\t\talignItems: \"center\",\r\n\t\toutline: \"none\",\r\n\t},\r\n\tclose: {\r\n\t\tpadding: \"6px\",\r\n\t\tmargin: 0,\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\DynamicTable.js",["1270","1271","1272","1273","1274","1275"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n\tGrid,\r\n\tTable,\r\n\tTableBody,\r\n\tTableCell,\r\n\tTableContainer,\r\n\tTableFooter,\r\n\tTableHead,\r\n\tTablePagination,\r\n\tTableRow,\r\n\tmakeStyles,\r\n\tPaper,\r\n} from \"@material-ui/core\";\r\nimport TablePaginationActions from \"@material-ui/core/TablePagination/TablePaginationActions\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport clsx from 'clsx'\r\n\r\nexport const DynamicTable = ({ rows, columns, page, rowsPerPage, handleChangePage, handleChangeRowsPerPage, Actions}) => {\r\n\tconst classes = useStyles();\r\n    const { t }= useTranslation();\r\n\r\n\r\n\treturn (\r\n\t\t<TableContainer>\r\n\t\t\t<Table className={classes.table}>\r\n\t\t\t\t<TableHead>\r\n\t\t\t\t\t<TableRow className={clsx(classes.row, classes.headerRow)}>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcolumns.map((rh, ird) => {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\" key={ird} className={classes.headerTh}>\r\n\t\t\t\t\t\t\t\t\t\t{t(`clientsModule.${rh}`)}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{\r\n                                Boolean(Actions) &&\r\n                                <TableCell component=\"td\" scope=\"row\" className={classes.headerTh}>\r\n\t\t\t\t\t\t\t\t\t\t\r\n                                </TableCell>\r\n                            }\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t</TableHead>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{\r\n\t\t\t\t\tBoolean(rows.length) &&\r\n\t\t\t\t\trows.map((row, ir) => (\r\n\t\t\t\t\t\t<TableRow key={ir}>\r\n\t\t\t\t\t\t\t{Object.entries(row).map((rd, rg) => {\r\n\t\t\t\t\t\t\t\tif (columns.includes(rd[0])) {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<TableCell component=\"td\" scope=\"row\" className={classes.dataCell}>\r\n\t\t\t\t\t\t\t\t\t\t\t{rd[1]}\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})}\r\n                            {\r\n                                Boolean(Actions) &&\r\n                                <TableCell component=\"td\" scope=\"row\" className={classes.dataCell}>\r\n\t\t\t\t\t\t\t\t\t\t<Actions data={row} />\r\n                                </TableCell>\r\n                            }\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</TableBody>\r\n\t\t\t\t<TableFooter>\r\n\t\t\t\t\t<TableRow className={classes.paginationRow}>\r\n\t\t\t\t\t\t<TablePagination\r\n\t\t\t\t\t\t\trowsPerPageOptions={[1, 5, 10, 25, { label: \"All\", value: -1 }]}\r\n\t\t\t\t\t\t\tcount={rows.length}\r\n\t\t\t\t\t\t\trowsPerPage={rowsPerPage}\r\n\t\t\t\t\t\t\tpage={page}\r\n\t\t\t\t\t\t\tcount={-1}\r\n\t\t\t\t\t\t\tSelectProps={{\r\n\t\t\t\t\t\t\t\tinputProps: { \"aria-label\": \"rows per page\" }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonChangePage={handleChangePage}\r\n\t\t\t\t\t\t\tonChangeRowsPerPage={handleChangeRowsPerPage}\r\n\t\t\t\t\t\t\tActionsComponent={TablePaginationActions}\r\n                            labelDisplayedRows={({ from, to, count }) => `${t('clientsModule.displaying')} ${t('clientsModule.rows')} ${from} - ${to} `}\r\n                            labelRowsPerPage={t('clientsModule.rowsPerPage')}\r\n                            classes={{\r\n                                root: classes.paginatroRoot\r\n                            }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t</TableFooter>\r\n\t\t\t</Table>\r\n\t\t</TableContainer>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        background: 'transparent',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        margin: '20px 0'\r\n    },\r\n    headerTh: {\r\n        background: 'rgba(0,0,0,0.7)',\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        border: 'none', \r\n    },\r\n    headerRow: {\r\n        borderRadius: '5px'\r\n    },\r\n    dataCell: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        color: 'white',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        textAlign: 'center'\r\n    },\r\n    paginationRow: {\r\n        background: 'rgba(255,255,255,0.2)',\r\n        color: 'white'\r\n    },\r\n    paginatroRoot: {\r\n        border: 'none'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\context\\EnvContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\NoDataFound.js",["1276"],"import { makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport FilterListRoundedIcon from '@material-ui/icons/FilterListRounded';\r\n\r\nexport const NoDataFound = () => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n    \r\n\treturn (\r\n        <div className={classes.container}>\r\n            <div className={classes.logoContainer}>\r\n            <img src='https://leevstore.blob.core.windows.net/images/leev_logo_round.png'\r\n                className={classes.logo} />\r\n            </div>\r\n            <div className={classes.mainRow}>\r\n                {t(\"errors.noRows\")}\r\n            </div>\r\n            <div className={classes.iconContainer}>\r\n                <FilterListRoundedIcon className={classes.icon} />\r\n            </div>\r\n            <div className={classes.secondaryRow}>\r\n                {t(\"errors.applyFilter\")}\r\n            </div>\r\n        </div>\t\t\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        margin: '20px auto',\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        background: 'rgba(0,0,0,0.7)',\r\n        borderRadius: '20px',\r\n        boxShadow: '0px 0px 6px 4px rgba(0,0,0,0.2)',\r\n        padding: '30px 60px',\r\n        width: 'fit-content',\r\n        [theme.breakpoints.down('sm')]: {\r\n            background: 'black'\r\n        }\r\n    },\r\n    mainRow: {\r\n        fontSize: '24px'\r\n    },\r\n    iconContainer: {\r\n        display: 'grid',\r\n        placeItems: 'center',\r\n        padding: '20px 0 40px'\r\n    },\r\n    icon: {\r\n        fontSize: '72px',\r\n        color: theme.palette.leading\r\n    },\r\n    secondaryRow: {\r\n        color: 'rgba(255,255,255,0.8)',\r\n        fontSize: '14px',\r\n        width: 'fit-content',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    logoContainer: {\r\n        padding: '0px 0 20px'\r\n    },\r\n    logo: {\r\n        \r\n        height: '100px',\r\n        width: '100px'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ReturnToPrevious.js",["1277","1278"],"import { IconButton, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\nimport { useHistory, useLocation } from 'react-router';\r\n\r\nexport const ReturnToPrevios = () => {\r\n\tconst classes = useStyles();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\tconst { t } = useTranslation();\r\n    \r\n\treturn (\r\n      \t<IconButton \r\n            className={classes.button} \r\n            onClick={() => history.goBack()} \r\n        >\r\n            <ArrowBackRoundedIcon className={classes.icon} />\r\n        </IconButton>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        background: 'rgba(0,0,0,0.7)',\r\n        color: 'white',\r\n        padding: '12px',\r\n        margin: '0',\r\n        [theme.breakpoints.down('sm')]: {\r\n            border: '1px solid rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    icon: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',       \r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Messenger.js",["1279","1280","1281","1282","1283"],"import { ClickAwayListener, makeStyles, useMediaQuery, Slide } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { ConversationsContext } from \"../../context/ConversationsContext\";\r\nimport { useSocket } from \"../reuseables/customHooks/useSocket\";\r\nimport { Conversations } from \"./Conversations\";\r\nimport { MainConversation } from \"./MainConversation\";\r\nimport { Topbar } from \"./Topbar\";\r\nimport { NewMessage } from \"./NewMessage\";\r\nimport { countUnreadMessages, createNewConversation } from \"../../api/messengerApi\";\r\nimport { SnackbarContext } from \"../../context/SnackbarContext\";\r\nimport { getServerError } from \"../../api/genericApi\";\r\n\r\nexport const Messenger = ({ toggleMessenger }) => {\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n\tconst { socket } = useSocket();\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { conversations, setConversations } = useContext(ConversationsContext);\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst [ newMessage, setNewMessage ] = useState(false);\r\n\tconst [current, setCurrent] = useState(null);\r\n\r\n    useEffect(() => {\r\n\t\tif (current) {\r\n\t\t\tconst nc = conversations.find(c => c._id === current._id);\r\n        \tsetCurrent({...nc});\r\n\t\t\treturn;\r\n\t\t}      \r\n    }, [conversations]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!current) return;\r\n\t\tlet messageCount = countUnreadMessages(current.messages, auth.user._id);\r\n\t\tif (messageCount > 0) {\r\n\t\t\tconsole.log(('here'))\r\n\t\t\treadAllMessages();\r\n\t\t}\r\n\t}, [current])\r\n\r\n\tconst sendMessage = (value) => {\r\n\t\tsocket.emit(\"send-message\", {\r\n\t\t\ttenant: auth.user.tenant,\r\n\t\t\ttext: value,\r\n\t\t\tfrom: auth.user._id,\r\n            to: current.participant,\r\n            conversation: current._id\r\n\t\t});\r\n\t};\r\n\r\n\tconst toggleNewMessage = () => {\r\n\t\tif (newMessage) {\r\n\t\t\tsetNewMessage(false);\r\n\t\t\treturn;\r\n\t\t} \r\n\t\tsetNewMessage(true);\r\n\t}\r\n\r\n\r\n\tconst startNewConversation = async (userId) => {\r\n\t\tlet exists = conversations.find(c => c.participant._id === userId);\r\n\t\tif(exists) {\r\n\t\t\tsetCurrent(exists);\r\n\t\t\tsetNewMessage(false);\r\n\t\t\treturn;\r\n\t\t};\r\n\t\tconst { tenant, _id } = auth.user;\r\n\t\tconst res = await createNewConversation(tenant, [_id, userId], 'private');\r\n\t\tif (res.error) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t\treturn;\r\n\t\t};\r\n\t\tlet conv = { ...res, participant: res.participants.filter(p => p._id != auth.user._id )[0]};\r\n\t\tsocket.emit('create-conversation', { conversationId: conv._id });\r\n\t\tsetConversations([conv, ...conversations]);\r\n\t\tsetCurrent(conv);\r\n\t\tsetNewMessage(false);\r\n\t}\r\n\r\n\tconst readAllMessages = () => {\r\n\t\tsocket.emit(\"read-messages\", {conversationId: current._id, sender: current.participant._id });\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ClickAwayListener onClickAway={toggleMessenger}>\r\n\t\t\t<div className={classes.mainContainer}>\r\n\t\t\t<Slide in={downSm ? !Boolean(current) : true} timeout={downSm ? 300 : 0} direction={'left'}>\r\n\t\t\t\t<div className={classes.leftContainer}>\r\n\t\t\t\t\t<div className={classes.topBar}>\r\n\t\t\t\t\t\t<Topbar toggleNewMessage={toggleNewMessage} toggleMessenger={toggleMessenger} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={classes.conversations}>\r\n\t\t\t\t\t\t\t<Conversations setCurrent={setCurrent} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<NewMessage toggleNewMessage={toggleNewMessage} open={newMessage} startNewConversation={startNewConversation} /> \r\n\t\t\t\t</div>\r\n\t\t\t\t</Slide>\r\n\t\t\t\t<Slide in={downSm ? Boolean(current) : true} timeout={downSm ? 300 : 0} direction={'right'}>\r\n\t\t\t\t<div className={classes.rightContainer}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcurrent &&\r\n\t\t\t\t\t\t<MainConversation setCurrent={setCurrent} current={current} sendMessage={sendMessage} readAllMessages={readAllMessages}/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t</Slide>\r\n\t\t\t</div>\r\n\t\t</ClickAwayListener>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\twidth: \"70vw\",\r\n\t\theight: \"70vh\",\r\n\t\tzIndex: 3,\r\n\t\tposition: \"absolute\",\r\n\t\tbackground: \"white\",\r\n\t\ttop: \"70px\",\r\n\t\tright: \"60px\",\r\n\t\tborderRadius: \"20px\",\r\n\t\tbackground: \"rgba(0,0,0,0.5)\",\r\n\t\tbackdropFilter: \"blur(15px)\",\r\n\t\tdisplay: \"flex\",\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tboxShadow: '0 0 10px 3px rgba(0,0,0,0.4)',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\twidth: \"90vw\",\r\n\t\t\theight: \"80vh\",\r\n\t\t},\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\twidth: \"100%\",\r\n\t\t\theight: \"100%\",\r\n\t\t\ttop: \"0\",\r\n\t\t\tright: \"0\",\r\n\t\t\tborderRadius: \"0\",\r\n\t\t\tborder: 'none',\r\n\t\t}\r\n\t},\r\n\tleftContainer: {\r\n\t\twidth: \"30%\",\r\n\t\theight: \"100%\",\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tborderRadius: \"20px 0 0 20px\",\r\n\t\tposition: 'relative',\r\n\t\toverflow: 'hidden',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\twidth: '100%',\r\n\t\t\theight: '100%'\r\n\t\t}\r\n\t},\r\n\ttopBar: {\r\n\t\theight: \"50px\",\r\n\t\twidth: \"100%\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\tconversations: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"calc(100% - 50px)\",\r\n\t},\r\n\trightContainer: {\r\n\t\twidth: \"70%\",\r\n\t\theight: \"100%\",\r\n\t\tborderRadius: \"0 20px 20px 0\",\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\twidth: '100%',\r\n\t\t\theight: '100%',\r\n\t\t\tposition: 'absolute',\r\n\t\t\tborderRadius: \"0\",\r\n\t\t\toverflow: 'hidden'\r\n\t\t}\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Conversations.js",["1284"],"import React, { useContext, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Conversation } from './Conversation'\r\nimport { ConversationsContext } from \"../../context/ConversationsContext\";\r\n\r\nexport const Conversations = ({ setCurrent }) => {\r\n\tconst classes = useStyles();\r\n    const { conversations } = useContext(ConversationsContext);\r\n\r\n\treturn (\r\n\t\t<div className={classes.mainContainer}>\r\n            { \r\n            conversations &&\r\n            conversations.map((c,i) => \r\n                <Conversation \r\n                key={i} \r\n                data={{...c}} \r\n                setCurrent={() => setCurrent(c)} />   \r\n            )}\r\n\r\n        </div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainContainer: {\r\n        height: '100%',\r\n        width: '100%',\r\n        borderRadius: '20px',\r\n        overflow: 'auto'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Conversation.js",["1285"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles, Avatar } from \"@material-ui/core\";\r\nimport { getFullName } from \"../../api/genericApi\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport { LanguageContext } from \"../../context/LanguageContext\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport { isNewMessage } from \"../../api/messengerApi\";\r\n\r\nexport const Conversation = ({ data, setCurrent }) => {\r\n\tconst classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const { auth } = useContext(AuthContext);\r\n    const [ hasNewMessage, setHasNewMessage ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isNewMessage(data, auth.user._id)) {\r\n            setHasNewMessage(true);\r\n            return;\r\n        }\r\n        setHasNewMessage(false);\r\n    }, [data])\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className={classes.mainContainer} onClick={setCurrent} style={{ fontWeight: hasNewMessage ? 'bold' : 'normal' }}>\r\n            <div className={classes.avatarContainer}>\r\n                <Avatar src={data.participant.avatar} alt={'abc'} className={classes.avatar} />\r\n            </div>\r\n            <div className={classes.detailsContainer}>\r\n                <div className={classes.fullName}>\r\n                    { getFullName(data.participant) }\r\n                </div>\r\n                <div className={classes.lastMessage}>\r\n                    {data.messages.length ? data.messages[data.messages.length - 1].data.text : ''}\r\n                </div>\r\n                <div className={classes.lastMessageDate}>\r\n                    {format(parseISO(data.lastMessageAt), lang.timeonly)}\r\n                </div>\r\n                {\r\n                    hasNewMessage &&\r\n                    <FiberManualRecordIcon className={classes.newMessageDot}/>\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainContainer: {\r\n        height: '80px',\r\n        width: '100%',\r\n        display: 'flex',\r\n        cursor: 'pointer',\r\n        position: 'relative'\r\n    },\r\n    avatarContainer: {\r\n        display: 'grid',\r\n        placeItems: 'center',\r\n        width: '80px'\r\n    },\r\n    avatar: {\r\n        height: '50px',\r\n        width: '50px'\r\n    },\r\n    detailsContainer: {\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        width: 'calc(100% - 80px)',\r\n        padding: '10px 0',\r\n        position: 'relative'\r\n    },\r\n    fullName: {\r\n        color: 'rgba(255,255,255,0.8)',\r\n        height: '30px',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    lastMessage: {\r\n        color: 'rgba(255,255,255,0.5)',\r\n        fontSize: '13px',\r\n        maxWidth: '80%',\r\n        display: '-webkit-box',\r\n        '-webkit-line-clamp': 2,\r\n        '-webkit-box-orient': 'vertical',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis'\r\n    },\r\n    lastMessageDate: {\r\n        color: 'rgba(255,255,255,0.5)',\r\n        position: 'absolute',\r\n        top: '10px',\r\n        right: '10px',\r\n        fontSize: '13px',\r\n        padding: '5px'\r\n    },\r\n    newMessageDot: {\r\n        color: '#42A5F5',\r\n        fontSize: '16px',\r\n        position: 'absolute',\r\n        right: '25px',\r\n        top: '35px',\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Topbar.js",["1286"],"import { IconButton, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PlaylistAddOutlinedIcon from '@material-ui/icons/PlaylistAddOutlined';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\n\r\nexport const Topbar = ({ toggleNewMessage, toggleMessenger}) => {\r\n\tconst classes = useStyles();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    const { t } = useTranslation();\r\n\r\n\treturn (\r\n\t\t<div className={classes.mainContainer}>\r\n            <div className={classes.newMessageContainer}>\r\n            <IconButton className={classes.newMessage} onClick={toggleMessenger}>\r\n                <CloseRoundedIcon  className={classes.icon}/>\r\n            </IconButton> \r\n                \r\n            </div>\r\n            <div className={classes.title}>\r\n                {t(\"messenger.messages\")}\r\n            </div> \r\n            <IconButton className={classes.newMessage} onClick={toggleNewMessage}>\r\n                <PlaylistAddOutlinedIcon  className={classes.icon}/>\r\n            </IconButton>\r\n        </div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainContainer: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        color: 'white',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('sm')]: {\r\n            flexDirection: 'row-reverse' \r\n        }\r\n    },\r\n    icon: {\r\n        color: 'rgba(255,255,255,0.8)',\r\n      \r\n    },\r\n    newMessageContainer: {\r\n        padding: '0'\r\n    },\r\n    editChats: {\r\n        fontSize: '14px',\r\n        padding: '0 20px',\r\n        color: 'rgba(255,255,255,0.8)',\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\MainConversation.js",["1287","1288"],"import { IconButton, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { isNewMessage } from \"../../api/messengerApi\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { UserItem } from \"../user/UserItem\";\r\nimport { MessageInput } from \"./MessageInput\";\r\nimport { Messages } from \"./Messages\";\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { EnvContext } from \"../../context/EnvContext\";\r\nimport clsx from 'clsx'\r\n\r\nexport const MainConversation = ({ setCurrent, current, sendMessage, readAllMessages }) => {\r\n\tconst classes = useStyles(); \r\n    const inputContainer = useRef();\r\n    const messagesCotainer = useRef();\r\n    const { auth } = useContext(AuthContext);\r\n    const { env } = useContext(EnvContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n\r\n    useEffect(() => {\r\n        if (isNewMessage(current, auth.user._id)) {\r\n            readAllMessages()\r\n        }\r\n    }, [current.messages])\r\n\r\n    useEffect(() => {\r\n        console.log('this runs')\r\n        if (env.inputFocused) {\r\n            inputContainer.current.style.paddingBottom = '0px';\r\n            messagesCotainer.current.style.height = 'calc(100% - 140px)';\r\n            return;\r\n        } \r\n        inputContainer.current.style.paddingBottom = '30px';\r\n        messagesCotainer.current.style.height = 'calc(100% - 170px)';\r\n    }, [env])\r\n\r\n    const handleClick = (value) => {\r\n        sendMessage(value);\r\n    };\r\n\r\n\treturn (\r\n\t\t<div className={classes.mainContainer}>\r\n            <div className={classes.userBar} >\r\n                <UserItem user={current.participant} avatarSize={50} showName showTitle size={13}/>\r\n                { downSm &&\r\n                    <IconButton className={classes.backButton} onClick={() => setCurrent(null)}>\r\n                        <ArrowBackIosIcon className={classes.icon} />\r\n                    </IconButton>\r\n                }\r\n            </div>\r\n            <div className={classes.messagesContainer} ref={messagesCotainer}>\r\n                {\r\n                    <Messages data={[...current.messages]} />\r\n                }\r\n                \r\n            </div>\r\n            <div className={clsx(classes.inputContainer)} ref={inputContainer} >\r\n                <MessageInput handleClick={handleClick} />\r\n            </div>\r\n        </div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainContainer: {\r\n        height: '100%',\r\n        width: '100%',\r\n    },\r\n    userBar: {\r\n        boxShadow: '0 1px 2px 0px rgba(0,0,0,0.37)',\r\n        padding: '0 20px',\r\n        background: '#222',\r\n        borderRadius: \"0 20px 0 0\",\r\n        height: '90px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('sm')]: {\r\n            borderRadius: \"0\",\r\n        }\r\n    },\r\n    messagesContainer: {\r\n        height: 'calc(100% - 140px)',\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: 'calc(100% - 170px)',\r\n        }\r\n    },\r\n    inputContainer: {\r\n        padding: '0px 5px 0px',\r\n        background: '#222',\r\n        borderRadius: \"0 0 20px 0\",\r\n        height: '50px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingBottom: '30px',\r\n            borderRadius: \"0\",\r\n        }\r\n    },\r\n    inputFocused: {\r\n        paddingBottom: '0px'\r\n    },\r\n    form: {\r\n\t\tcolor: 'black',\r\n        width: '100%',\r\n        margin: '0 5px 0 0px',\r\n\t\tborder: '1px solid rgba(0,0,0,0.2)',\r\n\t\tborderRadius: '42px'\r\n\t},\r\n\ttextInput: {\r\n        padding: '4px 10px',\r\n        borderRadius: '42px',\r\n        color: 'white',\r\n\t\t'& input': {\r\n\t\t\tcolor: 'white',\r\n\t\t\twidth: '80%',\r\n            padding: '4px 10px',\r\n            fontSize: '14px'\r\n\t\t},\r\n\t\t'& label': {\r\n\t\t\tcolor: 'white',\r\n\t\t\tpaddingLeft: '5px',\r\n\t\t},\r\n\t\t'& fieldset': {\r\n\t\t\tborderColor: 'rgba(255,255,255,0.2)',\r\n\t\t\tborderRadius: '42px',\r\n\t\t},\r\n\t},\r\n    postBtn: {\r\n        background: '#42A5F5',\r\n\t\tcolor: 'white',\r\n        padding: '7px',\r\n\t\tmargin: ' 0 5px 1px'\r\n\t},\r\n\ticon: {\r\n        fontSize: '20px',\r\n        color: 'white'\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\context\\SocketContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\ConversationsContext.js",["1289","1290"],"import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { useSocket } from '../components/reuseables/customHooks/useSocket';\r\nimport { AuthContext } from './AuthContext';\r\n\r\nexport const ConversationsContext = createContext();\r\n\r\nexport const ConversationsContextProvider = ({ children}) => {\r\n    const { auth } = useContext(AuthContext);\r\n    const [ conversations, setConversations ] = useState([]);\r\n    const { socket } = useSocket();\r\n\r\n    useEffect(() => {\r\n        if(!socket) return;\r\n        socket.on('userConversations', uc => {\r\n            let ucc = uc.map(c => ({ ...c, participant: c.participants.filter(p => p._id != auth.user._id )[0]}));\r\n            setConversations(ucc)\r\n        });\r\n\r\n        socket.on('receive-message', msg => {\r\n            setConversations(convs => {\r\n                let convIndex = convs.findIndex(c => c._id === msg.conversation);\r\n                let conv = convs[convIndex];\r\n                convs.splice(convIndex, 1)\r\n                conv.messages.push(msg);\r\n                return [conv, ...convs];\r\n            })\r\n        });\r\n\r\n        socket.on('messages-read', conversation => {\r\n            if(conversation) {\r\n                setConversations(convos => {\r\n                    let convoIndex = convos.findIndex(c => c._id === conversation);\r\n                    let messages = convos[convoIndex].messages.map(m => {\r\n                        if (!m.read) {\r\n                            m.read = true;\r\n                        }\r\n                        return m;\r\n                    })\r\n                    convos[convoIndex].messages = messages;\r\n                    return [...convos];\r\n                })\r\n            }\r\n        })\r\n\r\n    }, [socket]);\r\n\r\n    return (\r\n        <ConversationsContext.Provider value={{ conversations, setConversations }}>\r\n            { children }\r\n        </ConversationsContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\useSocket.js",["1291"],"import React, { useContext } from 'react';\r\nimport { SocketContext } from '../../../context/SocketContext';\r\n\r\nexport const useSocket = () => {\r\n    return useContext(SocketContext)\r\n}","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Messages.js",["1292"],"import { makeStyles } from '@material-ui/core';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Message } from './Message';\r\n\r\n\r\nexport const Messages = ({ data }) => {\r\n\r\n    const classes = useStyles();\r\n    const [ messages, setMessages ] = useState(data || []);\r\n    const { t } = useTranslation();\r\n    const ms = useRef();\r\n\r\n    useEffect(() => {\r\n        setMessages([...data]);\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (ms) {\r\n            let len = ms.current.children.length;\r\n            if (!ms.current.children.length) return;\r\n            ms.current.children[len - 1].scrollIntoView({ bahavior: 'smooth'}) \r\n        }    \r\n    }, [ messages ])\r\n\r\n    const loadMessages = () => {\r\n        if (!messages.length) return null;\r\n        const msgs = messages.map((m,i) => { \r\n            return <Message data={{...m}} key={i} />\r\n        });\r\n        return msgs;\r\n    }\r\n\r\n\treturn (\r\n\t\t<div className={classes.messagesContainer} ref={ms} >\r\n            {    \r\n              loadMessages()\r\n            }\r\n        </div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    messagesContainer: {\r\n        padding: '10px 100px',\r\n        height: 'calc(100% - 20px)',\r\n        overflow: 'auto',\r\n        [theme.breakpoints.down('sm')]: {\r\n            padding: '10px 20px',\r\n        }\r\n    },\r\n    topProfile: {\r\n        width: '100%',\r\n        display: 'grid',\r\n        placeItems: 'center'\r\n    },\r\n    avatar: {\r\n        height: '150px',\r\n        width: '150px',\r\n        margin: '10px'\r\n    },\r\n    welcome: {\r\n        color: 'white',\r\n        fontSize: '14px',\r\n        margin: '5px',\r\n        background: 'rgba(0,0,0,0.8)',\r\n        padding: '10px 25px',\r\n        borderRadius: '50px',\r\n    },\r\n    welcomeSub: {\r\n        color: 'rgba(255,255,255,0.7)',\r\n        fontSize: '12px',\r\n        background: 'rgba(0,0,0,0.8)',\r\n        borderRadius: '50px',\r\n        padding: '10px 25px',\r\n        margin: '5px 30px 30px',\r\n        textAlign: 'center'\r\n    },\r\n    '@global': {\r\n\t\t'*::-webkit-scrollbar': {\r\n\t\t\twidth: '0em',\r\n        }\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Message.js",["1293","1294","1295","1296","1297","1298"],"import { Fade, Grid, Grow, makeStyles, Slide } from \"@material-ui/core\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport { LanguageContext } from \"../../context/LanguageContext\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\r\nimport { AutorenewSharp } from \"@material-ui/icons\";\r\n\r\nexport const Message = ({ data }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst [message, setMessage] = useState({ ...data });\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMessage((ms) => {\r\n\t\t\tms.read = data.read;\r\n\t\t\treturn { ...data };\r\n\t\t});\r\n\t}, [data]);\r\n\r\n\treturn (\r\n\t\t<Grid\r\n\t\t\tcontainer\r\n\t\t\tdirection={data.from === auth.user._id ? \"row\" : \"row-reverse\"}\r\n\t\t\tclassName={classes.messageContainer}\r\n\t\t>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={8}\r\n\t\t\t\tclassName={clsx(\r\n\t\t\t\t\tclasses.message,\r\n\t\t\t\t\tmessage.from === auth.user._id\r\n\t\t\t\t\t\t? classes.userMessage\r\n\t\t\t\t\t\t: classes.systemMessage\r\n\t\t\t\t)}\r\n\t\t\t>\r\n\t\t\t\t<div className={classes.messageText}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={classes.text}\r\n\t\t\t\t\t\tstyle={{ textAlign: lang.dir === \"rtl\" ? \"right\" : \"left\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{message.data.text}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.time}>\r\n\t\t\t\t\t\t{message.from === auth.user._id ? (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<DoneAllIcon\r\n\t\t\t\t\t\t\t\t\tclassName={message.read ? classes.read : classes.received}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t{format(parseISO(message.createdAt), lang.timeonly)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmessage: {\r\n\t\tdisplay: \"flex\",\r\n\t\tmargin: \"3px 5px\",\r\n\t},\r\n\tmessageText: {\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\tfontSize: \"15px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tminWidth: \"50px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"flex-end\",\r\n\t},\r\n\tuserMessage: {\r\n\t\t\"&>div\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\t},\r\n\t\tjustifyContent: \"flex-start\",\r\n\t},\r\n\tsystemMessage: {\r\n\t\t\"&>div\": {\r\n\t\t\tbackground: \"#42A5F5\",\r\n\t\t},\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n\ttime: {\r\n\t\tfontSize: \"11px\",\r\n\t\tmarginTop: \"5px\",\r\n\t\theight: \"15px\",\r\n\t\tcolor: \"rgba(255,255,255,0.7)\",\r\n\t\tmarginRight: \"auto\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"flex-end\",\r\n\t},\r\n\ttext: {\r\n\t\twidth: \"100%\",\r\n\t},\r\n\treceived: {\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"0 3px\",\r\n\t},\r\n\tread: {\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"0 3px\",\r\n\t\tcolor: \"#42A5F5\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\MessageInput.js",["1299"],"import {\r\n    FormControl,\r\n    IconButton,\r\n    makeStyles,\r\n    OutlinedInput,\r\n\tuseMediaQuery\r\n} from \"@material-ui/core\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport clsx from \"clsx\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { EnvContext } from \"../../context/EnvContext\";\r\nimport { LanguageContext } from \"../../context/LanguageContext\";\r\n\r\nexport const MessageInput = ({ handleClick }) => {\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n\tconst { env, setEnv } = useContext(EnvContext);\r\n\tconst [value, setValue] = useState(\"\");\r\n    const { lang } = useContext(LanguageContext);\r\n\r\n    const send = () => {\r\n        if (value) {\r\n            handleClick(value);\r\n            setValue('');\r\n        }\r\n    };\r\n\r\n\tconst toggleInputFocus = () => {\r\n\t\r\n\t\tif (!downSm) return;\r\n\t\tif (env.inputFocused) {\r\n\t\t\tsetEnv({\r\n\t\t\t\t...env, \r\n\t\t\t\tinputFocused: false\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetEnv({\r\n\t\t\t...env, \r\n\t\t\tinputFocused: true\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<IconButton\r\n\t\t\t\tclassName={classes.postBtn}\r\n\t\t\t\tonClick={() => null}\r\n\t\t\t\tonClick={send}\r\n\t\t\t>\r\n\t\t\t\t<SendRoundedIcon\r\n\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\tclasses.icon,\r\n\t\t\t\t\t\tlang.dir === \"rtl\" ? classes.mirror : null\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</IconButton>\r\n\t\t\t<FormControl variant=\"outlined\" className={classes.form}>\r\n\t\t\t\t<OutlinedInput\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={(event) => setValue(event.target.value)}\r\n\t\t\t\t\tclassName={classes.textInput}\r\n\t\t\t\t\tonKeyDown={e => e.key === 'Enter' ? send() : null}\r\n\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\tonFocus: toggleInputFocus,\r\n\t\t\t\t\t\tonBlur: toggleInputFocus\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t\r\n\t\t\t\t/>\r\n\t\t\t</FormControl>\t\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\theight: \"100%\",\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tuserBar: {\r\n\t\tboxShadow: \"0 1px 2px 0px rgba(0,0,0,0.37)\",\r\n\t\tpadding: \"0 20px\",\r\n\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\tborderRadius: \"0 20px 0 0\",\r\n\t\theight: \"90px\",\r\n\t},\r\n\tmessagesContainer: {\r\n\t\theight: \"calc(100% - 140px)\",\r\n\t},\r\n\tinputContainer: {\r\n\t\tpadding: \"0 20px\",\r\n\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\tborderRadius: \"0 0 20px 0\",\r\n\t\theight: \"50px\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tform: {\r\n\t\tcolor: \"black\",\r\n\t\twidth: \"100%\",\r\n\t\tmargin: \"0 5px 0 0px\",\r\n\t\tborder: \"1px solid rgba(0,0,0,0.2)\",\r\n\t\tborderRadius: \"42px\",\r\n\t},\r\n\ttextInput: {\r\n\t\tpadding: \"4px 10px\",\r\n\t\tborderRadius: \"42px\",\r\n\t\tcolor: \"white\",\r\n\t\t\"& input\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\twidth: \"80%\",\r\n\t\t\tpadding: \"4px 10px\",\r\n\t\t\tfontSize: \"14px\",\r\n\t\t},\r\n\t\t\"& label\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\tpaddingLeft: \"5px\",\r\n\t\t},\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderColor: \"rgba(255,255,255,0.2)\",\r\n\t\t\tborderRadius: \"42px\",\r\n\t\t},\r\n\t},\r\n\tpostBtn: {\r\n\t\tbackground: \"#42A5F5\",\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"7px\",\r\n\t\tmargin: \" 0 5px 1px\",\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: \"20px\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\NewMessage.js",["1300","1301"],"import { IconButton, makeStyles, OutlinedInput, Slide } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { filterUsers, getUserList } from \"../../api/userApi\";\r\nimport { UserItem } from \"../user/UserItem\";\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport { ClearRounded } from \"@material-ui/icons\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport const NewMessage = ({ toggleNewMessage, open, startNewConversation }) => {\r\n\tconst classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const { auth } = useContext(AuthContext);\r\n    const [ orgUsers, setOrgUsers ] = useState([]);\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ searchValue, setSearchValue ] = useState('');\r\n\r\n    useEffect(() => {\r\n        prepareData();\r\n    }, []);\r\n\r\n    const prepareData = async () => {\r\n        let users = await getUserList();\r\n        if(users.length) {\r\n            users = users.filter(u => u._id !== auth.user._id);\r\n            setUserList(users);\r\n            setOrgUsers(users);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUserList(orgUsers)\r\n        if (!searchValue) {\r\n            return;\r\n        };\r\n        filterUsers(orgUsers, searchValue)\r\n        .then(uc => setUserList(uc))\r\n    }, [searchValue])\r\n\r\n\r\n\treturn (\r\n\t\r\n            <Slide direction={'up'} timeout={300} in={open}>\r\n\t\t\t\t<div className={classes.mainContainer}>\r\n                    <div className={classes.closeBtn}>\r\n                        <IconButton\r\n                            className={classes.iconBtn}\r\n                            onClick={toggleNewMessage}\r\n                        >\r\n                            <ClearRounded className={classes.icon} />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.header}>\r\n                        {t(\"messenger.newMessage\")}\r\n                    </div>\r\n                    <div className={classes.userSearch}>\r\n                        <OutlinedInput\r\n                            value={searchValue}\r\n                            onChange={(event) => setSearchValue(event.target.value)}\r\n                            className={classes.textInput}\r\n                            startAdornment={<SearchRoundedIcon  className={classes.searchIcon} />}\r\n                            placeholder={t('messenger.searchUser')}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.users}>\r\n                        {\r\n                            userList.length &&\r\n                            userList.map((u,i) => \r\n                                <div className={classes.userRow} onClick={() => startNewConversation(u._id)}>\r\n                                    <UserItem user={u} avatarSize={50} size={13} showName showTitle/>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                </Slide>\r\n\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\theight: \"100%\",\r\n\t\twidth: \"100%\",\r\n\t\tposition: \"absolute\",\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(22px)',\r\n\t\ttop: \"0\",\r\n\t\tborderRadius: \"30px 0px 0 0\"\r\n\t},\r\n    header: {\r\n        color: 'rgba(255,255,255,0.8)',\r\n        height: '50px',\r\n        fontSize: '18px',\r\n        display: 'grid',\r\n        placeItems: 'center',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        padding: '0 10px'\r\n    },\r\n    userSearch: {\r\n        height: '70px',\r\n        boxShadow: '0 1px 2px 1px rgba(255,255,255,0.2)',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    users: {\r\n        height: 'calc(100% - 120px)',\r\n        overflow: 'auto'\r\n    },\r\n    userRow: {\r\n        padding: '10px 30px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        cursor: 'pointer'\r\n    },\r\n    textInput: {\r\n\t\tpadding: \"4px 10px\",\r\n        width: '90%',\r\n\t\tcolor: \"white\",\r\n\t\t\"& input\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\tpadding: \"4px 10px\",\r\n\t\t\tfontSize: \"14px\",\r\n\t\t},\r\n\t\t\"& label\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\tpaddingLeft: \"5px\",\r\n\t\t},\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderColor: \"rgba(255,255,255,0.2)\",\r\n\t\t\tborderRadius: \"8px\",\r\n\t\t},\r\n\t},\r\n    closeBtn: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0\r\n    },\r\n    iconBtn: {\r\n\t\tmargin: \"2px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"22px\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\messengerApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ModalContainer.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\UpsertContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\LoadingProgress.js",["1302"],"import { CircularProgress, makeStyles } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\n\r\nexport const LoadingProgress = ({ initial }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n    <div className={clsx(classes.mainContainer, initial ? classes.initial : null)}>\r\n        <div className={classes.container}>\r\n          <CircularProgress size={90} classes={{ colorPrimary: classes.rotateColor}} thickness={2} />\r\n          <img src={'https://leevstore.blob.core.windows.net/images/leev_logo_round.png'} className={classes.logo}/>\r\n      </div>\r\n    </div>\r\n    \r\n\t\t \r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    height: 'calc(100vh - 64px)',\r\n    width: 'calc(100vw - 60px)',\r\n    background: 'rgba(0,0,0,0.5)',\r\n    zIndex: 5000,\r\n    top: 0,\r\n    left: 0,\r\n    position: 'absolute',\r\n    display: 'grid',\r\n    placeItems: 'center',\r\n    [theme.breakpoints.down('sm')]: {\r\n      height: 'calc(100vh - 84px)',\r\n      width: '100vw',\r\n    }\r\n  },\r\n  initial: {\r\n    height: '100vh',\r\n    width: '100vw',\r\n  },\r\n  container: {\r\n      animation: `$changeSizes 2500ms ${theme.transitions.easing.easeInOut} infinite`,\r\n      display: 'grid',\r\n      placeItems: 'center',\r\n      height: 'fit-content',\r\n      width: 'fit-content'\r\n  },\r\n  \"@keyframes changeSizes\": {\r\n    \"0%\": {\r\n      transform: \"scale(1)\"\r\n    },\r\n    \"50%\": {\r\n      transform: \"scale(1.15)\"\r\n    }\r\n  },\r\n  logo: {\r\n    position: 'absolute',\r\n    height: '78px',\r\n    width: '78px'\r\n  },\r\n  rotateColor: {\r\n    color: theme.palette.leading\r\n  }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\FaultsReport.js",["1303","1304"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\Reports.js",["1305","1306","1307"],"import { Grid, makeStyles } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Route, Switch, useParams, useRouteMatch } from \"react-router\";\r\nimport { getReportPublic } from \"../../../api/reportsApi\";\r\nimport { FaultsReport } from \"./FaultsReport\";\r\nimport { ReportSelector } from \"./ReportSelector\";\r\nimport { ReportsList } from \"./ReportsList\";\r\nimport { UpsertReport } from \"./UpsertReport\";\r\n\r\nexport const Reports = () => {\r\n\t\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const { path } = useRouteMatch();\r\n\tconst [ upsert, setUpsert ] = useState(null)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t<Grid item xs={12} className={classes.moduleContainer}>\r\n\t\t\t\t\t<div className={classes.pageModule}>{t(\"reportsModule.reports\")}</div>\r\n\t\t\t\t</Grid>\r\n                <Switch>\r\n                    <Route path={path} exact >\r\n                        <ReportSelector />\r\n\t\t\t\t\t\t<ReportsList />\r\n                    </Route>\r\n                    <Route path={`${path}/faults/:reportId?`}>\r\n                        <FaultsReport setUpsert={setUpsert} />\r\n                    </Route>\r\n                </Switch>\r\n\t\t\t</Grid>\r\n\t\t\t{\r\n\t\t\t\tupsert &&\r\n\t\t\t\t<UpsertReport \r\n\t\t\t\t\tdata={upsert}\r\n\t\t\t\t\thandleClose={() => setUpsert(null)}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\tmoduleContainer: {\r\n\t\tposition: \"sticky\",\r\n\t\ttop: 0,\r\n\t\tzIndex: 2,\r\n\t},\r\n\tpageModule: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px 40px\",\r\n\t\tfontSize: \"16px\",\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tboxShadow: \"0 0px 2px 1px rgba(255,255,255,0.3)\",\r\n\t\tmargin: \"0px auto 5px\",\r\n\t\twidth: \"30%\",\r\n\t\ttextAlign: \"center\",\r\n\t\tborderRadius: \"0 0 25px 25px\",\r\n\t\tlineHeight: \"1\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tbackground: \"black\",\r\n\t\t\twidth: \"100vw\",\r\n\t\t\tpadding: \"20px 0\",\r\n\t\t\tborderRadius: 0,\r\n\t\t\tmargin: 0,\r\n\t\t},\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\reportsApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\UpsertReport.js",["1308","1309"],"import {\r\n\tBackdrop,\r\n\tFade,\r\n\tGrid,\r\n\tmakeStyles,\r\n\tModal,\r\n\tPaper,\r\n\tIconButton,\r\n\tTextField,\r\n\tButton,\r\n\tCircularProgress,\r\n\tCollapse\r\n} from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport ClearRoundedIcon from \"@material-ui/icons/ClearRounded\";\r\nimport { distributeReport, generateLink, generateReportLink } from \"../../../api/reportsApi\";\r\nimport { SnackbarContext } from '../../../context/SnackbarContext';\r\nimport { getServerError } from \"../../../api/genericApi\";\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport clsx from 'clsx'\r\nimport { getResidentList, getUserList } from \"../../../api/userApi\";\r\nimport { UserItem } from \"../../user/UserItem\";\r\nimport MailOutlineRoundedIcon from '@material-ui/icons/MailOutlineRounded';\r\n\r\nexport const UpsertReport = ({ data, handleClose }) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { t } = useTranslation();\r\n    const { setSnackbar } = useContext(SnackbarContext)\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [name, setName] = useState(\"\");\r\n\tconst [generating, setGenerating] = useState(null);\r\n    const [ reportId, setReportId ] = useState(null);\r\n\tconst [ broadcastTo, setBroadcastTo ] = useState('users');\r\n\tconst [ userList, setUserList ] = useState({ users: [], tenants: []});\r\n\tconst [ toSend, setToSend ] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsLoading(false);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!reportId) return;\r\n\t\thandleGetUsers();\r\n\t}, [reportId])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetToSend([]);\r\n\t}, [broadcastTo])\r\n\r\n\tconst handleChangeName = (e) => {\r\n\t\tsetName(e.target.value);\r\n\t};\r\n\r\n\tconst handleGenerateLink = async () => {\r\n\t\tsetGenerating(true);\r\n\t\tconst res = await generateReportLink({ ...data, name });\r\n        if (!res) {\r\n            setSnackbar(getServerError());\r\n            handleClose();\r\n            return;\r\n        }\r\n        setReportId(res);\r\n        setGenerating(false);\r\n\t};\r\n\r\n    const copyToClipboard = async (e) => {\r\n\t\tif (navigator.clipboard) {\r\n\t\t\tawait navigator.clipboard.writeText(generateLink(reportId));\r\n\t\t\tsetSnackbar({ severity: 'success', text: t(\"reportsModule.copiedToClipboard\") });\r\n\t\t\treturn;\r\n\t\t};\r\n\t\tsetSnackbar({ severity: 'error', text: t(\"reportsModule.linkNotCopied\") })\r\n    }\r\n\r\n\tconst toggleBroadcast = (type) => event => {\r\n\t\tsetBroadcastTo(type)\r\n\t}\r\n\r\n\tconst handleGetUsers = async () => {\r\n\t\tlet users = await getUserList();\r\n\t\tlet tenants = await getResidentList({ asset: data.asset });\r\n\t\tsetUserList({users, tenants})\r\n\t}\r\n\r\n\tconst handleToggleToSend = (uid) => event => {\r\n\t\tif (toSend.find(ts => ts === uid)) {\r\n\t\t\tsetToSend(ts => ts.filter(u => u !== uid))\r\n\t\t} else {\r\n\t\t\tsetToSend(ts => [...ts, uid])\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDistribute = (toAll) => async event => {\r\n\t\tlet sendList = toSend;\r\n\t\tif (toAll) {\r\n\t\t\tsendList = userList[broadcastTo].map(u => u._id);\r\n\t\t}\r\n\t\tconst res = await distributeReport(reportId, sendList);\r\n\t}\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress />\r\n\t) : (\r\n\t\t<Modal\r\n\t\t\topen={!isLoading}\r\n\t\t\tonClose={handleClose}\r\n\t\t\tcloseAfterTransition\r\n\t\t\tBackdropComponent={Backdrop}\r\n\t\t\tBackdropProps={{\r\n\t\t\t\ttimeout: 500,\r\n\t\t\t}}\r\n\t\t\tclassName={classes.modal}\r\n\t\t>\r\n\t\t\t<Fade in={!isLoading}>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tstyle={{ outline: \"0\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid item xs={11} sm={7} md={5} lg={3} xl={3}>\r\n\t\t\t\t\t\t<Paper\r\n\t\t\t\t\t\t\tclassName={classes.paper}\r\n\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\televation={6}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className={classes.header}>\r\n\t\t\t\t\t\t\t\t<div className={classes.title}>\r\n\t\t\t\t\t\t\t\t\t{t(\"reportsModule.shareReport\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<IconButton className={classes.closeBtn} onClick={handleClose}>\r\n\t\t\t\t\t\t\t\t\t<ClearRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t!reportId &&\r\n\t\t\t\t\t\t\t\t<div className={classes.instructions}>\r\n\t\t\t\t\t\t\t\t\t{t(\"reportsModule.upsertInstructions\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className={classes.nameContainer}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t!reportId ? \r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel={t(`reportsModule.reportName`)}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeName}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\tsize={\"medium\"}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.generateBtn}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={Boolean(generating || !name || reportId)}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleGenerateLink}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{generating ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress className={classes.top} size={20} />\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\tt(\"reportsModule.generateLink\")\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</React.Fragment> :\r\n\t\t\t\t\t\t\t\t\t<div className={classes.reportName}>\r\n\t\t\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n                            {\r\n                                <Collapse in={reportId}>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.linkContainer}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.link}>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type='text' value={reportId} id={'linkInput'} hidden />\r\n\t\t\t\t\t\t\t\t\t\t\t{generateLink(reportId)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<IconButton className={classes.copyLink} onClick={copyToClipboard}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FileCopyIcon className={classes.copyIcon} />\r\n\t\t\t\t\t\t\t\t\t\t</IconButton>  \r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.broadcastContainer}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.broadcastToggle}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={clsx(classes.selectedOption, classes.optionUsers, broadcastTo === 'users' && classes.activeSelected)} onClick={toggleBroadcast('users')}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t(\"reportsModule.selectedUsers\")}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={clsx(classes.selectedOption, classes.optionTenants, broadcastTo === 'tenants' && classes.activeSelected)} onClick={toggleBroadcast('tenants')}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t(\"reportsModule.selectedTenants\")}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.userlist}>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tuserList &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tuserList[broadcastTo].map(u => \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.userContainer} onClick={handleToggleToSend(u._id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<UserItem \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuser={u}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tavatarSize={40}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize={11}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowTitle\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={clsx(classes.checkBtn, toSend.find(us => us === u._id) && classes.checked)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleToggleToSend(u._id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MailOutlineRoundedIcon className={classes.checkIcon} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.sendBtns}>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t!toSend.length ?\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t \tclassName={classes.sendBtn}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleDistribute(true)}\r\n\t\t\t\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t(\"reportsModule.sendToAll\")}\r\n\t\t\t\t\t\t\t\t\t\t\t </Button> :\r\n\t\t\t\t\t\t\t\t\t\t\t <Button \r\n\t\t\t\t\t\t\t\t\t\t\t \tclassName={classes.sendBtn} \r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleDistribute(false)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t \t{`${t(\"reportsModule.sendTo\")} ${toSend.length} ${t(\"reportsModule.selected\")}`}\r\n\t\t\t\t\t\t\t\t\t\t\t </Button>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n                                </Collapse>\r\n                            }\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Fade>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"10px\",\r\n\t\tborderRadius: \"10px\",\r\n\t\t\"&:focus\": {\r\n\t\t\toutline: \"none\",\r\n\t\t},\r\n\t},\r\n\tmodal: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t},\r\n\theader: {\r\n\t\twidth: \"100%\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"18px\",\r\n\t\tpadding: \"5px 10px\",\r\n\t\theight: \"fit-content\",\r\n\t},\r\n\tcloseBtn: {\r\n\t\tfontSize: \"20px\",\r\n\t\theight: \"40px\",\r\n\t\twidth: \"40px\",\r\n\t},\r\n\ticon: {\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"25px\",\r\n\t\tpadding: \"5px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(255,255,255,0.2)\",\r\n\t\t},\r\n\t},\r\n\tinstructions: {\r\n\t\twidth: \"auto\",\r\n\t\tcolor: \"rgba(255,255,255,0.6)\",\r\n\t\tfontSize: \"12px\",\r\n\t\tmargin: \"0px 10px\",\r\n\t},\r\n\ttextField: {\r\n\t\tmargin: \"30px 10px\",\r\n\t\twidth: \"70%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"50px\",\r\n\t\t},\r\n\t},\r\n\tgenerateBtn: {\r\n\t\tcolor: \"white\",\r\n        height: '35px',\r\n        width: '100px',\r\n\t\tbackground: theme.palette.leading,\r\n\t\tborderRadius: \"50px\",\r\n\t\tfontSize: \"13px\",\r\n\t\tboxShadow: \"0 0 3px 2px rgba(0,0,0,0.25)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: theme.palette.leading,\r\n\t\t\tboxShadow: \"0 0 10px 4px rgba(0,0,0,0.25)\",\r\n\t\t},\r\n        \"&:disabled\": {\r\n\t\t\tbackground: 'transparent',\r\n            color: \"rgba(255,255,255,0.6)\",\r\n            border: '1px solid rgba(255,255,255,0.2)',\r\n\t\t\tboxShadow: \"0 0 10px 4px rgba(0,0,0,0.25)\",\r\n\t\t},\r\n\t},\r\n\tnameContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\ttop: {\r\n\t\tcolor: \"white\",\r\n\t\tanimationDuration: \"550ms\",\r\n\t},\r\n    linkContainer: {\r\n        color: 'white',\r\n        display: 'flex',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '90%',\r\n        borderRadius: '10px',\r\n\t\tmargin: '0 auto'\r\n    },\r\n    copyLink: {\r\n        color: 'white',\r\n        width: '40px',\r\n        background: 'rgba(255,255,255,0.2)',\r\n        borderRadius: '0px 10px 10px 0px',\r\n        '&:hover': {\r\n            background: theme.palette.leading\r\n        }\r\n    },\r\n    copyIcon: {\r\n        fontSize: '14px'\r\n    },\r\n    link: {\r\n        width: 'calc(100% - 40px)',\r\n        color: 'white',\r\n        fontSize: '11px',\r\n        textAlign: 'center',\r\n\t\ttextOverflow: 'ellipsis',\r\n\t\toverflow: 'hidden',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\tpadding: '0 30px'\r\n    },\r\n\tbroadcastContainer: {\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\twidth: '90%',\r\n\t\tborderRadius: '10px',\r\n\t\tmargin: '30px auto 10px'\r\n\t},\r\n\tbroadcastToggle: {\r\n\t\tdisplay: 'flex'\r\n\t},\r\n\tselectedOption: {\r\n\t\twidth: '50%',\r\n\t\theight: '30px',\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '13px',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t\tcursor: 'pointer'\r\n\t},\r\n\toptionUsers: {\r\n\t\tborderRadius: '10px 0 0 0px'\r\n\t},\r\n\toptionTenants: {\r\n\t\tborderRadius: '0 10px 0px 0'\r\n\t},\r\n\tactiveSelected: {\r\n\t\tbackground: theme.palette.leading\r\n\t},\r\n\tuserlist: {\r\n\t\toverflow: 'overlay',\r\n\t\theight: '200px',\r\n\t\tpadding: '10px 20px',\r\n\t\tborderTop: '1px solid rgba(255,255,255,0.2)'\r\n\t},\r\n\r\n\tuserContainer: {\r\n\t\theight: '60px',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t\tcursor: 'pointer'\r\n\t},\r\n\tcheckBtn: {\r\n\t\tcolor: 'rgba(255,255,255,0.2)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\theight: '30px',\r\n\t\twidth: '30px',\r\n\t\t'&:hover': {\r\n\t\t\tborderColor: 'white'\r\n\t\t}\r\n\t},\r\n\tcheckIcon: {\r\n\t\tfontSize: '18px'\r\n\t},\r\n\r\n\tchecked: {\r\n\t\tbackground: theme.palette.leading,\r\n\t\tcolor: 'white'\r\n\t},\r\n\tsendBtns: {\r\n\t\twidth: '90%',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-evenly',\r\n\t\tmargin: '10px auto'\r\n\t},\r\n\tsendBtn: {\r\n\t\twidth: '80%',\r\n\t\tcolor: 'white',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tborderRadius: '50px',\r\n\t\t'&:hover': {\r\n\t\t\tboxShadow: '0 0 3px 1px rgba(255,255,255,0.2) inset'\r\n\t\t},\r\n\t\t'&:disabled': {\r\n\t\t\tcolor: 'rgba(255,255,255,0.2)'\r\n\t\t}\r\n\t},\r\n\treportName: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '10px 0',\r\n\t\twidth: '90%',\r\n\t\tmargin: '40px auto 10px',\r\n\t\ttextAlign: 'center',\r\n\t\tborderRadius: '10px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tbackground: 'rgba(255,255,255,0.2)'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\ReportsList.js",["1310"],"import { makeStyles, Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport { format, parseISO, parse } from \"date-fns\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { getFullAddress } from \"../../../api/assetsApi\";\r\nimport { getReports } from \"../../../api/reportsApi\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { LoadingProgress } from \"../../reuseables/LoadingProgress\";\r\nimport { UserItem } from \"../../user/UserItem\";\r\n\r\nexport const ReportsList = () => {\r\n\tconst classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst downMd = useMediaQuery((theme) => theme.breakpoints.down(\"md\"));\r\n\tconst [reports, setReports] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tprepareData();\r\n\t}, []);\r\n\r\n\tconst prepareData = async () => {\r\n\t\tconst res = await getReports();\r\n\t\tif (res.status === 403) {\r\n\t\t\thistory.push('/workspace/faults')\r\n\t\t}\r\n\t\tsetReports(res);\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n    const handleReportClick = (reportId) => event => {\r\n        history.push(`${location.pathname}/faults/${reportId}`)\r\n    }\r\n\r\n\treturn isLoading ? (\r\n\t\t<LoadingProgress />\r\n\t) : (\r\n\t\t<div className={classes.mainContainer}>\r\n\t\t\t<div className={classes.header}>{t(\"reportsModule.previousReports\")}</div>\r\n\t\t\t<Grid container className={classes.headers}>\r\n\t\t\t\t<Grid lg={4} xs={6} item className={classes.colHeader}>\r\n\t\t\t\t\t<div className={classes.headerCell}>\r\n\t\t\t\t\t\t{t(\"reportsModule.reportName\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid lg={3} xs={6} item className={classes.colHeader}>\r\n\t\t\t\t\t<div className={classes.headerCell}>{t(\"reportsModule.asset\")}</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{!downMd && (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Grid lg={1}  item className={classes.colHeader}>\r\n\t\t\t\t\t\t\t<div className={classes.headerCell}>\r\n\t\t\t\t\t\t\t\t{t(\"reportsModule.startDate\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid lg={1} item className={classes.colHeader}>\r\n\t\t\t\t\t\t\t<div className={classes.headerCell}>\r\n\t\t\t\t\t\t\t\t{t(\"reportsModule.endDate\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid lg={1}  item className={classes.colHeader}>\r\n\t\t\t\t\t\t\t<div className={classes.headerCell}>\r\n\t\t\t\t\t\t\t\t{t(\"reportsModule.createDate\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid lg={2} item className={classes.colHeader}>\r\n\t\t\t\t\t\t\t<div className={classes.headerCell}>\r\n\t\t\t\t\t\t\t\t{t(\"reportsModule.createdBy\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t\t<Grid container className={classes.table}>\r\n\t\t\t\t{reports.map((r, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Grid container onClick={handleReportClick(r._id)} className={classes.row}>\r\n\t\t\t\t\t\t\t<Grid lg={4} xs={6} item className={classes.gridCell}>\r\n\t\t\t\t\t\t\t\t<div className={classes.faultDescData}>{r.name}</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid lg={3} xs={6} className={classes.gridCell}>\r\n\t\t\t\t\t\t\t\t<div className={classes.faultDescData}>\r\n\t\t\t\t\t\t\t\t\t{getFullAddress(r.parameters.asset)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{!downMd && (\r\n\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t<Grid lg={1} item className={classes.gridCell}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.faultDescData}>\r\n\t\t\t\t\t\t\t\t\t\t\t{format(\r\n\t\t\t\t\t\t\t\t\t\t\t\tparse(r.parameters.fromDate, \"yyyy-MM-dd\", new Date()),\r\n\t\t\t\t\t\t\t\t\t\t\t\tlang.dateonly\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid lg={1} item className={classes.gridCell}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.faultDescData}>\r\n\t\t\t\t\t\t\t\t\t\t\t{format(\r\n\t\t\t\t\t\t\t\t\t\t\t\tparse(r.parameters.toDate, \"yyyy-MM-dd\", new Date()),\r\n\t\t\t\t\t\t\t\t\t\t\t\tlang.dateonly\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid lg={1} item className={classes.gridCell}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.faultDescData}>\r\n\t\t\t\t\t\t\t\t\t\t\t{format(parseISO(r.createdAt), lang.dateonly)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid lg={2} item className={classes.gridCell}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.faultDescData}>\r\n\t\t\t\t\t\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\t\t\t\t\t\tuser={r.createdBy}\r\n\t\t\t\t\t\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\t\t\t\t\t\tavatarSize={40}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsize={11}\r\n                                                showCompany\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\twidth: \"90%\",\r\n        [theme.breakpoints.down('md')]: {\r\n            width: '100%'\r\n        }\r\n\t},\r\n\theader: {\r\n\t\tcolor: \"rgba(255,255,255,0.8)\",\r\n\t\tfontSize: \"14px\",\r\n\t\tpadding: \"10px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\ttable: {\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tborderRadius: \"0 0 10px 10px\",\r\n\t},\r\n\theaders: {\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tpadding: \"10px 0\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\tmarginTop: \"10px\",\r\n\t\tfontSize: \"14px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tposition: \"sticky\",\r\n\t\t\ttop: \"55px\",\r\n\t\t\tborderRadius: \"0\",\r\n\t\t},\r\n\t},\r\n\theaderCell: {\r\n\t\tpadding: \"0 10px\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\theight: \"100%\",\r\n\t\r\n\t},\r\n\tcolHeader: {\r\n\t\tcolor: \"rgba(255,255,255,0.8)\",\r\n\t},\r\n\tfaultIdData: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tmargin: \"auto\",\r\n\t},\r\n\tfaultDescData: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"14px\",\r\n\t\tpadding: \"10px\",\r\n        whiteSpace: 'nowrap',\r\n        [theme.breakpoints.down('md')]: {\r\n            fontSize: '12px'\r\n        }\r\n\t},\r\n\tgridCell: {\r\n\t\tborderTop: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n        \r\n\t},\r\n    row: {\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\ReportSelector.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\reportItems\\FaultList.js",["1311"],"import { Grid, Icon, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ItemLink } from \"../../../reuseables/ItemLink\";\r\n\r\nexport const FaultList = ({ faults }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\r\n\treturn (\r\n\t\t<div className={classes.mainContainer}>\r\n\t\t\t<div className={classes.header}>{t(\"reportsModule.closedFaults\")}</div>\r\n\t\t\t<Grid container className={classes.headers}>\r\n\t\t\t\t<Grid xs={3} md={2} item className={classes.colHeader}>\r\n\t\t\t\t\t<div className={classes.headerCell}>{t(\"reportsModule.faultId\")}</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid xs={9} md={10} className={classes.colHeader}>\r\n\t\t\t\t\t<div className={classes.headerCell}>\r\n\t\t\t\t\t\t{t(\"reportsModule.faultDesc\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid container className={classes.table}>\r\n\t\t\t\t{faults.map((f, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<Grid xs={3} md={2} item className={classes.gridCell}>\r\n\t\t\t\t\t\t\t\t<div className={classes.faultIdData}>\r\n\t\t\t\t\t\t\t\t\t<ItemLink itemId={f.faultId} module={\"faults\"} size={14} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid xs={9} md={10} className={classes.gridCell}>\r\n\t\t\t\t\t\t\t\t<div className={classes.faultDescData}>{f.description}</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\twidth: '100%'\r\n\t},\r\n\theader: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"14px\",\r\n\t\tpadding: \"10px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\t\r\n\t},\r\n\ttable: {\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tborderRadius: \"0 0 10px 10px\",\r\n\t},\r\n\theaders: {\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tpadding: \"10px 0\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\tmarginTop: '10px',\r\n\t\tfontSize: '14px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tposition: 'sticky',\r\n\t\t\ttop: '55px',\r\n\t\t\tborderRadius: \"0\",\r\n\t\t}\r\n\t},\r\n    headerCell: {\r\n\t\tpadding: '10px 20px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n        \tpadding: '10px'\r\n\t\t}\r\n    },\r\n\tcolHeader: {\r\n\t\tcolor: \"rgba(255,255,255,0.8)\",\r\n\t},\r\n\tfaultIdData: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tmargin: \"auto\",\r\n\t},\r\n\tfaultDescData: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"14px\",\r\n\t\tpadding: \"10px\",\r\n\t},\r\n\tgridCell: {\r\n\t\tborderTop: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tdisplay: \"flex\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\reportItems\\ItemCounter.js",["1312","1313"],"import { Icon, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const ItemCounter = ({ itemCount, itemLabel, color, TopIcon}) => {\r\n\t\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n\r\n\treturn (\r\n\t\t<div className={classes.countContainer}>\r\n            <Icon className={classes.icon}>\r\n                {TopIcon}\r\n            </Icon>\r\n            <div className={classes.itemsCount}>\r\n                {itemCount}\r\n            </div>\r\n            <div className={classes.itemsLabel} style={{ background: color}}>\r\n                {itemLabel}\r\n            </div>\r\n        </div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    countContainer: {\r\n        width: '250px',\r\n        height: '250px',\r\n        borderRadius: '10px',\r\n        margin: '20px 10px',\r\n        color: 'white',\r\n        background: 'rgba(0,0,0,0.4)',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '130px',\r\n            height: '130px',\r\n            margin: 'auto 10px',\r\n        }\r\n    },\r\n    itemsCount: {\r\n        fontSize: '42px',\r\n        margin: '0 auto',\r\n        width: 'fit-content',\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '22px',\r\n            padding: '10px',\r\n    \r\n        }\r\n    },\r\n    itemsLabel: {\r\n        fontSize: '14px',\r\n        margin: '0 auto',\r\n        width: 'fit-content',\r\n        marginTop: '10px',\r\n        padding: '8px 20px',\r\n        borderRadius: '50px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            padding: '8px 15px',\r\n            lineHeight: '1',\r\n            marginTop: '5px',\r\n            padding: '5px 10px',\r\n            fontSize: '11px',\r\n            width: 'calc(100% - 20px)',\r\n            borderRadius: '0 0 10px 10px',\r\n            textAlign: 'center'\r\n        }\r\n    },\r\n    opened: {\r\n        background: 'green',\r\n        [theme.breakpoints.down('sm')]: {\r\n            background: 'none'\r\n        }\r\n    },\r\n    closed: {\r\n        background: 'red',\r\n        [theme.breakpoints.down('sm')]: {\r\n            background: 'none'\r\n        }\r\n    },\r\n    icon: {\r\n        margin: '0 auto',\r\n        width: 'calc(100% - 40px)',\r\n        height: '60px',\r\n        padding: '20px',\r\n        background: 'rgba(0,0,0,0.4)',\r\n        borderRadius: '10px 10px 0 0',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginBottom: '20px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: '40px',\r\n            padding: '10px 20px',\r\n            marginBottom: '0px',\r\n        }\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\reportItems\\MostUsedTags.js",["1314"],"import { makeStyles } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getMostUsedTags } from \"../../../../api/reportsApi\";\r\nimport { LoadingProgress } from \"../../../reuseables/LoadingProgress\";\r\n\r\nexport const MostUsedTags = ({ data }) => {\r\n\t\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const [ tags, setTags ] = useState(null);\r\n\r\n    useEffect(() => {\r\n        prepareData()\r\n    }, [])\r\n\r\n    const prepareData = () => {\r\n        let ts = getMostUsedTags(data);\r\n        setTags(ts)\r\n    };\r\n\r\n\treturn (\r\n        !tags ? \r\n        <LoadingProgress /> :\r\n        <div className={classes.mainContainer}>\r\n            <div className={classes.header}>\r\n                {t(\"reportsModule.mostUsedTags\")}\r\n            </div>\r\n            <div className={classes.tagsContainer}>\r\n                {tags.map((t,i) => {\r\n                    return (\r\n                        <div className={classes.tag}>\r\n                            <label className={classes.tagLabel}>{t.value}</label>\r\n                            <div className={classes.tagCount}>{t.count}</div>\r\n                        </div>\r\n                    )\r\n                })}\r\n        </div>\r\n        </div>\r\n\t\t\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainContainer: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        width: 'inherit',\r\n        height: 'fit-content',\r\n        borderRadius: '10px',\r\n        padding: '20px',\r\n        margin: '10px 0 10px auto',\r\n    },\r\n    tagsContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        padding: '10px 0' \r\n    },\r\n    tag: {\r\n        display: 'flex',\r\n        background: 'rgba(255,255,255,0.7)',\r\n        width: 'fit-content',\r\n        borderRadius: '50px',\r\n        margin: '5px',\r\n        padding: '5px',\r\n        fontSize: '11px',\r\n        height: 'fit-content',\r\n        alignItems: 'center'\r\n    },\r\n    header: {\r\n        color: 'rgba(255,255,255,0.8)',\r\n        fontSize: '13px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '5px'\r\n    },\r\n    tagCount: {\r\n        width: '20px',\r\n        height: '20px',\r\n        background: 'white',\r\n        borderRadius: '50px',\r\n        textAlign: 'center',\r\n        lineHeight: '1.8',\r\n        color: 'black',\r\n        fontSize: '12px',\r\n        fontWeight: '600'\r\n    },\r\n    tagLabel: {\r\n        lineHeight: '1.5',\r\n        padding: '0 10px'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\reportItems\\SystemLocationGraph.js",["1315"],"import { Button, makeStyles, useTheme } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport clsx from \"clsx\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { LoadingProgress } from \"../../../reuseables/LoadingProgress\";\r\nimport {\r\n\tgetLocationData,\r\n\tgetSystemData,\r\n} from \"../../../../api/reportsApi\";\r\n\r\nexport const SystemLocationGraph = ({ data }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n    const theme = useTheme();\r\n\tconst [mode, setMode] = useState([\"system\"]);\r\n\tconst [chartState, setChartState] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tprepareData();\r\n\t}, [mode, data]);\r\n\r\n\tconst prepareData = async () => {\r\n\t\tlet csData = await getCsData(data);\r\n\t\tlet cs = {\r\n\t\t\tseries: [\r\n\t\t\t\t{\r\n\t\t\t\t\tdata: csData.series,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\toptions: {\r\n\t\t\t\tchart: {\r\n\t\t\t\t\theight: 320,\r\n\t\t\t\t\ttype: \"bar\",\r\n                    animations: {\r\n                        enabled: false,\r\n                    },\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n\t\t\t\t},\r\n                colors: [theme.palette.leading],\r\n\t\t\t\tplotOptions: {\r\n\t\t\t\t\tbar: {\r\n\t\t\t\t\t\tcolumnWidth: \"50%\",\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tdataLabels: {\r\n\t\t\t\t\tenabled: true,\r\n                    \r\n\t\t\t\t},\r\n\t\t\t\tlegend: {\r\n\t\t\t\t\tshow: false,\r\n\t\t\t\t},\r\n\t\t\t\txaxis: {\r\n\t\t\t\t\tcategories: csData.labels,\r\n                    position: 'bottom',\r\n\t\t\t\t\tlabels: {\r\n                        show: true,\r\n                        rotate: 30,\r\n                        rotateAlways: false,\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\tfontSize: \"11px\",\r\n                            textAlign: 'center',\r\n                            colors: '#FFF',\r\n                            cssClass: classes.labels,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n                yaxis: {\r\n                    labels: {\r\n                        show: false\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: false\r\n                }\r\n\t\t\t},\r\n\t\t};\r\n\t\tsetChartState(cs);\r\n\t};\r\n\tconst toggle = (toggleTo) => (event) => {\r\n\t\tsetMode([toggleTo]);\r\n\t};\r\n\r\n\tconst getCsData = async (d) => {\r\n\t\tif (mode.includes(\"system\")) {\r\n\t\t\t// if (mode.includes(\"location\")) {\r\n\t\t\t// \treturn await getCombinationData(d.byCombination);\r\n\t\t\t// }\r\n\t\t\treturn await getSystemData(d.bySystem);\r\n\t\t}\r\n\t\treturn await getLocationData(d.byLocation);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.mainContainer}>\r\n             <div className={classes.chartHeader}>\r\n                    {t(\"reportsModule.chartHeader\")}\r\n                </div> \r\n\t\t\t<div className={classes.buttonsContainer}>\r\n               \r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\tclasses.toggler,\r\n\t\t\t\t\t\tmode.includes(\"system\") && classes.active\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tonClick={toggle(\"system\")}\r\n\t\t\t\t>\r\n\t\t\t\t\t{t(\"reportsModule.system\")}\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\tclasses.toggler,\r\n\t\t\t\t\t\tmode.includes(\"location\") && classes.active\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tonClick={toggle(\"location\")}\r\n\t\t\t\t>\r\n\t\t\t\t\t{t(\"reportsModule.location\")}\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.graphContainer}>\r\n\t\t\t\t{!chartState ? (\r\n\t\t\t\t\t<LoadingProgress />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Chart\r\n\t\t\t\t\t\toptions={chartState.options}\r\n\t\t\t\t\t\tseries={chartState.series}\r\n\t\t\t\t\t\ttype=\"bar\"\r\n\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\theight={260}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\theight: \"340px\",\r\n\t\twidth: \"inherit\",\r\n        background: 'rgba(0,0,0,0.4)',\r\n        padding: '20px',\r\n        borderRadius: '10px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            padding: '0 10px',\r\n            overflow: 'visible'\r\n        }\r\n\t},\r\n\ttoggler: {\r\n\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"5px 30px\",\r\n\t\tmargin: \"0 5px\",\r\n\t\tcolor: \"rgba(255,255,255,0.6)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\t},\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '13px',\r\n            padding: \"3px 30px\",\r\n            margin: '0 20px'\r\n        }\r\n\t},\r\n\tactive: {\r\n\t\tbackground: theme.palette.leading,\r\n        color: 'white'\r\n\t},\r\n    labels: {\r\n        \r\n    },\r\n    buttonsContainer: {\r\n        display: 'flex',\r\n        color: 'white',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('sm')]: {\r\n            \r\n        }\r\n    },\r\n    chartHeader: {\r\n        color: 'rgba(255,255,255,0.8)',\r\n        fontSize: '12px',\r\n        padding: '10px'\r\n    },\r\n    graphContainer: {\r\n        width: '100%'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\reportItems\\TopUser.js",["1316"],"import { Avatar, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getFullName } from \"../../../../api/genericApi\";\r\nimport clsx from 'clsx';\r\n\r\nexport const TopUser = ({ user, topUser, actionCount}) => {\r\n\t\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n\r\n\treturn (\r\n\t\t<div className={topUser ? classes.topUserMain : classes.secondaryUserMain}>\r\n            <Avatar className={topUser ? classes.topUserAvatar : classes.secondaryUserAvatar} src={user.avatar} />\r\n            <div className={topUser ? classes.topUserDetails : classes.secondaryUserDetails}>\r\n                <div className={topUser ? classes.topUserName : classes.secondaryUserName}>\r\n                    {getFullName(user)}\r\n                </div>\r\n                <div className={topUser ? classes.topUserCompany : classes.secondaryUserCompany}>\r\n                    {user.employedBy}\r\n                </div>\r\n            </div>\r\n            <div className={topUser ? classes.topUserActions : classes.secondaryUserActions}>\r\n                <div className={topUser ? classes.topUserActionsCount : classes.secondaryUserActionsCount}>\r\n                    {actionCount}\r\n                </div>\r\n                <div className={topUser ? classes.topUserActionsLabel : classes.secondaryUserActionsLabel}>\r\n                    {t(\"reportsModule.userActions\")}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    topUserMain: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        borderRadius: '10px',\r\n        display: 'flex',\r\n        color: 'white',\r\n        padding: '20px 10px',\r\n        width: '340px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: 'auto',\r\n            padding: '20px 10px'\r\n        }\r\n    },\r\n    topUserAvatar: {\r\n        height: '60px',\r\n        width: '60px',\r\n    },\r\n    topUserDetails: {\r\n        padding: '10px'\r\n    },\r\n    topUserCompany: {\r\n        fontSize: '12px',\r\n        marginTop: '3px'\r\n    },\r\n    topUserActions: {\r\n        margin: 'auto 10px auto auto',\r\n        height: '50px',\r\n        width: '50px'\r\n    },\r\n    topUserActionsCount: {\r\n        textAlign: 'center',\r\n        fontSize: '22px',\r\n        marginTop: '5px'\r\n    },\r\n    topUserActionsLabel: {\r\n        textAlign: 'center',\r\n        fontSize: '10px'\r\n    },\r\n    secondaryUserMain: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        borderRadius: '10px',\r\n        display: 'flex',\r\n        color: 'white',\r\n        padding: '0px 20px',\r\n        width: '320px',\r\n        margin: '3px 0',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: 'auto',\r\n            padding: '0px 10px',\r\n        }\r\n    },\r\n    secondaryUserAvatar: {\r\n        height: '30px',\r\n        width: '30px',\r\n        margin: 'auto 0'\r\n    },\r\n    secondaryUserDetails: {\r\n        padding: '10px'\r\n    },\r\n    secondaryUserName: {\r\n        fontSize: '13px'\r\n    },\r\n    secondaryUserCompany: {\r\n        fontSize: '11px',\r\n        marginTop: '3px'\r\n    },\r\n    secondaryUserActions: {\r\n        margin: 'auto 0 auto auto',\r\n        height: '50px',\r\n        width: '50px',\r\n    },\r\n    secondaryUserActionsCount: {\r\n        textAlign: 'center',\r\n        fontSize: '16px',\r\n        marginTop: '8px'\r\n    },\r\n    secondaryUserActionsLabel: {\r\n        textAlign: 'center',\r\n        fontSize: '10px'\r\n    },\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\reports\\ReportOption.js",["1317"],"import {\r\n\tButton,\r\n\tGrid,\r\n\tmakeStyles,\r\n\tMenuItem,\r\n\tSelect,\r\n\tTextField,\r\n} from \"@material-ui/core\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { CustomDatePicker } from \"../../reuseables/datepickers/CustomeDatePicker\";\r\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\r\nimport clsx from \"clsx\";\r\nimport { format } from \"date-fns\";\r\nimport { useHistory } from \"react-router\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\n\r\nexport const ReportOption = ({ reportId, reportName, assets }) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\t\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { t } = useTranslation();\r\n\tconst [fromDate, setFromDate] = useState(null);\r\n\tconst [toDate, setToDate] = useState(null);\r\n\tconst [asset, setAsset] = useState(null);\r\n\r\n\tconst handleStartDateChange = (date) => {\r\n\t\tsetFromDate(date);\r\n\t};\r\n\r\n\tconst handleEndDateChange = (date) => {\r\n\t\tsetToDate(date);\r\n\t};\r\n\r\n\tconst handleAssetChange = (e) => {\r\n\t\tsetAsset(e.target.value);\r\n\t};\r\n\r\n\tconst generateReport = async () => {\r\n\t\thistory.push(\r\n\t\t\t`reports/${reportId}?asset=${asset}&fromDate=${format(\r\n\t\t\t\tfromDate,\r\n\t\t\t\t\"yyyy-MM-dd\"\r\n\t\t\t)}&toDate=${format(toDate, \"yyyy-MM-dd\")}`\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid container className={classes.reportItemContainer}>\r\n\t\t\t<Grid item xs={12} md={3} lg={2} className={classes.reportName}>\r\n\t\t\t\t{reportName}\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Grid item xs={12} md={6} lg={8} className={classes.datesContainer}>\r\n\t\t\t\t<div className={classes.assetContainer}>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tselect\r\n\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\tvalue={asset}\r\n\t\t\t\t\t\tonChange={handleAssetChange}\r\n\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\tSelectProps={{\r\n                            MenuProps: {\r\n                                classes: {\r\n                                    paper: classes.menupaper,\r\n                                },\r\n                            }\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tsize={\"small\"}\r\n                        label={t(\"reportsModule.asset\")}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{assets.map((asset, i) => (\r\n\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\tvalue={asset.value}\r\n\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{asset.text}\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</TextField>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={clsx(classes.fromDate, classes.date)}>\r\n\t\t\t\t\t<CustomDatePicker\r\n\t\t\t\t\t\tdata={fromDate}\r\n\t\t\t\t\t\thandleChange={handleStartDateChange}\r\n\t\t\t\t\t\tlabel={t(\"reportsModule.startDate\")}\r\n\t\t\t\t\t\tsize={\"small\"}\r\n\t\t\t\t\t\tmaxDate={toDate || null}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={clsx(classes.toDate, classes.date)}>\r\n\t\t\t\t\t<CustomDatePicker\r\n\t\t\t\t\t\tdata={toDate}\r\n\t\t\t\t\t\thandleChange={handleEndDateChange}\r\n\t\t\t\t\t\tlabel={t(\"reportsModule.endDate\")}\r\n\t\t\t\t\t\tsize={\"small\"}\r\n\t\t\t\t\t\tminDate={fromDate || null}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Grid item xs={12} md={3} lg={2} className={classes.generateReport}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={generateReport}\r\n\t\t\t\t\tstartIcon={<OpenInNewIcon />}\r\n\t\t\t\t\tclassName={classes.generateBtn}\r\n\t\t\t\t\tdisabled={!fromDate || !toDate || !asset}\r\n\t\t\t\t>\r\n\t\t\t\t\t{t(\"reportsModule.generateReport\")}\r\n\t\t\t\t</Button>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\treportItemContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tcolor: \"white\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\tpadding: \"5px 20px\",\r\n\t\tmargin: \"5px 0\",\r\n\t},\r\n\treportName: {\r\n\t\tpadding: \"20px\",\r\n\t\tfontSize: \"18px\",\r\n\t},\r\n\tdatesContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"10px\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\tflexFlow: \"wrap\",\r\n\t},\r\n\tdate: {\r\n\t\tpadding: \"5px 10px\",\r\n        width: '200px'\r\n\t},\r\n\tassetContainer: {\r\n\t\tpadding: \"5px 10px\",\r\n\t},\r\n    selectInput: {\r\n        width: '200px'\r\n    },\r\n\tgenerateReport: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tpadding: \"10px 0\",\r\n\t},\r\n\tgenerateBtn: {\r\n\t\tbackground: theme.palette.leading,\r\n\t\twidth: \"fit-content\",\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"5px 30px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: theme.palette.leading,\r\n\t\t\tcolor: \"white\",\r\n\t\t},\r\n\t\t\"&:disabled\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\t\tcolor: \"rgba(255,255,255,0.3)\",\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t\theight: \"200px\",\r\n\t\toverflowY: \"auto\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\"\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"100%\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\t},\r\n\t},\r\n    \r\n}));\r\n",{"ruleId":"1318","severity":1,"message":"1319","line":11,"column":1,"nodeType":"1320","messageId":"1321","endLine":18,"endColumn":3},{"ruleId":"1322","replacedBy":"1323"},{"ruleId":"1324","replacedBy":"1325"},{"ruleId":"1326","severity":1,"message":"1327","line":20,"column":10,"nodeType":"1328","messageId":"1329","endLine":20,"endColumn":20},{"ruleId":"1326","severity":1,"message":"1330","line":25,"column":10,"nodeType":"1328","messageId":"1329","endLine":25,"endColumn":13},{"ruleId":"1331","severity":1,"message":"1332","line":37,"column":5,"nodeType":"1333","endLine":37,"endColumn":7,"suggestions":"1334"},{"ruleId":"1326","severity":1,"message":"1335","line":1,"column":10,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":34},{"ruleId":"1326","severity":1,"message":"1336","line":5,"column":10,"nodeType":"1328","messageId":"1329","endLine":5,"endColumn":18},{"ruleId":"1331","severity":1,"message":"1337","line":33,"column":8,"nodeType":"1333","endLine":33,"endColumn":10,"suggestions":"1338"},{"ruleId":"1331","severity":1,"message":"1339","line":35,"column":8,"nodeType":"1333","endLine":35,"endColumn":10,"suggestions":"1340"},{"ruleId":"1341","severity":1,"message":"1342","line":26,"column":27,"nodeType":"1343","messageId":"1321","endLine":26,"endColumn":29},{"ruleId":"1326","severity":1,"message":"1344","line":30,"column":10,"nodeType":"1328","messageId":"1329","endLine":30,"endColumn":11},{"ruleId":"1326","severity":1,"message":"1345","line":3,"column":2,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":6},{"ruleId":"1326","severity":1,"message":"1346","line":9,"column":40,"nodeType":"1328","messageId":"1329","endLine":9,"endColumn":46},{"ruleId":"1326","severity":1,"message":"1347","line":23,"column":8,"nodeType":"1328","messageId":"1329","endLine":23,"endColumn":15},{"ruleId":"1326","severity":1,"message":"1348","line":33,"column":9,"nodeType":"1328","messageId":"1329","endLine":33,"endColumn":18},{"ruleId":"1326","severity":1,"message":"1349","line":44,"column":9,"nodeType":"1328","messageId":"1329","endLine":44,"endColumn":23},{"ruleId":"1326","severity":1,"message":"1350","line":44,"column":25,"nodeType":"1328","messageId":"1329","endLine":44,"endColumn":42},{"ruleId":"1331","severity":1,"message":"1351","line":74,"column":5,"nodeType":"1333","endLine":74,"endColumn":7,"suggestions":"1352"},{"ruleId":"1353","severity":1,"message":"1354","line":78,"column":4,"nodeType":"1328","messageId":"1355","endLine":78,"endColumn":12},{"ruleId":"1331","severity":1,"message":"1356","line":78,"column":15,"nodeType":"1357","endLine":78,"endColumn":38},{"ruleId":"1353","severity":1,"message":"1354","line":83,"column":6,"nodeType":"1328","messageId":"1355","endLine":83,"endColumn":14},{"ruleId":"1331","severity":1,"message":"1358","line":119,"column":5,"nodeType":"1333","endLine":119,"endColumn":19,"suggestions":"1359"},{"ruleId":"1360","severity":1,"message":"1361","line":237,"column":6,"nodeType":"1362","endLine":237,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1363","line":1,"column":29,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":38},{"ruleId":"1326","severity":1,"message":"1345","line":18,"column":5,"nodeType":"1328","messageId":"1329","endLine":18,"endColumn":9},{"ruleId":"1364","severity":1,"message":"1365","line":126,"column":21,"nodeType":"1366","endLine":126,"endColumn":132},{"ruleId":"1326","severity":1,"message":"1367","line":1,"column":10,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1368","line":2,"column":38,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":48},{"ruleId":"1326","severity":1,"message":"1369","line":11,"column":10,"nodeType":"1328","messageId":"1329","endLine":11,"endColumn":24},{"ruleId":"1326","severity":1,"message":"1347","line":1,"column":8,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":15},{"ruleId":"1326","severity":1,"message":"1370","line":1,"column":18,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":29},{"ruleId":"1326","severity":1,"message":"1371","line":1,"column":61,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":74},{"ruleId":"1326","severity":1,"message":"1372","line":2,"column":10,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":28},{"ruleId":"1326","severity":1,"message":"1373","line":2,"column":10,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":21},{"ruleId":"1326","severity":1,"message":"1367","line":1,"column":10,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1374","line":22,"column":8,"nodeType":"1328","messageId":"1329","endLine":22,"endColumn":16},{"ruleId":"1326","severity":1,"message":"1330","line":26,"column":10,"nodeType":"1328","messageId":"1329","endLine":26,"endColumn":13},{"ruleId":"1326","severity":1,"message":"1375","line":27,"column":8,"nodeType":"1328","messageId":"1329","endLine":27,"endColumn":14},{"ruleId":"1331","severity":1,"message":"1376","line":37,"column":5,"nodeType":"1333","endLine":37,"endColumn":7,"suggestions":"1377"},{"ruleId":"1326","severity":1,"message":"1378","line":14,"column":8,"nodeType":"1328","messageId":"1329","endLine":14,"endColumn":15},{"ruleId":"1326","severity":1,"message":"1374","line":15,"column":11,"nodeType":"1328","messageId":"1329","endLine":15,"endColumn":19},{"ruleId":"1326","severity":1,"message":"1379","line":17,"column":19,"nodeType":"1328","messageId":"1329","endLine":17,"endColumn":26},{"ruleId":"1364","severity":1,"message":"1365","line":46,"column":45,"nodeType":"1366","endLine":46,"endColumn":112},{"ruleId":"1326","severity":1,"message":"1380","line":33,"column":9,"nodeType":"1328","messageId":"1329","endLine":33,"endColumn":13},{"ruleId":"1331","severity":1,"message":"1381","line":50,"column":5,"nodeType":"1333","endLine":50,"endColumn":16,"suggestions":"1382"},{"ruleId":"1326","severity":1,"message":"1383","line":76,"column":8,"nodeType":"1328","messageId":"1329","endLine":76,"endColumn":18},{"ruleId":"1326","severity":1,"message":"1384","line":1,"column":28,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":41},{"ruleId":"1326","severity":1,"message":"1385","line":1,"column":43,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":53},{"ruleId":"1326","severity":1,"message":"1386","line":3,"column":10,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":13},{"ruleId":"1331","severity":1,"message":"1387","line":25,"column":5,"nodeType":"1333","endLine":25,"endColumn":22,"suggestions":"1388"},{"ruleId":"1331","severity":1,"message":"1389","line":39,"column":5,"nodeType":"1333","endLine":39,"endColumn":16,"suggestions":"1390"},{"ruleId":"1326","severity":1,"message":"1345","line":1,"column":10,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1391","line":1,"column":40,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":45},{"ruleId":"1326","severity":1,"message":"1392","line":2,"column":17,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":25},{"ruleId":"1326","severity":1,"message":"1363","line":2,"column":27,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":36},{"ruleId":"1326","severity":1,"message":"1393","line":3,"column":41,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":58},{"ruleId":"1326","severity":1,"message":"1394","line":3,"column":60,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":67},{"ruleId":"1326","severity":1,"message":"1395","line":3,"column":79,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":87},{"ruleId":"1326","severity":1,"message":"1396","line":3,"column":89,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":95},{"ruleId":"1326","severity":1,"message":"1397","line":4,"column":19,"nodeType":"1328","messageId":"1329","endLine":4,"endColumn":25},{"ruleId":"1326","severity":1,"message":"1398","line":8,"column":8,"nodeType":"1328","messageId":"1329","endLine":8,"endColumn":16},{"ruleId":"1326","severity":1,"message":"1399","line":9,"column":10,"nodeType":"1328","messageId":"1329","endLine":9,"endColumn":22},{"ruleId":"1400","severity":1,"message":"1401","line":101,"column":18,"nodeType":"1402","messageId":"1403","endLine":101,"endColumn":19,"suggestions":"1404"},{"ruleId":"1326","severity":1,"message":"1405","line":19,"column":10,"nodeType":"1328","messageId":"1329","endLine":19,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1406","line":19,"column":16,"nodeType":"1328","messageId":"1329","endLine":19,"endColumn":23},{"ruleId":"1326","severity":1,"message":"1407","line":20,"column":10,"nodeType":"1328","messageId":"1329","endLine":20,"endColumn":14},{"ruleId":"1331","severity":1,"message":"1408","line":41,"column":5,"nodeType":"1333","endLine":41,"endColumn":16,"suggestions":"1409"},{"ruleId":"1326","severity":1,"message":"1410","line":12,"column":8,"nodeType":"1328","messageId":"1329","endLine":12,"endColumn":18},{"ruleId":"1326","severity":1,"message":"1411","line":1,"column":10,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":16},{"ruleId":"1326","severity":1,"message":"1378","line":33,"column":8,"nodeType":"1328","messageId":"1329","endLine":33,"endColumn":15},{"ruleId":"1326","severity":1,"message":"1374","line":34,"column":8,"nodeType":"1328","messageId":"1329","endLine":34,"endColumn":16},{"ruleId":"1326","severity":1,"message":"1407","line":36,"column":13,"nodeType":"1328","messageId":"1329","endLine":36,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1379","line":36,"column":19,"nodeType":"1328","messageId":"1329","endLine":36,"endColumn":26},{"ruleId":"1364","severity":1,"message":"1365","line":51,"column":33,"nodeType":"1366","endLine":51,"endColumn":54},{"ruleId":"1326","severity":1,"message":"1344","line":29,"column":13,"nodeType":"1328","messageId":"1329","endLine":29,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1412","line":30,"column":13,"nodeType":"1328","messageId":"1329","endLine":30,"endColumn":21},{"ruleId":"1326","severity":1,"message":"1413","line":281,"column":7,"nodeType":"1328","messageId":"1329","endLine":281,"endColumn":16},{"ruleId":"1326","severity":1,"message":"1414","line":8,"column":2,"nodeType":"1328","messageId":"1329","endLine":8,"endColumn":6},{"ruleId":"1326","severity":1,"message":"1415","line":11,"column":2,"nodeType":"1328","messageId":"1329","endLine":11,"endColumn":6},{"ruleId":"1326","severity":1,"message":"1416","line":24,"column":8,"nodeType":"1328","messageId":"1329","endLine":24,"endColumn":33},{"ruleId":"1326","severity":1,"message":"1417","line":27,"column":8,"nodeType":"1328","messageId":"1329","endLine":27,"endColumn":27},{"ruleId":"1326","severity":1,"message":"1418","line":28,"column":8,"nodeType":"1328","messageId":"1329","endLine":28,"endColumn":28},{"ruleId":"1326","severity":1,"message":"1419","line":33,"column":13,"nodeType":"1328","messageId":"1329","endLine":33,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1420","line":35,"column":8,"nodeType":"1328","messageId":"1329","endLine":35,"endColumn":15},{"ruleId":"1421","severity":1,"message":"1422","line":41,"column":49,"nodeType":"1423","messageId":"1321","endLine":41,"endColumn":51},{"ruleId":"1326","severity":1,"message":"1424","line":41,"column":9,"nodeType":"1328","messageId":"1329","endLine":41,"endColumn":23},{"ruleId":"1331","severity":1,"message":"1425","line":72,"column":5,"nodeType":"1333","endLine":72,"endColumn":20,"suggestions":"1426"},{"ruleId":"1326","severity":1,"message":"1414","line":3,"column":2,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":6},{"ruleId":"1326","severity":1,"message":"1419","line":24,"column":13,"nodeType":"1328","messageId":"1329","endLine":24,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1420","line":28,"column":8,"nodeType":"1328","messageId":"1329","endLine":28,"endColumn":15},{"ruleId":"1427","severity":1,"message":"1428","line":130,"column":3,"nodeType":"1429","messageId":"1321","endLine":130,"endColumn":9},{"ruleId":"1326","severity":1,"message":"1430","line":2,"column":2,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":19},{"ruleId":"1326","severity":1,"message":"1415","line":3,"column":2,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":6},{"ruleId":"1326","severity":1,"message":"1391","line":10,"column":2,"nodeType":"1328","messageId":"1329","endLine":10,"endColumn":7},{"ruleId":"1326","severity":1,"message":"1431","line":11,"column":2,"nodeType":"1328","messageId":"1329","endLine":11,"endColumn":10},{"ruleId":"1326","severity":1,"message":"1432","line":14,"column":2,"nodeType":"1328","messageId":"1329","endLine":14,"endColumn":8},{"ruleId":"1326","severity":1,"message":"1345","line":15,"column":2,"nodeType":"1328","messageId":"1329","endLine":15,"endColumn":6},{"ruleId":"1326","severity":1,"message":"1433","line":24,"column":10,"nodeType":"1328","messageId":"1329","endLine":24,"endColumn":30},{"ruleId":"1326","severity":1,"message":"1419","line":43,"column":13,"nodeType":"1328","messageId":"1329","endLine":43,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1420","line":45,"column":8,"nodeType":"1328","messageId":"1329","endLine":45,"endColumn":15},{"ruleId":"1421","severity":1,"message":"1422","line":74,"column":25,"nodeType":"1423","messageId":"1321","endLine":74,"endColumn":27},{"ruleId":"1427","severity":1,"message":"1434","line":319,"column":3,"nodeType":"1429","messageId":"1321","endLine":319,"endColumn":8},{"ruleId":"1427","severity":1,"message":"1435","line":373,"column":3,"nodeType":"1429","messageId":"1321","endLine":373,"endColumn":13},{"ruleId":"1427","severity":1,"message":"1435","line":394,"column":3,"nodeType":"1429","messageId":"1321","endLine":394,"endColumn":13},{"ruleId":"1326","severity":1,"message":"1436","line":2,"column":8,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":12},{"ruleId":"1326","severity":1,"message":"1392","line":4,"column":17,"nodeType":"1328","messageId":"1329","endLine":4,"endColumn":25},{"ruleId":"1326","severity":1,"message":"1420","line":17,"column":8,"nodeType":"1328","messageId":"1329","endLine":17,"endColumn":15},{"ruleId":"1326","severity":1,"message":"1437","line":19,"column":8,"nodeType":"1328","messageId":"1329","endLine":19,"endColumn":27},{"ruleId":"1326","severity":1,"message":"1438","line":4,"column":8,"nodeType":"1328","messageId":"1329","endLine":4,"endColumn":25},{"ruleId":"1326","severity":1,"message":"1439","line":9,"column":10,"nodeType":"1328","messageId":"1329","endLine":9,"endColumn":29},{"ruleId":"1326","severity":1,"message":"1419","line":38,"column":16,"nodeType":"1328","messageId":"1329","endLine":38,"endColumn":20},{"ruleId":"1326","severity":1,"message":"1419","line":17,"column":20,"nodeType":"1328","messageId":"1329","endLine":17,"endColumn":24},{"ruleId":"1326","severity":1,"message":"1419","line":37,"column":16,"nodeType":"1328","messageId":"1329","endLine":37,"endColumn":20},{"ruleId":"1331","severity":1,"message":"1440","line":60,"column":8,"nodeType":"1333","endLine":60,"endColumn":25,"suggestions":"1441"},{"ruleId":"1326","severity":1,"message":"1419","line":9,"column":13,"nodeType":"1328","messageId":"1329","endLine":9,"endColumn":17},{"ruleId":"1360","severity":1,"message":"1361","line":12,"column":44,"nodeType":"1362","endLine":12,"endColumn":51},{"ruleId":"1427","severity":1,"message":"1442","line":106,"column":9,"nodeType":"1429","messageId":"1321","endLine":106,"endColumn":16},{"ruleId":"1326","severity":1,"message":"1443","line":3,"column":2,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":10},{"ruleId":"1326","severity":1,"message":"1444","line":7,"column":2,"nodeType":"1328","messageId":"1329","endLine":7,"endColumn":7},{"ruleId":"1326","severity":1,"message":"1445","line":14,"column":2,"nodeType":"1328","messageId":"1329","endLine":14,"endColumn":28},{"ruleId":"1326","severity":1,"message":"1446","line":22,"column":10,"nodeType":"1328","messageId":"1329","endLine":22,"endColumn":22},{"ruleId":"1326","severity":1,"message":"1419","line":29,"column":13,"nodeType":"1328","messageId":"1329","endLine":29,"endColumn":17},{"ruleId":"1421","severity":1,"message":"1422","line":143,"column":29,"nodeType":"1423","messageId":"1321","endLine":143,"endColumn":31},{"ruleId":"1421","severity":1,"message":"1422","line":20,"column":40,"nodeType":"1423","messageId":"1321","endLine":20,"endColumn":42},{"ruleId":"1326","severity":1,"message":"1447","line":3,"column":2,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":19},{"ruleId":"1326","severity":1,"message":"1385","line":7,"column":22,"nodeType":"1328","messageId":"1329","endLine":7,"endColumn":32},{"ruleId":"1326","severity":1,"message":"1430","line":7,"column":34,"nodeType":"1328","messageId":"1329","endLine":7,"endColumn":51},{"ruleId":"1326","severity":1,"message":"1448","line":11,"column":10,"nodeType":"1328","messageId":"1329","endLine":11,"endColumn":20},{"ruleId":"1326","severity":1,"message":"1449","line":12,"column":10,"nodeType":"1328","messageId":"1329","endLine":12,"endColumn":27},{"ruleId":"1326","severity":1,"message":"1378","line":30,"column":8,"nodeType":"1328","messageId":"1329","endLine":30,"endColumn":15},{"ruleId":"1364","severity":1,"message":"1365","line":153,"column":9,"nodeType":"1366","endLine":153,"endColumn":70},{"ruleId":"1364","severity":1,"message":"1365","line":177,"column":8,"nodeType":"1366","endLine":184,"endColumn":10},{"ruleId":"1326","severity":1,"message":"1348","line":27,"column":9,"nodeType":"1328","messageId":"1329","endLine":27,"endColumn":18},{"ruleId":"1326","severity":1,"message":"1450","line":27,"column":20,"nodeType":"1328","messageId":"1329","endLine":27,"endColumn":32},{"ruleId":"1331","severity":1,"message":"1451","line":73,"column":5,"nodeType":"1333","endLine":73,"endColumn":20,"suggestions":"1452"},{"ruleId":"1427","severity":1,"message":"1453","line":219,"column":3,"nodeType":"1429","messageId":"1321","endLine":219,"endColumn":15},{"ruleId":"1427","severity":1,"message":"1453","line":231,"column":3,"nodeType":"1429","messageId":"1321","endLine":231,"endColumn":15},{"ruleId":"1326","severity":1,"message":"1344","line":23,"column":10,"nodeType":"1328","messageId":"1329","endLine":23,"endColumn":11},{"ruleId":"1421","severity":1,"message":"1422","line":65,"column":53,"nodeType":"1423","messageId":"1321","endLine":65,"endColumn":55},{"ruleId":"1421","severity":1,"message":"1422","line":73,"column":54,"nodeType":"1423","messageId":"1321","endLine":73,"endColumn":56},{"ruleId":"1454","severity":1,"message":"1455","line":151,"column":6,"nodeType":"1456","messageId":"1457","endLine":151,"endColumn":13},{"ruleId":"1326","severity":1,"message":"1375","line":41,"column":8,"nodeType":"1328","messageId":"1329","endLine":41,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1419","line":42,"column":13,"nodeType":"1328","messageId":"1329","endLine":42,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1458","line":50,"column":15,"nodeType":"1328","messageId":"1329","endLine":50,"endColumn":22},{"ruleId":"1331","severity":1,"message":"1459","line":65,"column":5,"nodeType":"1333","endLine":65,"endColumn":7,"suggestions":"1460"},{"ruleId":"1331","severity":1,"message":"1461","line":100,"column":5,"nodeType":"1333","endLine":100,"endColumn":36,"suggestions":"1462"},{"ruleId":"1427","severity":1,"message":"1428","line":717,"column":3,"nodeType":"1429","messageId":"1321","endLine":717,"endColumn":9},{"ruleId":"1326","severity":1,"message":"1463","line":3,"column":2,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":9},{"ruleId":"1326","severity":1,"message":"1464","line":10,"column":8,"nodeType":"1328","messageId":"1329","endLine":10,"endColumn":27},{"ruleId":"1326","severity":1,"message":"1465","line":11,"column":8,"nodeType":"1328","messageId":"1329","endLine":11,"endColumn":29},{"ruleId":"1326","severity":1,"message":"1466","line":12,"column":8,"nodeType":"1328","messageId":"1329","endLine":12,"endColumn":26},{"ruleId":"1326","severity":1,"message":"1467","line":22,"column":10,"nodeType":"1328","messageId":"1329","endLine":22,"endColumn":40},{"ruleId":"1326","severity":1,"message":"1468","line":23,"column":8,"nodeType":"1328","messageId":"1329","endLine":23,"endColumn":23},{"ruleId":"1326","severity":1,"message":"1439","line":24,"column":10,"nodeType":"1328","messageId":"1329","endLine":24,"endColumn":29},{"ruleId":"1341","severity":1,"message":"1342","line":28,"column":29,"nodeType":"1343","messageId":"1321","endLine":28,"endColumn":31},{"ruleId":"1331","severity":1,"message":"1440","line":51,"column":5,"nodeType":"1333","endLine":51,"endColumn":22,"suggestions":"1469"},{"ruleId":"1326","severity":1,"message":"1405","line":21,"column":10,"nodeType":"1328","messageId":"1329","endLine":21,"endColumn":14},{"ruleId":"1331","severity":1,"message":"1470","line":38,"column":5,"nodeType":"1333","endLine":38,"endColumn":16,"suggestions":"1471"},{"ruleId":"1331","severity":1,"message":"1472","line":53,"column":5,"nodeType":"1333","endLine":53,"endColumn":15,"suggestions":"1473"},{"ruleId":"1341","severity":1,"message":"1342","line":34,"column":35,"nodeType":"1343","messageId":"1321","endLine":34,"endColumn":37},{"ruleId":"1326","severity":1,"message":"1419","line":40,"column":13,"nodeType":"1328","messageId":"1329","endLine":40,"endColumn":17},{"ruleId":"1331","severity":1,"message":"1474","line":62,"column":5,"nodeType":"1333","endLine":62,"endColumn":22,"suggestions":"1475"},{"ruleId":"1326","severity":1,"message":"1385","line":2,"column":8,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":18},{"ruleId":"1326","severity":1,"message":"1476","line":5,"column":8,"nodeType":"1328","messageId":"1329","endLine":5,"endColumn":15},{"ruleId":"1326","severity":1,"message":"1374","line":33,"column":8,"nodeType":"1328","messageId":"1329","endLine":33,"endColumn":16},{"ruleId":"1331","severity":1,"message":"1459","line":55,"column":5,"nodeType":"1333","endLine":55,"endColumn":25,"suggestions":"1477"},{"ruleId":"1326","severity":1,"message":"1385","line":1,"column":16,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":26},{"ruleId":"1326","severity":1,"message":"1478","line":2,"column":8,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":20},{"ruleId":"1326","severity":1,"message":"1410","line":10,"column":8,"nodeType":"1328","messageId":"1329","endLine":10,"endColumn":18},{"ruleId":"1326","severity":1,"message":"1392","line":1,"column":17,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":25},{"ruleId":"1326","severity":1,"message":"1479","line":2,"column":10,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":25},{"ruleId":"1326","severity":1,"message":"1458","line":28,"column":15,"nodeType":"1328","messageId":"1329","endLine":28,"endColumn":22},{"ruleId":"1331","severity":1,"message":"1459","line":55,"column":5,"nodeType":"1333","endLine":55,"endColumn":7,"suggestions":"1480"},{"ruleId":"1364","severity":1,"message":"1365","line":318,"column":7,"nodeType":"1366","endLine":322,"endColumn":9},{"ruleId":"1364","severity":1,"message":"1365","line":331,"column":10,"nodeType":"1366","endLine":331,"endColumn":62},{"ruleId":"1331","severity":1,"message":"1481","line":30,"column":8,"nodeType":"1333","endLine":30,"endColumn":20,"suggestions":"1482"},{"ruleId":"1331","severity":1,"message":"1483","line":45,"column":8,"nodeType":"1333","endLine":45,"endColumn":15,"suggestions":"1484"},{"ruleId":"1331","severity":1,"message":"1485","line":25,"column":8,"nodeType":"1333","endLine":25,"endColumn":10,"suggestions":"1486"},{"ruleId":"1331","severity":1,"message":"1487","line":41,"column":8,"nodeType":"1333","endLine":41,"endColumn":15,"suggestions":"1488"},{"ruleId":"1326","severity":1,"message":"1375","line":15,"column":11,"nodeType":"1328","messageId":"1329","endLine":15,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1419","line":16,"column":16,"nodeType":"1328","messageId":"1329","endLine":16,"endColumn":20},{"ruleId":"1326","severity":1,"message":"1458","line":38,"column":15,"nodeType":"1328","messageId":"1329","endLine":38,"endColumn":22},{"ruleId":"1331","severity":1,"message":"1459","line":106,"column":5,"nodeType":"1333","endLine":106,"endColumn":7,"suggestions":"1489"},{"ruleId":"1427","severity":1,"message":"1490","line":418,"column":11,"nodeType":"1429","messageId":"1321","endLine":418,"endColumn":18},{"ruleId":"1427","severity":1,"message":"1428","line":1097,"column":3,"nodeType":"1429","messageId":"1321","endLine":1097,"endColumn":9},{"ruleId":"1326","severity":1,"message":"1375","line":22,"column":8,"nodeType":"1328","messageId":"1329","endLine":22,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1419","line":25,"column":13,"nodeType":"1328","messageId":"1329","endLine":25,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1347","line":2,"column":8,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":15},{"ruleId":"1326","severity":1,"message":"1491","line":174,"column":9,"nodeType":"1328","messageId":"1329","endLine":174,"endColumn":12},{"ruleId":"1326","severity":1,"message":"1419","line":39,"column":13,"nodeType":"1328","messageId":"1329","endLine":39,"endColumn":17},{"ruleId":"1331","severity":1,"message":"1474","line":60,"column":5,"nodeType":"1333","endLine":60,"endColumn":22,"suggestions":"1492"},{"ruleId":"1326","severity":1,"message":"1458","line":48,"column":15,"nodeType":"1328","messageId":"1329","endLine":48,"endColumn":22},{"ruleId":"1331","severity":1,"message":"1459","line":74,"column":5,"nodeType":"1333","endLine":74,"endColumn":7,"suggestions":"1493"},{"ruleId":"1331","severity":1,"message":"1494","line":82,"column":5,"nodeType":"1333","endLine":82,"endColumn":15,"suggestions":"1495"},{"ruleId":"1496","severity":1,"message":"1497","line":201,"column":34,"nodeType":"1498","messageId":"1499","endLine":201,"endColumn":36},{"ruleId":"1364","severity":1,"message":"1365","line":667,"column":11,"nodeType":"1366","endLine":667,"endColumn":63},{"ruleId":"1427","severity":1,"message":"1428","line":802,"column":3,"nodeType":"1429","messageId":"1321","endLine":802,"endColumn":9},{"ruleId":"1427","severity":1,"message":"1442","line":932,"column":3,"nodeType":"1429","messageId":"1321","endLine":932,"endColumn":10},{"ruleId":"1326","severity":1,"message":"1419","line":20,"column":13,"nodeType":"1328","messageId":"1329","endLine":20,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1500","line":3,"column":10,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":20},{"ruleId":"1326","severity":1,"message":"1491","line":51,"column":11,"nodeType":"1328","messageId":"1329","endLine":51,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1375","line":15,"column":11,"nodeType":"1328","messageId":"1329","endLine":15,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1419","line":16,"column":16,"nodeType":"1328","messageId":"1329","endLine":16,"endColumn":20},{"ruleId":"1331","severity":1,"message":"1501","line":28,"column":8,"nodeType":"1333","endLine":28,"endColumn":10,"suggestions":"1502"},{"ruleId":"1326","severity":1,"message":"1419","line":15,"column":16,"nodeType":"1328","messageId":"1329","endLine":15,"endColumn":20},{"ruleId":"1360","severity":1,"message":"1361","line":28,"column":68,"nodeType":"1362","endLine":28,"endColumn":92},{"ruleId":"1326","severity":1,"message":"1384","line":10,"column":2,"nodeType":"1328","messageId":"1329","endLine":10,"endColumn":15},{"ruleId":"1326","severity":1,"message":"1503","line":19,"column":10,"nodeType":"1328","messageId":"1329","endLine":19,"endColumn":20},{"ruleId":"1326","severity":1,"message":"1504","line":19,"column":22,"nodeType":"1328","messageId":"1329","endLine":19,"endColumn":33},{"ruleId":"1364","severity":1,"message":"1365","line":174,"column":10,"nodeType":"1366","endLine":174,"endColumn":57},{"ruleId":"1421","severity":1,"message":"1422","line":185,"column":19,"nodeType":"1423","messageId":"1321","endLine":185,"endColumn":21},{"ruleId":"1364","severity":1,"message":"1365","line":229,"column":10,"nodeType":"1366","endLine":232,"endColumn":12},{"ruleId":"1326","severity":1,"message":"1391","line":2,"column":22,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":27},{"ruleId":"1326","severity":1,"message":"1505","line":15,"column":13,"nodeType":"1328","messageId":"1329","endLine":15,"endColumn":20},{"ruleId":"1326","severity":1,"message":"1506","line":16,"column":13,"nodeType":"1328","messageId":"1329","endLine":16,"endColumn":27},{"ruleId":"1364","severity":1,"message":"1365","line":115,"column":13,"nodeType":"1366","endLine":115,"endColumn":58},{"ruleId":"1326","severity":1,"message":"1375","line":15,"column":11,"nodeType":"1328","messageId":"1329","endLine":15,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1419","line":16,"column":16,"nodeType":"1328","messageId":"1329","endLine":16,"endColumn":20},{"ruleId":"1331","severity":1,"message":"1507","line":25,"column":8,"nodeType":"1333","endLine":25,"endColumn":10,"suggestions":"1508"},{"ruleId":"1326","severity":1,"message":"1509","line":3,"column":10,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":24},{"ruleId":"1331","severity":1,"message":"1510","line":31,"column":8,"nodeType":"1333","endLine":31,"endColumn":10,"suggestions":"1511"},{"ruleId":"1331","severity":1,"message":"1487","line":49,"column":8,"nodeType":"1333","endLine":49,"endColumn":16,"suggestions":"1512"},{"ruleId":"1326","severity":1,"message":"1513","line":2,"column":50,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":68},{"ruleId":"1326","severity":1,"message":"1503","line":3,"column":10,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":20},{"ruleId":"1326","severity":1,"message":"1514","line":5,"column":10,"nodeType":"1328","messageId":"1329","endLine":5,"endColumn":18},{"ruleId":"1326","severity":1,"message":"1374","line":11,"column":11,"nodeType":"1328","messageId":"1329","endLine":11,"endColumn":19},{"ruleId":"1326","severity":1,"message":"1515","line":1,"column":8,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":13},{"ruleId":"1326","severity":1,"message":"1392","line":1,"column":29,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":37},{"ruleId":"1326","severity":1,"message":"1384","line":1,"column":28,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":41},{"ruleId":"1326","severity":1,"message":"1369","line":3,"column":10,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":24},{"ruleId":"1326","severity":1,"message":"1419","line":22,"column":13,"nodeType":"1328","messageId":"1329","endLine":22,"endColumn":17},{"ruleId":"1427","severity":1,"message":"1516","line":213,"column":3,"nodeType":"1429","messageId":"1321","endLine":213,"endColumn":10},{"ruleId":"1326","severity":1,"message":"1368","line":1,"column":17,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":27},{"ruleId":"1326","severity":1,"message":"1363","line":1,"column":29,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":38},{"ruleId":"1326","severity":1,"message":"1392","line":1,"column":40,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":48},{"ruleId":"1326","severity":1,"message":"1517","line":5,"column":2,"nodeType":"1328","messageId":"1329","endLine":5,"endColumn":7},{"ruleId":"1326","severity":1,"message":"1419","line":35,"column":13,"nodeType":"1328","messageId":"1329","endLine":35,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1436","line":4,"column":10,"nodeType":"1328","messageId":"1329","endLine":4,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1468","line":6,"column":8,"nodeType":"1328","messageId":"1329","endLine":6,"endColumn":23},{"ruleId":"1326","severity":1,"message":"1419","line":15,"column":16,"nodeType":"1328","messageId":"1329","endLine":15,"endColumn":20},{"ruleId":"1326","severity":1,"message":"1375","line":16,"column":11,"nodeType":"1328","messageId":"1329","endLine":16,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1518","line":3,"column":43,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":62},{"ruleId":"1326","severity":1,"message":"1367","line":4,"column":50,"nodeType":"1328","messageId":"1329","endLine":4,"endColumn":54},{"ruleId":"1331","severity":1,"message":"1519","line":22,"column":8,"nodeType":"1333","endLine":22,"endColumn":20,"suggestions":"1520"},{"ruleId":"1326","severity":1,"message":"1419","line":19,"column":16,"nodeType":"1328","messageId":"1329","endLine":19,"endColumn":20},{"ruleId":"1331","severity":1,"message":"1472","line":33,"column":8,"nodeType":"1333","endLine":33,"endColumn":16,"suggestions":"1521"},{"ruleId":"1326","severity":1,"message":"1419","line":22,"column":13,"nodeType":"1328","messageId":"1329","endLine":22,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1375","line":15,"column":11,"nodeType":"1328","messageId":"1329","endLine":15,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1419","line":16,"column":16,"nodeType":"1328","messageId":"1329","endLine":16,"endColumn":20},{"ruleId":"1331","severity":1,"message":"1522","line":26,"column":8,"nodeType":"1333","endLine":26,"endColumn":10,"suggestions":"1523"},{"ruleId":"1326","severity":1,"message":"1384","line":3,"column":5,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":18},{"ruleId":"1326","severity":1,"message":"1385","line":4,"column":5,"nodeType":"1328","messageId":"1329","endLine":4,"endColumn":15},{"ruleId":"1326","severity":1,"message":"1524","line":8,"column":8,"nodeType":"1328","messageId":"1329","endLine":8,"endColumn":31},{"ruleId":"1326","severity":1,"message":"1525","line":11,"column":8,"nodeType":"1328","messageId":"1329","endLine":11,"endColumn":24},{"ruleId":"1326","severity":1,"message":"1526","line":12,"column":8,"nodeType":"1328","messageId":"1329","endLine":12,"endColumn":37},{"ruleId":"1326","severity":1,"message":"1527","line":13,"column":8,"nodeType":"1328","messageId":"1329","endLine":13,"endColumn":30},{"ruleId":"1326","severity":1,"message":"1373","line":15,"column":29,"nodeType":"1328","messageId":"1329","endLine":15,"endColumn":40},{"ruleId":"1326","severity":1,"message":"1528","line":15,"column":42,"nodeType":"1328","messageId":"1329","endLine":15,"endColumn":58},{"ruleId":"1326","severity":1,"message":"1419","line":23,"column":13,"nodeType":"1328","messageId":"1329","endLine":23,"endColumn":17},{"ruleId":"1427","severity":1,"message":"1516","line":159,"column":9,"nodeType":"1429","messageId":"1321","endLine":159,"endColumn":16},{"ruleId":"1326","severity":1,"message":"1458","line":40,"column":15,"nodeType":"1328","messageId":"1329","endLine":40,"endColumn":22},{"ruleId":"1331","severity":1,"message":"1459","line":72,"column":5,"nodeType":"1333","endLine":72,"endColumn":21,"suggestions":"1529"},{"ruleId":"1331","severity":1,"message":"1530","line":83,"column":5,"nodeType":"1333","endLine":83,"endColumn":19,"suggestions":"1531"},{"ruleId":"1331","severity":1,"message":"1532","line":91,"column":5,"nodeType":"1333","endLine":91,"endColumn":20,"suggestions":"1533"},{"ruleId":"1534","severity":1,"message":"1535","line":206,"column":15,"nodeType":"1536","messageId":"1537","endLine":206,"endColumn":24},{"ruleId":"1427","severity":1,"message":"1428","line":938,"column":3,"nodeType":"1429","messageId":"1321","endLine":938,"endColumn":9},{"ruleId":"1326","severity":1,"message":"1458","line":50,"column":15,"nodeType":"1328","messageId":"1329","endLine":50,"endColumn":22},{"ruleId":"1331","severity":1,"message":"1538","line":85,"column":5,"nodeType":"1333","endLine":85,"endColumn":27,"suggestions":"1539"},{"ruleId":"1331","severity":1,"message":"1459","line":89,"column":5,"nodeType":"1333","endLine":89,"endColumn":7,"suggestions":"1540"},{"ruleId":"1331","severity":1,"message":"1541","line":112,"column":5,"nodeType":"1333","endLine":112,"endColumn":27,"suggestions":"1542"},{"ruleId":"1421","severity":1,"message":"1422","line":286,"column":63,"nodeType":"1423","messageId":"1321","endLine":286,"endColumn":65},{"ruleId":"1421","severity":1,"message":"1422","line":302,"column":63,"nodeType":"1423","messageId":"1321","endLine":302,"endColumn":65},{"ruleId":"1421","severity":1,"message":"1422","line":665,"column":36,"nodeType":"1423","messageId":"1321","endLine":665,"endColumn":38},{"ruleId":"1421","severity":1,"message":"1422","line":672,"column":36,"nodeType":"1423","messageId":"1321","endLine":672,"endColumn":38},{"ruleId":"1364","severity":1,"message":"1365","line":804,"column":11,"nodeType":"1366","endLine":804,"endColumn":63},{"ruleId":"1427","severity":1,"message":"1428","line":939,"column":3,"nodeType":"1429","messageId":"1321","endLine":939,"endColumn":9},{"ruleId":"1427","severity":1,"message":"1543","line":1048,"column":2,"nodeType":"1429","messageId":"1321","endLine":1048,"endColumn":9},{"ruleId":"1326","severity":1,"message":"1544","line":2,"column":49,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":65},{"ruleId":"1326","severity":1,"message":"1545","line":2,"column":67,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":75},{"ruleId":"1326","severity":1,"message":"1419","line":11,"column":16,"nodeType":"1328","messageId":"1329","endLine":11,"endColumn":20},{"ruleId":"1326","severity":1,"message":"1546","line":12,"column":13,"nodeType":"1328","messageId":"1329","endLine":12,"endColumn":18},{"ruleId":"1331","severity":1,"message":"1459","line":60,"column":5,"nodeType":"1333","endLine":60,"endColumn":7,"suggestions":"1547"},{"ruleId":"1326","severity":1,"message":"1405","line":19,"column":10,"nodeType":"1328","messageId":"1329","endLine":19,"endColumn":14},{"ruleId":"1331","severity":1,"message":"1548","line":40,"column":5,"nodeType":"1333","endLine":40,"endColumn":16,"suggestions":"1549"},{"ruleId":"1326","severity":1,"message":"1345","line":7,"column":2,"nodeType":"1328","messageId":"1329","endLine":7,"endColumn":6},{"ruleId":"1326","severity":1,"message":"1550","line":18,"column":8,"nodeType":"1328","messageId":"1329","endLine":18,"endColumn":12},{"ruleId":"1326","severity":1,"message":"1419","line":31,"column":13,"nodeType":"1328","messageId":"1329","endLine":31,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1419","line":35,"column":13,"nodeType":"1328","messageId":"1329","endLine":35,"endColumn":17},{"ruleId":"1331","severity":1,"message":"1474","line":56,"column":5,"nodeType":"1333","endLine":56,"endColumn":22,"suggestions":"1551"},{"ruleId":"1427","severity":1,"message":"1552","line":263,"column":2,"nodeType":"1429","messageId":"1321","endLine":263,"endColumn":11},{"ruleId":"1326","severity":1,"message":"1553","line":10,"column":2,"nodeType":"1328","messageId":"1329","endLine":10,"endColumn":11},{"ruleId":"1331","severity":1,"message":"1554","line":37,"column":5,"nodeType":"1333","endLine":37,"endColumn":15,"suggestions":"1555"},{"ruleId":"1326","severity":1,"message":"1556","line":53,"column":8,"nodeType":"1328","messageId":"1329","endLine":53,"endColumn":31},{"ruleId":"1496","severity":1,"message":"1557","line":103,"column":10,"nodeType":"1456","messageId":"1558","endLine":103,"endColumn":17},{"ruleId":"1427","severity":1,"message":"1552","line":217,"column":2,"nodeType":"1429","messageId":"1321","endLine":217,"endColumn":11},{"ruleId":"1326","severity":1,"message":"1559","line":4,"column":8,"nodeType":"1328","messageId":"1329","endLine":4,"endColumn":16},{"ruleId":"1326","severity":1,"message":"1560","line":3,"column":10,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":24},{"ruleId":"1326","severity":1,"message":"1397","line":3,"column":45,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":51},{"ruleId":"1341","severity":1,"message":"1342","line":11,"column":26,"nodeType":"1343","messageId":"1321","endLine":11,"endColumn":28},{"ruleId":"1326","severity":1,"message":"1561","line":14,"column":18,"nodeType":"1328","messageId":"1329","endLine":14,"endColumn":28},{"ruleId":"1326","severity":1,"message":"1562","line":3,"column":10,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":18},{"ruleId":"1326","severity":1,"message":"1563","line":16,"column":11,"nodeType":"1328","messageId":"1329","endLine":16,"endColumn":25},{"ruleId":"1421","severity":1,"message":"1422","line":46,"column":40,"nodeType":"1423","messageId":"1321","endLine":46,"endColumn":42},{"ruleId":"1421","severity":1,"message":"1422","line":51,"column":36,"nodeType":"1423","messageId":"1321","endLine":51,"endColumn":38},{"ruleId":"1421","severity":1,"message":"1422","line":56,"column":40,"nodeType":"1423","messageId":"1321","endLine":56,"endColumn":42},{"ruleId":"1326","severity":1,"message":"1367","line":2,"column":22,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":26},{"ruleId":"1341","severity":1,"message":"1342","line":7,"column":35,"nodeType":"1343","messageId":"1321","endLine":7,"endColumn":37},{"ruleId":"1326","severity":1,"message":"1367","line":2,"column":22,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":26},{"ruleId":"1326","severity":1,"message":"1344","line":10,"column":13,"nodeType":"1328","messageId":"1329","endLine":10,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1407","line":18,"column":13,"nodeType":"1328","messageId":"1329","endLine":18,"endColumn":17},{"ruleId":"1331","severity":1,"message":"1408","line":38,"column":5,"nodeType":"1333","endLine":38,"endColumn":16,"suggestions":"1564"},{"ruleId":"1326","severity":1,"message":"1405","line":35,"column":10,"nodeType":"1328","messageId":"1329","endLine":35,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1458","line":38,"column":15,"nodeType":"1328","messageId":"1329","endLine":38,"endColumn":22},{"ruleId":"1331","severity":1,"message":"1565","line":62,"column":5,"nodeType":"1333","endLine":62,"endColumn":7,"suggestions":"1566"},{"ruleId":"1534","severity":1,"message":"1535","line":83,"column":15,"nodeType":"1536","messageId":"1537","endLine":83,"endColumn":24},{"ruleId":"1496","severity":1,"message":"1557","line":219,"column":37,"nodeType":"1456","messageId":"1558","endLine":219,"endColumn":44},{"ruleId":"1331","severity":1,"message":"1567","line":16,"column":8,"nodeType":"1333","endLine":16,"endColumn":13,"suggestions":"1568"},{"ruleId":"1326","severity":1,"message":"1569","line":40,"column":11,"nodeType":"1328","messageId":"1329","endLine":40,"endColumn":22},{"ruleId":"1326","severity":1,"message":"1367","line":2,"column":22,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":26},{"ruleId":"1326","severity":1,"message":"1436","line":4,"column":10,"nodeType":"1328","messageId":"1329","endLine":4,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1344","line":8,"column":10,"nodeType":"1328","messageId":"1329","endLine":8,"endColumn":11},{"ruleId":"1326","severity":1,"message":"1420","line":9,"column":8,"nodeType":"1328","messageId":"1329","endLine":9,"endColumn":15},{"ruleId":"1326","severity":1,"message":"1407","line":13,"column":10,"nodeType":"1328","messageId":"1329","endLine":13,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1348","line":15,"column":9,"nodeType":"1328","messageId":"1329","endLine":15,"endColumn":18},{"ruleId":"1326","severity":1,"message":"1450","line":15,"column":20,"nodeType":"1328","messageId":"1329","endLine":15,"endColumn":32},{"ruleId":"1326","severity":1,"message":"1570","line":18,"column":24,"nodeType":"1328","messageId":"1329","endLine":18,"endColumn":40},{"ruleId":"1331","severity":1,"message":"1571","line":26,"column":5,"nodeType":"1333","endLine":26,"endColumn":11,"suggestions":"1572"},{"ruleId":"1326","severity":1,"message":"1573","line":34,"column":8,"nodeType":"1328","messageId":"1329","endLine":34,"endColumn":20},{"ruleId":"1427","severity":1,"message":"1453","line":116,"column":3,"nodeType":"1429","messageId":"1321","endLine":116,"endColumn":15},{"ruleId":"1427","severity":1,"message":"1453","line":128,"column":3,"nodeType":"1429","messageId":"1321","endLine":128,"endColumn":15},{"ruleId":"1326","severity":1,"message":"1419","line":20,"column":13,"nodeType":"1328","messageId":"1329","endLine":20,"endColumn":17},{"ruleId":"1331","severity":1,"message":"1459","line":28,"column":5,"nodeType":"1333","endLine":28,"endColumn":16,"suggestions":"1574"},{"ruleId":"1421","severity":1,"message":"1422","line":44,"column":54,"nodeType":"1423","messageId":"1321","endLine":44,"endColumn":56},{"ruleId":"1326","severity":1,"message":"1575","line":58,"column":8,"nodeType":"1328","messageId":"1329","endLine":58,"endColumn":19},{"ruleId":"1341","severity":1,"message":"1342","line":32,"column":27,"nodeType":"1343","messageId":"1321","endLine":32,"endColumn":29},{"ruleId":"1326","severity":1,"message":"1576","line":44,"column":9,"nodeType":"1328","messageId":"1329","endLine":44,"endColumn":15},{"ruleId":"1326","severity":1,"message":"1577","line":44,"column":17,"nodeType":"1328","messageId":"1329","endLine":44,"endColumn":26},{"ruleId":"1326","severity":1,"message":"1578","line":45,"column":9,"nodeType":"1328","messageId":"1329","endLine":45,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1579","line":45,"column":19,"nodeType":"1328","messageId":"1329","endLine":45,"endColumn":30},{"ruleId":"1331","severity":1,"message":"1580","line":62,"column":5,"nodeType":"1333","endLine":62,"endColumn":7,"suggestions":"1581"},{"ruleId":"1427","severity":1,"message":"1516","line":236,"column":4,"nodeType":"1429","messageId":"1321","endLine":236,"endColumn":11},{"ruleId":"1331","severity":1,"message":"1582","line":39,"column":5,"nodeType":"1333","endLine":39,"endColumn":7,"suggestions":"1583"},{"ruleId":"1421","severity":1,"message":"1422","line":82,"column":33,"nodeType":"1423","messageId":"1321","endLine":82,"endColumn":35},{"ruleId":"1331","severity":1,"message":"1582","line":40,"column":5,"nodeType":"1333","endLine":40,"endColumn":7,"suggestions":"1584"},{"ruleId":"1331","severity":1,"message":"1582","line":38,"column":5,"nodeType":"1333","endLine":38,"endColumn":7,"suggestions":"1585"},{"ruleId":"1326","severity":1,"message":"1458","line":34,"column":15,"nodeType":"1328","messageId":"1329","endLine":34,"endColumn":22},{"ruleId":"1331","severity":1,"message":"1459","line":47,"column":5,"nodeType":"1333","endLine":47,"endColumn":7,"suggestions":"1586"},{"ruleId":"1427","severity":1,"message":"1490","line":295,"column":9,"nodeType":"1429","messageId":"1321","endLine":295,"endColumn":16},{"ruleId":"1427","severity":1,"message":"1428","line":469,"column":3,"nodeType":"1429","messageId":"1321","endLine":469,"endColumn":9},{"ruleId":"1331","severity":1,"message":"1459","line":36,"column":5,"nodeType":"1333","endLine":36,"endColumn":7,"suggestions":"1587"},{"ruleId":"1421","severity":1,"message":"1422","line":130,"column":35,"nodeType":"1423","messageId":"1321","endLine":130,"endColumn":37},{"ruleId":"1326","severity":1,"message":"1405","line":19,"column":10,"nodeType":"1328","messageId":"1329","endLine":19,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1406","line":19,"column":16,"nodeType":"1328","messageId":"1329","endLine":19,"endColumn":23},{"ruleId":"1326","severity":1,"message":"1407","line":20,"column":10,"nodeType":"1328","messageId":"1329","endLine":20,"endColumn":14},{"ruleId":"1331","severity":1,"message":"1408","line":41,"column":5,"nodeType":"1333","endLine":41,"endColumn":16,"suggestions":"1588"},{"ruleId":"1331","severity":1,"message":"1582","line":39,"column":5,"nodeType":"1333","endLine":39,"endColumn":7,"suggestions":"1589"},{"ruleId":"1326","severity":1,"message":"1590","line":20,"column":10,"nodeType":"1328","messageId":"1329","endLine":20,"endColumn":14},{"ruleId":"1331","severity":1,"message":"1474","line":48,"column":5,"nodeType":"1333","endLine":48,"endColumn":22,"suggestions":"1591"},{"ruleId":"1331","severity":1,"message":"1440","line":56,"column":5,"nodeType":"1333","endLine":56,"endColumn":16,"suggestions":"1592"},{"ruleId":"1364","severity":1,"message":"1365","line":91,"column":7,"nodeType":"1366","endLine":94,"endColumn":9},{"ruleId":"1326","severity":1,"message":"1392","line":2,"column":29,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":37},{"ruleId":"1326","severity":1,"message":"1344","line":9,"column":10,"nodeType":"1328","messageId":"1329","endLine":9,"endColumn":11},{"ruleId":"1326","severity":1,"message":"1407","line":10,"column":10,"nodeType":"1328","messageId":"1329","endLine":10,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1420","line":11,"column":8,"nodeType":"1328","messageId":"1329","endLine":11,"endColumn":15},{"ruleId":"1326","severity":1,"message":"1392","line":2,"column":29,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":37},{"ruleId":"1326","severity":1,"message":"1550","line":6,"column":8,"nodeType":"1328","messageId":"1329","endLine":6,"endColumn":12},{"ruleId":"1326","severity":1,"message":"1407","line":11,"column":10,"nodeType":"1328","messageId":"1329","endLine":11,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1420","line":12,"column":8,"nodeType":"1328","messageId":"1329","endLine":12,"endColumn":15},{"ruleId":"1364","severity":1,"message":"1365","line":59,"column":29,"nodeType":"1366","endLine":59,"endColumn":134},{"ruleId":"1326","severity":1,"message":"1593","line":5,"column":8,"nodeType":"1328","messageId":"1329","endLine":5,"endColumn":18},{"ruleId":"1326","severity":1,"message":"1407","line":14,"column":10,"nodeType":"1328","messageId":"1329","endLine":14,"endColumn":14},{"ruleId":"1364","severity":1,"message":"1365","line":104,"column":8,"nodeType":"1366","endLine":107,"endColumn":10},{"ruleId":"1326","severity":1,"message":"1392","line":2,"column":29,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":37},{"ruleId":"1326","severity":1,"message":"1593","line":5,"column":8,"nodeType":"1328","messageId":"1329","endLine":5,"endColumn":18},{"ruleId":"1326","severity":1,"message":"1594","line":7,"column":10,"nodeType":"1328","messageId":"1329","endLine":7,"endColumn":19},{"ruleId":"1326","severity":1,"message":"1595","line":9,"column":10,"nodeType":"1328","messageId":"1329","endLine":9,"endColumn":29},{"ruleId":"1364","severity":1,"message":"1365","line":79,"column":8,"nodeType":"1366","endLine":82,"endColumn":10},{"ruleId":"1326","severity":1,"message":"1368","line":1,"column":17,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":27},{"ruleId":"1326","severity":1,"message":"1363","line":1,"column":29,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":38},{"ruleId":"1326","severity":1,"message":"1504","line":2,"column":22,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":33},{"ruleId":"1326","severity":1,"message":"1596","line":11,"column":2,"nodeType":"1328","messageId":"1329","endLine":11,"endColumn":16},{"ruleId":"1326","severity":1,"message":"1385","line":13,"column":2,"nodeType":"1328","messageId":"1329","endLine":13,"endColumn":12},{"ruleId":"1326","severity":1,"message":"1436","line":15,"column":2,"nodeType":"1328","messageId":"1329","endLine":15,"endColumn":6},{"ruleId":"1326","severity":1,"message":"1597","line":19,"column":10,"nodeType":"1328","messageId":"1329","endLine":19,"endColumn":20},{"ruleId":"1326","severity":1,"message":"1598","line":19,"column":22,"nodeType":"1328","messageId":"1329","endLine":19,"endColumn":35},{"ruleId":"1326","severity":1,"message":"1599","line":21,"column":2,"nodeType":"1328","messageId":"1329","endLine":21,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1336","line":22,"column":2,"nodeType":"1328","messageId":"1329","endLine":22,"endColumn":10},{"ruleId":"1326","severity":1,"message":"1600","line":26,"column":10,"nodeType":"1328","messageId":"1329","endLine":26,"endColumn":25},{"ruleId":"1326","severity":1,"message":"1601","line":27,"column":10,"nodeType":"1328","messageId":"1329","endLine":27,"endColumn":25},{"ruleId":"1364","severity":1,"message":"1365","line":101,"column":6,"nodeType":"1366","endLine":104,"endColumn":8},{"ruleId":"1360","severity":1,"message":"1361","line":41,"column":5,"nodeType":"1362","endLine":41,"endColumn":16},{"ruleId":"1326","severity":1,"message":"1374","line":27,"column":8,"nodeType":"1328","messageId":"1329","endLine":27,"endColumn":16},{"ruleId":"1326","severity":1,"message":"1602","line":33,"column":20,"nodeType":"1328","messageId":"1329","endLine":33,"endColumn":32},{"ruleId":"1331","severity":1,"message":"1603","line":57,"column":8,"nodeType":"1333","endLine":57,"endColumn":17,"suggestions":"1604"},{"ruleId":"1421","severity":1,"message":"1422","line":60,"column":21,"nodeType":"1423","messageId":"1321","endLine":60,"endColumn":23},{"ruleId":"1331","severity":1,"message":"1605","line":73,"column":5,"nodeType":"1333","endLine":73,"endColumn":7,"suggestions":"1606"},{"ruleId":"1326","severity":1,"message":"1607","line":88,"column":10,"nodeType":"1328","messageId":"1329","endLine":88,"endColumn":12},{"ruleId":"1421","severity":1,"message":"1608","line":104,"column":23,"nodeType":"1423","messageId":"1321","endLine":104,"endColumn":25},{"ruleId":"1364","severity":1,"message":"1365","line":151,"column":6,"nodeType":"1366","endLine":154,"endColumn":8},{"ruleId":"1326","severity":1,"message":"1405","line":23,"column":10,"nodeType":"1328","messageId":"1329","endLine":23,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1458","line":26,"column":15,"nodeType":"1328","messageId":"1329","endLine":26,"endColumn":22},{"ruleId":"1331","severity":1,"message":"1609","line":50,"column":5,"nodeType":"1333","endLine":50,"endColumn":7,"suggestions":"1610"},{"ruleId":"1427","severity":1,"message":"1428","line":508,"column":3,"nodeType":"1429","messageId":"1321","endLine":508,"endColumn":9},{"ruleId":"1326","severity":1,"message":"1611","line":1,"column":16,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":35},{"ruleId":"1326","severity":1,"message":"1612","line":3,"column":10,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":15},{"ruleId":"1326","severity":1,"message":"1613","line":3,"column":17,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":23},{"ruleId":"1326","severity":1,"message":"1590","line":9,"column":10,"nodeType":"1328","messageId":"1329","endLine":9,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1348","line":10,"column":9,"nodeType":"1328","messageId":"1329","endLine":10,"endColumn":18},{"ruleId":"1326","severity":1,"message":"1450","line":10,"column":20,"nodeType":"1328","messageId":"1329","endLine":10,"endColumn":32},{"ruleId":"1326","severity":1,"message":"1614","line":8,"column":8,"nodeType":"1328","messageId":"1329","endLine":8,"endColumn":18},{"ruleId":"1326","severity":1,"message":"1468","line":9,"column":8,"nodeType":"1328","messageId":"1329","endLine":9,"endColumn":23},{"ruleId":"1326","severity":1,"message":"1363","line":10,"column":29,"nodeType":"1328","messageId":"1329","endLine":10,"endColumn":38},{"ruleId":"1326","severity":1,"message":"1615","line":14,"column":10,"nodeType":"1328","messageId":"1329","endLine":14,"endColumn":13},{"ruleId":"1326","severity":1,"message":"1419","line":28,"column":13,"nodeType":"1328","messageId":"1329","endLine":28,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1363","line":1,"column":17,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":26},{"ruleId":"1326","severity":1,"message":"1392","line":1,"column":28,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":36},{"ruleId":"1326","severity":1,"message":"1367","line":3,"column":2,"nodeType":"1328","messageId":"1329","endLine":3,"endColumn":6},{"ruleId":"1326","severity":1,"message":"1517","line":13,"column":2,"nodeType":"1328","messageId":"1329","endLine":13,"endColumn":7},{"ruleId":"1496","severity":1,"message":"1616","line":54,"column":42,"nodeType":"1498","messageId":"1499","endLine":54,"endColumn":44},{"ruleId":"1360","severity":1,"message":"1361","line":79,"column":8,"nodeType":"1362","endLine":79,"endColumn":18},{"ruleId":"1364","severity":1,"message":"1365","line":13,"column":13,"nodeType":"1366","endLine":14,"endColumn":44},{"ruleId":"1326","severity":1,"message":"1374","line":9,"column":11,"nodeType":"1328","messageId":"1329","endLine":9,"endColumn":19},{"ruleId":"1326","severity":1,"message":"1344","line":11,"column":10,"nodeType":"1328","messageId":"1329","endLine":11,"endColumn":11},{"ruleId":"1326","severity":1,"message":"1617","line":12,"column":10,"nodeType":"1328","messageId":"1329","endLine":12,"endColumn":24},{"ruleId":"1331","severity":1,"message":"1618","line":30,"column":8,"nodeType":"1333","endLine":30,"endColumn":23,"suggestions":"1619"},{"ruleId":"1331","severity":1,"message":"1620","line":38,"column":5,"nodeType":"1333","endLine":38,"endColumn":14,"suggestions":"1621"},{"ruleId":"1421","severity":1,"message":"1608","line":72,"column":72,"nodeType":"1423","messageId":"1321","endLine":72,"endColumn":74},{"ruleId":"1427","severity":1,"message":"1435","line":121,"column":3,"nodeType":"1429","messageId":"1321","endLine":121,"endColumn":13},{"ruleId":"1326","severity":1,"message":"1363","line":1,"column":29,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":38},{"ruleId":"1331","severity":1,"message":"1425","line":22,"column":8,"nodeType":"1333","endLine":22,"endColumn":14,"suggestions":"1622"},{"ruleId":"1326","severity":1,"message":"1375","line":9,"column":11,"nodeType":"1328","messageId":"1329","endLine":9,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1392","line":2,"column":48,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":56},{"ruleId":"1331","severity":1,"message":"1623","line":24,"column":8,"nodeType":"1333","endLine":24,"endColumn":26,"suggestions":"1624"},{"ruleId":"1421","severity":1,"message":"1608","line":15,"column":90,"nodeType":"1423","messageId":"1321","endLine":15,"endColumn":92},{"ruleId":"1331","severity":1,"message":"1425","line":45,"column":8,"nodeType":"1333","endLine":45,"endColumn":16,"suggestions":"1625"},{"ruleId":"1326","severity":1,"message":"1515","line":1,"column":8,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":13},{"ruleId":"1326","severity":1,"message":"1344","line":11,"column":13,"nodeType":"1328","messageId":"1329","endLine":11,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1345","line":1,"column":10,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":14},{"ruleId":"1326","severity":1,"message":"1414","line":1,"column":22,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":26},{"ruleId":"1326","severity":1,"message":"1391","line":1,"column":40,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":45},{"ruleId":"1326","severity":1,"message":"1626","line":8,"column":8,"nodeType":"1328","messageId":"1329","endLine":8,"endColumn":16},{"ruleId":"1326","severity":1,"message":"1627","line":10,"column":10,"nodeType":"1328","messageId":"1329","endLine":10,"endColumn":24},{"ruleId":"1326","severity":1,"message":"1344","line":14,"column":10,"nodeType":"1328","messageId":"1329","endLine":14,"endColumn":11},{"ruleId":"1360","severity":1,"message":"1361","line":49,"column":5,"nodeType":"1362","endLine":49,"endColumn":19},{"ruleId":"1331","severity":1,"message":"1459","line":20,"column":8,"nodeType":"1333","endLine":20,"endColumn":10,"suggestions":"1628"},{"ruleId":"1331","severity":1,"message":"1629","line":38,"column":8,"nodeType":"1333","endLine":38,"endColumn":21,"suggestions":"1630"},{"ruleId":"1364","severity":1,"message":"1365","line":11,"column":11,"nodeType":"1366","endLine":11,"endColumn":117},{"ruleId":"1331","severity":1,"message":"1459","line":35,"column":5,"nodeType":"1333","endLine":35,"endColumn":7,"suggestions":"1631"},{"ruleId":"1427","severity":1,"message":"1632","line":59,"column":4,"nodeType":"1429","messageId":"1321","endLine":59,"endColumn":12},{"ruleId":"1326","severity":1,"message":"1363","line":2,"column":17,"nodeType":"1328","messageId":"1329","endLine":2,"endColumn":26},{"ruleId":"1326","severity":1,"message":"1633","line":4,"column":25,"nodeType":"1328","messageId":"1329","endLine":4,"endColumn":34},{"ruleId":"1326","severity":1,"message":"1634","line":5,"column":10,"nodeType":"1328","messageId":"1329","endLine":5,"endColumn":25},{"ruleId":"1326","severity":1,"message":"1346","line":14,"column":40,"nodeType":"1328","messageId":"1329","endLine":14,"endColumn":46},{"ruleId":"1331","severity":1,"message":"1459","line":57,"column":5,"nodeType":"1333","endLine":57,"endColumn":15,"suggestions":"1635"},{"ruleId":"1331","severity":1,"message":"1459","line":24,"column":5,"nodeType":"1333","endLine":24,"endColumn":7,"suggestions":"1636"},{"ruleId":"1326","severity":1,"message":"1415","line":1,"column":16,"nodeType":"1328","messageId":"1329","endLine":1,"endColumn":20},{"ruleId":"1326","severity":1,"message":"1344","line":8,"column":13,"nodeType":"1328","messageId":"1329","endLine":8,"endColumn":14},{"ruleId":"1427","severity":1,"message":"1516","line":63,"column":13,"nodeType":"1429","messageId":"1321","endLine":63,"endColumn":20},{"ruleId":"1331","severity":1,"message":"1459","line":15,"column":8,"nodeType":"1333","endLine":15,"endColumn":10,"suggestions":"1637"},{"ruleId":"1331","severity":1,"message":"1459","line":21,"column":5,"nodeType":"1333","endLine":21,"endColumn":17,"suggestions":"1638"},{"ruleId":"1326","severity":1,"message":"1550","line":5,"column":8,"nodeType":"1328","messageId":"1329","endLine":5,"endColumn":12},{"ruleId":"1326","severity":1,"message":"1639","line":6,"column":2,"nodeType":"1328","messageId":"1329","endLine":6,"endColumn":8},"no-extend-native","Array prototype is read only, properties should not be added.","CallExpression","unexpected","no-native-reassign",["1640"],"no-negated-in-lhs",["1641"],"no-unused-vars","'AlertTitle' is defined but never used.","Identifier","unusedVar","'env' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setEnv'. Either include it or remove the dependency array.","ArrayExpression",["1642"],"'FiberManualRecordRounded' is defined but never used.","'handleLS' is defined but never used.","React Hook useEffect has a missing dependency: 'setAuth'. Either include it or remove the dependency array.",["1643"],"React Hook useEffect has a missing dependency: 'checkUserAuthentication'. Either include it or remove the dependency array.",["1644"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'t' is assigned a value but never used.","'Fade' is defined but never used.","'useRef' is defined but never used.","'i18next' is defined but never used.","'isLoading' is assigned a value but never used.","'optionalValues' is assigned a value but never used.","'setOptionalValues' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setAuth' and 'vault'. Either include them or remove the dependency array. You can also do a functional update 'setVault(v => ...)' if you only need 'vault' in the 'setVault' call.",["1645"],"no-const-assign","'scenario' is constant.","const","Assignments to the 'scenario' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","React Hook useEffect has missing dependencies: 'auth', 'isLastStep', 'messages', and 'scenario'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["1646"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Grid' is defined but never used.","'useContext' is defined but never used.","'useTranslation' is defined but never used.","'FormControl' is defined but never used.","'OutlinedInput' is defined but never used.","'CancelScheduleSend' is defined but never used.","'getFullName' is defined but never used.","'location' is assigned a value but never used.","'downSm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchNotifications'. Either include it or remove the dependency array.",["1647"],"'history' is assigned a value but never used.","'setLang' is assigned a value but never used.","'edit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth.user.tenant', 'query', and 'setSnackbar'. Either include them or remove the dependency array.",["1648"],"'handleSave' is assigned a value but never used.","'useMediaQuery' is defined but never used.","'IconButton' is defined but never used.","'Map' is defined but never used.","React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["1649"],"React Hook useEffect has a missing dependency: 'location.search'. Either include it or remove the dependency array.",["1650"],"'Slide' is defined but never used.","'useState' is defined but never used.","'eachDayOfInterval' is defined but never used.","'isAfter' is defined but never used.","'parseISO' is defined but never used.","'toDate' is defined but never used.","'format' is defined but never used.","'usLocale' is defined but never used.","'getDateParts' is defined but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["1651","1652"],"'auth' is assigned a value but never used.","'setAuth' is assigned a value but never used.","'lang' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setSnackbar'. Either include it or remove the dependency array.",["1653"],"'dateFormat' is defined but never used.","'Button' is defined but never used.","'snackbar' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'Grow' is defined but never used.","'Icon' is defined but never used.","'SettingsBackupRestoreIcon' is defined but never used.","'SettingsRoundedIcon' is defined but never used.","'ExitToAppRoundedIcon' is defined but never used.","'i18n' is assigned a value but never used.","'matches' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'calenderActive' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'auth.user._id'. Either include it or remove the dependency array.",["1654"],"no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","'ClickAwayListener' is defined but never used.","'Collapse' is defined but never used.","'Avatar' is defined but never used.","'NotificationsContext' is defined but never used.","Duplicate key 'width'.","Duplicate key 'background'.","'Link' is defined but never used.","'handleReferralClick' is assigned a value but never used.","'SearchRoundedIcon' is defined but never used.","'FilterByMultiSelect' is defined but never used.","React Hook useEffect has a missing dependency: 'query.asset'. Either include it or remove the dependency array.",["1655"],"Duplicate key 'display'.","'Backdrop' is defined but never used.","'Modal' is defined but never used.","'updateSystemAdditionalData' is defined but never used.","'UpsertSystem' is defined but never used.","'FlyToInterpolator' is defined but never used.","'getMapData' is defined but never used.","'updateQueryParams' is defined but never used.","'setIsLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFaults' needs the current value of 'data'.",["1656"],"Duplicate key 'borderRadius'.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'setMode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'prepareData'. Either include it or remove the dependency array.",["1657"],"React Hook useEffect has a missing dependency: 'auth.user.tenant'. Either include it or remove the dependency array.",["1658"],"'Tooltip' is defined but never used.","'BusinessRoundedIcon' is defined but never used.","'AssignmentRoundedIcon' is defined but never used.","'WarningRoundedIcon' is defined but never used.","'getFaultsStatusListSuggestions' is defined but never used.","'DoubleArrowIcon' is defined but never used.",["1659"],"React Hook useEffect has missing dependencies: 'query' and 'setFaults'. Either include them or remove the dependency array.",["1660"],"React Hook useEffect has missing dependencies: 'history', 'location.pathname', and 'location.search'. Either include them or remove the dependency array.",["1661"],"React Hook useEffect has missing dependencies: 'history', 'location.pathname', and 'query.asset'. Either include them or remove the dependency array.",["1662"],"'AddIcon' is defined but never used.",["1663"],"'MoreVertIcon' is defined but never used.","'getMinPermLevel' is defined but never used.",["1664"],"React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.",["1665"],"React Hook useEffect has missing dependencies: 'filterField', 'history', 'location.pathname', and 'location.search'. Either include them or remove the dependency array.",["1666"],"React Hook useEffect has a missing dependency: 'optionsFunc'. Either include it or remove the dependency array. If 'optionsFunc' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1667"],"React Hook useEffect has missing dependencies: 'filterField', 'history', 'location.pathname', 'location.search', and 'query'. Either include them or remove the dependency array.",["1668"],["1669"],"Duplicate key 'classes'.","'res' is assigned a value but never used.",["1670"],["1671"],"React Hook useEffect has a missing dependency: 'getTagOptions'. Either include it or remove the dependency array.",["1672"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'makeStyles' is defined but never used.","React Hook useEffect has missing dependencies: 'currentStatus' and 'module'. Either include them or remove the dependency array.",["1673"],"'useHistory' is defined but never used.","'useLocation' is defined but never used.","'slideIn' is assigned a value but never used.","'slideDirection' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'followerList'. Either include it or remove the dependency array. If 'setUserList' needs the current value of 'followerList', you can also switch to useReducer instead of useState and read 'followerList' in the reducer.",["1674"],"'getFullAddress' is defined but never used.","React Hook useEffect has missing dependencies: 'filterField', 'optionsFunc', and 'query'. Either include them or remove the dependency array. If 'optionsFunc' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1675"],["1676"],"'specialStringPurge' is defined but never used.","'useQuery' is defined but never used.","'React' is defined but never used.","Duplicate key 'padding'.","'Paper' is defined but never used.","'queryParamsToObject' is defined but never used.","React Hook useEffect has missing dependencies: 'filterField', 'handleSearch', and 'query'. Either include them or remove the dependency array.",["1677"],["1678"],"React Hook useEffect has a missing dependency: 'relatedUsers'. Either include it or remove the dependency array.",["1679"],"'AddLocationOutlinedIcon' is defined but never used.","'ClearRoundedIcon' is defined but never used.","'CheckCircleOutlineRoundedIcon' is defined but never used.","'CheckCircleRoundedIcon' is defined but never used.","'updateStateField' is defined but never used.",["1680"],"React Hook useEffect has a missing dependency: 'populateLocations'. Either include it or remove the dependency array.",["1681"],"React Hook useEffect has missing dependencies: 'clearResidentData' and 'populateAssets'. Either include them or remove the dependency array.",["1682"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","React Hook useEffect has missing dependencies: 'details' and 'mode'. Either include them or remove the dependency array. You can also do a functional update 'setDetails(d => ...)' if you only need 'details' in the 'setDetails' call.",["1683"],["1684"],"React Hook useEffect has missing dependencies: 'auth.user._id', 'auth.user.tenant', and 'details'. Either include them or remove the dependency array. You can also do a functional update 'setDetails(d => ...)' if you only need 'details' in the 'setDetails' call.",["1685"],"Duplicate key 'iconBtn'.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'isSeq' is assigned a value but never used.",["1686"],"React Hook useEffect has missing dependencies: 'query', 'repeatable', and 'setSnackbar'. Either include them or remove the dependency array.",["1687"],"'clsx' is defined but never used.",["1688"],"Duplicate key 'textField'.","'TextField' is defined but never used.","React Hook useEffect has missing dependencies: 'index' and 'updateSchedules'. Either include them or remove the dependency array. If 'updateSchedules' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1689"],"'handleCalcNextIteration' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedReturnValue","'heLocale' is defined but never used.","'getDaysInMonth' is defined but never used.","'setCurrent' is assigned a value but never used.","'getTasks' is defined but never used.","'lastDayOfMonth' is assigned a value but never used.",["1690"],"React Hook useEffect has missing dependencies: 'handleClose', 'roleId', and 'setSnackbar'. Either include them or remove the dependency array. If 'handleClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1691"],"React Hook useEffect has missing dependencies: 'handleValueChange', 'module', and 'text'. Either include them or remove the dependency array. If 'handleValueChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1692"],"'getValColor' is assigned a value but never used.","'setDetailsActive' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'bracketData.tasks' and 'detailsActive'. Either include them or remove the dependency array. If 'setTasks' needs the current value of 'bracketData.tasks', you can also switch to useReducer instead of useState and read 'bracketData.tasks' in the reducer.",["1693"],"'handleChange' is assigned a value but never used.",["1694"],"'removeAsset' is assigned a value but never used.","'module' is assigned a value but never used.","'setModule' is assigned a value but never used.","'editMode' is assigned a value but never used.","'setEditMode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'location.pathname', 'params.assetId', 'query.tab', and 'setSnackbar'. Either include them or remove the dependency array.",["1695"],"React Hook useEffect has missing dependencies: 'assetId', 'history', 'location.pathname', 'location.search', and 'setSnackbar'. Either include them or remove the dependency array.",["1696"],["1697"],["1698"],["1699"],["1700"],["1701"],["1702"],"'path' is assigned a value but never used.",["1703"],["1704"],"'GaugeChart' is defined but never used.","'StatusTag' is defined but never used.","'differenceInMinutes' is defined but never used.","'InputAdornment' is defined but never used.","'Visibility' is defined but never used.","'VisibilityOff' is defined but never used.","'attemptToSignin' is defined but never used.","'LanguageContext' is defined but never used.","'getLocalization' is defined but never used.","'setUserEmail' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["1705"],"React Hook useEffect has missing dependencies: 'history' and 'params.handle'. Either include them or remove the dependency array.",["1706"],"'cp' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'tenantId'. Either include it or remove the dependency array.",["1707"],"'responsiveFontSizes' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'CreateIcon' is defined but never used.","'Can' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","'getServerError' is defined but never used.","React Hook useEffect has a missing dependency: 'current'. Either include it or remove the dependency array.",["1708"],"React Hook useEffect has missing dependencies: 'auth.user._id' and 'readAllMessages'. Either include them or remove the dependency array.",["1709"],["1710"],"React Hook useEffect has missing dependencies: 'auth.user._id', 'current', and 'readAllMessages'. Either include them or remove the dependency array. If 'readAllMessages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1711"],["1712"],"'DoneIcon' is defined but never used.","'AutorenewSharp' is defined but never used.",["1713"],"React Hook useEffect has a missing dependency: 'orgUsers'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setUserList' needs the current value of 'orgUsers'.",["1714"],["1715"],"Duplicate key 'reportId'.","'useParams' is defined but never used.","'getReportPublic' is defined but never used.",["1716"],["1717"],["1718"],["1719"],"'Select' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1720","fix":"1721"},{"desc":"1722","fix":"1723"},{"desc":"1724","fix":"1725"},{"desc":"1726","fix":"1727"},{"desc":"1728","fix":"1729"},{"desc":"1730","fix":"1731"},{"desc":"1732","fix":"1733"},{"desc":"1734","fix":"1735"},{"desc":"1736","fix":"1737"},{"messageId":"1738","fix":"1739","desc":"1740"},{"messageId":"1741","fix":"1742","desc":"1743"},{"desc":"1744","fix":"1745"},{"desc":"1746","fix":"1747"},{"desc":"1748","fix":"1749"},{"desc":"1750","fix":"1751"},{"desc":"1752","fix":"1753"},{"desc":"1754","fix":"1755"},{"desc":"1748","fix":"1756"},{"desc":"1757","fix":"1758"},{"desc":"1759","fix":"1760"},{"desc":"1761","fix":"1762"},{"desc":"1763","fix":"1764"},{"desc":"1752","fix":"1765"},{"desc":"1766","fix":"1767"},{"desc":"1768","fix":"1769"},{"desc":"1770","fix":"1771"},{"desc":"1772","fix":"1773"},{"desc":"1752","fix":"1774"},{"desc":"1761","fix":"1775"},{"desc":"1752","fix":"1776"},{"desc":"1777","fix":"1778"},{"desc":"1779","fix":"1780"},{"desc":"1781","fix":"1782"},{"desc":"1783","fix":"1784"},{"desc":"1785","fix":"1786"},{"desc":"1787","fix":"1788"},{"desc":"1789","fix":"1790"},{"desc":"1791","fix":"1792"},{"desc":"1793","fix":"1794"},{"desc":"1795","fix":"1796"},{"desc":"1797","fix":"1798"},{"desc":"1799","fix":"1800"},{"desc":"1752","fix":"1801"},{"desc":"1802","fix":"1803"},{"desc":"1752","fix":"1804"},{"desc":"1805","fix":"1806"},{"desc":"1761","fix":"1807"},{"desc":"1808","fix":"1809"},{"desc":"1744","fix":"1810"},{"desc":"1811","fix":"1812"},{"desc":"1813","fix":"1814"},{"desc":"1815","fix":"1816"},{"desc":"1817","fix":"1818"},{"desc":"1819","fix":"1820"},{"desc":"1821","fix":"1822"},{"desc":"1821","fix":"1823"},{"desc":"1821","fix":"1824"},{"desc":"1752","fix":"1825"},{"desc":"1752","fix":"1826"},{"desc":"1744","fix":"1827"},{"desc":"1821","fix":"1828"},{"desc":"1761","fix":"1829"},{"desc":"1830","fix":"1831"},{"desc":"1832","fix":"1833"},{"desc":"1834","fix":"1835"},{"desc":"1836","fix":"1837"},{"desc":"1838","fix":"1839"},{"desc":"1840","fix":"1841"},{"desc":"1842","fix":"1843"},{"desc":"1844","fix":"1845"},{"desc":"1846","fix":"1847"},{"desc":"1752","fix":"1848"},{"desc":"1849","fix":"1850"},{"desc":"1752","fix":"1851"},{"desc":"1852","fix":"1853"},{"desc":"1752","fix":"1854"},{"desc":"1752","fix":"1855"},{"desc":"1856","fix":"1857"},"Update the dependencies array to be: [setEnv]",{"range":"1858","text":"1859"},"Update the dependencies array to be: [setAuth]",{"range":"1860","text":"1861"},"Update the dependencies array to be: [checkUserAuthentication]",{"range":"1862","text":"1863"},"Update the dependencies array to be: [setAuth, vault]",{"range":"1864","text":"1865"},"Update the dependencies array to be: [auth, isLastStep, messages, scenario, scenarioStep]",{"range":"1866","text":"1867"},"Update the dependencies array to be: [fetchNotifications]",{"range":"1868","text":"1869"},"Update the dependencies array to be: [auth.user.tenant, isLoading, query, setSnackbar]",{"range":"1870","text":"1871"},"Update the dependencies array to be: [location.search, query]",{"range":"1872","text":"1873"},"Update the dependencies array to be: [isLoading, location.search]",{"range":"1874","text":"1875"},"removeEscape",{"range":"1876","text":"1877"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1878","text":"1879"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [isLoading, setSnackbar]",{"range":"1880","text":"1881"},"Update the dependencies array to be: [auth.user._id, conversations]",{"range":"1882","text":"1883"},"Update the dependencies array to be: [location.search, query.asset]",{"range":"1884","text":"1885"},"Update the dependencies array to be: [data, selectedAsset]",{"range":"1886","text":"1887"},"Update the dependencies array to be: [prepareData]",{"range":"1888","text":"1889"},"Update the dependencies array to be: [auth.user.tenant, details.asset, details.system]",{"range":"1890","text":"1891"},{"range":"1892","text":"1885"},"Update the dependencies array to be: [isLoading, query, setFaults]",{"range":"1893","text":"1894"},"Update the dependencies array to be: [history, location.pathname, location.search, viewType]",{"range":"1895","text":"1896"},"Update the dependencies array to be: [history, location.pathname, location.search, query.asset]",{"range":"1897","text":"1898"},"Update the dependencies array to be: [faultData, faultId, prepareData]",{"range":"1899","text":"1900"},{"range":"1901","text":"1889"},"Update the dependencies array to be: [handleSearch, searchText]",{"range":"1902","text":"1903"},"Update the dependencies array to be: [filterField, history, location.pathname, location.search, value]",{"range":"1904","text":"1905"},"Update the dependencies array to be: [optionsFunc]",{"range":"1906","text":"1907"},"Update the dependencies array to be: [filterField, history, location.pathname, location.search, query, value]",{"range":"1908","text":"1909"},{"range":"1910","text":"1889"},{"range":"1911","text":"1898"},{"range":"1912","text":"1889"},"Update the dependencies array to be: [getTagOptions, tagValue]",{"range":"1913","text":"1914"},"Update the dependencies array to be: [currentStatus, module]",{"range":"1915","text":"1916"},"Update the dependencies array to be: [followerList]",{"range":"1917","text":"1918"},"Update the dependencies array to be: [filterField, optionsFunc, query]",{"range":"1919","text":"1920"},"Update the dependencies array to be: [filterField, history, location.pathname, location.search, query, values]",{"range":"1921","text":"1922"},"Update the dependencies array to be: [filterField, handleSearch, query, searchText]",{"range":"1923","text":"1924"},"Update the dependencies array to be: [history, location.pathname, location.search, values]",{"range":"1925","text":"1926"},"Update the dependencies array to be: [relatedUsers]",{"range":"1927","text":"1928"},"Update the dependencies array to be: [details.tenant, prepareData]",{"range":"1929","text":"1930"},"Update the dependencies array to be: [details.data, populateLocations]",{"range":"1931","text":"1932"},"Update the dependencies array to be: [clearResidentData, populateAssets, residentOwner]",{"range":"1933","text":"1934"},"Update the dependencies array to be: [details, details.isUsingSteps, mode]",{"range":"1935","text":"1936"},{"range":"1937","text":"1889"},"Update the dependencies array to be: [auth.user._id, auth.user.tenant, details, details.isRepeatable]",{"range":"1938","text":"1939"},{"range":"1940","text":"1889"},"Update the dependencies array to be: [isLoading, query, repeatable, setSnackbar]",{"range":"1941","text":"1942"},{"range":"1943","text":"1898"},"Update the dependencies array to be: [index, schedule, updateSchedules]",{"range":"1944","text":"1945"},{"range":"1946","text":"1881"},"Update the dependencies array to be: [handleClose, roleId, setSnackbar]",{"range":"1947","text":"1948"},"Update the dependencies array to be: [handleValueChange, module, text, val]",{"range":"1949","text":"1950"},"Update the dependencies array to be: [bracketData.tasks, data, detailsActive]",{"range":"1951","text":"1952"},"Update the dependencies array to be: [isLoading, prepareData]",{"range":"1953","text":"1954"},"Update the dependencies array to be: [history, location.pathname, params.assetId, query.tab, setSnackbar]",{"range":"1955","text":"1956"},"Update the dependencies array to be: [assetId, history, location.pathname, location.search, setSnackbar]",{"range":"1957","text":"1958"},{"range":"1959","text":"1958"},{"range":"1960","text":"1958"},{"range":"1961","text":"1889"},{"range":"1962","text":"1889"},{"range":"1963","text":"1881"},{"range":"1964","text":"1958"},{"range":"1965","text":"1898"},"Update the dependencies array to be: [isLoading, query.asset]",{"range":"1966","text":"1967"},"Update the dependencies array to be: [history, success]",{"range":"1968","text":"1969"},"Update the dependencies array to be: [history, params.handle]",{"range":"1970","text":"1971"},"Update the dependencies array to be: [tenantId]",{"range":"1972","text":"1973"},"Update the dependencies array to be: [conversations, current]",{"range":"1974","text":"1975"},"Update the dependencies array to be: [auth.user._id, current, readAllMessages]",{"range":"1976","text":"1977"},"Update the dependencies array to be: [auth.user._id, data]",{"range":"1978","text":"1979"},"Update the dependencies array to be: [auth.user._id, current, current.messages, readAllMessages]",{"range":"1980","text":"1981"},"Update the dependencies array to be: [auth.user._id, socket]",{"range":"1982","text":"1983"},{"range":"1984","text":"1889"},"Update the dependencies array to be: [orgUsers, searchValue]",{"range":"1985","text":"1986"},{"range":"1987","text":"1889"},"Update the dependencies array to be: [prepareData, reportId]",{"range":"1988","text":"1989"},{"range":"1990","text":"1889"},{"range":"1991","text":"1889"},"Update the dependencies array to be: [mode, data, prepareData]",{"range":"1992","text":"1993"},[1533,1535],"[setEnv]",[1198,1200],"[setAuth]",[1104,1106],"[checkUserAuthentication]",[2381,2383],"[setAuth, vault]",[3587,3601],"[auth, isLastStep, messages, scenario, scenarioStep]",[1740,1742],"[fetchNotifications]",[1812,1823],"[auth.user.tenant, isLoading, query, setSnackbar]",[867,884],"[location.search, query]",[1299,1310],"[isLoading, location.search]",[2612,2613],"",[2612,2612],"\\",[1624,1635],"[isLoading, setSnackbar]",[2518,2533],"[auth.user._id, conversations]",[2076,2093],"[location.search, query.asset]",[2218,2233],"[data, selectedAsset]",[1993,1995],"[prepareData]",[2746,2777],"[auth.user.tenant, details.asset, details.system]",[1924,1941],[1461,1472],"[isLoading, query, setFaults]",[1748,1758],"[history, location.pathname, location.search, viewType]",[2186,2203],"[history, location.pathname, location.search, query.asset]",[2410,2430],"[faultData, faultId, prepareData]",[1649,1651],[1483,1495],"[handleSearch, searchText]",[1942,1949],"[filterField, history, location.pathname, location.search, value]",[1078,1080],"[optionsFunc]",[1553,1560],"[filterField, history, location.pathname, location.search, query, value]",[2651,2653],[2184,2201],[2320,2322],[2432,2442],"[getTagOptions, tagValue]",[1205,1207],"[currentStatus, module]",[1095,1097],"[followerList]",[1345,1347],"[filterField, optionsFunc, query]",[1874,1882],"[filterField, history, location.pathname, location.search, query, values]",[1118,1130],"[filterField, handleSearch, query, searchText]",[1451,1459],"[history, location.pathname, location.search, values]",[1108,1110],"[relatedUsers]",[2385,2401],"[details.tenant, prepareData]",[2695,2709],"[details.data, populateLocations]",[2826,2841],"[clearResidentData, populateAssets, residentOwner]",[2486,2508],"[details, details.isUsingSteps, mode]",[2556,2558],[2943,2965],"[auth.user._id, auth.user.tenant, details, details.isRepeatable]",[2684,2686],[1473,1484],"[isLoading, query, repeatable, setSnackbar]",[1973,1990],[968,978],"[index, schedule, updateSchedules]",[1559,1570],[1818,1820],"[handleClose, roleId, setSnackbar]",[458,463],"[handleValueChange, module, text, val]",[1107,1113],"[bracketData.tasks, data, detailsActive]",[1130,1141],"[isLoading, prepareData]",[2494,2496],"[history, location.pathname, params.assetId, query.tab, setSnackbar]",[1479,1481],"[assetId, history, location.pathname, location.search, setSnackbar]",[1457,1459],[1461,1463],[1553,1555],[1405,1407],[1636,1647],[1413,1415],[1784,1801],[1963,1974],"[isLoading, query.asset]",[1924,1933],"[history, success]",[2283,2285],"[history, params.handle]",[1648,1650],"[tenantId]",[1391,1406],"[conversations, current]",[1592,1601],"[auth.user._id, current, readAllMessages]",[915,921],"[auth.user._id, data]",[1042,1060],"[auth.user._id, current, current.messages, readAllMessages]",[1736,1744],"[auth.user._id, socket]",[904,906],[1377,1390],"[orgUsers, searchValue]",[1648,1650],[1808,1818],"[prepareData, reportId]",[1032,1034],[509,511],[686,698],"[mode, data, prepareData]"]