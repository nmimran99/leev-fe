[{"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\index.js":"1","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\App.js":"2","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\context\\authContext.js":"3","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\themes\\theme.js":"4","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\workspace\\Workspace.js":"5","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\workspace\\ProtectedWorkspace.js":"6","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\routes\\InitialRouter.js":"7","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\user\\Login.js":"8","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\api\\userApi.js":"9","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\controls\\Controls.js":"10","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Navbar.js":"11","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\SideMenu.js":"12","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\AddMenu.js":"13","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\UserItem.js":"14","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Assets.js":"15","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\api\\assetsApi.js":"16","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Asset.js":"17","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\user\\UserItem.js":"18","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetsControls.js":"19","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetControls.js":"20","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AlertDialoge.js":"21","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\UpdateAsset.js":"22"},{"size":568,"mtime":1611439092122,"results":"23","hashOfConfig":"24"},{"size":1030,"mtime":1611439066518,"results":"25","hashOfConfig":"24"},{"size":468,"mtime":1609124250127,"results":"26","hashOfConfig":"24"},{"size":810,"mtime":1611786096413,"results":"27","hashOfConfig":"24"},{"size":1135,"mtime":1611717159894,"results":"28","hashOfConfig":"24"},{"size":1383,"mtime":1609124250124,"results":"29","hashOfConfig":"24"},{"size":1438,"mtime":1608681487455,"results":"30","hashOfConfig":"24"},{"size":9735,"mtime":1611531700795,"results":"31","hashOfConfig":"24"},{"size":1944,"mtime":1609174264104,"results":"32","hashOfConfig":"24"},{"size":1597,"mtime":1611635367766,"results":"33","hashOfConfig":"24"},{"size":5346,"mtime":1611635571293,"results":"34","hashOfConfig":"24"},{"size":6342,"mtime":1611716280618,"results":"35","hashOfConfig":"24"},{"size":4528,"mtime":1611635719990,"results":"36","hashOfConfig":"24"},{"size":1815,"mtime":1611698984067,"results":"37","hashOfConfig":"24"},{"size":2658,"mtime":1611725637197,"results":"38","hashOfConfig":"24"},{"size":1054,"mtime":1611721801260,"results":"39","hashOfConfig":"24"},{"size":11878,"mtime":1611727838110,"results":"40","hashOfConfig":"24"},{"size":2143,"mtime":1611700388612,"results":"41","hashOfConfig":"24"},{"size":301,"mtime":1611717585517,"results":"42","hashOfConfig":"24"},{"size":2058,"mtime":1611725749100,"results":"43","hashOfConfig":"24"},{"size":1263,"mtime":1611721581581,"results":"44","hashOfConfig":"24"},{"size":10632,"mtime":1611786250846,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"2s6085",{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\index.js",[],["103","104"],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\App.js",["105","106"],"import './App.css';\nimport React, { useContext, useEffect} from 'react';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport { Login } from './components/user/Login';\nimport { ProtectedWorkspace } from './components/workspace/ProtectedWorkspace';\nimport { InitialRouter } from './components/routes/InitialRouter';\nimport { Workspace } from './components/workspace/Workspace'; \nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme } from './themes/theme';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={ theme }>\n          <Router>\n            <Switch>\n              <InitialRouter exact path='/'>\n\n              </InitialRouter>\n              <Route path='/login'>\n                <Login />\n              </Route>\n              <ProtectedWorkspace path='/workspace'>\n                <Workspace />\n              </ProtectedWorkspace>\n            </Switch>\n          </Router>\n      </ThemeProvider>\n      \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\context\\authContext.js",["107"],"import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const [ auth, setAuth ] = useState({\r\n        isAuth: false,\r\n        user: null,\r\n        token: null,\r\n        refreshToken: null\r\n    });\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ auth, setAuth }}>\r\n            { props.children }\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\themes\\theme.js",[],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\workspace\\Workspace.js",["108","109"],"import React, { useState } from 'react'\r\nimport { Controls } from '../controls/Controls'\r\nimport { makeStyles, Grid } from '@material-ui/core'\r\nimport { Assets } from '../datapages/assets/Assets'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\n\r\nexport const Workspace = ({}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid container className={classes.mainContainer} justify={'center'} >\r\n                <Controls />\r\n                <Grid item xs={12} md={9} className={classes.mainData} justify='center'>\r\n                    <Switch>\r\n                        <Route path={'/workspace/assets'}>\r\n                            <Assets />\r\n                        </Route>\r\n                    </Switch>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n            \r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    mainContainer: {\r\n        height: '100%',\r\n        background: theme.palette.primary.light,\r\n        overflowY: 'auto',\r\n    },\r\n    mainData: {\r\n        height: 'calc(90vh - 86px)',\r\n       \r\n    }\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\workspace\\ProtectedWorkspace.js",["110"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../../context/authContext';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authenticate, handleLS } from '../../api/userApi';\r\n\r\nexport const ProtectedWorkspace = ({ children, isAuthenticated,...rest}) => {\r\n    \r\n    const { auth, setAuth } = useContext(AuthContext);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    const checkUserAuthentication = async () => {\r\n        let token = await handleLS('wb_token', 'get');\r\n        if (!token) {\r\n            setIsLoading(false);\r\n            return;\r\n        };\r\n        let res = await authenticate(token);\r\n        if (res.auth) {\r\n           setAuth({\r\n                isAuth: res.auth,\r\n                user: res.user,\r\n                token: res.token.token,\r\n                refreshToken: res.token.refreshToken\r\n            });\r\n              \r\n        }\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n    useEffect(() => {\r\n        checkUserAuthentication();\r\n    }, []);\r\n\r\n    return (\r\n        <Route {...rest}\r\n          render={() => isLoading ? \r\n            'loading' : \r\n            auth.isAuth\r\n            ? children\r\n            :   <Redirect\r\n                    to={{\r\n                    pathname: \"/login\"\r\n                }}/>\r\n            }      \r\n        />\r\n      );\r\n}\r\n","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\routes\\InitialRouter.js",["111"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../../context/authContext';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authenticate, handleLS } from '../../api/userApi';\r\n\r\nexport const InitialRouter = ({...rest}) => {\r\n    \r\n    const { auth, setAuth } = useContext(AuthContext);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    const checkUserAuthentication = async () => {\r\n        let token = await handleLS('wb_token', 'get');\r\n        if (!token) {\r\n            setIsLoading(false);\r\n            return;\r\n        };\r\n        let res = await authenticate(token);\r\n        if (res.auth) {\r\n           setAuth({\r\n                isAuth: res.auth,\r\n                user: res.user,\r\n                token: res.token.token,\r\n                refreshToken: res.token.refreshToken\r\n            });\r\n              \r\n        }\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n    useEffect(() => {\r\n        checkUserAuthentication();\r\n    }, []);\r\n\r\n    return (\r\n        <Route {...rest}\r\n          render={() => isLoading ? \r\n            'loading' : \r\n            auth.isAuth\r\n            ? <Redirect\r\n                to={{\r\n                    pathname: \"/workspace\"\r\n            }}/> \r\n            :   <Redirect\r\n                    to={{\r\n                    pathname: \"/login\"\r\n                }}/>\r\n            }      \r\n        />\r\n      );\r\n}\r\n","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\user\\Login.js",[],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\api\\userApi.js",[],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\controls\\Controls.js",[],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Navbar.js",["112","113","114","115","116"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, AppBar, Toolbar, IconButton, Grid, Badge, Grow   } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\r\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\r\nimport { SideMenu } from './SideMenu'\r\nimport ArrowForwardRoundedIcon from '@material-ui/icons/ArrowForwardRounded';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nexport const Navbar = ({ toggleMenu, menuOpen, toggleAddMenu}) => {\r\n\r\n    const classes = useStyles();\r\n    const matches = useMediaQuery(theme => theme.breakpoints.up('sm'));\r\n    \r\n    const StyledBadge = withStyles((theme) => ({\r\n        badge: {\r\n          left: 15,\r\n          top: 15,\r\n          border: `0px solid white`,\r\n          fontSize: '0.7rem',\r\n          minWidth: '18px',\r\n          height: '18px'\r\n        },\r\n      }))(Badge);\r\n\r\n    return (\r\n        <AppBar\r\n            position='fixed'\r\n            className={classes.navbar}\r\n        >\r\n            <Grid container alignItems='center' justify='space-between' style={{ height: '64px'}}>\r\n                {\r\n\r\n                    <Grid item>\r\n                        <IconButton \r\n                            aria-label='menu'\r\n                            className={classes.iconButton}\r\n                            color='inherit'\r\n                            onClick={toggleMenu}\r\n                        >\r\n                            {\r\n                                !menuOpen ?\r\n                                <MenuRoundedIcon  className={clsx(classes.icon, classes.menuButton)}/> :\r\n                                <ArrowForwardRoundedIcon className={clsx(classes.icon,  classes.menuButton)}/>\r\n                            }   \r\n                        </IconButton>\r\n                    </Grid>\r\n                }\r\n                <Grid item >\r\n                    <div className={classes.logobox}>\r\n                        Leev\r\n                    </div>\r\n                </Grid>\r\n                <Grid item >\r\n                    <div className={classes.navbarIcons}>\r\n                        <IconButton\r\n                            aria-label='Add'\r\n                            className={classes.iconButton}\r\n                            color={'inherit'}\r\n                            onClick={toggleAddMenu}\r\n                        >\r\n                            <AddIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                        <IconButton\r\n                            aria-label='Notifications'\r\n                            className={classes.iconButton}\r\n                            color='inherit'\r\n\r\n                        >\r\n                            <StyledBadge \r\n                                badgeContent={15} \r\n                                color=\"secondary\"\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'left'\r\n                                }}\r\n                            >\r\n                                <NotificationsNoneOutlinedIcon className={classes.icon}/>\r\n                            </StyledBadge>  \r\n                        </IconButton>\r\n                    </div>\r\n                </Grid>\r\n                \r\n            </Grid> \r\n        </AppBar>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    logobox: {\r\n        fontSize: '28px',\r\n        color: 'white',\r\n        fontFamily: 'Crete'     \r\n    },\r\n    navbar: {\r\n        \r\n        height: '64px',\r\n        background: theme.palette.primary.main,\r\n        \r\n        padding: `0 ${theme.spacing(1)}px`\r\n    },\r\n    menuButton: {\r\n        \r\n    },\r\n    navbarIcons: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        width: 'auto'\r\n    },\r\n    drawer: {\r\n        height: 'calc(100vh - 128px)',\r\n        width: '240px',\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n        marginTop: '128px',\r\n        background: 'transparent',\r\n        [theme.breakpoints.down('md')]: {\r\n            width: '60%'\r\n        }\r\n    },\r\n    drawerOpen: {\r\n        height: 'calc(100vh - 128px)',\r\n        width: '240px',\r\n        [theme.breakpoints.down('md')]: {\r\n            width: '60%'\r\n        },\r\n        \r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    iconButton: {\r\n        padding: '6px'\r\n    },\r\n    icon: {\r\n        fontSize: '28px',\r\n        padding: '12px',\r\n        borderRadius: '50px',\r\n        [theme.breakpoints.up('md')]: {\r\n            '&:hover': {\r\n                background: 'rgba(0,0,0,0.5)'\r\n            }\r\n        }\r\n    },\r\n    \r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\SideMenu.js",["117","118","119"],"import React, { useState } from 'react'\r\nimport { makeStyles, List, ListItem, ListItemIcon, ListItemText, Box, Divider, Grow, ClickAwayListener, useMediaQuery } from '@material-ui/core'\r\nimport BusinessRoundedIcon from '@material-ui/icons/BusinessRounded';\r\nimport AssignmentRoundedIcon from '@material-ui/icons/AssignmentRounded';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport DescriptionRoundedIcon from '@material-ui/icons/DescriptionRounded';\r\nimport { UserItem } from '../../user/UserItem'\r\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { useHistory } from 'react-router-dom'; \r\n\r\nexport const SideMenu = ({toggleMenu}) => {\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const matches = useMediaQuery(theme => theme.breakpoints.up('sm'));\r\n\r\n    const closeMenu = () => {\r\n        if (matches) {\r\n            toggleMenu()\r\n        }\r\n    }\r\n    \r\n    const handleClick = type => event => {\r\n        toggleMenu();\r\n        history.push(`/workspace/${type}`)\r\n    }\r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={closeMenu}>\r\n            <Grow in={true}>\r\n                <div className={classes.sidemenuContainer}>\r\n                    <div className={classes.userContainer}>   \r\n                        <UserItem showTitle/>\r\n                    </div>\r\n                    <List className= { classes.list}>\r\n                        <ListItem button={true} className={classes.listItem}\r\n                            onClick={handleClick('assets')}\r\n                        >\r\n                            <ListItemIcon className={classes.listItemIcon}>\r\n                                <BusinessRoundedIcon fontSize={'medium'} className={classes.icon}/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary='נכסים' className={classes.listItemText} disableTypography={true}/>\r\n                        </ListItem>\r\n                        <ListItem button={true} className={classes.listItem}\r\n                            onClick={handleClick('tasks')}\r\n                        >\r\n                            <ListItemIcon className={classes.listItemIcon}>\r\n                                <AssignmentRoundedIcon fontSize={'medium'}/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary='המשימות שלי' className={classes.listItemText} disableTypography={true}/>\r\n                        </ListItem>\r\n                        <ListItem button={true} className={classes.listItem}\r\n                            onClick={handleClick('faults')}\r\n                        >\r\n                            <ListItemIcon className={classes.listItemIcon}>\r\n                                <WarningRoundedIcon fontSize={'medium'}/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary='תקלות' className={classes.listItemText} disableTypography={true}/>\r\n                        </ListItem>\r\n                        <ListItem button={true} className={classes.listItem}\r\n                            onClick={handleClick('docs')}\r\n                        >\r\n                            <ListItemIcon className={classes.listItemIcon}>\r\n                                <DescriptionRoundedIcon fontSize={'medium'}/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary='מסמכים' className={classes.listItemText} disableTypography={true}/>\r\n                        </ListItem>\r\n                    </List>\r\n                    <List className={classes.bottomList}>\r\n                        <ListItem button={true} >\r\n                            <ListItemIcon className={classes.listItemIcon}>\r\n                                <SettingsIcon fontSize={'medium'} />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary='הגדרות' className={classes.listItemText} disableTypography={true}/>\r\n                        </ListItem>\r\n                        <ListItem button={true} >\r\n                            <ListItemIcon className={classes.listItemIcon}>\r\n                                <ExitToAppRoundedIcon fontSize={'medium'} />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary='התנתק' className={classes.listItemText} disableTypography={true}/>\r\n                        </ListItem>\r\n                    </List>\r\n                </div>\r\n            </Grow>\r\n        </ClickAwayListener>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    userContainer: {\r\n        width: '85%',\r\n        margin: '20px auto',\r\n        padding: '15px 10px',\r\n        borderRadius: '10px',\r\n        boxShadow: '0 8px 32px 0 rgb(0 0 0 / 37%)',\r\n        '&:hover' :{\r\n            background: 'black',\r\n            transition: 'background 0.2s ease',\r\n            boxShadow: '0 8px 32px 0 rgb(0 0 0 / 80%)',\r\n        }\r\n    },\r\n    sidemenuContainer: {\r\n        zIndex: 2,\r\n        width: '300px',\r\n        background: theme.palette.primary.main,\r\n        boxShadow: 'rgba(0,0,0,0.25) 0px 0px 6px 3px',\r\n        position: 'absolute',\r\n        top: '80px',\r\n        left: '10px',\r\n        borderRadius: '10px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            maxHeight: '70vh',\r\n            overflow: 'scroll'\r\n        }\r\n\r\n    },\r\n    list: {\r\n        width: '90%',\r\n        borderTop: '1px solid rgba(255,255,255,0.3)',\r\n        borderBottom: '1px solid rgba(255,255,255,0.3)',\r\n        margin: '0px auto',\r\n        padding: '20px 0'\r\n    },\r\n    listItem: {\r\n        color: 'theme.palette.primary.main',\r\n        margin: '7px auto',\r\n        borderRadius: '10px',\r\n        boxShadow: 'rgba(0,0,0,0.3) 1px 1px 4px 1px',\r\n        transition: 'background box-shadow 0.3s ease-in-out',\r\n        '&:hover': {\r\n            background: 'black',\r\n            transition: 'background box-shadow 0.2s ease-in-out',\r\n            boxShadow: '0 8px 32px 0 rgb(0 0 0 / 80%)',\r\n        }\r\n    }, \r\n    listItemIcon: {\r\n        color: 'white'\r\n    },\r\n    listItemText: {     \r\n        fontSize: '14px',\r\n        color: 'white'\r\n        \r\n    },\r\n    bottomList: {\r\n        padding: '10px 0'\r\n    }\r\n\r\n}));","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\AddMenu.js",["120","121","122"],"import React, { useState } from 'react'\r\nimport { makeStyles, List, ListItem, ListItemIcon, ListItemText, Box, Divider, Grow, ClickAwayListener, useMediaQuery } from '@material-ui/core'\r\nimport AddLocationOutlinedIcon from '@material-ui/icons/AddLocationOutlined';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport QueueIcon from '@material-ui/icons/Queue';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport NoteAddOutlinedIcon from '@material-ui/icons/NoteAddOutlined';\r\n\r\nexport const AddMenu = ({toggleAddMenu}) => {\r\n\r\n    const classes = useStyles();\r\n    const matches = useMediaQuery(theme => theme.breakpoints.up('sm'));\r\n\r\n    const closeMenu = () => {\r\n        if (matches) {\r\n            toggleAddMenu()\r\n        }\r\n    }  \r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={closeMenu}>\r\n            <Grow in={true}>\r\n                <div className={classes.addMenuContainer}>\r\n                    <List className= { classes.list}>\r\n                        <ListItem button={true} className={classes.listItem}>\r\n                            <ListItemIcon className={classes.listItemIcon}>\r\n                                <AddLocationOutlinedIcon fontSize={'medium'} className={classes.icon}/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary='הוספת נכס' className={classes.listItemText} disableTypography={true}/>\r\n                        </ListItem>\r\n                        <ListItem button={true} className={classes.listItem}>\r\n                            <ListItemIcon className={classes.listItemIcon}>\r\n                                <GroupAddIcon fontSize={'medium'}/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary='יצירת משתמש' className={classes.listItemText} disableTypography={true}/>\r\n                        </ListItem>\r\n                        <ListItem button={true} className={classes.listItem}>\r\n                            <ListItemIcon className={classes.listItemIcon}>\r\n                                <PostAddIcon fontSize={'medium'}/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary='יצירת משימה' className={classes.listItemText} disableTypography={true}/>\r\n                        </ListItem>\r\n                        <ListItem button={true} className={classes.listItem}>\r\n                            <ListItemIcon className={classes.listItemIcon}>\r\n                                <QueueIcon fontSize={'medium'}/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary='יצירת תקלה' className={classes.listItemText} disableTypography={true}/>\r\n                        </ListItem>\r\n                        <ListItem button={true} className={classes.listItem}>\r\n                            <ListItemIcon className={classes.listItemIcon}>\r\n                                <NoteAddOutlinedIcon fontSize={'medium'}/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary='הוספת מסמך' className={classes.listItemText} disableTypography={true}/>\r\n                        </ListItem>\r\n                    </List>  \r\n                </div>\r\n            </Grow>\r\n        </ClickAwayListener>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    addMenuContainer: {\r\n        zIndex: 2,\r\n        width: '240px',\r\n        background: theme.palette.primary.main,\r\n        boxShadow: 'rgba(0,0,0,0.25) 0px 0px 6px 3px',\r\n        position: 'absolute',\r\n        top: '80px',\r\n        right: '2%',\r\n        borderRadius: '10px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            maxHeight: '70vh',\r\n            overflow: 'scroll'\r\n        }\r\n\r\n    },\r\n    list: {\r\n        width: '90%',\r\n        margin: '0px auto'\r\n    },\r\n    listItem: {\r\n        color: 'theme.palette.primary.main',\r\n        margin: '7px auto',\r\n        borderRadius: '10px',\r\n        boxShadow: 'rgba(0,0,0,0.3) 1px 1px 4px 1px',\r\n        transition: 'background box-shadow 0.3s ease-in-out',\r\n        '&:hover': {\r\n            background: 'black',\r\n            transition: 'background box-shadow 0.2s ease-in-out',\r\n            boxShadow: '0 8px 32px 0 rgb(0 0 0 / 80%)',\r\n        }\r\n    }, \r\n    listItemIcon: {\r\n        color: 'white'\r\n    },\r\n    listItemText: {     \r\n        fontSize: '14px',\r\n        color: 'white'\r\n        \r\n    },\r\n    bottomList: {\r\n        padding: '10px 0'\r\n    }\r\n\r\n}));","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\UserItem.js",["123"],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Assets.js",["124","125"],"import React, { useEffect, useState } from 'react'\r\nimport { makeStyles, Grid, LinearProgress } from '@material-ui/core'\r\nimport { getSites, removeSite,getFullAddress } from '../../../api/assetsApi'\r\nimport { Asset } from './Asset'\r\nimport { AssetsControls } from './AssetsControls'\r\nimport { AlertDialog } from '../../reuseables/AlertDialoge'\r\n\r\nexport const Assets = ({}) => {\r\n\r\n    const classes = useStyles();\r\n    const [ sites, setSites ] = useState([]);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n    const [ alertDialoge , setAlertDialoge ] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if(!isLoading) return;\r\n        getSites()\r\n        .then(res => {\r\n            if (res) {\r\n                setSites([...res.data]);\r\n            }\r\n        })\r\n        .catch(e => {\r\n            console.log(e.message)\r\n        })\r\n        setIsLoading(false)\r\n    }, [isLoading])\r\n\r\n    const removeAsset = (siteId, data) => {\r\n        setAlertDialoge({\r\n            handleConfirm: async () => {\r\n                const res = await removeSite(siteId);\r\n                if (res) {\r\n                    setAlertDialoge(null)\r\n                    setIsLoading(true);\r\n                } else {\r\n                    console.log(res)\r\n                }\r\n            },\r\n            handleCancel: () => setAlertDialoge(null),\r\n            text: `האם אתה בטוח שברצונך למחוק את הנכס שכתובתו ${getFullAddress(data)}?`,\r\n            title: `מחיקת נכס`\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container justify='center'  xs={12}>\r\n                <Grid item xs={12} md={10}>\r\n                    <AssetsControls />\r\n                </Grid>\r\n                <Grid container justify='center'  xs={12}>\r\n                    {\r\n                        isLoading ?\r\n                        <LinearProgress /> :\r\n                        sites.map((v,i) => \r\n                            <Asset \r\n                                data={v} \r\n                                key={i} \r\n                                order={i}\r\n                                removeAsset={removeAsset}\r\n                            />\r\n                        )    \r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n            {\r\n                Boolean(alertDialoge) &&\r\n                <AlertDialog \r\n                    open={Boolean(alertDialoge)}\r\n                    alertDialoge={alertDialoge}\r\n                />\r\n            }\r\n            \r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    assetPaper: {\r\n        height: '200px'\r\n    }\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\api\\assetsApi.js",[],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Asset.js",["126","127","128","129","130","131"],"import React, { useEffect, useState } from 'react'\r\nimport { makeStyles, Grid, Accordion, AccordionSummary, Button, ClickAwayListener, Paper, Typography, Fade, useMediaQuery, Collapse, Grow } from '@material-ui/core'\r\nimport clsx from 'clsx'\r\nimport { ExpandMoreRounded } from '@material-ui/icons';\r\nimport { UserItem } from '../../user/UserItem'\r\nimport { AssetControls } from './AssetControls'\r\nimport CategoryOutlinedIcon from '@material-ui/icons/CategoryOutlined';\r\nimport VerticalSplitRoundedIcon from '@material-ui/icons/VerticalSplitRounded';\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport AssignmentRoundedIcon from '@material-ui/icons/AssignmentRounded';\r\nimport DescriptionRoundedIcon from '@material-ui/icons/DescriptionRounded';\r\nimport { UpdateAsset } from './UpdateAsset';\r\n\r\nconst gradients = [\r\n    'linear-gradient(38deg, rgba(170,0,255,0.6194852941176471) 0%, rgba(44,23,238,0.5438550420168067) 100%)',\r\n    \r\n    'linear-gradient(55deg, rgba(0,255,68,0.7931547619047619) 0%, rgba(255,214,0,0.7315301120448179) 100%)',\r\n    'linear-gradient(55deg, rgba(242,0,0,0.6923144257703081) 0%, rgba(250,130,0,0.8239670868347339) 100%)',\r\n    'linear-gradient(55deg, rgba(4,0,255,0.8211659663865546) 0%, rgba(0,255,244,0.7063200280112045) 100%)',\r\n    'linear-gradient(55deg, rgba(73,0,242,0.6923144257703081) 0%, rgba(250,0,249,0.6643032212885154) 100%)',\r\n    \r\n]\r\n\r\nexport const Asset = ({data, order, removeAsset}) => {\r\n\r\n    const classes = useStyles();\r\n    const [ controlsVisible, setControlsVisible ] = useState(false);\r\n    const [ editMode, setEditMode ] = useState(false);\r\n    const matches = useMediaQuery(theme => theme.breakpoints.up('sm'));\r\n    const [ transition, setTransition ] = useState({\r\n        container: {\r\n            height: '200px',\r\n            transition: 'height 0.3s ease'\r\n        }\r\n    });\r\n    \r\n    useEffect(() => {\r\n        if (editMode){\r\n            setTransition({\r\n                container: {\r\n                    height: '600px',\r\n                    transition: 'height 0.3s ease'\r\n                }\r\n            })  \r\n        } else {\r\n            setTransition({\r\n                container: {\r\n                    height: '200px',\r\n                    transition: 'height 0.3s ease'\r\n                }\r\n            })\r\n        }\r\n    }, [editMode]);\r\n    \r\n\r\n    const toggleControls = () => {\r\n        if(controlsVisible) {\r\n            setControlsVisible(false)\r\n        } else {\r\n            setControlsVisible(true)\r\n        }          \r\n    }\r\n\r\n    const toggleEditMode = () => {\r\n        if (editMode) {\r\n            setEditMode(false)\r\n        } else {\r\n            setEditMode(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fade in={true}>\r\n            <Grid item xs={12} sm={9} md={6} lg={6} xl={4} >\r\n                <ClickAwayListener onClickAway={() => editMode ? setEditMode(false) : null }>\r\n                    <Paper \r\n                        className={classes.assetContainer} \r\n                        style={{ \r\n                            background: gradients[order % 4], \r\n                            height: editMode ? transition.container.height : '200px', \r\n                            transition: editMode ? transition.container.transition : 'height 0.3s ease'\r\n                        }} \r\n                        elevation={6}\r\n                        onMouseEnter={toggleControls}\r\n                        onMouseLeave={toggleControls}\r\n                    >\r\n                        <div className={classes.topMain} >\r\n                            <div className={classes.address}>\r\n                                <Typography className={classes.addMain}>\r\n                                    {`${data.address.street} ${data.address.streetNumber}${data.address.entrance || ''}`}\r\n                                </Typography>\r\n                                <Typography className={classes.addSec}>\r\n                                    {`${data.address.city}`}\r\n                                </Typography>\r\n                                <Typography className={classes.addZip}> \r\n                                    {`${data.address.zipcode}, ${data.address.country}`}\r\n                                </Typography>\r\n                            </div>\r\n                            <div className={classes.siteOwner}>\r\n                                <UserItem showPhone avatarSize={'50px'}/>\r\n                            </div>\r\n                            {\r\n                                (controlsVisible || !matches) &&\r\n                                <AssetControls \r\n                                    removeAsset={() => removeAsset(data._id, data)} \r\n                                    toggleEditMode={toggleEditMode}/>\r\n                            }\r\n                        </div>\r\n                        <div \r\n                            className={classes.bottomMain}\r\n                        >\r\n                            <div className={classes.extraDetails}>\r\n                                <div className={classes.type}>\r\n                                    <CategoryOutlinedIcon className={classes.typeIcon}/>\r\n                                    <div className={classes.typeDetails}>\r\n                                        <div className={classes.typeData}>\r\n                                            {data.type}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {\r\n                                    data.addInfo.floors ? \r\n                                    <div className={clsx(classes.type, classes.floor)}>\r\n                                        <VerticalSplitRoundedIcon className={classes.typeIcon}/>\r\n                                        <div className={classes.typeDetails}>\r\n                                            <div className={classes.typeData}>\r\n                                                {`${data.addInfo.floors} קומות`}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                {\r\n                                    data.addInfo.floor ?\r\n                                    <div className={clsx(classes.type, classes.floor)} >\r\n                                        <VerticalSplitRoundedIcon className={classes.typeIcon}/>\r\n                                        <div className={classes.typeDetails}>\r\n                                            <div className={classes.typeData}>\r\n                                            {`קומה ${data.addInfo.floor}`}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                {\r\n                                    data.addInfo.unit ?\r\n                                    <div className={clsx(classes.type, classes.unit)}>\r\n                                        <HomeRoundedIcon className={classes.typeIcon}/>\r\n                                        <div className={classes.typeDetails}>\r\n                                            <div className={classes.typeData}>\r\n                                            {`דירה ${data.addInfo.unit}`}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                \r\n                            </div>\r\n                            <div className={classes.buttonsContainer} >\r\n                                <Button\r\n                                    startIcon={<WarningRoundedIcon className={classes.typeIcon}/>}\r\n                                    className={clsx(classes.errorsBtn, classes.buttonsBtn)}\r\n                                >\r\n                                    {`תקלות`}    \r\n                                </Button>\r\n                                <Button\r\n                                    startIcon={<AssignmentRoundedIcon className={classes.typeIcon}/>}\r\n                                    className={clsx(classes.assignmentsBtn, classes.buttonsBtn)}\r\n                                >\r\n                                    {`משימות`}    \r\n                                </Button>\r\n                                <Button\r\n                                    startIcon={<DescriptionRoundedIcon className={classes.typeIcon}/>}\r\n                                    className={clsx(classes.docsBtn, classes.buttonsBtn)}\r\n                                >\r\n                                    {`מסמכים`}    \r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                        <UpdateAsset data={data} open={editMode}/>\r\n                   \r\n                    </Paper>\r\n                </ClickAwayListener>\r\n            </Grid>\r\n        </Fade>\r\n        \r\n        \r\n    )\r\n\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    assetContainer: {\r\n        margin: '10px',\r\n        background: 'white',\r\n        borderRadius: '25px',\r\n        height: '200px',\r\n        color: 'white'\r\n    },\r\n    topMain: {\r\n        height: '120px',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        position: 'relative'\r\n    },\r\n    address: {\r\n        padding: `${theme.spacing(3)}px 0 0 ${theme.spacing(3)}px`,\r\n         \r\n        maxWidth: '45%'\r\n    },\r\n    addMain: {\r\n        fontSize: '20px',\r\n        lineHeight: 1\r\n    },\r\n    addSec: {\r\n        fontSize: '14px'\r\n    },\r\n    addZip: {\r\n        fontSize: '14px'\r\n    },\r\n    bottomMain: {\r\n        height: '80px',\r\n        borderRadius: '25px',\r\n        background: 'white',\r\n        position: 'relative',\r\n        background: 'transparent'\r\n    },\r\n    siteOwner: {\r\n        width: '160px',\r\n        height: '50px',\r\n        padding: '7px',\r\n        borderRadius: '0px 25px 0px 30px',\r\n        boxShadow: '0 2px 20px 0 rgb(0 0 0 / 37%)',\r\n        '&:hover' :{\r\n            background: 'black',\r\n            transition: 'background 0.2s ease',\r\n            boxShadow: '0 8px 32px 0 rgb(0 0 0 / 80%)',\r\n        }\r\n    },\r\n    extraDetails: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n        height: '40%',\r\n        borderRadius: '25px'\r\n    },\r\n    type: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        padding: '5px 10px',\r\n        width: 'fit-content',\r\n        background: theme.palette.primary.main,\r\n        borderRadius: '25px 0 25px 0',\r\n        color: 'white',\r\n        alignItems: 'center',\r\n        border: '1px solid white'\r\n\r\n    },\r\n    typeIcon: {\r\n        fontSize: '20px'\r\n    },\r\n    typeData: {\r\n        padding: '0 20px 0 10px',\r\n        lineHeight: 1\r\n    },\r\n    floor: {\r\n        right: '22px',\r\n        \r\n    },\r\n    unit: {\r\n        right: '44px',\r\n        \r\n    },\r\n    buttonsContainer: {\r\n        width: '100%',\r\n        height: '60%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        borderRadius: '0 0 25px 25px',\r\n        \r\n    },\r\n    buttonsBtn: {\r\n        width: '33%',\r\n        padding: '7px 20px',\r\n        borderRadius: '50px',\r\n        fontSize: '16px',\r\n        color: 'white'\r\n    },\r\n    errorsBtn: {\r\n        borderRadius: '0 0 0 25px'\r\n    },\r\n    assignmentsBtn: {\r\n        borderRadius: '0 0 0 0'\r\n    },\r\n    docsBtn: {\r\n        borderRadius: '0 0 25px 0'\r\n    }\r\n    \r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\user\\UserItem.js",[],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetsControls.js",["132","133","134"],"import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\n\r\nexport const AssetsControls = ({}) => {\r\n    \r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}));\r\n","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetControls.js",["135"],"import React, { useState } from 'react'\r\nimport { makeStyles, Fade, IconButton, Tooltip } from '@material-ui/core'\r\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\nimport TransferWithinAStationRoundedIcon from '@material-ui/icons/TransferWithinAStationRounded';\r\n\r\n\r\nexport const AssetControls = ({removeAsset, toggleEditMode}) => {\r\n    \r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <Fade in={true} timeout={500}>\r\n            <div className={ classes.container}>\r\n                <Tooltip title='מחיקת נכס'>\r\n                    <IconButton \r\n                        className={classes.iconbutton}\r\n                        onClick={removeAsset}    \r\n                    >\r\n                        <DeleteOutlineRoundedIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title='עריכת כתובת'>\r\n                    <IconButton \r\n                        className={classes.iconbutton}\r\n                        onClick={toggleEditMode}\r\n                    >\r\n                        <EditRoundedIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title='שינוי מנהל בניין'>\r\n                    <IconButton className={classes.iconbutton}> \r\n                        <TransferWithinAStationRoundedIcon className={classes.icon}/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </div>\r\n        </Fade>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: '55%',\r\n    },\r\n    iconbutton: {\r\n        margin: '7px 5px',\r\n        boxShadow: 'rgba(0,0,0,0.2) 0px 0px 3px 3px ',\r\n        background: theme.palette.primary.main,\r\n        color: 'white',\r\n        padding: '8px'\r\n       \r\n    },\r\n    icon: {\r\n        fontSize: '24px'\r\n    }\r\n}));\r\n","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AlertDialoge.js",[],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\UpdateAsset.js",["136","137","138","139","140","141"],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":2,"column":17,"nodeType":"148","messageId":"149","endLine":2,"endColumn":27},{"ruleId":"146","severity":1,"message":"150","line":2,"column":29,"nodeType":"148","messageId":"149","endLine":2,"endColumn":38},{"ruleId":"146","severity":1,"message":"150","line":1,"column":42,"nodeType":"148","messageId":"149","endLine":1,"endColumn":51},{"ruleId":"146","severity":1,"message":"151","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":8,"column":27,"nodeType":"154","messageId":"155","endLine":8,"endColumn":29},{"ruleId":"156","severity":1,"message":"157","line":33,"column":8,"nodeType":"158","endLine":33,"endColumn":10,"suggestions":"159"},{"ruleId":"156","severity":1,"message":"157","line":33,"column":8,"nodeType":"158","endLine":33,"endColumn":10,"suggestions":"160"},{"ruleId":"146","severity":1,"message":"151","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"146","severity":1,"message":"161","line":3,"column":30,"nodeType":"148","messageId":"149","endLine":3,"endColumn":37},{"ruleId":"146","severity":1,"message":"162","line":3,"column":64,"nodeType":"148","messageId":"149","endLine":3,"endColumn":68},{"ruleId":"146","severity":1,"message":"163","line":8,"column":10,"nodeType":"148","messageId":"149","endLine":8,"endColumn":18},{"ruleId":"146","severity":1,"message":"164","line":15,"column":11,"nodeType":"148","messageId":"149","endLine":15,"endColumn":18},{"ruleId":"146","severity":1,"message":"151","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"146","severity":1,"message":"165","line":2,"column":66,"nodeType":"148","messageId":"149","endLine":2,"endColumn":69},{"ruleId":"146","severity":1,"message":"166","line":2,"column":71,"nodeType":"148","messageId":"149","endLine":2,"endColumn":78},{"ruleId":"146","severity":1,"message":"151","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"146","severity":1,"message":"165","line":2,"column":66,"nodeType":"148","messageId":"149","endLine":2,"endColumn":69},{"ruleId":"146","severity":1,"message":"166","line":2,"column":71,"nodeType":"148","messageId":"149","endLine":2,"endColumn":78},{"ruleId":"152","severity":1,"message":"153","line":7,"column":26,"nodeType":"154","messageId":"155","endLine":7,"endColumn":28},{"ruleId":"152","severity":1,"message":"153","line":8,"column":24,"nodeType":"154","messageId":"155","endLine":8,"endColumn":26},{"ruleId":"146","severity":1,"message":"167","line":10,"column":11,"nodeType":"148","messageId":"149","endLine":10,"endColumn":18},{"ruleId":"146","severity":1,"message":"168","line":2,"column":28,"nodeType":"148","messageId":"149","endLine":2,"endColumn":37},{"ruleId":"146","severity":1,"message":"169","line":2,"column":39,"nodeType":"148","messageId":"149","endLine":2,"endColumn":55},{"ruleId":"146","severity":1,"message":"170","line":2,"column":124,"nodeType":"148","messageId":"149","endLine":2,"endColumn":132},{"ruleId":"146","severity":1,"message":"162","line":2,"column":134,"nodeType":"148","messageId":"149","endLine":2,"endColumn":138},{"ruleId":"146","severity":1,"message":"171","line":4,"column":10,"nodeType":"148","messageId":"149","endLine":4,"endColumn":27},{"ruleId":"172","severity":1,"message":"173","line":230,"column":9,"nodeType":"174","messageId":"155","endLine":230,"endColumn":19},{"ruleId":"146","severity":1,"message":"151","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":5,"column":32,"nodeType":"154","messageId":"155","endLine":5,"endColumn":34},{"ruleId":"146","severity":1,"message":"167","line":7,"column":11,"nodeType":"148","messageId":"149","endLine":7,"endColumn":18},{"ruleId":"146","severity":1,"message":"151","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"146","severity":1,"message":"150","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"146","severity":1,"message":"168","line":2,"column":34,"nodeType":"148","messageId":"149","endLine":2,"endColumn":43},{"ruleId":"146","severity":1,"message":"175","line":2,"column":68,"nodeType":"148","messageId":"149","endLine":2,"endColumn":85},{"ruleId":"146","severity":1,"message":"176","line":2,"column":87,"nodeType":"148","messageId":"149","endLine":2,"endColumn":96},{"ruleId":"146","severity":1,"message":"177","line":4,"column":10,"nodeType":"148","messageId":"149","endLine":4,"endColumn":19},{"ruleId":"146","severity":1,"message":"178","line":14,"column":21,"nodeType":"148","messageId":"149","endLine":14,"endColumn":30},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkUserAuthentication'. Either include it or remove the dependency array.","ArrayExpression",["181"],["182"],"'Toolbar' is defined but never used.","'Grow' is defined but never used.","'SideMenu' is defined but never used.","'matches' is assigned a value but never used.","'Box' is defined but never used.","'Divider' is defined but never used.","'classes' is assigned a value but never used.","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'Collapse' is defined but never used.","'ExpandMoreRounded' is defined but never used.","no-dupe-keys","Duplicate key 'background'.","ObjectExpression","'ClickAwayListener' is defined but never used.","'TextField' is defined but never used.","'EventNote' is defined but never used.","'setErrors' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"183","fix":"185"},"Update the dependencies array to be: [checkUserAuthentication]",{"range":"186","text":"187"},{"range":"188","text":"187"},[1060,1062],"[checkUserAuthentication]",[1028,1030]]