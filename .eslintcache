[{"C:\\projects\\leev\\leev-fe\\src\\index.js":"1","C:\\projects\\leev\\leev-fe\\src\\App.js":"2","C:\\projects\\leev\\leev-fe\\src\\i18n.js":"3","C:\\projects\\leev\\leev-fe\\src\\context\\LanguageContext.js":"4","C:\\projects\\leev\\leev-fe\\src\\context\\FiltersContext.js":"5","C:\\projects\\leev\\leev-fe\\src\\context\\SnackbarContext.js":"6","C:\\projects\\leev\\leev-fe\\src\\themes\\theme.js":"7","C:\\projects\\leev\\leev-fe\\src\\components\\workspace\\ProtectedWorkspace.js":"8","C:\\projects\\leev\\leev-fe\\src\\components\\routes\\InitialRouter.js":"9","C:\\projects\\leev\\leev-fe\\src\\components\\workspace\\Workspace.js":"10","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Chatbot.js":"11","C:\\projects\\leev\\leev-fe\\src\\components\\user\\Login.js":"12","C:\\projects\\leev\\leev-fe\\src\\context\\FaultsContext.js":"13","C:\\projects\\leev\\leev-fe\\src\\context\\NotificationsContext.js":"14","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Messages.js":"15","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageInput.js":"16","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Scenrio.js":"17","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageImage.js":"18","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageSelector.js":"19","C:\\projects\\leev\\leev-fe\\src\\api\\userApi.js":"20","C:\\projects\\leev\\leev-fe\\src\\api\\assetsApi.js":"21","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\Controls.js":"22","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Settings.js":"23","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Assets.js":"24","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\Tasks.js":"25","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\Documents.js":"26","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\Faults.js":"27","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MapView.js":"28","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\Systems.js":"29","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Message.js":"30","C:\\projects\\leev\\leev-fe\\src\\api\\chatbotApi.js":"31","C:\\projects\\leev\\leev-fe\\src\\api\\genericApi.js":"32","C:\\projects\\leev\\leev-fe\\src\\api\\notificationsApi.js":"33","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Users.js":"34","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UserProfile.js":"35","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\SettingsMenu.js":"36","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CreateContainer.js":"37","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\AddMenu.js":"38","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Navbar.js":"39","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Notifications.js":"40","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\SideMenu.js":"41","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Asset.js":"42","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetsControls.js":"43","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AlertDialog.js":"44","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsControls.js":"45","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsHeader.js":"46","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\System.js":"47","C:\\projects\\leev\\leev-fe\\src\\api\\systemsApi.js":"48","C:\\projects\\leev\\leev-fe\\src\\api\\mapApi.js":"49","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\Mapbox.js":"50","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MarkerData.js":"51","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\Map.js":"52","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\UpsertDocument.js":"53","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MapControls.js":"54","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViews.js":"55","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\DocumentsControls.js":"56","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultView.js":"57","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\Document.js":"58","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\useQuery.js":"59","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\Can.js":"60","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\UpsertAsset.js":"61","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBoxSelect.js":"62","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterBySelect.js":"63","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateOwner.js":"64","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\UpsertSystem.js":"65","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemAdditionalDetails.js":"66","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskMinified.js":"67","C:\\projects\\leev\\leev-fe\\src\\api\\documentsApi.js":"68","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultsControls.js":"69","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\UpsertFault.js":"70","C:\\projects\\leev\\leev-fe\\src\\components\\user\\UserItem.js":"71","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ItemLink.js":"72","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\DocumentControls.js":"73","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViewControls.js":"74","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultLink.js":"75","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UserList.js":"76","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateStatus.js":"77","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\StatusTag.js":"78","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CommentSection.js":"79","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\Carousel.js":"80","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AddRelatedUser.js":"81","C:\\projects\\leev\\leev-fe\\src\\api\\faultsApi.js":"82","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterByMultiSelect.js":"83","C:\\projects\\leev\\leev-fe\\src\\api\\tasksApi.js":"84","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlockView.js":"85","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultListView.js":"86","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\usePermissions.js":"87","C:\\projects\\leev\\leev-fe\\src\\api\\permissionsApi.js":"88","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\TimeActive.js":"89","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultMinified.js":"90","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemRelatedUsers.js":"91","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemControls.js":"92","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlock.js":"93","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemName.js":"94","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBox.js":"95","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SortBy.js":"96","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetControls.js":"97","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\AddRelatedUser.js":"98","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Notification.js":"99","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UpsertUser.js":"100","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\UpsertTask.js":"101","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskSteps.js":"102","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskView.js":"103","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TasksList.js":"104","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskViewControls.js":"105","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TasksControls.js":"106","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\scheduler\\Scheduler.js":"107","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\scheduler\\ScheduleItem.js":"108","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\datepickers\\CustomeDatePicker.js":"109","C:\\projects\\leev\\leev-fe\\src\\context\\authContext.js":"110","C:\\projects\\leev\\leev-fe\\src\\context\\AuthContext.js":"111","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageBoolean.js":"112","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\RepeatableTasks.js":"113","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\Calender.js":"114","C:\\projects\\leev\\leev-fe\\src\\api\\calenderApi.js":"115","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\CalenderHeaderRow.js":"116","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\CalenderRow.js":"117"},{"size":785,"mtime":1621060516233,"results":"118","hashOfConfig":"119"},{"size":1797,"mtime":1619827455198,"results":"120","hashOfConfig":"119"},{"size":699,"mtime":1619827455315,"results":"121","hashOfConfig":"119"},{"size":665,"mtime":1621180295784,"results":"122","hashOfConfig":"119"},{"size":463,"mtime":1619827455314,"results":"123","hashOfConfig":"119"},{"size":390,"mtime":1619827455315,"results":"124","hashOfConfig":"119"},{"size":2200,"mtime":1619827455317,"results":"125","hashOfConfig":"119"},{"size":1515,"mtime":1620606805126,"results":"126","hashOfConfig":"119"},{"size":1448,"mtime":1619827455312,"results":"127","hashOfConfig":"119"},{"size":3763,"mtime":1621191757386,"results":"128","hashOfConfig":"119"},{"size":9321,"mtime":1620792420906,"results":"129","hashOfConfig":"119"},{"size":10314,"mtime":1621183890165,"results":"130","hashOfConfig":"119"},{"size":372,"mtime":1619827455314,"results":"131","hashOfConfig":"119"},{"size":428,"mtime":1619827455314,"results":"132","hashOfConfig":"119"},{"size":2568,"mtime":1620781982367,"results":"133","hashOfConfig":"119"},{"size":2200,"mtime":1620599160972,"results":"134","hashOfConfig":"119"},{"size":5535,"mtime":1621183074384,"results":"135","hashOfConfig":"119"},{"size":3427,"mtime":1619928487361,"results":"136","hashOfConfig":"119"},{"size":3530,"mtime":1619921146212,"results":"137","hashOfConfig":"119"},{"size":5556,"mtime":1620492692929,"results":"138","hashOfConfig":"119"},{"size":5556,"mtime":1620149144029,"results":"139","hashOfConfig":"119"},{"size":3495,"mtime":1620509520279,"results":"140","hashOfConfig":"119"},{"size":4735,"mtime":1619827455288,"results":"141","hashOfConfig":"119"},{"size":3942,"mtime":1620744627345,"results":"142","hashOfConfig":"119"},{"size":691,"mtime":1620493570053,"results":"143","hashOfConfig":"119"},{"size":3797,"mtime":1621119136659,"results":"144","hashOfConfig":"119"},{"size":669,"mtime":1619827455296,"results":"145","hashOfConfig":"119"},{"size":2680,"mtime":1619827455297,"results":"146","hashOfConfig":"119"},{"size":3520,"mtime":1619827455300,"results":"147","hashOfConfig":"119"},{"size":1496,"mtime":1620783042284,"results":"148","hashOfConfig":"119"},{"size":898,"mtime":1619993090833,"results":"149","hashOfConfig":"119"},{"size":5545,"mtime":1620492340169,"results":"150","hashOfConfig":"119"},{"size":2486,"mtime":1621034250288,"results":"151","hashOfConfig":"119"},{"size":7221,"mtime":1619827455289,"results":"152","hashOfConfig":"119"},{"size":4585,"mtime":1619827455289,"results":"153","hashOfConfig":"119"},{"size":3342,"mtime":1619827455288,"results":"154","hashOfConfig":"119"},{"size":4684,"mtime":1621191751471,"results":"155","hashOfConfig":"119"},{"size":6037,"mtime":1620573983896,"results":"156","hashOfConfig":"119"},{"size":6126,"mtime":1620509553626,"results":"157","hashOfConfig":"119"},{"size":4351,"mtime":1621034433914,"results":"158","hashOfConfig":"119"},{"size":8299,"mtime":1621191750672,"results":"159","hashOfConfig":"119"},{"size":14512,"mtime":1621192209932,"results":"160","hashOfConfig":"119"},{"size":4604,"mtime":1619827455291,"results":"161","hashOfConfig":"119"},{"size":3226,"mtime":1619827455305,"results":"162","hashOfConfig":"119"},{"size":5612,"mtime":1619827455301,"results":"163","hashOfConfig":"119"},{"size":3344,"mtime":1619827455301,"results":"164","hashOfConfig":"119"},{"size":6999,"mtime":1620324852648,"results":"165","hashOfConfig":"119"},{"size":7608,"mtime":1619827455201,"results":"166","hashOfConfig":"119"},{"size":1109,"mtime":1619827455201,"results":"167","hashOfConfig":"119"},{"size":5498,"mtime":1620193868179,"results":"168","hashOfConfig":"119"},{"size":8838,"mtime":1619827455298,"results":"169","hashOfConfig":"119"},{"size":5514,"mtime":1619827455297,"results":"170","hashOfConfig":"119"},{"size":23625,"mtime":1619827455293,"results":"171","hashOfConfig":"119"},{"size":5371,"mtime":1619827455297,"results":"172","hashOfConfig":"119"},{"size":3391,"mtime":1619827455295,"results":"173","hashOfConfig":"119"},{"size":5952,"mtime":1619827455293,"results":"174","hashOfConfig":"119"},{"size":11978,"mtime":1621180555014,"results":"175","hashOfConfig":"119"},{"size":6162,"mtime":1621180404140,"results":"176","hashOfConfig":"119"},{"size":164,"mtime":1619827455309,"results":"177","hashOfConfig":"119"},{"size":517,"mtime":1620493358077,"results":"178","hashOfConfig":"119"},{"size":22309,"mtime":1619827455291,"results":"179","hashOfConfig":"119"},{"size":8024,"mtime":1619827455307,"results":"180","hashOfConfig":"119"},{"size":6761,"mtime":1619827455306,"results":"181","hashOfConfig":"119"},{"size":7840,"mtime":1619827455308,"results":"182","hashOfConfig":"119"},{"size":52532,"mtime":1619827455302,"results":"183","hashOfConfig":"119"},{"size":16098,"mtime":1619827455299,"results":"184","hashOfConfig":"119"},{"size":5436,"mtime":1620507322621,"results":"185","hashOfConfig":"119"},{"size":4354,"mtime":1621178859523,"results":"186","hashOfConfig":"119"},{"size":6541,"mtime":1619827455296,"results":"187","hashOfConfig":"119"},{"size":33906,"mtime":1621183591962,"results":"188","hashOfConfig":"119"},{"size":3292,"mtime":1619827455312,"results":"189","hashOfConfig":"119"},{"size":398,"mtime":1619827455307,"results":"190","hashOfConfig":"119"},{"size":3869,"mtime":1621179297899,"results":"191","hashOfConfig":"119"},{"size":2677,"mtime":1619827455295,"results":"192","hashOfConfig":"119"},{"size":531,"mtime":1619827455294,"results":"193","hashOfConfig":"119"},{"size":5028,"mtime":1619827455309,"results":"194","hashOfConfig":"119"},{"size":7931,"mtime":1619827455308,"results":"195","hashOfConfig":"119"},{"size":2282,"mtime":1619827455308,"results":"196","hashOfConfig":"119"},{"size":9161,"mtime":1619827455306,"results":"197","hashOfConfig":"119"},{"size":7651,"mtime":1619827455305,"results":"198","hashOfConfig":"119"},{"size":7792,"mtime":1619827455304,"results":"199","hashOfConfig":"119"},{"size":8674,"mtime":1619992230845,"results":"200","hashOfConfig":"119"},{"size":8707,"mtime":1619827455306,"results":"201","hashOfConfig":"119"},{"size":8171,"mtime":1621056128825,"results":"202","hashOfConfig":"119"},{"size":2648,"mtime":1619827455294,"results":"203","hashOfConfig":"119"},{"size":3651,"mtime":1619827455294,"results":"204","hashOfConfig":"119"},{"size":694,"mtime":1619827455309,"results":"205","hashOfConfig":"119"},{"size":1087,"mtime":1619827455201,"results":"206","hashOfConfig":"119"},{"size":1011,"mtime":1619827455308,"results":"207","hashOfConfig":"119"},{"size":2598,"mtime":1619827455294,"results":"208","hashOfConfig":"119"},{"size":6428,"mtime":1619827455300,"results":"209","hashOfConfig":"119"},{"size":5458,"mtime":1621192851861,"results":"210","hashOfConfig":"119"},{"size":940,"mtime":1619827455293,"results":"211","hashOfConfig":"119"},{"size":5213,"mtime":1619827455300,"results":"212","hashOfConfig":"119"},{"size":3795,"mtime":1619827455307,"results":"213","hashOfConfig":"119"},{"size":5216,"mtime":1619827455307,"results":"214","hashOfConfig":"119"},{"size":1659,"mtime":1619827455290,"results":"215","hashOfConfig":"119"},{"size":7683,"mtime":1619827455299,"results":"216","hashOfConfig":"119"},{"size":5232,"mtime":1621006829713,"results":"217","hashOfConfig":"119"},{"size":19305,"mtime":1619827455289,"results":"218","hashOfConfig":"119"},{"size":41450,"mtime":1620493119140,"results":"219","hashOfConfig":"119"},{"size":4909,"mtime":1619827455302,"results":"220","hashOfConfig":"119"},{"size":15653,"mtime":1621180492189,"results":"221","hashOfConfig":"119"},{"size":2111,"mtime":1620507367334,"results":"222","hashOfConfig":"119"},{"size":5850,"mtime":1620506400945,"results":"223","hashOfConfig":"119"},{"size":5386,"mtime":1619827455303,"results":"224","hashOfConfig":"119"},{"size":7698,"mtime":1620449579535,"results":"225","hashOfConfig":"119"},{"size":5735,"mtime":1621056051256,"results":"226","hashOfConfig":"119"},{"size":1168,"mtime":1619827455310,"results":"227","hashOfConfig":"119"},{"size":457,"mtime":1619828447544,"results":"228","hashOfConfig":"119"},{"size":457,"mtime":1619828447544,"results":"229","hashOfConfig":"119"},{"size":1625,"mtime":1619984310424,"results":"230","hashOfConfig":"119"},{"size":700,"mtime":1620426895691,"results":"231","hashOfConfig":"119"},{"size":2008,"mtime":1621062511861,"results":"232","hashOfConfig":"119"},{"size":2700,"mtime":1621058571627,"results":"233","hashOfConfig":"119"},{"size":1084,"mtime":1621062087694,"results":"234","hashOfConfig":"119"},{"size":1145,"mtime":1621062373122,"results":"235","hashOfConfig":"119"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ryrvlx",{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"240"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"240"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"240"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"240"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"240"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"240"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"240"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"240"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"240"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"240"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"323","messages":"324","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"327","messages":"328","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"329","messages":"330","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"331","messages":"332","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"240"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"240"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"240"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"240"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"240"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"240"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"240"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"240"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"240"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"240"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"240"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"240"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"240"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"240"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"375","messages":"376","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"381","messages":"382","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"240"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"240"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"240"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"240"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"240"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"240"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"403","messages":"404","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"240"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"240"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"240"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"240"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"240"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"240"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"240"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"240"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"240"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"240"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"240"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"240"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"240"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"240"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"240"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"466","messages":"467","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"240"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"240"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"240"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"240"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"240"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"240"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"486","messages":"487","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"240"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"491","messages":"492","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"240"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"496","messages":"497","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"498","messages":"499","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"500","messages":"501","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"240"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"240"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"240"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"240"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"522","messages":"523","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"524","messages":"525","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"526","messages":"527","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\projects\\leev\\leev-fe\\src\\index.js",["528"],"C:\\projects\\leev\\leev-fe\\src\\App.js",[],["529","530"],"C:\\projects\\leev\\leev-fe\\src\\i18n.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\LanguageContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\FiltersContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\SnackbarContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\themes\\theme.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\workspace\\ProtectedWorkspace.js",["531"],"C:\\projects\\leev\\leev-fe\\src\\components\\routes\\InitialRouter.js",["532"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authenticate, handleLS } from '../../api/userApi';\r\n\r\nexport const InitialRouter = ({...rest}) => {\r\n    \r\n    const { auth, setAuth } = useContext(AuthContext);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    const checkUserAuthentication = async () => {\r\n        let token = await handleLS('wb_token', 'get');\r\n        if (!token) {\r\n            setIsLoading(false);\r\n            return;\r\n        };\r\n        let res = await authenticate(token);\r\n        \r\n        if (res.auth) {\r\n           setAuth({\r\n                isAuth: res.auth,\r\n                user: res.user,\r\n                token: res.token.token,\r\n                refreshToken: res.token.refreshToken\r\n            });\r\n              \r\n        }\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n    useEffect(() => {\r\n        checkUserAuthentication();\r\n    }, []);\r\n\r\n    return (\r\n        <Route {...rest}\r\n          render={() => isLoading ? \r\n            'loading' : \r\n            auth.isAuth\r\n            ? <Redirect\r\n                to={{\r\n                    pathname: \"/workspace\"\r\n            }}/> \r\n            :   <Redirect\r\n                    to={{\r\n                    pathname: \"/login\"\r\n                }}/>\r\n            }      \r\n        />\r\n      );\r\n}\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\workspace\\Workspace.js",["533","534","535"],"C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Chatbot.js",["536","537","538","539","540","541","542"],"C:\\projects\\leev\\leev-fe\\src\\components\\user\\Login.js",["543"],"C:\\projects\\leev\\leev-fe\\src\\context\\FaultsContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\NotificationsContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Messages.js",["544","545"],"import { Grid, makeStyles, Avatar, Fade } from '@material-ui/core';\r\nimport React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { Message } from './Message';\r\nimport logo from '../../assets/logo/leev_logo.png';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nexport const Messages = ({ data }) => {\r\n\r\n    const classes = useStyles();\r\n    const [ messages, setMessages ] = useState(data || []);\r\n    const { t } = useTranslation();\r\n    const ms = useRef();\r\n\r\n    useEffect(() => {\r\n        setMessages(data);\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (ms) {\r\n            // ms.current.scrollTop = ms.current.scrollHeight - ms.current.clientHeight;\r\n            let len = ms.current.children.length;\r\n            ms.current.children[len - 1].scrollIntoView({ bahavior: 'smooth'}) \r\n        }    \r\n    }, [ messages ])\r\n\r\n\treturn (\r\n\t\t<div className={classes.messagesContainer} ref={ms} >\r\n            <Fade in={Boolean(data.length)}>\r\n            <div className={classes.topProfile}>\r\n                <Avatar src={logo} className={classes.avatar}/>\r\n                <div className={classes.welcome}>\r\n                    {t(\"chatbot.welcome\")}\r\n                </div>\r\n                <div className={classes.welcomeSub}>\r\n                    {t(\"chatbot.welcomeSub\")}\r\n                </div>\r\n            </div>\r\n            </Fade>\r\n           \r\n            {\r\n                messages.length ?\r\n                messages.map((m,i) => \r\n                    <Message data={m} key={i} />\r\n                ):\r\n                null\r\n            }\r\n        </div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    messagesContainer: {\r\n        padding: '10px 0',\r\n        height: 'calc(100% - 120px)',\r\n        overflowY: 'overlay',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    topProfile: {\r\n        width: '100%',\r\n        display: 'grid',\r\n        placeItems: 'center'\r\n    },\r\n    avatar: {\r\n        height: '150px',\r\n        width: '150px',\r\n        margin: '10px'\r\n    },\r\n    welcome: {\r\n        color: 'white',\r\n        fontSize: '14px',\r\n        margin: '5px',\r\n        background: 'rgba(0,0,0,0.8)',\r\n        padding: '10px 25px',\r\n        borderRadius: '50px',\r\n    },\r\n    welcomeSub: {\r\n        color: 'rgba(255,255,255,0.7)',\r\n        fontSize: '12px',\r\n        background: 'rgba(0,0,0,0.8)',\r\n        borderRadius: '50px',\r\n        padding: '10px 25px',\r\n        margin: '5px 0 30px'\r\n    },\r\n    '@global': {\r\n\t\t'*::-webkit-scrollbar': {\r\n\t\t\twidth: '0em',\r\n        }\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageInput.js",["546"],"import { FormControl, Grid, IconButton, makeStyles, OutlinedInput } from '@material-ui/core';\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\nimport clsx from 'clsx';\r\nimport React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\nexport const MessageInput = ({ value, handleInputChange, handleSendInput, placeholder}) => {\r\n\tconst classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n\r\n    const handleChange = event => {\r\n        let val = event.target.value;\r\n        handleInputChange({ text: val, value: val, type: 'string'});\r\n    }\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} className={classes.addComment}>\r\n\t\t\t<FormControl variant=\"outlined\" className={classes.form}>\r\n\t\t\t\t<OutlinedInput\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\tclassName={clsx(classes.textInput)}\r\n\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\tinputMultiline: classes.multiLine,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</FormControl>\r\n\t\t\t<IconButton className={classes.postBtn} onClick={handleSendInput}>\r\n\t\t\t\t<SendRoundedIcon className={clsx(classes.icon, lang.dir === 'rtl' ? classes.mirror : null)} />\r\n\t\t\t</IconButton>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\t\r\n\taddComment: {\r\n\t\tdisplay: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: 'fit-content',\r\n        padding: '0 5px'\r\n\t},\r\n\tform: {\r\n\t\tcolor: 'white',\r\n        width: '100%',\r\n        margin: '0 5px 0 0px'\r\n\t},\r\n\ttextInput: {\r\n        padding: '4px 10px',\r\n        borderRadius: '42px',\r\n        background: 'rgba(255,255,255,0.1)',\r\n\t\t'& input': {\r\n\t\t\tcolor: 'white',\r\n\t\t\twidth: '80%',\r\n            padding: '7px 10px',\r\n            fontSize: '14px'\r\n\t\t},\r\n\t\t'& label': {\r\n\t\t\tcolor: 'white',\r\n\t\t\tpaddingLeft: '5px',\r\n\t\t},\r\n\t\t'& fieldset': {\r\n\t\t\tborderColor: 'rgba(255,255,255,0.2)',\r\n\t\t\tborderRadius: '42px',\r\n\t\t},\r\n\t},\r\n\tpostBtn: {\r\n        background: '#42A5F5',\r\n\t\tcolor: 'white',\r\n        padding: '7px',\r\n\t\tmargin: ' 0 5px 1px'\r\n\t},\r\n\ticon: {\r\n        fontSize: '20px',\r\n        color: 'white'\r\n\t},\r\n\tmirror: {\r\n\t\ttransform: 'scaleX(-1)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Scenrio.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageImage.js",["547","548","549"],"import { Button, FormControl, Grid, IconButton, makeStyles, OutlinedInput } from '@material-ui/core';\r\nimport { CancelScheduleSend } from '@material-ui/icons';\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\nimport clsx from 'clsx';\r\nimport React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\nexport const MessageImage = ({ value, handleInputChange, handleSendInput, placeholder}) => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const { lang } = useContext(LanguageContext);\r\n\r\n    const handleFileUpload = event => {\r\n        let val = event.target.files;\r\n        handleInputChange({ text: `${val.length} ${t(\"chatbot.imagesSelected\")} ` , value: val, type: 'image'});\r\n    }\r\n\r\n    const handleNoImages = () => {\r\n        handleInputChange({ text: `${t(\"chatbot.noImages\")}` , value: null, type: 'image'});\r\n    }\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} className={classes.addComment}>\r\n\t\t\t<Button\r\n                component={'label'}\r\n                variant={'contained'}\r\n                className={clsx(classes.uploadBtn, value.length ? classes.imagesUploaded : classes.noImages)}\r\n            >\r\n                { value.length ? `${value.length} ${t(\"chatbot.imagesSelected\")}` : t(\"chatbot.uploadImages\")}\r\n                <input \r\n                    accepts='image/*'\r\n                    type='file'\r\n                    multiple\r\n                    onChange={handleFileUpload}\r\n                    hidden  \r\n                />\r\n            </Button>\r\n            {\r\n                !value.length ? \r\n                <Button\r\n                className={clsx(classes.noImagesBtn, classes.noImages)}\r\n                variant={'contained'}\r\n                onClick={handleNoImages}\r\n            >\r\n                {t(\"chatbot.noImages\")}\r\n            </Button> : \r\n\t\t\t<IconButton className={classes.postBtn} onClick={handleSendInput}>\r\n\t\t\t\t<SendRoundedIcon className={clsx(classes.icon, lang.dir === 'rtl' ? classes.mirror : null)} />\r\n\t\t\t</IconButton>\r\n            }\r\n            \r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\taddComment: {\r\n\t\tdisplay: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: 'fit-content',\r\n        padding: '0 5px'\r\n\t},\r\n    uploadBtn: {\r\n        padding: '6px 10px',\r\n        borderRadius: '42px',\r\n        background: 'rgba(255,255,255,0.1)',\r\n        color: 'white',\r\n        width: '100%',\r\n        margin: '0 5px 0 0px',\r\n        '&:hover': {\r\n            boxShadow: 'inset white 0 0 2px 1px',\r\n            background: 'rgba(0,0,0,0.3)'\r\n        }\r\n    },\r\n    noImagesBtn: {\r\n        padding: '6px 10px',\r\n        borderRadius: '42px',\r\n        background: 'rgba(255,255,255,0.1)',\r\n        color: 'white',\r\n        margin: '0 5px 0 0px',\r\n        '&:hover': {\r\n            boxShadow: 'inset white 0 0 2px 1px',\r\n            background: 'rgba(0,0,0,0.3)'\r\n        }\r\n    },\r\n    imagesUploaded: {\r\n        width: '100%',\r\n    },\r\n    noImages: {\r\n        width: '50%'\r\n    },\r\n    postBtn: {\r\n        background: '#3399ff',\r\n\t\tcolor: 'white',\r\n        padding: '7px',\r\n\t\tmargin: ' 0 5px 1px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n        fontSize: '20px',\r\n        color: 'white'\r\n\t},\r\n\tmirror: {\r\n\t\ttransform: 'scaleX(-1)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageSelector.js",[],"C:\\projects\\leev\\leev-fe\\src\\api\\userApi.js",["550"],"C:\\projects\\leev\\leev-fe\\src\\api\\assetsApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\Controls.js",["551","552"],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Settings.js",["553","554","555","556"],"import { Backdrop, Fade, Grid, Icon, IconButton, makeStyles, Modal, Paper } from '@material-ui/core';\r\nimport React, { useState, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { SettingsMenu } from './SettingsMenu';\r\nimport { UserProfile } from './UserProfile';\r\nimport { Users } from './Users';\r\n\r\nexport const Settings = ({ open, handleClose}) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n    const location = useLocation();\r\n    const { t } = useTranslation();\r\n    const { lang, setLang } = useContext(LanguageContext);\r\n    const [ active, setActive ] = useState('profile');\r\n\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\topen={open}\r\n\t\t\tonClose={handleClose}\r\n\t\t\tcloseAfterTransition\r\n\t\t\tBackdropComponent={Backdrop}\r\n\t\t\tBackdropProps={{\r\n\t\t\t\ttimeout: 500,\r\n\t\t\t}}\r\n\t\t\tclassName={classes.modal}\r\n\t\t>\r\n\t\t\t<Fade in={open}>\r\n\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\" style={{ outline: '0' }}>\r\n\t\t\t\t\t<Grid item xs={12} sm={12} md={12} lg={10} xl={6} className={classes.gridCont}>\r\n\t\t\t\t\t\t<Paper elevation={6} className={classes.paper} style={{ direction: lang.dir }}>\r\n                            <Grid container className={classes.mainGrid}>\r\n                                <Grid item xs={12} className={classes.headerRow}>\r\n                                    <div className={classes.title}>\r\n                                        {t(\"settings.title\")}\r\n                                    </div>\r\n                                    <IconButton\r\n                                        className={classes.closeBtn}\r\n                                        onClick={handleClose}\r\n                                    >\r\n                                        <Icon classes={{root: classes.iconRoot}}>\r\n                                            <img src=\"https://img.icons8.com/ios-filled/36/4a90e2/cancel.png\"/>\r\n                                        </Icon>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                <Grid container className={classes.dataGrid}>\r\n                                    <Grid item xl={3} lg={3} md={3} sm={2} xs={12}>\r\n                                        <SettingsMenu\r\n                                            active={active} \r\n                                            setActive={setActive}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xl={9} lg={9} md={9} sm={10} xs={12} className={classes.dataContainer}>\r\n                                        {\r\n                                            active === 'profile' &&\r\n                                            <UserProfile />\r\n                                        }\r\n                                        {\r\n                                            active === 'users' &&\r\n                                            <Users />\r\n                                        }\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Fade>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmodal: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n        backdropFilter: 'blur(10px)',\r\n\t},\r\n\tgridCont: {\r\n\t\theight: 'fit-content',\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tborderRadius: '10px',\r\n        overflowY: 'overlay',\r\n        height: '80vh',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: '81vh',\r\n\t\t\ttop: 0,\r\n\t\t\tborderRadius: '0',\r\n\t\t\tborder: '0',\r\n\t\t\tpadding: '10px 5px',\r\n\t\t},\r\n\t\t'&:focus': {\r\n\t\t\toutline: 'none',\r\n\t\t},\r\n    },\r\n    mainGrid: {\r\n        height: '100%',\r\n        width: '100%'\r\n    },\r\n    dataGrid: {\r\n        height: '90%'\r\n    },\r\n    dataContainer: {\r\n        height: '100%',\r\n        width: '100%'\r\n    },\r\n    headerRow: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '10px 20px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        height: '10%',\r\n        [theme.breakpoints.down('xs')]: {\r\n            padding: '0 5px'\r\n        }\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '22px',\r\n        padding: '0 20px',\r\n    },\r\n    iconRoot: {\r\n\t\ttextAlign: 'center',\r\n\t\twidth: '50px',\r\n\t\theight: '35px',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center'\r\n    },\r\n    closeBtn: {\r\n        padding: '6px'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Assets.js",["557","558"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\Tasks.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\Documents.js",["559"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\Faults.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MapView.js",["560","561","562","563"],"import { makeStyles, Grid, useMediaQuery, IconButton } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Map } from './Map';\r\nimport { MapControls } from './MapControls';\r\nimport { MarkerData } from './MarkerData';\r\nimport { Mapbox } from './Mapbox';\r\nimport { getMapData, getMapFilters } from '../../../api/mapApi';\r\nimport { useLocation } from 'react-router';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\n\r\n\r\nexport const MapView = () => {\r\n\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const [ data, setData ] = useState(null);\r\n    const [ listArray, setListArray ] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        getMapFilters(query)\r\n        .then(filters => {\r\n            fetchMapData(filters);\r\n        });\t\r\n\t}, [location.search]);\r\n\r\n\tconst fetchMapData = async (filters) => {\r\n\t\tconst res = await getMapData(filters);\r\n\t\tsetData(res);\r\n    };\r\n    \r\n    return (\r\n         <Grid container justify='center'>\r\n            <Grid container className={classes.mapGridItem}>\r\n                {\r\n                    Boolean(listArray.length) &&\r\n                    <Grid xs={12} sm={6} md={4} lg={3} className={classes.markDataGrid}>\r\n                         <MarkerData markersData={listArray} handleClose={() => setListArray([])} />\r\n                    </Grid>\r\n                   \r\n                }\r\n                {\r\n                    data &&\r\n                    <Grid xs={12}>\r\n                        <Mapbox data={data} setData={setListArray} />\r\n                    </Grid>\r\n                }\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.gridControls}>                  \r\n                <MapControls />\r\n            </Grid>\r\n         </Grid>\r\n\r\n    )\r\n};\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    mapGridItem: {\r\n        width: '100%',\r\n        height: '90vh',\r\n        position: 'relative',\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: '90vh'\r\n        }\r\n    },\r\n    gridControls: {\r\n        position: 'absolute',\r\n        zIndex: 2,\r\n        right: 0,\r\n        top: 0,\r\n\r\n    },\r\n    markDataGrid: {\r\n        position: 'absolute',\r\n        zIndex: 3,\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(40px)',\r\n        height: '100%',\r\n    },\r\n    filterBtn: {\r\n        color: 'white',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '50px',\r\n        padding: '10px',\r\n        margin: '10px',\r\n        boxShadow: 'inset rgba(0,0,0,0.4) 0 0 10px 2px'\r\n    },\r\n    icon: {\r\n        fontSize: '28px'\r\n    }\r\n}));","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\Systems.js",["564","565"],"import { Grid, LinearProgress, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useLocation } from 'react-router';\r\nimport { queryParamsToObject } from '../../../api/genericApi';\r\nimport { applyFilters, getSystemsByAsset } from '../../../api/systemsApi';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { System } from './System';\r\nimport { SystemsControls } from './SystemsControls';\r\nimport { SystemsHeader } from './SystemsHeader';\r\n\r\nexport const Systems = () => {\r\n\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const { t } = useTranslation();\r\n    const [ systems, setSystems ] = useState([]);\r\n    const [ isLoading, setIsLoading ] = useState(false);\r\n \r\n\r\n    useEffect(() => {\r\n        if (!isLoading) return;    \r\n        let queryParams = queryParamsToObject(location.search);\r\n        if (!queryParams.asset) {\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        \r\n\r\n        getSystemsByAsset(queryParams.asset)\r\n        .then(data => {\r\n            console.log(data)\r\n            return applyFilters(queryParams, data);\r\n        })\r\n        .then(data => {\r\n            setSystems(data);     \r\n        })\r\n        .finally(() => {\r\n            setIsLoading(false);\r\n        });\r\n    }, [isLoading])\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n    }, [location.search])\r\n\r\n\r\n    return(\r\n        <div>\r\n            <Grid container justify='center'>\r\n                <Grid item xs={12}>\r\n                    <div className={classes.pageModule}>\r\n                        {t(\"assetsModule.systems\")}\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <SystemsControls />\r\n                </Grid>\r\n                <Grid container justify='center' >\r\n                    {\r\n                        !query.asset \r\n                        ?   <div \r\n                                className={classes.initMessage}>\r\n                                {t(\"systemsModule.initMessage\")}\r\n                            </div>\r\n                        :   isLoading \r\n                            ?   <LinearProgress />\r\n                            :   \r\n                            <React.Fragment>\r\n                                <SystemsHeader />\r\n                                {\r\n                                    systems.map((system, i) => \r\n                                        <System systemData={system} key={i} />\r\n                                    )\r\n                                }\r\n                            </React.Fragment>\r\n                            \r\n                    }   \r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    initMessage: {\r\n        color: 'white',\r\n        padding: '10px 40px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '50px',\r\n        width: 'fit-content',\r\n        margin: '5px auto',\r\n        textAlign: 'center',\r\n        fontSize: '16px'\r\n    },\r\n    pageModule: {\r\n        color: 'white',\r\n        padding: '10px 40px',\r\n        fontSize: '18px',\r\n        background: 'rgba(0,0,0,0.6)',\r\n        margin: '0px auto 5px',\r\n        width: '30%',\r\n        textAlign: 'center',\r\n        borderRadius: '0 0 25px 25px',\r\n        lineHeight: '1'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Message.js",["566","567","568","569","570","571"],"import { Fade, Grid, Grow, makeStyles, Slide,  } from '@material-ui/core';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport const Message = ({ data }) => {\r\n\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n\r\n\treturn (\r\n        <Grow in={Boolean(data)} timeout={500}>\r\n            <Grid container direction={ data.isUser ? 'row' : 'row-reverse'} className={classes.messageContainer} >\r\n                <Grid item xs={8} className={clsx(classes.message, data.isUser ? classes.userMessage : classes.systemMessage)}>\r\n                    <div className={classes.messageText}>\r\n                        {\r\n                            data.text\r\n                        }\r\n                    </div>\r\n                </Grid>\r\n        </Grid>\r\n        </Grow>\r\n\t\t\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    message: {\r\n        display: 'flex',\r\n        margin: '3px 5px',\r\n    },\r\n    messageText: {\r\n        color: 'white',\r\n        borderRadius: '100px',\r\n        padding: '10px 20px',\r\n        fontSize: '13px',\r\n        width: 'fit-content',\r\n        minWidth: '50px'\r\n    },\r\n    userMessage: {     \r\n        '&>div': {\r\n            background: 'grey',\r\n        },\r\n        justifyContent: 'flex-start'\r\n    },\r\n    systemMessage: {\r\n        '&>div': {\r\n            background: '#42A5F5',\r\n        },      \r\n        justifyContent: 'flex-end'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\chatbotApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\api\\genericApi.js",["572"],"C:\\projects\\leev\\leev-fe\\src\\api\\notificationsApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Users.js",["573","574","575","576"],"import { Avatar, Grid, IconButton, LinearProgress, List, ListItem, makeStyles, Tooltip } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { createUser, filterUsers, getUserList, updateUserData } from '../../../api/userApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { SnackbarContext } from '../../../context/SnackbarContext';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { getFullName, getSuccessMessage } from '../../../api/genericApi';\r\nimport { SearchBox } from '../../reuseables/SearchBox';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { UpsertUser } from './UpsertUser';\r\nimport { Can } from '../../reuseables/Can';\r\n\r\nexport const Users = () => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { auth, setAuth } = useContext(AuthContext);\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst [userList, setUserList] = useState([]);\r\n\tconst [users, setUsers] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n    const [addUser, setAddUser] = useState(null);\r\n    const [editUser, setEditUser] = useState(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isLoading) return;\r\n\t\tgetUserList()\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tif (res.status === 403) {\r\n\t\t\t\t\tsetSnackbar(res);\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t} else if (res) {\r\n\t\t\t\t\tsetUserList(res);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.finally(() => setIsLoading(false));\r\n\t}, [isLoading]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetUsers(userList);\r\n\t}, [userList]);\r\n\r\n\tconst handleSearch = async (searchText) => {\r\n\t\tif (!searchText) {\r\n\t\t\tsetUsers(userList);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst filtered = await filterUsers(userList, searchText);\r\n\t\tsetUsers(filtered);\r\n\t};\r\n\r\n\tconst handleUserSave = (details) => {\r\n\t\tcreateUser(details)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 403) {\r\n\t\t\t\t\tsetSnackbar(res);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else if (res) {\r\n\t\t\t\t\tsetSnackbar(getSuccessMessage('user', getFullName(res), 'created'));\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.finally(() => setIsLoading(true));\r\n    };\r\n    \r\n    const handleUpdateUser = (details) => {\r\n        updateUserData(details)\r\n        .then(res => {\r\n            if (res.status === 403) {\r\n                setSnackbar(res);\r\n                return;\r\n            } else if (res) {\r\n                setSnackbar(getSuccessMessage('user', getFullName(res), 'updated'));\r\n            }\r\n        })\r\n        .finally(() => setIsLoading(true));\r\n    }\r\n\r\n    const closeAddEdit = () => {\r\n        setAddUser(false);\r\n        setEditUser(false);\r\n    }\r\n\r\n\treturn isLoading ? (\r\n\t\t<LinearProgress />\r\n\t) : (\r\n\t\t<Grid container className={classes.usersContainer}>\r\n\t\t\t<Grid item xs={10} className={classes.gridSearch}>\r\n\t\t\t\t<SearchBox placeholder={'משהו'} filterField={'sss'} returnValue={handleSearch} />\r\n\t\t\t</Grid>\r\n\t\t\t<Can module=\"users\" action=\"create\">\r\n\t\t\t\t<Grid item xs={2} className={classes.controls}>\r\n\t\t\t\t\t<Tooltip title={t('users.addUser')}>\r\n\t\t\t\t\t\t<IconButton className={classes.controlBtn} onClick={() => setAddUser(true)}>\r\n\t\t\t\t\t\t\t<AddIcon className={classes.controlIcon} />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Can>\r\n\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<List className={classes.userList}>\r\n\t\t\t\t\t{!users.length ? (\r\n\t\t\t\t\t\t<div>no users</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tusers.map((u, i) => (\r\n\t\t\t\t\t\t\t<ListItem className={classes.listRow} key={i}>\r\n\t\t\t\t\t\t\t\t<Grid container className={classes.midGrid}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} sm={4} md={2} className={classes.avatarContainer}>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar src={u.avatar} className={classes.avatar} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={8} sm={8} md={10} className={classes.dataContainer}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container className={classes.rowData} justify=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={12} md={3} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.fullName}>{getFullName(u)}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.role}>{u.role.roleName}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={12} md={3} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.phoneNumber}>{u.phoneNumber}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={12} md={6} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.employedBy}>{u.employedBy}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n                                <IconButton \r\n                                    className={classes.editBtn}\r\n                                    onClick={() => setEditUser(u._id)}    \r\n                                >\r\n\t\t\t\t\t\t\t\t\t<EditIcon className={classes.editIcon} />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t)}\r\n\t\t\t\t</List>\r\n\t\t\t</Grid>\r\n\t\t\t{(addUser || editUser) &&\r\n            <UpsertUser \r\n                handleClose={() => closeAddEdit(false)} \r\n                handleSave={handleUserSave}\r\n                handleUpdate={handleUpdateUser}\r\n                userId={editUser} \r\n            />}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontrols: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '20px 10px',\r\n\t},\r\n\tcontrolBtn: {\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmargin: '5px',\r\n\t\tpadding: '10px',\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t},\r\n\teditBtn: {\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmargin: '5px',\r\n\t\tpadding: '10px',\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tposition: 'absolute',\r\n\t\tleft: '5px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\ttop: '5px',\r\n\t\t\tleft: 'unset',\r\n\t\t\tright: '5px',\r\n\t\t},\r\n\t\t[theme.breakpoints.down('xs')]: {\r\n\t\t\tpadding: '7px',\r\n\t\t},\r\n\t},\r\n\teditIcon: {\r\n\t\tfontSize: '20px',\r\n\t\t[theme.breakpoints.down('xs')]: {\r\n\t\t\tfontSize: '16px',\r\n\t\t},\r\n\t},\r\n\tcontrolIcon: {\r\n\t\tfontSize: '24px',\r\n\t},\r\n\tuserList: {\r\n\t\tborderTop: '1px solid rgba(255,255,255,0.2)',\r\n\t\theight: '500px',\r\n\t\toverflowY: 'overlay',\r\n\t},\r\n\tlistRow: {\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tposition: 'relative',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\t},\r\n\t},\r\n\tmidGrid: {\r\n\t\tpadding: '10px 0',\r\n\t},\r\n\tdataContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tgridItem: {\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\t[theme.breakpoints.down('xs')]: {\r\n\t\t\talignItems: 'flex-start',\r\n\t\t\tpaddingLeft: '10px',\r\n\t\t},\r\n\t},\r\n\tavatar: {\r\n\t\theight: '50px',\r\n\t\twidth: '50px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: '80px',\r\n\t\t\twidth: '80px',\r\n\t\t},\r\n\t},\r\n\trole: {\r\n\t\tfontSize: '14px',\r\n\t\tcolor: 'rgba(255,255,255,0.7)',\r\n\t},\r\n\tavatarContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\talignItems: 'center',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tpadding: '10px',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t},\r\n\t},\r\n\tphoneNumber: {\r\n\t\tpadding: '10px 20px',\r\n\t\tbackground: 'black',\r\n\t\tborderRadius: '50px',\r\n\t\tmargin: '10px 0',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tgridSearch: {\r\n\t\talignItems: 'center',\r\n\t\tpadding: '20px',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UserProfile.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\SettingsMenu.js",["577","578","579","580","581","582"],"import { Button, Icon, List, ListItem, ListItemIcon, ListItemText, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport clsx from 'clsx';\r\n\r\nconst menuOptions = [\r\n    {\r\n        tab: 'profile',\r\n        icon: \"https://img.icons8.com/ios-filled/25/4a90e2/name.png\"\r\n    },\r\n    {\r\n        tab: 'users',\r\n        icon: \"https://img.icons8.com/ios-filled/25/4a90e2/conference-background-selected.png\"\r\n    },\r\n    {\r\n        tab: 'permissions',\r\n        icon: \"https://img.icons8.com/ios-filled/25/4a90e2/shield.png\"\r\n    },\r\n    {\r\n        tab: 'appearance',\r\n        icon: \"https://img.icons8.com/ios-filled/25/4a90e2/monitor--v1.png\"\r\n    }\r\n]\r\n\r\nexport const SettingsMenu = ({ active, setActive }) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst { t } = useTranslation();\r\n    const { lang, setLang } = useContext(LanguageContext);\r\n    const downLg = useMediaQuery((theme) => theme.breakpoints.down('sm'))\r\n\r\n\treturn (\r\n\t\t<List className={classes.menuContainer}>\r\n            {\r\n                menuOptions.map((mo, i) => {\r\n                    return (\r\n                        <ListItem \r\n                        className={clsx(classes.listItem, active === mo.tab && classes.active)} \r\n                        button={true}\r\n                        onClick={() => setActive(mo.tab)}\r\n                        >\r\n                        <ListItemIcon className={classes.iconContainer}>\r\n                            <Icon className={classes.icon}>\r\n                                <img src={mo.icon} />\r\n                            </Icon>\r\n                        </ListItemIcon>\r\n                        {\r\n                            !downLg &&\r\n                            <ListItemText className={classes.textContainer}>{t(`settings.${mo.tab}`)}</ListItemText>\r\n                        }\r\n                        \r\n                    </ListItem>\r\n                    )\r\n                })\r\n            }  \r\n\t\t</List>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmenuContainer: {\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRight: '1px solid rgba(255,255,255,0.2)',\r\n        padding: 0,\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: 'flex',\r\n            borderRight: 'unset',\r\n            borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        }\r\n\t},\r\n\tlistItem: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '15px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.1)',\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            padding: '15px 0',\r\n            justifyContent: 'center'\r\n        }\r\n\t},\r\n\ticonContainer: {\r\n\t\twidth: 'fit-content',\r\n\t\theight: 'fit-content',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t},\r\n\ticon: {\r\n\t\twidth: '25px',\r\n\t\theight: '25px',\r\n\t},\r\n\ttextContainer: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t},\r\n\tactive: {\r\n\t\tbackground: 'black',\r\n        borderLeft: '3px solid #5B5BFB',\r\n        [theme.breakpoints.down('xs')]: {\r\n            borderLeft: 'unset',\r\n            borderBottom: '3px solid #5B5BFB',\r\n        }\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CreateContainer.js",["583","584","585","586","587","588"],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\AddMenu.js",["589","590","591","592","593","594","595","596","597","598","599","600","601","602","603"],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Navbar.js",["604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619"],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Notifications.js",["620","621","622","623"],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\SideMenu.js",["624","625","626","627","628","629","630","631","632","633","634","635"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Asset.js",["636","637","638","639","640","641"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetsControls.js",["642","643","644"],"import React, { useState } from 'react'\r\nimport { Grid, makeStyles,  useMediaQuery, Collapse, Button } from '@material-ui/core'\r\nimport { SortBy } from '../../reuseables/SortBy'\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport { SearchBox } from '../../reuseables/SearchBox';\r\nimport { FilterBySelect } from '../../reuseables/FilterBySelect';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport { getUserList } from '../../../api/userApi';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport { useTranslation } from 'react-i18next';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport { ClearRounded } from '@material-ui/icons';\r\n\r\n\r\nconst sortOptions = [\r\n    {\r\n        text: 'כתובת',\r\n        field: 'street'\r\n    },\r\n    {\r\n        text: 'עיר',\r\n        field: 'city'\r\n    },\r\n    {\r\n        text: 'מנהל בניין',\r\n        field: 'owner'\r\n    },\r\n    {\r\n        text: 'כמות משימות פתוחות',\r\n        field: 'openTasksCount'\r\n    },\r\n    {\r\n        text: 'כמות תקלות פתוחות',\r\n        field: 'openFaultsCount'\r\n    },\r\n    \r\n]\r\n\r\nexport const AssetsControls = ({ components }) => {\r\n    \r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const [ collapsed, setCollapsed ] = useState(!downSm ? true : false);\r\n    \r\n\r\n    const createUserOptions = () => {\r\n        return getUserList()\r\n        .then(data => {\r\n            let userList = [];\r\n            data.forEach(user => {\r\n                userList.push({label: `${user.firstName} ${user.lastName}`, value: user._id })\r\n            });\r\n            return userList;\r\n        })\r\n    }\r\n\r\n    const toggleCollapse = () => {\r\n        if (collapsed) {\r\n            setCollapsed(false);\r\n            return;\r\n        }\r\n        setCollapsed(true)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                downSm &&\r\n                <Grid container justify='center'>\r\n                    <Grid item xs={11} className={classes.gridItem}>\r\n                        <Button\r\n                        className={classes.sortandfilter}\r\n                        startIcon={<FilterListIcon className={classes.icon} />}\r\n                        endIcon={collapsed ? <ClearRounded /> : <ExpandMoreRoundedIcon />}\r\n                        onClick={toggleCollapse}\r\n                    >\r\n                        {t(`faultsModule.${ collapsed ? 'hide' : 'show'}Filters`)}\r\n                    </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                    \r\n            }\r\n            <Collapse in={collapsed}>\r\n                <Grid container justify='center' >\r\n                    <Grid item xs={11} sm={9} md={7} lg={5} xl={4} className={classes.gridItem}>\r\n                        <SearchBox \r\n                            placeholder={t(\"assetsModule.filterByCityOrAddress\")}\r\n                            filterField={'searchText'}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={11} className={classes.gridItem}>         \r\n                        <FilterBySelect \r\n                            optionsFunc={createUserOptions}\r\n                            placeholder={t(\"assetsModule.filterByAssetOwner\")}\r\n                            filterIcon={<PersonRoundedIcon className={classes.icon }/>}\r\n                            filterField={'owner'}\r\n                        \r\n                        />\r\n                    \r\n                        <SortBy \r\n                            menuOptions={sortOptions}\r\n                        />   \r\n                    </Grid>  \r\n                </Grid>\r\n            </Collapse>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(them => ({\r\n    gridItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        marginLeft: '4px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    sortandfilter: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'rgba(0,0,0,0.7)',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '5px 25px 5px 3px',\r\n        whiteSpace: 'nowrap',\r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    }\r\n}))\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AlertDialog.js",["645"],"import React, { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { useTranslation } from 'react-i18next';\r\nimport clsx from 'clsx';\r\n\r\nexport const AlertDialog = ({ alertDialog , open }) => {\r\n\r\n        const classes = useStyles();\r\n        const { lang } = useContext(LanguageContext);\r\n        const { t, i18n } = useTranslation();\r\n  return (\r\n    <Dialog\r\n        open={true}\r\n        onClose={alertDialog.handleCancel}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        style={{ direction: lang.dir}}\r\n        classes={{\r\n            root: classes.root, \r\n            paper: classes.paper,\r\n            container: classes.container\r\n        }}\r\n        BackdropProps={{\r\n            timeout: 500,\r\n            classes: {\r\n                root: classes.root\r\n            }\r\n        }}\r\n    >\r\n    <DialogTitle id=\"alert-dialog-title\" style={{ direction: lang.dir}} className={classes.title}>\r\n        {alertDialog.title}\r\n    </DialogTitle>\r\n    <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\" style={{ direction: lang.dir}} className={classes.text}>\r\n        { alertDialog.text }\r\n        </DialogContentText>\r\n    </DialogContent>\r\n    <DialogActions className={classes.controls}>\r\n        <Button\r\n            className={clsx(classes.control, classes.save)}\r\n            onClick={alertDialog.handleConfirm}\r\n        >\r\n            { alertDialog.confirmText || t(\"alert.confirm\") }\r\n        </Button>\r\n        <Button\r\n            className={clsx(classes.control, classes.cancel)}\r\n            onClick={alertDialog.handleCancel}\r\n        >\r\n            { alertDialog.cancelText || t(\"alert.cancel\") }\r\n        </Button>\r\n    </DialogActions>\r\n    </Dialog>\r\n\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: 'rgba(0,0,0,0.4)'\r\n    },\r\n    container: {\r\n        backdropFilter: 'blur(10px)',\r\n    },\r\n    paper: {\r\n        width: 'auto',\r\n        padding: '5px',\r\n        background: 'rgba(0,0,0,0.4)',\r\n        borderRadius: '10px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        color: 'white'\r\n    },\r\n    text: {\r\n        color: 'white'\r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsControls.js",["646","647"],"import React, { useState, useEffect } from 'react'\r\nimport { Grid, makeStyles, useMediaQuery, Button, Collapse } from '@material-ui/core'\r\nimport { SortBy } from '../../reuseables/SortBy'\r\nimport { SearchBox } from '../../reuseables/SearchBox';\r\nimport { FilterBySelect } from '../../reuseables/FilterBySelect';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\nimport { getAssetsSuggestions } from '../../../api/systemsApi';\r\nimport { getFullAddress, getAsset } from '../../../api/assetsApi';\r\nimport { useLocation } from 'react-router';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport { ClearRounded } from '@material-ui/icons';\r\n\r\nconst sortOptions = [\r\n    {\r\n        text: 'שם מערכת',\r\n        field: 'systemName'\r\n    },\r\n    {\r\n        text: 'מנהל מערכת',\r\n        field: 'owner'\r\n    },\r\n    {\r\n        text: 'כמות תקלות פתוחות',\r\n        field: 'openFaultsCount'\r\n    },\r\n    \r\n]\r\n\r\nexport const SystemsControls = () => {\r\n    \r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const [ reloadedValue, setReloadedValue ] = useState(null);\r\n    const [ collapsed, setCollapsed ] = useState(!downSm ? true : false);\r\n    \r\n    useEffect(() => {\r\n        if (query.asset) {\r\n            handleReloaded(query.asset)\r\n            .then(data => {\r\n                if (data) {\r\n                    setReloadedValue(data);\r\n                } else {\r\n                    \r\n                }\r\n            })\r\n        } else {\r\n            setReloadedValue({\r\n                label: '',\r\n                value: null\r\n            });\r\n        }\r\n    }, [location.search])\r\n\r\n    const handleReloaded = async (assetId) => {\r\n        const res = await getAsset(assetId, false);\r\n        if (res) {\r\n            return {\r\n                label: getFullAddress(res),\r\n                value: res._id\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const toggleCollapse = () => {\r\n        if (collapsed) {\r\n            setCollapsed(false);\r\n            return;\r\n        }\r\n        setCollapsed(true)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                downSm &&\r\n                <Grid container justify='center'>\r\n                    <Grid item xs={11} className={classes.gridItem}>\r\n                        <Button\r\n                        className={classes.sortandfilter}\r\n                        startIcon={<FilterListIcon className={classes.icon} />}\r\n                        endIcon={collapsed ? <ClearRounded /> : <ExpandMoreRoundedIcon />}\r\n                        onClick={toggleCollapse}\r\n                    >\r\n                        {t(`faultsModule.${ collapsed ? 'hide' : 'show'}Filters`)}\r\n                    </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                    \r\n            }\r\n            <Collapse in={collapsed}>\r\n                <Grid container justify='center' >\r\n                    <Grid item xs={12} className={classes.gridItem}>\r\n\r\n                        {\r\n                            reloadedValue &&\r\n                            <SearchBoxSelect\r\n                                suggestionsFunc={getAssetsSuggestions}\r\n                                placeholder={t(\"systemsModule.filterByAsset\")}\r\n                                filterField={'asset'}\r\n                                reloadedLabel={reloadedValue.label}\r\n                                reloadedValue={reloadedValue.value}\r\n                            />\r\n                        }  \r\n                        <SearchBox \r\n                                placeholder={t(\"systemsModule.filterBySystemName\")}\r\n                                filterField={'name'}\r\n                            />\r\n                        </Grid>\r\n                    <Grid xs={11} className={classes.gridItem}>\r\n                        <FilterBySelect \r\n                            optionsFunc={createUserOptions}\r\n                            placeholder={t(\"systemsModule.filterBySystemOwner\")}\r\n                            filterIcon={<PersonRoundedIcon className={classes.icon }/>}\r\n                            filterField={'owner'}\r\n                        />\r\n                        <SortBy \r\n                            menuOptions={sortOptions}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n            </Collapse>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(them => ({\r\n    gridItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        marginLeft: '4px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    sortandfilter: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'rgba(0,0,0,0.7)',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '5px 25px 5px 3px',\r\n        whiteSpace: 'nowrap',\r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    }\r\n}))\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsHeader.js",["648","649","650"],"import React from 'react';\r\nimport { Grid, makeStyles, Paper, useMediaQuery } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Can } from '../../reuseables/Can';\r\n\r\nexport const SystemsHeader = () => {\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst { t, i18n } = useTranslation();\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} sm={7} md={8} lg={11} lg={11}>\r\n\t\t\t<Paper elevation={9} className={classes.headerPaper}>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item lg={4}>\r\n\t\t\t\t\t\t<div className={classes.systemName}>\r\n\t\t\t\t\t\t\t{t('systemsModule.systemName')}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t{!downSm && (\r\n\t\t\t\t\t\t<Grid item lg={8} className={classes.controller}>\r\n\t\t\t\t\t\t\t<Grid container style={{ height: '100%' }}>\r\n\t\t\t\t\t\t\t\t<Grid item lg={9}>\r\n\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.actionsContainer}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.moreDetails')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.tasks')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.faults')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.documents')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Can module='systems' action='changeRelatedUsers' userList={[]}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t'systemsModule.changeOwner'\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.users')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>{' '}\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n                                <Grid item lg={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.ownerHeader}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.ownerHeader')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Paper>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\theaderPaper: {\r\n\t\theight: '45px',\r\n\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\tmargin: '5px',\r\n\t\tborderRadius: '5px',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tfontSize: '12px',\r\n\t},\r\n\tsystemName: {\r\n\t\tmargin: 'auto 20px',\r\n        whiteSpace: 'nowrap',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n\t},\r\n\tactionsContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tfontSize: '12px',\r\n        justifyContent: 'flex-end',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n\t},\r\n\ticonHeader: {\r\n\t\ttextAlign: 'center',\r\n\t\tmargin: 'auto',\r\n\t},\r\n\townerHeader: {\r\n\t\ttextAlign: 'center',\r\n        margin: 'auto',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tmargin: 'auto 0',\r\n\t\t},\r\n    },\r\n    controller: {\r\n        padding: '5px'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\System.js",["651","652","653"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n\tBackdrop,\r\n\tGrid,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tModal,\r\n\tPaper,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n\tupdateSystemOwner,\r\n\tupdateSystemAdditionalData,\r\n} from '../../../api/systemsApi';\r\nimport { SystemName } from './SystemName';\r\nimport { SystemRelatedUsers } from './SystemRelatedUsers';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport ExpandLessRoundedIcon from '@material-ui/icons/ExpandLessRounded';\r\nimport { SystemControls } from './SystemControls';\r\nimport { SystemAdditionalDetails } from './SystemAdditionalDetails';\r\nimport { UpsertSystem } from './UpsertSystem';\r\nimport { UpdateOwner } from '../../reuseables/UpdateOwner';\r\nimport { SnackbarContext } from '../../../context/SnackbarContext';\r\n\r\nexport const System = ({ systemData }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst { setSnackbar } = useContext(SnackbarContext)\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst [data, setData] = useState(systemData);\r\n\tconst [editOwner, setEditOwner] = useState(false);\r\n\tconst [editName, setEditName] = useState(false);\r\n\tconst [expanded, setExpanded] = useState(false);\r\n\tconst [editDetails, setEditDetails] = useState(null);\r\n\tconst [showAdditionalDetails, setShowAdditionalDetails] = useState(false);\r\n\tconst [showLinkedUsers, setShowLinkedUsers] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!expanded) {\r\n\t\t\tsetShowAdditionalDetails(null);\r\n\t\t}\r\n\t}, [expanded]);\r\n\r\n\tconst toggleEditOwner = () => {\r\n\t\tif (editOwner) {\r\n\t\t\tsetEditOwner(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetShowLinkedUsers(false);\r\n\t\tsetEditOwner(true);\r\n\t};\r\n\r\n\tconst updateOwner = async (owner) => {\r\n\t\tconst res = await updateSystemOwner(data._id, owner);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res)\r\n\t\t} else if (res) {\r\n\t\t\tsetData(res);\r\n\t\t\tsetEditOwner(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst updateSystemData = (systemData) => {\r\n\t\tupdateSystemAdditionalData(systemData)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 403) {\r\n\t\t\t\t\tsetSnackbar(res)\r\n\t\t\t\t} else if (res) {\r\n\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\tsetData(res);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tsetEditDetails(null);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst setSystemName = (name) => {\r\n\t\tsetData({\r\n\t\t\t...data,\r\n\t\t\tname,\r\n\t\t});\r\n\t};\r\n\r\n\tconst showAdditionalDetailsToggle = () => {\r\n\t\tif (!showAdditionalDetails) {\r\n\t\t\tsetShowAdditionalDetails(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetShowAdditionalDetails(false);\r\n\t};\r\n\r\n\tconst showLinkedUsersToggle = () => {\r\n\t\tif (!showLinkedUsers) {\r\n\t\t\tsetEditOwner(false);\r\n\t\t\tsetShowLinkedUsers(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetShowLinkedUsers(false);\r\n\t};\r\n\r\n\tconst handleExpand = () => {\r\n\t\tif (expanded) {\r\n\t\t\tsetShowLinkedUsers(false);\r\n\t\t\tsetEditOwner(false);\r\n\t\t\tsetEditDetails(null);\r\n\t\t\tsetExpanded(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetExpanded(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} sm={7} md={8} lg={11} xl={11}>\r\n\t\t\t<Paper elevation={9} className={classes.paper}>\r\n\t\t\t\t<Grid container className={classes.mainRow}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\tclassName={classes.semiMainRow}\r\n\t\t\t\t\t\tonClick={handleExpand}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborderBottom: expanded\r\n\t\t\t\t\t\t\t\t? '1px solid rgba(255,255,255,0.2)'\r\n\t\t\t\t\t\t\t\t: 'none',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<SystemName\r\n\t\t\t\t\t\t\tsystemId={data._id}\r\n\t\t\t\t\t\t\teditName={editName}\r\n\t\t\t\t\t\t\tsetEditName={setEditName}\r\n\t\t\t\t\t\t\tsetSystemName={setSystemName}\r\n\t\t\t\t\t\t\ttitle={data.name}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{downSm && !editName ? (\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName={classes.expandIcon}\r\n\t\t\t\t\t\t\t\tonClick={handleExpand}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{!expanded ? (\r\n\t\t\t\t\t\t\t\t\t<ExpandMoreRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<ExpandLessRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item lg={8}>\r\n\t\t\t\t\t\t<SystemControls\r\n\t\t\t\t\t\teditName={editName}\r\n\t\t\t\t\t\texpanded={expanded}\r\n\t\t\t\t\t\tsystem={data}\r\n\t\t\t\t\t\tshowLinkedUsersToggle={showLinkedUsersToggle}\r\n\t\t\t\t\t\ttoggleEditOwner={toggleEditOwner}\r\n\t\t\t\t\t\ttoggleAdditionalDetails={showAdditionalDetailsToggle}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<SystemRelatedUsers\r\n\t\t\t\t\tisOpen={showLinkedUsers}\r\n\t\t\t\t\tuserList={data.relatedUsers}\r\n\t\t\t\t\tsetData={setData}\r\n\t\t\t\t\tsystemId={data._id}\r\n\t\t\t\t\tdata={data}\r\n\t\t\t\t/>\r\n\t\t\t\t<UpdateOwner\r\n\t\t\t\t\tisOpen={editOwner}\r\n\t\t\t\t\tcurrentOwner={data.owner}\r\n\t\t\t\t\thandleSave={updateOwner}\r\n\t\t\t\t\thandleClose={toggleEditOwner}\r\n\t\t\t\t\ttitle={t('systemsModule.updateSystemOwnerTitle')}\r\n\t\t\t\t\tinstructions={t('systemsModule.chooseManagerToUpdate')}\r\n\t\t\t\t/>\r\n\t\t\t\t<SystemAdditionalDetails\r\n\t\t\t\t\tdata={data.data}\r\n\t\t\t\t\tisOpen={showAdditionalDetails}\r\n\t\t\t\t\tsystemId={data._id}\r\n\t\t\t\t\ttoggleEdit={() => setEditDetails(data._id)}\r\n\t\t\t\t/>\r\n\t\t\t\t{Boolean(editDetails) && (\r\n\t\t\t\t\t<UpsertSystem\r\n\t\t\t\t\t\thandleClose={() => setEditDetails(null)}\r\n\t\t\t\t\t\tsystemId={editDetails}\r\n\t\t\t\t\t\thandleUpdate={updateSystemData}\r\n\t\t\t\t\t\tdata={data.data}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Paper>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tbackground: 'rgba(255,255,255,0.1)',\r\n\t\tborderRadius: '5px',\r\n\t\tmargin: '4px 5px',\r\n\t},\r\n\tmainRow: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\twidht: 'auto',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tflexDirection: 'column',\r\n\t\t},\r\n\t},\r\n\tsemiMainRow: {\r\n\t\tdisplay: 'flex',\r\n\t\twidth: 'auto',\r\n\t\tjustifyContent: 'space-between',\r\n\t},\r\n\tactionsContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\twidth: 'fit-content',\r\n\t\tpadding: '5px',\r\n\t\tmargin: 'auto 0',\r\n\t\tjustifyContent: 'space-between',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tflexDirection: 'column-reverse',\r\n\t\t\talignItems: 'center',\r\n\t\t\tmargin: 'auto',\r\n\t\t},\r\n\t},\r\n\tactions: {\r\n\t\tmargin: 'auto 10px',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\t\tborderRadius: '50px',\r\n\t\t\tmargin: '10px 0',\r\n\t\t\tpadding: '5px 10px',\r\n\t\t},\r\n\t},\r\n\tsystemName: {\r\n\t\tcolor: 'white',\r\n\t\tmargin: 'auto 20px',\r\n\t\tfontSize: '18px',\r\n\t\twhiteSpace: 'wrap',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '5px 20px',\r\n\t},\r\n\ticonBtn: {\r\n\t\tpadding: '0px',\r\n\t\theight: 'fit-content',\r\n\t\twidth: 'fit-content',\r\n\t\tmargin: '0 20px',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tmargin: '5px 10px',\r\n\t\t},\r\n\t},\r\n\tuserIcon: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '8px',\r\n\t\tborderRadius: '50px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.2)',\r\n\t\t},\r\n\t},\r\n\townerInfo: {\r\n\t\theight: 'auto',\r\n\t\twidth: '150px',\r\n\t\tpadding: '5px 20px 5px 10px',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t\tborderRadius: '5px',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tmarginTop: '5px',\r\n\t\t\tborderRadius: '50px',\r\n\t\t\twidth: '170px',\r\n\t\t\tpadding: '5px 20px 5px 5px',\r\n\t\t},\r\n\t},\r\n\teditOwner: {\r\n\t\twidth: 'auto',\r\n\t\theight: '200px',\r\n\t\tmargin: '20px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tborderRadius: '5px',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\systemsApi.js",["654"],"import axios from 'axios';\r\nimport i18next from 'i18next';\r\nimport { getAssets, getFullAddress } from './assetsApi';\r\nimport { getUnauthorizedMessage } from './genericApi';\r\n\r\nexport const createNewSystem = async (details) => {\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/createSystem`,\r\n            { ...details },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'create',\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n    } catch(e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }   \r\n};\r\n\r\nexport const getAssetsSuggestions = async (searchText) => {\r\n\tconst data = await getAssets();\r\n\tlet result = [{ text: i18next.t('general.none'), value: '' }];\r\n\tif (!searchText) {\r\n\t\tdata.forEach((asset) => {\r\n\t\t\tresult.push({\r\n\t\t\t\ttext: getFullAddress(asset),\r\n\t\t\t\tvalue: asset._id,\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\tlet filtered = data.filter((asset) => {\r\n\t\treturn getFullAddress(asset).indexOf(searchText) !== -1;\r\n\t});\r\n\tfiltered.forEach((asset) => {\r\n\t\tresult.push({\r\n\t\t\tlabel: getFullAddress(asset),\r\n\t\t\tvalue: asset._id,\r\n\t\t});\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport const getSystemsByAsset = async (assetId) => {\r\n    try {   \r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/getSystems`,\r\n            { assetId },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'read',\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n        return [];\r\n    } catch(e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }\r\n\t\r\n};\r\n\r\nexport const applyFilters = (filters, systems) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (!filters) resolve(systems);\r\n\t\tif (filters.sortBy) {\r\n\t\t\tif (filters.sortBy === 'systemName') {\r\n\t\t\t\tsystems = systems.sort((a, b) => {\r\n\t\t\t\t\treturn filters.sortOrder === 'asc'\r\n\t\t\t\t\t\t? a.name > b.name\r\n\t\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t\t: -1\r\n\t\t\t\t\t\t: a.name < b.name\r\n\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t: -1;\r\n\t\t\t\t});\r\n\t\t\t} else if (filters.sortBy === 'owner') {\r\n\t\t\t\tsystems = systems.sort((a, b) => {\r\n\t\t\t\t\tlet aName = `${a.owner.firstName} ${a.owner.lastName}`;\r\n\t\t\t\t\tlet bName = `${b.owner.firstName} ${b.owner.lastName}`;\r\n\t\t\t\t\treturn filters.sortOrder === 'asc'\r\n\t\t\t\t\t\t? aName > bName\r\n\t\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t\t: -1\r\n\t\t\t\t\t\t: aName < bName\r\n\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t: -1;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (filters.name) {\r\n\t\t\tsystems = systems.filter((system) => {\r\n\t\t\t\treturn system.name.indexOf(filters.name) !== -1;\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (filters.owner) {\r\n\t\t\tsystems = systems.filter((system) => {\r\n\t\t\t\tif (filters.owner instanceof Array) {\r\n\t\t\t\t\treturn filters.owner.indexOf(system.owner._id) !== -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn system.owner._id == filters.owner;\r\n\t\t\t});\r\n\t\t}\r\n\t\tresolve(systems);\r\n\t});\r\n};\r\n\r\nexport const updateSystemOwner = async (systemId, owner) => {\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/updateSystemOwner`,\r\n            { systemId, owner },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'changeOwner',\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n        return [];\r\n    } catch(e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }\r\n\t\r\n};\r\n\r\nexport const updateSystemName = async (systemId, name) => {\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/updateSystemName`,\r\n            { systemId, name },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'update',\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n        return [];\r\n    } catch(e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }\r\n\t\r\n};\r\n\r\nexport const removeSystemUser = async (systemId, userId) => {\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/removeRelatedUser`,\r\n            { systemId, userId },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'changeRelatedUsers',\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n        return [];\r\n    } catch(e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }\r\n\t\r\n};\r\n\r\nexport const addUser = async (systemId, userId) => {\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/addRelatedUser`,\r\n            { systemId, userId },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'changeRelatedUsers',\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n        return ;\r\n    } catch(e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }\r\n\t\r\n};\r\n\r\nexport const updateSystemAdditionalData = async (systemData) => {\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/updateSystemData`,\r\n            { systemData },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'update',\r\n                },\r\n            }\r\n        );\r\n        if (res.data) {\r\n            return res.data;\r\n        }\r\n        return null;\r\n    } catch (e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }\r\n\t\r\n};\r\n\r\nexport const createSystemMenuOptions = (systems) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tlet options = [];\r\n\t\tsystems.forEach((s) => {\r\n\t\t\toptions.push({ text: s.name, value: s._id });\r\n\t\t});\r\n\t\tresolve(options);\r\n\t});\r\n};\r\n\r\nexport const getSystemsByAssetOptions = async (asset) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/systems/getSystemsOptions`,\r\n\t\t\t{ asset },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'read',\r\n                },\r\n            }\r\n\t\t);\r\n\t\tlet options = [];\r\n\t\tif (!res) return [];\r\n\t\tres.data.forEach((t) => {\r\n\t\t\tif (asset) {\r\n\t\t\t\toptions.push({ label: t.name, value: t._id });\r\n\t\t\t} else {\r\n\t\t\t\toptions.push({\r\n\t\t\t\t\tlabel: `${t.name}, ${getFullAddress(t.asset)}`,\r\n\t\t\t\t\tvalue: t._id,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn options;\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\mapApi.js",["655"],"import axios from 'axios';\r\n\r\nexport const getMapData = async (filters) => {\r\n\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/map/getMapData`,\r\n            { filters },\r\n            {\r\n                headers: {\r\n                    requesttype: 'read',\r\n                    module: 'map'\r\n                }\r\n            }\r\n        );\r\n        if (res) {\r\n            console.log(res.data)\r\n            let assets = res.data.assets;\r\n            res.data.assets.forEach((a,i) => {\r\n                assets[i].faultCount = res.data.faults.filter(f => {\r\n                    return f.asset._id == a._id\r\n                }).length;\r\n                    \r\n            })\r\n            return {...res.data, assets };\r\n        }\r\n        return [];\r\n    } catch (e) {\r\n        console.log(e.message);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const getMapFilters = (query) => {\r\n    return new Promise((resolve, rejecet) => {\r\n        if (!query) resolve(null);\r\n        delete query.lat;\r\n        delete query.lng;\r\n        resolve(query);\r\n    })\r\n    \r\n}\r\n\r\n\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\Mapbox.js",["656","657","658","659","660","661","662","663"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport ReactMapGL, {\r\n\tFlyToInterpolator,\r\n\tMarker,\r\n\tsetRTLTextPlugin,\r\n} from 'react-map-gl';\r\nimport { makeStyles, IconButton, ClickAwayListener } from '@material-ui/core';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport useSupercluster from 'use-supercluster';\r\nimport { getMapData } from '../../../api/mapApi';\r\nimport { updateQueryParams } from '../../../api/genericApi';\r\nimport clsx from 'clsx';\r\nimport mapboxgl from \"mapbox-gl\";\r\n\r\n// @ts-ignore\r\n// eslint-disable-next-line import/no-webpack-loader-syntax, import/no-unresolved\r\nmapboxgl.workerClass = require(\"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\").default;\r\n\r\nsetRTLTextPlugin(\r\n\t// find out the latest version at https://www.npmjs.com/package/@mapbox/mapbox-gl-rtl-text\r\n\t'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js',\r\n\tnull,\r\n\t// lazy: only load when the map first encounters Hebrew or Arabic text\r\n\ttrue\r\n);\r\n\r\nexport const Mapbox = ({ data, setData }) => {\r\n\tconst location = useLocation();\r\n\tconst history = useHistory();\r\n\tconst query = useQuery(location.search);\r\n\tconst map = useRef();\r\n\tconst classes = useStyles();\r\n\tconst [mapData, setMapData] = useState(data);\r\n\tconst [extId, setExtId] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (data) {\r\n\t\t\tsetMapData(data);\r\n\t\t}\r\n\t}, [data]);\r\n\r\n\tconst [viewport, setViewport] = useState({\r\n\t\tlatitude: Number(query.lat),\r\n\t\tlongitude: Number(query.lng),\r\n\t\tzoom: 10,\r\n\t\twidth: 'auto',\r\n\t\theight: '100%'\r\n\t});\r\n\r\n\tconst points = mapData.assets.map((asset, i) => ({\r\n\t\ttype: 'Feature',\r\n\t\tproperties: {\r\n\t\t\tcluster: false,\r\n\t\t\tasset,\r\n\t\t},\r\n\t\tgeometry: {\r\n\t\t\ttype: 'Point',\r\n\t\t\tcoordinates: [asset.coordinates.lng, asset.coordinates.lat],\r\n\t\t},\r\n\t}));\r\n\r\n\tconst bounds = map.current\r\n\t\t? map.current.getMap().getBounds().toArray().flat()\r\n\t\t: null;\r\n\r\n\tconst { clusters, supercluster } = useSupercluster({\r\n\t\tpoints,\r\n\t\tzoom: viewport.zoom,\r\n\t\tbounds,\r\n\t\toptions: {\r\n\t\t\tradius: 15,\r\n\t\t\tmaxZoom: 20,\r\n\t\t},\r\n\t});\r\n\r\n\tconst handleMarkerClick = (cluster) => (event) => {\r\n\t\tconst { cluster: isCluster } = cluster.properties;\r\n\t\tsetExtId(cluster.id);\r\n\t\tif (isCluster) {\r\n\t\t\tlet leaves = getClusterLeaves(cluster.id);\r\n\r\n\t\t\tlet reqData = leaves.map((lv) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tasset: lv.properties.asset,\r\n\t\t\t\t\tfaults: mapData.faults.filter(\r\n\t\t\t\t\t\t(f) => f.asset._id === lv.properties.asset._id\r\n\t\t\t\t\t),\r\n\t\t\t\t\ttasks: mapData.tasks.filter(\r\n\t\t\t\t\t\t(t) => t.asset._id === lv.properties.asset._id\r\n\t\t\t\t\t),\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\tconsole.log(reqData);\r\n\t\t\tsetData(reqData);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetData([\r\n\t\t\t{\r\n\t\t\t\tasset: cluster.properties.asset,\r\n\t\t\t\tfaults: mapData.faults.filter(\r\n\t\t\t\t\t(f) => f.asset._id === cluster.properties.asset._id\r\n\t\t\t\t),\r\n\t\t\t\ttasks: mapData.tasks.filter(\r\n\t\t\t\t\t(t) => t.asset._id === cluster.properties.asset._id\r\n\t\t\t\t),\r\n\t\t\t},\r\n\t\t]);\r\n\t};\r\n\r\n\tconst getClusterLeaves = (clusterId) => {\r\n\t\treturn supercluster.getLeaves(clusterId);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ReactMapGL\r\n\t\t\tref={map}\r\n\t\t\t{...viewport}\r\n\t\t\tmapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n\t\t\tonViewportChange={(viewport) =>\r\n\t\t\t\tsetViewport(viewport)\r\n\t\t\t}\r\n\t\t\tmapStyle={'mapbox://styles/nivmimran/ckngo7jr231jt18pcc4bzobs3'}\r\n\t\t\tattributionControl={false}\r\n\t\t>\r\n\t\t\t{clusters.map((cluster, i) => {\r\n\t\t\t\tconst [longitude, latitude] = cluster.geometry.coordinates;\r\n\t\t\t\tconst { cluster: isCluster } = cluster.properties;\r\n\r\n\t\t\t\tif (isCluster) {\r\n\t\t\t\t\tconst leaves = getClusterLeaves(cluster.id);\r\n\t\t\t\t\tlet totalFaults = 0;\r\n\t\t\t\t\tleaves.forEach((lv) => {\r\n\t\t\t\t\t\ttotalFaults += lv.properties.asset.faultCount;\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Marker\r\n\t\t\t\t\t\t\tlongitude={longitude}\r\n\t\t\t\t\t\t\tlatitude={latitude}\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tonClick={handleMarkerClick(cluster)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{!!totalFaults && (\r\n\t\t\t\t\t\t\t\t<div className={classes.totalFaults}>\r\n\t\t\t\t\t\t\t\t\t{totalFaults}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\tclasses.markerIcon,\r\n\t\t\t\t\t\t\t\t\textId === cluster.id ? classes.active : null\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<img src=\"https://img.icons8.com/nolan/35/skyscrapers.png\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Marker>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Marker\r\n\t\t\t\t\t\tlongitude={longitude}\r\n\t\t\t\t\t\tlatitude={latitude}\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tonClick={handleMarkerClick(cluster)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Boolean(cluster.properties.asset.faultCount) && (\r\n\t\t\t\t\t\t\t<div className={classes.totalFaults}>\r\n\t\t\t\t\t\t\t\t{cluster.properties.asset.faultCount}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\tclasses.markerIcon,\r\n\t\t\t\t\t\t\t\textId === cluster.id ? classes.active : null\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\tcluster.properties.asset.type ===\r\n\t\t\t\t\t\t\t\t\t'apartment'\r\n\t\t\t\t\t\t\t\t\t\t? 'https://img.icons8.com/nolan/35/cottage.png'\r\n\t\t\t\t\t\t\t\t\t\t: 'https://img.icons8.com/nolan/35/company.png'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Marker>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</ReactMapGL>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttotalFaults: {\r\n\t\tbackground: 'red',\r\n\t\tcolor: 'white',\r\n\t\twidth: 'fit-content',\r\n\t\theight: 'fit-content',\r\n\t\tpadding: '2px 5px',\r\n\t\tborderRadius: '50px',\r\n\t\tfontSize: '13px',\r\n\t\tposition: 'relative',\r\n\t\ttop: '15px',\r\n\t},\r\n\tmarkerIcon: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '3px 5px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tcursor: 'pointer',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MarkerData.js",["664","665","666","667","668","669","670","671","672"],"import {\r\n\tmakeStyles,\r\n\tGrid,\r\n\tFormControl,\r\n\tSelect,\r\n\tMenuItem,\r\n\tLinearProgress,\r\n\tIconButton,\r\n\tButton\r\n} from '@material-ui/core';\r\nimport { Clear } from '@material-ui/icons';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n\tgetFullAddress,\r\n\tgetShortAddress,\r\n\tgetUnit,\r\n} from '../../../api/assetsApi';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { FaultMinified } from '../faults/FaultMinified';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { useTranslation } from 'react-i18next';\r\nimport clsx from 'clsx';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport AssignmentRoundedIcon from '@material-ui/icons/AssignmentRounded';\r\nimport { TaskMinified } from '../tasks/TaskMinified';\r\n\r\nexport const MarkerData = ({ markersData, handleClose }) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { t } = useTranslation();\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [data, setData] = useState(markersData);\r\n\tconst [faults, setFaults] = useState([]);\r\n\tconst [tasks, setTasks] = useState([]);\r\n\tconst [selectedAsset, setSelectedAsset] = useState(data[0].asset._id);\r\n\tconst [type, setType] = useState(null);\r\n\tconst [ detailsActive, setDetailsActive ] = useState('faults');\r\n\r\n\tuseEffect(() => {\r\n\t\tif (data.length) {\r\n\t\t\tif (data.length > 1) {\r\n\t\t\t\tlet addressList = data.map((md) => getShortAddress(md.asset));\r\n\t\t\t\tlet unique = addressList.filter(function (value, index, self) {\r\n\t\t\t\t\treturn self.indexOf(value) === index;\r\n\t\t\t\t});\r\n\t\t\t\tif (addressList.length === 1) {\r\n\t\t\t\t\tsetType('apt');\r\n\t\t\t\t} else if (unique.length > 1) {\r\n\t\t\t\t\tsetType('cluster');\r\n\t\t\t\t} else if (unique.length !== addressList.length) {\r\n\t\t\t\t\tsetType('apts');\r\n\t\t\t\t}\r\n\t\t\t\tsetSelectedAsset(data[0].asset._id);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetType('apt');\r\n\t\t\tsetSelectedAsset(data[0].asset._id);\r\n\t\t}\r\n\t}, [data]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (markersData) {\r\n\t\t\tsetData(markersData);\r\n\t\t}\r\n\t}, [markersData]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (selectedAsset) {\r\n\t\t\tlet item = data.find((md) => md.asset._id === selectedAsset);\r\n\t\t\tif (item) {\r\n\t\t\t\tsetFaults(item.faults);\r\n\t\t\t\tsetTasks(item.tasks);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetFaults(data[0].faults);\r\n\t}, [selectedAsset]);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetSelectedAsset(event.target.value);\r\n\t};\r\n\r\n\tconst handleClick = type => event => {\r\n\t\tsetDetailsActive(type)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.container}>\r\n\t\t\t<IconButton onClick={handleClose} className={classes.closeBtn}>\r\n\t\t\t\t<ClearRoundedIcon />\r\n\t\t\t</IconButton>\r\n\t\t\t{(data.length === 1 || type === 'apts') && (\r\n\t\t\t\t<div className={classes.streetName}>\r\n\t\t\t\t\t{data.length === 1\r\n\t\t\t\t\t\t? getFullAddress(data[0].asset)\r\n\t\t\t\t\t\t: getShortAddress(data[0].asset)}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{data.length > 1 && (\r\n\t\t\t\t<div className={classes.selectContainer}>\r\n\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tclassName={classes.textInput}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tvalue={selectedAsset}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tclassName={clsx(classes.menu, \r\n\t\t\t\t\t\t\t\ttype === 'apts'\r\n\t\t\t\t\t\t\t\t\t? classes.menu\r\n\t\t\t\t\t\t\t\t\t: classes.menuTitle\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\toutlined: classes.outlinedSelect\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{data.map((md, i) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\tvalue={md.asset._id}\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tdirection:\r\n\t\t\t\t\t\t\t\t\t\t\t\tlang.code === 'he'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'rtl'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'ltr',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{type === 'apts'\r\n\t\t\t\t\t\t\t\t\t\t\t? getUnit(md.asset)\r\n\t\t\t\t\t\t\t\t\t\t\t: type === 'cluster'\r\n\t\t\t\t\t\t\t\t\t\t\t? getFullAddress(md.asset)\r\n\t\t\t\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div className={classes.pillContainer}>\r\n\t\t\t\t<div onClick={handleClick('faults')} className={clsx(classes.openItems, classes.openFaults, detailsActive === 'faults' && classes.tabActive)}>\r\n\t\t\t\t\t<WarningRoundedIcon className={classes.icon}/>\r\n\t\t\t\t\t{`${ faults.length } ${t(\"mapModule.openFaults\")}`}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div onClick={handleClick('tasks')} className={clsx(classes.openItems, classes.openTasks, detailsActive === 'tasks' && classes.tabActive)}>\r\n\t\t\t\t\t<AssignmentRoundedIcon className={classes.icon}/>\r\n\t\t\t\t\t{`${ tasks.length } ${t(\"mapModule.todaysTasks\")}`}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tdetailsActive === 'faults' ? \r\n\t\t\t\tfaults.length ? (\r\n\t\t\t\t\t<div className={classes.faultContainer}>\r\n\t\t\t\t\t\t{faults.map((mdf, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className={classes.miniFault}>\r\n\t\t\t\t\t\t\t\t\t<FaultMinified data={mdf} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className={classes.noFaults}>\r\n\t\t\t\t\t\t{t('mapModule.noFaults')}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t\t: \r\n\t\t\t\ttasks.length ? (\r\n\t\t\t\t\t<div className={classes.taskContainer}>\r\n\t\t\t\t\t\t{tasks.map((mdf, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className={classes.miniTask}>\r\n\t\t\t\t\t\t\t\t\t<TaskMinified data={mdf} asList={true} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className={classes.noFaults}>\r\n\t\t\t\t\t\t{t('mapModule.noTasks')}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\toverflowY: 'overlay',\r\n\t\tbackground: 'rgba(0,0,0,0.2)',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: 'auto'\r\n\t\t}\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: '16px',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'grid',\r\n\t\tborderRadius: '5px',\r\n\t\tpadding: '0',\r\n\t\tmargin: '60px 0px 10px',\r\n\t\twidth: 'fit-content',\r\n\t\tminWidth: '300px',\r\n\t\talignItems: 'flex-end',\r\n\t\tbackground: 'rgb(140, 19, 171)',\r\n\t\tborderRadius: '50px',\r\n\t},\r\n\tstreetName: {\r\n\t\tfontSize: '16px',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'grid',\r\n\t\tborderRadius: '5px',\r\n\t\tpadding: '7px 40px 7px 20px',\r\n\t\tmargin: '60px 10px 5px',\r\n\t\twidth: 'fit-content',\r\n\t\talignItems: 'flex-end',\r\n\t\tbackground: 'rgb(140, 19, 171)',\r\n\t\tborderRadius: '50px',\r\n\t},\r\n\tminiFault: {\r\n\t\theight: '150px',\r\n\t\tpadding: '10px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tbackground: 'rgba(0,0,0,0.0)',\r\n\t\tmargin: '10px',\r\n\t\tborderRadius: '5px'\r\n\t},\r\n\tminiTask: {\r\n\t\tborder: '0 solid rgba(255,255,255,0.2)',\r\n\t\tbackground: 'rgba(0,0,0,0.0)',\r\n\t\tmargin: '10px',\r\n\t},\r\n\tfaultContainer: {\r\n\t\tborderTop: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmarginTop: '5x'\r\n\t},\r\n\ttaskContainer: {\r\n\t\tborderTop: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmarginTop: '5px'\r\n\t},\r\n\tmenu: {\r\n\t\tcolor: 'white',\r\n\t\theight: '40px',\r\n\t\tmargin: '5px 50px 5px 10px',\r\n\t\t'&:hover': {\r\n\t\t\tborderColor: 'white',\r\n\t\t},\r\n\t},\r\n\tmenuTitle: {\r\n\t\tcolor: 'white',\r\n\t\tmargin: '60px 50px 0px 10px',\r\n\t\theight: '33px',\r\n\t\tminWidth: '200px',\r\n\t\tbackground: 'rgb(140, 19, 171)',\r\n\t\tborderRadius: '50px',\r\n\t\tfontSize: '15px',\r\n\t\tpadding: '0',\r\n\t\tlineHeight: 2,\r\n\t\t'&:hover': {\r\n\t\t\tborderColor: 'white',\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmaxHeight: '200px',\r\n\t\toverflowY: 'auto',\r\n\t\tmarginTop: '60px',\r\n\t\tmarginRight: '7px',\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tselectContainer: {\r\n\t\tpadding: '0px 0'\r\n\t},\r\n\ttextInput: {\r\n\t\tpadding: '0px 0',\r\n\t\tbackground: 'rgba(0,0,0,0.0)',\r\n\t\tfontSize: '16px',\r\n\t\twidth: '100%',\r\n\t\t'& input': {\r\n\t\t\tcolor: 'white',\r\n\t\t\tpaddingLeft: '20px',\r\n\t\t},\r\n\t\t'& label': {\r\n\t\t\tcolor: 'white',\r\n\t\t\tpaddingLeft: '5px',\r\n\t\t},\r\n\t\t'& fieldset': {\r\n\t\t\tborderColor: 'rgba(255,255,255,0.6)',\r\n\t\t\tborderRadius: '42px',\r\n\t\t},\r\n\t},\r\n\tcloseBtn: {\r\n\t\tcolor: 'white',\r\n\t\talignSelf: 'flex-end',\r\n\t\tmargin: '6px',\r\n\t\tposition: 'absolute',\r\n\t\tzIndex: 3,\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\t},\r\n\t},\r\n\tnoFaults: {\r\n\t\tcolor: 'white',\r\n\t\tbackground: 'rgba(0,0,0,0.8)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '10px 20px',\r\n\t\tmargin: '10px',\r\n\t\tfontSize: '14px',\r\n\t\twidth: 'fit-content'\r\n\t},\r\n\topenItems: {\r\n\t\t\r\n\t\tcolor: 'white',\r\n\t\tpadding: '5px 20px 5px 10px',\r\n\t\tborderRadius: '50px',\r\n\t\twidth: 'fit-content',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tmargin: '0px 10px 5px 0px',\r\n\t\tfontSize: '13px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\topacity: 0.7,\r\n\t\tcursor: 'pointer',\r\n\t\t'&:hover': {\r\n\t\t\topacity: 1,\r\n\t\t\tboxShadow: 'inset rgba(0,0,0,0.4) 0 0 3px 1px'\r\n\t\t}\r\n\t},\r\n\topenFaults: {\r\n\t\tbackground: '#F03930',\r\n\t},\r\n\topenTasks: {\r\n\t\tbackground: '#6540EB',\r\n\t},\r\n\ticon: {\r\n\t\tmarginRight: '7px',\r\n\t\tfontSize: '18px',\r\n\t\tpaddingBottom: '2px'\r\n\t},\r\n\tpillContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: '5px 10px'\r\n\t},\r\n\ttabActive: {\r\n\t\tborder: '1px solid white',\r\n\t\topacity: 1\r\n\t},\r\n\toutlinedSelect: {\r\n\t\tpadding: '10px'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\Map.js",["673","674","675","676","677","678","679","680","681","682","683","684","685"],"import { makeStyles, IconButton, ClickAwayListener } from '@material-ui/core';\r\nimport {\r\n\tGoogleMap,\r\n\tInfoWindow,\r\n\tInfoBox,\r\n\tMarker,\r\n\tuseJsApiLoader,\r\n\tMarkerClusterer,\r\n} from '@react-google-maps/api';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { addQueryParam } from '../../../api/genericApi';\r\nimport { getMapData } from '../../../api/mapApi';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport house from '../../../assets/icons/house.png';\r\nimport { FaultMinified } from '../faults/FaultMinified';\r\nimport { getFullAddress } from '../../../api/assetsApi';\r\nimport ChevronRightRoundedIcon from '@material-ui/icons/ChevronRightRounded';\r\nimport ChevronLeftRoundedIcon from '@material-ui/icons/ChevronLeftRounded';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst containerStyle = {\r\n\twidth: '100%',\r\n\theight: '100%',\r\n\tborderRadius: '5px',\r\n};\r\n\r\nexport const Map = ({ setData }) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst { t } = useTranslation();\r\n\tconst [map, setMap] = useState(null);\r\n\tconst [mapData, setMapData] = useState({});\r\n\tconst [markers, setMarkers] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(mapData);\r\n\t\tif (mapData.assets) {\r\n\t\t\tsetMarkers(mapData.assets);\r\n\t\t}\r\n\t}, [mapData]);\r\n\r\n\tconst { isLoaded } = useJsApiLoader({\r\n\t\tid: 'google-map-script',\r\n\t\tgoogleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\r\n\t\tlanguage: 'he',\r\n\t\tregion: 'IL',\r\n\t});\r\n\r\n\tconst onLoad = React.useCallback(function callback(map) {\r\n\t\tsetMap(map);\r\n\t\tfetchMapData();\r\n\t}, []);\r\n\r\n\tconst onDragEnd = () => {\r\n\t\tconst lat = map.getCenter().lat();\r\n\t\tconst lng = map.getCenter().lng();\r\n\t\thistory.push({\r\n\t\t\tpath: location.pathname,\r\n\t\t\tsearch: addQueryParam(location.search, [\r\n\t\t\t\t{ name: 'lat', value: lat },\r\n\t\t\t\t{ name: 'lng', value: lng },\r\n\t\t\t]),\r\n\t\t});\r\n\t\tlocalStorage.setItem('wb_map_pref', JSON.stringify({ lat, lng }));\r\n\t};\r\n\r\n\tconst fetchMapData = async () => {\r\n\t\tconst data = await getMapData();\r\n\t\tsetMapData(data);\r\n\t};\r\n\r\n\tconst handleMarkerClick = (asset, index) => (event) => {\r\n\t\tlet fs = mapData.faults.filter((f) => f.asset._id == asset._id);\r\n\t\tsetData([{ asset, faults: fs }]);\r\n\t};\r\n\r\n\tconst handleClusterClick = (cluster) => {\r\n\t\tconst markers = cluster.getMarkers();\r\n\t\tlet md = [];\r\n\t\tmarkers.forEach(m => {\r\n\t\t\tlet fs = mapData.faults.filter((f) => f.asset._id == m.data._id);\r\n\t\t\tmd.push({asset: m.data, faults: fs});\r\n\t\t});\r\n\t\tsetData(md);\r\n\t}\r\n\r\n\treturn isLoaded ? (\r\n\t\t<GoogleMap\r\n\t\t\tmapContainerStyle={containerStyle}\r\n\t\t\tzoom={15}\r\n\t\t\tonLoad={onLoad}\r\n\t\t\tonDragEnd={onDragEnd}\r\n\t\t\tcenter={{ lat: Number(query.lat), lng: Number(query.lng) }}\r\n\t\t\toptions={{\r\n\t\t\t\tmaxZoom: 18,\r\n\t\t\t\tfullscreenControl: false,\r\n\t\t\t\tstreetViewControl: false,\r\n\t\t\t\tmapTypeControl: false,\r\n\t\t\t\tgestureHandling: 'greedy',\r\n\t\t\t\tstyles: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfeatureType: 'poi',\r\n\t\t\t\t\t\tstylers: [{ visibility: 'off' }],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfeatureType: 'transit',\r\n\t\t\t\t\t\telementType: 'labels.icon',\r\n\t\t\t\t\t\tstylers: [{ visibility: 'off' }],\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<MarkerClusterer\r\n\t\t\t\tonClick={handleClusterClick}\r\n\t\t\t\tgridSize={30}\r\n\t\t\t\tenableRetinaIcons\r\n\t\t\t\tclusterClass={classes.mcLabel}\r\n\t\t\t\tzoomOnClick={false}\r\n\t\t\t\t\r\n\t\t\t\tstyles={[\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\ttextColor: 'white',\r\n\t\t\t\t\t\tfontWeight: '500',\r\n\t\t\t\t\t\ttextSize: 12,\r\n\t\t\t\t\t\twidth: 20,\r\n\t\t\t\t\t\theight: 20,\r\n\t\t\t\t\t\tanchorText: [0,0],\r\n\t\t\t\t\t\turl: 'https://img.icons8.com/nolan/50/company.png',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t{(clusterer) => {\r\n\t\t\t\t\treturn markers.map((marker, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Marker\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\t\t\tdata: marker\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tlabel={{\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\ttext: marker.faultCount.toString(),\r\n\t\t\t\t\t\t\t\t\tclassName: classes.markerLabel,\r\n\t\t\t\t\t\t\t\t\tcolor: 'white',\r\n\t\t\t\t\t\t\t\t\tfontSize: '11px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\ticon={\r\n\t\t\t\t\t\t\t\t\t'https://img.icons8.com/nolan/50/marker.png'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tposition={{\r\n\t\t\t\t\t\t\t\t\tlat: marker.coordinates.lat,\r\n\t\t\t\t\t\t\t\t\tlng: marker.coordinates.lng,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClick={handleMarkerClick(marker, i)}\r\n\t\t\t\t\t\t\t\tclusterer={clusterer}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}}\r\n\t\t\t</MarkerClusterer>\r\n\t\t</GoogleMap>\r\n\t) : null;\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmapFull: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t\tborderRadius: '10px',\r\n\t\t'&div': {\r\n\t\t\toutline: 'none !important',\r\n\t\t},\r\n\t},\r\n\tmarkerLabel: {\r\n\t\tbackground: 'red',\r\n\t\tpadding: '5px 6px',\r\n\t\tborderRadius: '50px',\r\n\t\tlineHeight: '0.9',\r\n\t\tposition: 'absolute',\r\n\t\tright: '4px',\r\n\t\ttop: '20px',\r\n\t},\r\n\tfaultInfo: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\tborderRadius: '5px',\r\n\t\twidth: '300px',\r\n\t\tpadding: '10px',\r\n\t\tmaxHeight: '400px',\r\n\t\toverflowY: 'overlay',\r\n\t},\r\n\tfaultContainer: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\tmargin: '5px 0',\r\n\t\tpadding: '10px',\r\n\t\tborderRadius: '5px',\r\n\t},\r\n\taddress: {\r\n\t\tcolor: 'white',\r\n\t\tbackground: 'black',\r\n\t\tfontSize: '18px',\r\n\t\tpadding: '15px',\r\n\t\tborderRadius: '5px',\r\n\t},\r\n\tcardPagination: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t},\r\n\tarrow: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tpaginationMiddle: {\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t\tfontSize: '14px',\r\n\t},\r\n\t'@global': {\r\n\t\t'*': {\r\n\t\t\toutline: 'none',\r\n\t\t},\r\n\t},\r\n\tmcLabel: {\r\n\t\tbackground: 'red',\r\n\t\tborderRadius: '50px',\r\n\t\topacity: '0.8'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\UpsertDocument.js",["686","687","688","689","690","691"],"import {\r\n\tAvatar,\r\n\tBackdrop,\r\n\tButton,\r\n\tChip,\r\n\tFade,\r\n\tFormHelperText,\r\n\tGrid,\r\n\tIconButton,\r\n\tLinearProgress,\r\n\tmakeStyles,\r\n\tMenuItem,\r\n\tModal,\r\n\tPaper,\r\n\tSelect,\r\n\tTextField,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport clsx from 'clsx';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getFaults } from '../../../api/faultsApi';\r\nimport { getFullName } from '../../../api/genericApi';\r\nimport { createSystemMenuOptions, getAssetsSuggestions, getSystemsByAsset } from '../../../api/systemsApi';\r\nimport { getTasks } from '../../../api/tasksApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { UserItem } from '../../user/UserItem';\r\nimport { getDocument } from '../../../api/documentsApi';\r\n\r\nexport const UpsertDocument = ({ handleClose, handleSave, documentId }) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [errors, setErrors] = useState([]);\r\n\tconst [assets, setAssets] = useState([]);\r\n\tconst [systems, setSystems] = useState([]);\r\n\tconst [tasks, setTasks] = useState([]);\r\n\tconst [faults, setFaults] = useState([]);\r\n\tconst [userList, setUserList] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [mode, setMode] = useState(documentId ? 'update' : 'create');\r\n\tconst [details, setDetails] = useState({\r\n\t\ttenant: auth.user.tenant,\r\n\t\tdescription: '',\r\n\t\tasset: '',\r\n\t\tsystem: '',\r\n\t\tfault: '',\r\n\t\ttask: '',\r\n\t\tuser: '',\r\n\t\tcreatedBy: auth.user._id,\r\n\t\tfile: null,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tcreateUserOptions()\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetUserList(data);\r\n\t\t\t\treturn getAssetsSuggestions();\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetAssets(data);\r\n\t\t\t\tif (!documentId) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tgetDocument(documentId)        \r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\treturn Promise.all([loadSystemOptions(data.asset), Promise.resolve(data)]) \r\n\t\t\t\t})\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tlet data = res[1];\r\n\t\t\t\t\tif (!data) return;\r\n\t\t\t\t\tsetDetails({ ...data, file: null });\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!details.asset) {\r\n\t\t\tsetTasks([]);\r\n\t\t\tsetFaults([]);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tPromise.all([\r\n\t\t\tgetTasks(auth.user.tenant, {\r\n\t\t\t\tasset: details.asset,\r\n\t\t\t\tsystem: details.system || null,\r\n\t\t\t}),\r\n\t\t\tgetFaults(auth.user.tenant, {\r\n\t\t\t\tasset: details.asset,\r\n\t\t\t\tsystem: details.system || null,\r\n\t\t\t}),\r\n\t\t]).then((res) => {\r\n\t\t\tlet tasksOptions = [];\r\n\t\t\tlet faultsOptions = [];\r\n\t\t\tres[0].forEach((task) => {\r\n\t\t\t\ttasksOptions.push({\r\n\t\t\t\t\ttext: `${task.taskId} | ${task.title}`,\r\n\t\t\t\t\tvalue: task._id,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tres[1].forEach((fault) => {\r\n\t\t\t\tfaultsOptions.push({\r\n\t\t\t\t\ttext: `${fault.faultId} | ${fault.title}`,\r\n\t\t\t\t\tvalue: fault._id,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tsetTasks(tasksOptions);\r\n\t\t\tsetFaults(faultsOptions);\r\n\t\t});\r\n\t}, [details.asset, details.system]);\r\n\r\n\tconst validateFields = () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet errList = [];\r\n\t\t\tif (!details.description) {\r\n\t\t\t\terrList.push({ field: 'description', text: t('errors.isRequired') });\r\n\t\t\t}\t\r\n\t\t\tif (!details.file && mode === 'create') {\r\n\t\t\t\terrList.push({ field: 'file', text: t('errors.isRequired') });\r\n\t\t\t}\r\n\t\t\tif (errList.length) {\r\n\t\t\t\tsetErrors(errList);\r\n\t\t\t\tresolve(false);\r\n\t\t\t}\r\n\t\t\tresolve(true);\r\n\t\t});\r\n\t};\r\n\r\n\tconst loadSystemOptions = async (assetId) => {\r\n\t\treturn getSystemsByAsset(assetId)\r\n\t\t\t.then((systems) => {\r\n\t\t\t\treturn createSystemMenuOptions(systems);\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetSystems(data);\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tvalidateFields()\r\n\t\t.then((res) => {\r\n\t\t\tif (!res) return;\r\n\t\t\thandleSave(details);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (field) => async (event) => {\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\t[field]: event.target.value,\r\n\t\t});\r\n\t\tif (field === 'asset') {\r\n\t\t\tif (event.target.value) {\r\n\t\t\t\tawait loadSystemOptions(event.target.value);\r\n\t\t\t} else {\r\n\t\t\t\tsetDetails({\r\n\t\t\t\t\t...details,\r\n\t\t\t\t\ttask: '',\r\n\t\t\t\t\tfault: '',\r\n\t\t\t\t\tsystem: '',\r\n\t\t\t\t\tasset: '',\r\n\t\t\t\t});\r\n\t\t\t\tsetSystems([]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (errors.length) {\r\n\t\t\tsetErrors(errors.filter((err) => err.field !== field));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleFileUpload = (event) => {\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\tfile: event.target.files[0]\r\n\t\t});\r\n\t\tif (errors.length) {\r\n\t\t\tsetErrors(errors.filter((err) => err.field !== 'file'));\r\n\t\t}\r\n\t};\r\n\r\n\treturn isLoading ? (\r\n\t\t<LinearProgress />\r\n\t) : (\r\n\t\t<Modal\r\n\t\t\topen={true}\r\n\t\t\tonClose={handleClose}\r\n\t\t\tcloseAfterTransition\r\n\t\t\tBackdropComponent={Backdrop}\r\n\t\t\tBackdropProps={{\r\n\t\t\t\ttimeout: 500,\r\n\t\t\t}}\r\n\t\t\tclassName={classes.modal}\r\n\t\t>\r\n\t\t\t<Fade in={true}>\r\n\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\" style={{ outline: '0' }}>\r\n\t\t\t\t\t<Grid item xs={12} sm={10} md={8} lg={8} xl={6} className={classes.gridCont}>\r\n\t\t\t\t\t\t<Paper elevation={6} className={classes.paper} style={{ direction: lang.dir }}>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.headerRow}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.title}>{t('documentsModule.upsert.createDocument')}</div>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.close}>\r\n\t\t\t\t\t\t\t\t\t\t<IconButton className={classes.iconBtn} onClick={handleClose}>\r\n\t\t\t\t\t\t\t\t\t\t\t<ClearRounded className={classes.icon} />\r\n\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t\t\t\t\t{t('documentsModule.upsert.generalDetails')}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `description`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={t(`documentsModule.upsert.description`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('description')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={'medium'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `description`).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? t('errors.isRequired')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `description`).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'rgb(244, 67, 54)'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6} md={6} lg={6} xl={7} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>{t('documentsModule.upsert.asset')}</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `asset`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.asset}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange(`asset`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{assets.map((asset, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={asset.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirection: lang.dir,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{asset.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{errors.filter((e) => e.field === 'asset').length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#f44336',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: '15px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{t('errors.isRequired')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6} md={4} lg={4} xl={4} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>{t('documentsModule.upsert.system')}</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `system`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.system}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange(`system`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{systems.map((system, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={system.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirection: lang.dir,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{system.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{errors.filter((e) => e.field === 'asset').length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#f44336',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: '15px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{t('errors.isRequired')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t{Boolean(tasks.length) && (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('documentsModule.upsert.task')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `task`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.task}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange(`task`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tasks.map((task, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={task.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirection: lang.dir,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{task.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.filter((e) => e.field === 'task').length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#f44336',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: '15px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{t('errors.isRequired')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{Boolean(faults.length) && (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('documentsModule.upsert.fault')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `fault`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.fault}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange(`fault`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{faults.map((fault, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={fault.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirection: lang.dir,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{fault.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.filter((e) => e.field === 'fault').length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#f44336',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: '15px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{t('errors.isRequired')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>{t('documentsModule.upsert.user')}</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `user`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.owner}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange(`user`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\trenderValue={(selected) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet user = userList.find((f) => f._id === selected);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize={'medium'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tavatar={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: '40px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '40px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={user.avatar}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={getFullName(user)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{userList.map((user, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={user.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirection: lang.dir,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.userCont}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<UserItem user={user} avatarSize={40} size={13} showName />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t{mode === 'create' && (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={6} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('documentsModule.upsert.document')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={'label'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={'contained'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={clsx(classes.uploadBtn, errors.filter((e) => e.field === `file`).length > 0 ? classes.fileError : null)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{t('documentsModule.upsert.uploadDocument')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccept=\".doc,.docx,.pdf\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleFileUpload}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thidden\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className={classes.filesUploaded}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{details.file\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? `1 ${t('documentsModule.upsert.fileSelected')}`\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: `${t('documentsModule.upsert.noFileSelected')}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.controls}>\r\n\t\t\t\t\t\t\t\t\t<Button className={clsx(classes.control, classes.save)} onClick={handleConfirm}>\r\n\t\t\t\t\t\t\t\t\t\t{t('controls.confirm')}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button className={clsx(classes.control, classes.cancel)} onClick={handleClose}>\r\n\t\t\t\t\t\t\t\t\t\t{t('controls.cancel')}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Fade>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmodal: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t},\r\n\r\n\tgridCont: {\r\n\t\theight: 'fit-content',\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tborderRadius: '10px',\r\n\t\tpadding: '10px 20px',\r\n\t\toverflowY: 'overlay',\r\n\t\theight: '80vh',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: '81vh',\r\n\t\t\tborderRadius: '0',\r\n\t\t\tborder: '0',\r\n\t\t\tpadding: '10px 5px',\r\n\t\t},\r\n\t\t'&:focus': {\r\n\t\t\toutline: 'none',\r\n\t\t},\r\n\t},\r\n\theaderRow: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t\twidth: '100%',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '20px 10px 10px',\r\n\t\tfontSize: '20px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t},\r\n\ticonBtn: {\r\n\t\tmargin: '10px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '20px',\r\n\t},\r\n\tsection: {\r\n\t\tmargin: '10px 5px',\r\n\t},\r\n\tsectionTitle: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t\tpadding: '10px 20px',\r\n\t\twidth: 'fit-content',\r\n\t\tborderRadius: '10px 10px 0 0',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\twhiteSpace: 'nowrap',\r\n\t},\r\n\tfields: {\r\n\t\tpadding: '10px 20px',\r\n\t\tborderRadius: '0px 10px 10px 10px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tpadding: '10px',\r\n\t\t},\r\n\t},\r\n\ttextContainer: {\r\n\t\tpadding: '5px',\r\n\t},\r\n\ttextField: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\tselectInput: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: 'rgba(0,0,0,0.8)',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\theight: '200px',\r\n\t\toverflowY: 'auto',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmarginRight: '7px',\r\n\t\tmarginLeft: '-5px',\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: 'white',\r\n\t\twidth: '100%',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.1)',\r\n\t\t},\r\n\t},\r\n\tcontrols: {\r\n\t\tborderTop: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '10px 0',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t},\r\n\tcontrol: {\r\n\t\twidth: '30%',\r\n\t\tborder: '1px solid rgba(255,255,255,0.5)',\r\n\t\tfontSize: '16px',\r\n\t\tmargin: '5px',\r\n\t\tpadding: '5px 30px',\r\n\t\tborderRadius: '30px',\r\n\t\tcolor: 'white',\r\n\t},\r\n\tsave: {\r\n\t\tbackground: 'rgba(0,0,0,0.2)',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'black',\r\n\t\t},\r\n\t\t'&:disabled': {\r\n\t\t\tcolor: 'rgba(255,255,255,0.3)',\r\n\t\t},\r\n\t},\r\n\tcancel: {\r\n\t\t'&:hover': {\r\n\t\t\tboxShadow: 'inset rgba(255,255,255,0.3) 0 0 2px 1px',\r\n\t\t},\r\n\t},\r\n\tchips: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\tchip: {\r\n\t\theight: '50px',\r\n\t\tfontSize: '14px',\r\n\t\tborderRadius: '50px',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-start',\r\n\t\tcolor: 'white',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\t\tboxShadow: 'inset lightgrey 0px 0px 1px 1px',\r\n\t\t},\r\n\t},\r\n\tuserCont: {\r\n\t\theight: 'fit-content',\r\n\t\tpadding: 0,\r\n\t\tmargin: 0,\r\n\t\tmargin: '5px 0',\r\n\t},\r\n\tchipsCont: {\r\n\t\theight: 'fit-content',\r\n\t\tpadding: 0,\r\n\t\tmargin: '3px',\r\n\t\tborderRadius: '50px',\r\n\t\tbackground: 'rgba(255,255,255,0.1)',\r\n\t\tboxShadow: 'inset rgba(0,0,0,0.5) 0px 0px 2px 1px',\r\n\t\tdisplay: 'flex',\r\n\t\tjutifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tremoveIcon: {\r\n\t\tcolor: 'rgba(255,255,255,0.2)',\r\n\t\tpadding: '5px',\r\n\t\tmarginRight: '5px',\r\n\t\tborderRadius: '50px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.8)',\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t},\r\n\tradioGroup: {\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\talignitems: 'center',\r\n\t},\r\n\tradioBtn: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '15px',\r\n\t},\r\n\tfilesUploaded: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '0 15px',\r\n\t},\r\n\tuploadBtn: {\r\n\t\tmargin: '9px 0',\r\n\t\tbackground: 'rgba(0,0,0,0.1)',\r\n\t\tcolor: 'white',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tborderRadius: '50px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\t'&:hover': {\r\n\t\t\tboxShadow: 'inset white 0 0 2px 1px',\r\n\t\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\t},\r\n\t},\r\n\timageRow: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpadding: '10px 5px',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tpreviewImage: {\r\n\t\theight: '50px',\r\n\t\twidth: '100px',\r\n\t},\r\n\tremoveImageBtn: {\r\n\t\tcolor: 'rgba(255,255,255,0.5)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.5)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '6px',\r\n\t\t'&:hover': {\r\n\t\t\tcolor: 'white',\r\n\t\t\tborderColor: 'white',\r\n\t\t},\r\n\t},\r\n\tuploadedImagesTitle: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '10px 5px',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tswitchLabel: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tswitchBase: {\r\n\t\tcolor: 'rgba(255,255,255,0.4)',\r\n\t\t'&$checked': {\r\n\t\t\tcolor: 'rgba(255,255,255,1)',\r\n\t\t},\r\n\t\t'&$checked + $track': {\r\n\t\t\tbackgroundColor: 'rgba(255,255,255,0.8)',\r\n\t\t},\r\n\t},\r\n\tchecked: {},\r\n\ttrack: {\r\n\t\tbackgroundColor: 'rgba(255,255,255,0.4)',\r\n\t},\r\n\tnotificationsInstructions: {\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tfontSize: '12px',\r\n\t\tmarginBottom: '10px',\r\n\t},\r\n\tfileError: {\r\n\t\tborderColor: 'rgb(244, 67, 54)',\r\n\t\tcolor: 'rgb(244, 67, 54)'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MapControls.js",["692","693","694","695","696","697","698","699","700"],"import {\r\n\tmakeStyles,\r\n\tTooltip,\r\n\tIconButton,\r\n\tGrid,\r\n\tuseMediaQuery,\r\n\tClickAwayListener,\r\n} from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport BusinessRoundedIcon from '@material-ui/icons/BusinessRounded';\r\nimport AssignmentRoundedIcon from '@material-ui/icons/AssignmentRounded';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\nimport { getAssetsSuggestions } from '../../../api/systemsApi';\r\nimport { useLocation } from 'react-router';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { getAsset, getFullAddress } from '../../../api/assetsApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport { FilterBySelect } from '../../reuseables/FilterBySelect';\r\nimport { getFaultsStatusListSuggestions } from '../../../api/faultsApi';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport FilterListRoundedIcon from '@material-ui/icons/FilterListRounded';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\n\r\nexport const MapControls = ({}) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst location = useLocation();\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst query = useQuery(location.search);\r\n\tconst [reloadedValue, setReloadedValue] = useState(null);\r\n\tconst [expanded, setExpanded] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (query.asset) {\r\n\t\t\thandleReloaded(query.asset).then((data) => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetReloadedValue(data);\r\n\t\t\t\t} else {\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetReloadedValue({\r\n\t\t\t\tlabel: '',\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t}\r\n\t}, [location.search]);\r\n\r\n\tconst handleReloaded = async (assetId) => {\r\n\t\tconst res = await getAsset(assetId, false);\r\n\t\tif (res) {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: getFullAddress(res),\r\n\t\t\t\tvalue: res._id,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClickFilter = () => {\r\n\t\tif (expanded) {\r\n\t\t\tsetExpanded(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetExpanded(true);\r\n\t};\r\n\r\n\treturn matches && !expanded ? (\r\n\t\t<IconButton className={classes.filterBtn} onClick={handleClickFilter}>\r\n\t\t\t<FilterListRoundedIcon className={classes.icon} />\r\n\t\t</IconButton>\r\n\t) : (\r\n\t\t<MobileWrappar handleClickFilter={handleClickFilter}>\r\n\t\t\t<Grid container className={classes.container}>\r\n\t\t\t\t{matches && expanded && (\r\n\t\t\t\t\t<Grid item xs={12} className={classes.controls}>\r\n\t\t\t\t\t\t<div className={classes.title}>\r\n\t\t\t\t\t\t\t{t(\"mapModule.filters\")}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<IconButton onClick={handleClickFilter} className={classes.expandedBtn}>\r\n\t\t\t\t\t\t\t<ClearRoundedIcon className={classes.icon}/>\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t\t{reloadedValue && (\r\n\t\t\t\t\t<Grid item className={classes.filterContainer}>\r\n\t\t\t\t\t\t<SearchBoxSelect\r\n\t\t\t\t\t\t\tsuggestionsFunc={getAssetsSuggestions}\r\n\t\t\t\t\t\t\tplaceholder={t('filters.filterByAsset')}\r\n\t\t\t\t\t\t\tfilterField={'asset'}\r\n\t\t\t\t\t\t\treloadedLabel={reloadedValue.label}\r\n\t\t\t\t\t\t\treloadedValue={reloadedValue.value}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t\t<Grid item className={classes.filterContainer}>\r\n\t\t\t\t\t<FilterBySelect\r\n\t\t\t\t\t\toptionsFunc={createUserOptions}\r\n\t\t\t\t\t\tplaceholder={t('filters.filterByUser')}\r\n\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t<PersonRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfilterField={'owner'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{/* <Grid item classNam={classes.filterContainer}>\r\n\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\toptionsFunc={getFaultsStatusListSuggestions}\r\n\t\t\t\t\t\tplaceholder={t('filters.filterByStatus')}\r\n\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t<DoubleArrowIcon className={classes.icon} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfilterField={'status'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid> */}\r\n\t\t\t</Grid>\r\n\t\t</MobileWrappar>\r\n\t);\r\n};\r\n\r\nconst MobileWrappar = ({ children, handleClickFilter }) => {\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.up('md'));\r\n\r\n\treturn matches ? (\r\n\t\t<div>{children}</div>\r\n\t) : (\r\n\t\t<ClickAwayListener onClickAway={handleClickFilter}>\r\n\t\t\t{children}\r\n\t\t</ClickAwayListener>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\twidth: 'fit-content',\r\n\t\theight: 'fit-content',\r\n\t\tdisplay: 'flex',\r\n\t\tbackground: 'rgba(0,0,0,0.2)',\r\n\t\tborderRadius: '50px',\r\n\t\tmargin: '10px',\r\n\t\tbackdropFilter: 'blur(5px)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tposition: 'relative',\r\n\t\tboxShadow: 'rgba(0,0,0,0.4) 0 0 5px 2px',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tborderRadius: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '10px',\r\n\t\t\tborder: 0\r\n\t\t},\r\n\t},\r\n\tbtn: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tpadding: '8px',\r\n\t\tmargin: '5px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'black',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '24px',\r\n\t\tmarginLeft: '4px',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '6px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tcontrols: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpaddingBottom: '10px',\r\n\t\tmarginBottom: '10px'\r\n\t},\r\n\tfilterContainer: {\r\n\t\tjustifySelf: 'center'\r\n\t},\r\n\texpandedBtn: {\r\n\t\tpadding: '2px'\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '20px',\r\n\t\tpadding: '0 10px'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViews.js",["701","702","703"],"import { Grid, LinearProgress, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { getFaults } from '../../../api/faultsApi';\r\nimport { updateQueryParams } from '../../../api/genericApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { FaultsContext } from '../../../context/FaultsContext';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { FaultBlockView } from './FaultBlockView';\r\nimport { FaultListView } from './FaultListView';\r\nimport { FaultsControls } from './FaultsControls';\r\n\r\nexport const FaultViews = () => {\r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const classes = useStyles();\r\n    const { auth } = useContext(AuthContext);\r\n    const { t } = useTranslation();\r\n    const { faults, setFaults } = useContext(FaultsContext)\r\n    const [ viewType, setViewType ] = useState(query['viewType'] || 'list');\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n    \r\n\r\n    useEffect(() => {\r\n        if (!isLoading) return;\r\n        getFaults(auth.user.tenant, query)\r\n        .then(data => {\r\n            if (data) {\r\n                setFaults(data)\r\n            }      \r\n        })\r\n        .finally(() => {\r\n            setIsLoading(false)\r\n        })\r\n    }, [isLoading])\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n    }, [location.search])\r\n\r\n    useEffect(() => { \r\n        history.push({\r\n            path: location.pathname,\r\n            search: updateQueryParams(location.search, [{ name: 'viewType', value: viewType}], ['status'] )\r\n        });   \r\n    }, [viewType]);\r\n\r\n    return (\r\n        <Grid container justify={ 'center'} >\r\n            <div className={classes.pageModule}>\r\n                    {t(\"assetsModule.faults\")}\r\n            </div>\r\n            <Grid item xs={12}>\r\n                <FaultsControls \r\n                    viewType={viewType}\r\n                    setViewType={setViewType}    \r\n                />\r\n            </Grid>\r\n            {\r\n                isLoading ?\r\n                <LinearProgress />\r\n                :\r\n                <Grid item xs={12} \r\n                    className={classes.faultPresent}\r\n                    style={{ height: 'auto' }}\r\n                >\r\n                    {\r\n                        viewType === 'list' ?\r\n                        <FaultListView \r\n                            faults={faults}\r\n                        /> :\r\n                        <FaultBlockView \r\n                            faults={faults}\r\n                        />     \r\n                    }\r\n                    \r\n                </Grid>\r\n            }\r\n            \r\n        </Grid>\r\n        \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageModule: {\r\n        color: 'white',\r\n        padding: '10px 40px',\r\n        fontSize: '18px',\r\n        background: 'rgba(0,0,0,0.6)',\r\n        margin: '0px auto 5px',\r\n        width: '30%',\r\n        textAlign: 'center',\r\n        borderRadius: '0 0 25px 25px',\r\n        lineHeight: '1'\r\n    },\r\n    faultPresent: {\r\n        margin: '20px 10px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '20px 0',\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\DocumentsControls.js",["704","705","706"],"import {\r\n    Button,\r\n    Collapse,\r\n    Grid,\r\n    makeStyles,\r\n    useMediaQuery\r\n} from '@material-ui/core';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { getAsset, getFullAddress } from '../../../api/assetsApi';\r\nimport {\r\n    getFaultOptionsByAssetOrSystem\r\n} from '../../../api/faultsApi';\r\nimport { removeQueryParam } from '../../../api/genericApi';\r\nimport {\r\n    getAssetsSuggestions,\r\n    getSystemsByAssetOptions\r\n} from '../../../api/systemsApi';\r\nimport { getTaskOptionsByAssetOrSystem } from '../../../api/tasksApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport DescriptionRoundedIcon from '@material-ui/icons/DescriptionRounded';\r\nimport BlurOnRoundedIcon from '@material-ui/icons/BlurOnRounded';\r\n\r\n\r\nexport const DocumentsControls = ({}) => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [reloadedValue, setReloadedValue] = useState(null);\r\n\tconst [collapsed, setCollapsed] = useState(!downSm ? true : false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (query.asset) {\r\n\t\t\thandleReloaded(query.asset).then((data) => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetReloadedValue(data);\r\n\t\t\t\t}\r\n            });\r\n            \r\n\t\t} else {\r\n\t\t\tsetReloadedValue({\r\n\t\t\t\tlabel: '',\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\thistory.push({\r\n\t\t\t\tpath: location.pathname,\r\n\t\t\t\tsearch: removeQueryParam(location.search, 'system'),\r\n\t\t\t});\r\n\t\t}\r\n\t}, [location.search]);\r\n\r\n\tconst handleReloaded = async (assetId) => {\r\n\t\tconst res = await getAsset(assetId, false);\r\n\t\tif (res) {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: getFullAddress(res),\r\n\t\t\t\tvalue: res._id,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleCollapse = () => {\r\n\t\tif (collapsed) {\r\n\t\t\tsetCollapsed(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetCollapsed(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{downSm && (\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName={classes.sortandfilter}\r\n\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t<FilterListIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tendIcon={\r\n\t\t\t\t\t\t\t\tcollapsed ? (\r\n\t\t\t\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<ExpandMoreRoundedIcon />\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={toggleCollapse}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{t(\r\n\t\t\t\t\t\t\t\t`filters.${\r\n\t\t\t\t\t\t\t\t\tcollapsed ? 'hide' : 'show'\r\n\t\t\t\t\t\t\t\t}Filters`\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t<Collapse in={collapsed}>\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t{reloadedValue && (\r\n\t\t\t\t\t\t\t<SearchBoxSelect\r\n\t\t\t\t\t\t\t\tsuggestionsFunc={getAssetsSuggestions}\r\n\t\t\t\t\t\t\t\tplaceholder={t('filters.filterByAsset')}\r\n\t\t\t\t\t\t\t\tfilterField={'asset'}\r\n\t\t\t\t\t\t\t\treloadedLabel={reloadedValue.label}\r\n\t\t\t\t\t\t\t\treloadedValue={reloadedValue.value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{query.asset && (\r\n\t\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\t\toptionsFunc={() =>\r\n\t\t\t\t\t\t\t\t\tgetSystemsByAssetOptions(query.asset)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder={t('filters.filterBySystemName')}\r\n\t\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t\t<BlurOnRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfilterField={'system'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={createUserOptions}\r\n\t\t\t\t\t\t\tplaceholder={t('filters.filterByUser')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<PersonRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'user'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={() =>\r\n\t\t\t\t\t\t\t\tgetFaultOptionsByAssetOrSystem(\r\n\t\t\t\t\t\t\t\t\tquery.asset,\r\n\t\t\t\t\t\t\t\t\tquery.system\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tplaceholder={t('filters.filterByFault')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<WarningRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'fault'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={() =>\r\n\t\t\t\t\t\t\t\tgetTaskOptionsByAssetOrSystem(\r\n\t\t\t\t\t\t\t\t\tquery.asset,\r\n\t\t\t\t\t\t\t\t\tquery.system\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tplaceholder={t('filters.filterByTask')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<DescriptionRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'task'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Collapse>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((them) => ({\r\n\tgridItem: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'flex-start',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tmarginLeft: '4px',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '6px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tsortandfilter: {\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '5px 25px 5px 3px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'black',\r\n\t\t},\r\n\t},\r\n\ttypeGroup: {\r\n\t\tmargin: '5px',\r\n\t\theight: '45px',\r\n\t},\r\n\tmodeBtn: {\r\n\t\tpadding: '0 15px 0 5px',\r\n\t\tcolor: 'white',\r\n\t\twidth: 'auto',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tlistBtn: {\r\n\t\tborderRadius: '25px 0 0 25px',\r\n\t},\r\n\tblocksBtn: {\r\n\t\tborderRadius: '0px 25px 25px 0px',\r\n\t},\r\n\tmodeBtnActive: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultView.js",["707","708","709"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\Document.js",["710","711","712"],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\useQuery.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\Can.js",["713","714"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\UpsertAsset.js",["715","716","717"],"import { Backdrop, Button, Fade, FormHelperText, Grid, IconButton, LinearProgress, makeStyles, MenuItem, Modal, Paper, Select, TextField, useMediaQuery } from '@material-ui/core';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport clsx from 'clsx';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getAsset } from '../../../api/assetsApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\n\r\n\r\n\r\n\r\nexport const UpsertAsset = ({ handleClose, handleSave, assetId, handleUpdate }) => {\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const { auth } = useContext(AuthContext);\r\n    const [ mode, setMode ] = useState(handleUpdate ? 'update' : 'create')\r\n    const { t } = useTranslation();\r\n    const [ errors, setErrors ] = useState([]);\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ addInfoContext, setAddInfoContext ] = useState(null)\r\n    const [ isLoading, setIsLoading ] = useState(true)\r\n    const [ details, setDetails ] = useState({\r\n        tenant: auth.user.tenant,\r\n        address: {\r\n            country: '',\r\n            province: '',\r\n            city: '',\r\n            street: '',\r\n            streetNumber: '',\r\n            entrance: '',\r\n            zipcode: '',\r\n        },\r\n        owner: '',\r\n        type: '',\r\n        addInfo: null,\r\n        createdBy: auth.user._id \r\n    });\r\n\r\n    useEffect(() => {\r\n        createUserOptions()\r\n        .then(data => {\r\n            setUserList(data);\r\n            return Promise.resolve(assetId)\r\n        })\r\n        .then(res => {\r\n            if (!res) {\r\n                setIsLoading(false);\r\n                return;\r\n            }\r\n            getAsset(res, true)\r\n            .then(data => {\r\n                setDetails(data);\r\n                setIsLoading(false)\r\n            }) \r\n        })\r\n        \r\n    },[])\r\n\r\n \r\n\r\n    const validateFields = () => {\r\n        return new Promise((resolve,reject) => {\r\n            let errList = [];\r\n            Object.entries({...details.address,owner: details.owner, type: details.type}).forEach((entry) => {\r\n                if (['province', 'entrance'].indexOf(entry[0]) !== -1 ) return;\r\n                if (!entry[1]) {\r\n                    errList.push({ field: entry[0], text: t(\"errors.isRequired\")})\r\n                }\r\n            });\r\n            \r\n            if (errList.length) {\r\n                setErrors(errList);\r\n                resolve(false);\r\n            };\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    const handleConfirm = () => {\r\n        validateFields()\r\n        .then(res => {\r\n            if (!res) return\r\n            if ( mode === 'create') {\r\n                handleSave(details);\r\n            } else {\r\n                console.log(details)\r\n                handleUpdate(details)\r\n            }\r\n            \r\n        })      \r\n    }\r\n\r\n    const handleChange = data => event => {\r\n        if (data.type) {\r\n            setDetails({...details, [data.type]: {\r\n                ...details[data.type],\r\n                [data.field]: event.target.value\r\n            }});\r\n        } else if (data.field === 'type') {\r\n            setDetails({\r\n                ...details, \r\n                type: event.target.value,\r\n                addInfo: event.target.value === 'apartment' \r\n                ? { floor: '', unit: ''} \r\n                : { floors: '', units: ''}\r\n            });\r\n            setAddInfoContext(event.target.value);\r\n        } else {\r\n            setDetails({...details, [data.field]: event.target.value}) \r\n        };\r\n        if (errors.length) {\r\n            setErrors(errors.filter(err => err.field !== data.field))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        isLoading ? \r\n        <LinearProgress /> :\r\n        <Modal\r\n            open={true}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={true}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xs={12} sm={10} md={8} lg={8} xl={6} className={classes.gridCont}>\r\n                        <Paper\r\n                            elevation={6}\r\n                            className={classes.paper}\r\n                            style={{ direction: lang.dir }}\r\n                        >\r\n                            <Grid container>\r\n                                <Grid item xs={12} className={classes.headerRow}>\r\n                                    <div className={classes.title}>\r\n                                        {mode === 'create' ? t(\"assetsModule.createAsset\") : t(\"assetsModule.editAsset\")}\r\n                                    </div>\r\n                                    <div className={classes.close}>\r\n                                        <IconButton\r\n                                            className={classes.iconBtn}\r\n                                            onClick={handleClose}\r\n                                        >\r\n                                            <ClearRounded className={classes.icon}/>\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} className={classes.section}>\r\n                                    <Grid item xs={12}>\r\n                                        <div className={classes.sectionTitle}>\r\n                                            {t(\"assetsModule.addressDetails\")}\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} className={classes.fields}>\r\n                                        <Grid container justify='flex-start'>\r\n                                            {\r\n                                                Object.keys(details.address).map((f,i) =>\r\n                                                <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer} key={i}>\r\n                                                    <TextField\r\n                                                        variant={\"outlined\"}\r\n                                                        label={t(`assetsModule.${f}`)}\r\n                                                        error={ errors.filter(e => e.field === `${f}`).length > 0 }\r\n                                                        value={ details.address[f] }\r\n                                                        onChange={handleChange({type: 'address', field: `${f}`})}\r\n                                                        className={classes.textField}\r\n                                                        size={'medium'}\r\n                                                        helperText={ errors.filter(e => e.field === `${f}`).length > 0 ? t(\"errors.isRequired\"): null }\r\n                                                    />\r\n                                                </Grid>\r\n                                                )\r\n                                                \r\n                                            }\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                \r\n                                </Grid>\r\n                                <Grid item xs={12} sm={5} className={classes.section}>\r\n                                    <Grid item xs={12}>\r\n                                        <div className={classes.sectionTitle}>\r\n                                            {t(\"assetsModule.assetType\")}\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} className={classes.fields}>\r\n                                        <Grid container justify='flex-start'>\r\n                                            <Grid item xs={12} className={classes.textContainer}>\r\n                                                <Select\r\n                                                    variant={\"outlined\"}\r\n                                                    error={ errors.filter(e => e.field === `type`).length > 0 }\r\n                                                    value={ details.type }\r\n                                                    onChange={handleChange({type: '', field: `type`})}\r\n                                                    className={classes.selectInput}\r\n                                                    MenuProps={{\r\n                                                        classes: {\r\n                                                            paper: classes.menupaper,\r\n                                    \r\n                                                        },\r\n                                                        anchorOrigin: {\r\n                                                            vertical: \"bottom\",\r\n                                                            horizontal: \"center\",\r\n                                                        },\r\n                                                        transformOrigin: {\r\n                                                            vertical: \"top\",\r\n                                                            horizontal: \"center\",\r\n                                                        },\r\n                                                        getContentAnchorEl: null,\r\n                                                        disablePortal: true\r\n                                                    }}\r\n                                    \r\n                                                >\r\n                                                    <MenuItem \r\n                                                        value={'building'}\r\n                                                        style={{ direction: lang.dir }}\r\n                                                        className={classes.menuitem}\r\n                                                    >\r\n                                                        {t(\"assetsModule.building\")}\r\n                                                    </MenuItem>\r\n                                                    <MenuItem \r\n                                                        value={'apartment'}\r\n                                                        style={{ direction: lang.dir }}\r\n                                                        className={classes.menuitem}\r\n                                                    >\r\n                                                        {t(\"assetsModule.apartment\")}\r\n                                                    </MenuItem>\r\n                                                </Select>\r\n                                                {\r\n                                                    errors.filter(e => e.field === `type`).length > 0 &&\r\n                                                    <FormHelperText style={{ color: '#f44336', marginRight: '15px'}}>{t(\"errors.isRequired\")}</FormHelperText>\r\n                                                }\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={5}  className={classes.section}>\r\n                                    <Grid item xs={12}>\r\n                                        <div className={classes.sectionTitle}>\r\n                                            {t(\"assetsModule.owner\")}\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} className={classes.fields}>\r\n                                        <Grid item xs={12} className={classes.textContainer}>\r\n                                                <Select\r\n                                                    variant={\"outlined\"}\r\n                                                    error={ errors.filter(e => e.field === `owner`).length > 0 }\r\n                                                    value={ details.owner }\r\n                                                    onChange={handleChange({type: '', field: `owner`})}\r\n                                                    className={classes.selectInput}\r\n                                                    MenuProps={{\r\n                                                        classes: {\r\n                                                            paper: classes.menupaper,\r\n                                                \r\n                                                        },\r\n                                                        anchorOrigin: {\r\n                                                            vertical: \"bottom\",\r\n                                                            horizontal: \"center\",\r\n                                                        },\r\n                                                        transformOrigin: {\r\n                                                            vertical: \"top\",\r\n                                                            horizontal: \"center\",\r\n                                                        },\r\n                                                        getContentAnchorEl: null,\r\n                                                        disablePortal: true\r\n                                                    }}\r\n                                                \r\n                                                >\r\n                                                    {\r\n                                                        userList.map((user, i) => \r\n                                                            <MenuItem \r\n                                                                key={i}\r\n                                                                value={user.value}\r\n                                                                style={{ direction: lang.dir }}\r\n                                                                className={classes.menuitem}\r\n                                                            >\r\n                                                                {user.label}\r\n                                                            </MenuItem>\r\n                                                        )\r\n                                                    }\r\n                                                </Select>\r\n                                                {\r\n                                                    errors.filter(e => e.field === `type`).length > 0 &&\r\n                                                    <FormHelperText style={{ color: '#f44336', marginRight: '15px'}}>{t(\"errors.isRequired\")}</FormHelperText>\r\n                                                }\r\n                                                \r\n                                            </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {\r\n                                    (Boolean(addInfoContext) || mode === 'update') &&\r\n                                    <Grid item xs={12} md={6} className={classes.section}>\r\n                                        <Grid item xl={12}>\r\n                                            <div className={classes.sectionTitle}>\r\n                                                {t(\"assetsModule.additionalDetails\")}\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item xl={12} className={classes.fields}>\r\n                                            <Grid container justify='flex-start'>\r\n                                                {\r\n                                                    Object.keys(details.addInfo).map((f,i) => \r\n                                                        <Grid item xs={12} sm={6} className={classes.textContainer} key={i}>\r\n                                                            <TextField\r\n                                                                variant={\"outlined\"}\r\n                                                                label={t(`assetsModule.${f}`)}\r\n                                                                error={ errors.filter(e => e.field === `${f}`).length > 0 }\r\n                                                                value={ details.addInfo[f] }\r\n                                                                onChange={handleChange({type: 'addInfo', field: `${f}`})}\r\n                                                                className={classes.textField}\r\n                                                                size={'medium'}\r\n                                                                InputProps={{\r\n                                                                    classes: {\r\n                                                                        root: classes.rootInput\r\n                                                                    }\r\n                                                                }}\r\n                                                            />\r\n                                                        </Grid>\r\n                                                    ) \r\n                                                }\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                }\r\n                                <Grid item xs={12} className={classes.controls}>\r\n                                    <Button\r\n                                        className={clsx(classes.control, classes.save)}\r\n                                        onClick={handleConfirm}\r\n                                    >\r\n                                        {t(\"controls.confirm\")}\r\n                                    </Button>\r\n                                    <Button\r\n                                        className={clsx(classes.control, classes.cancel)}\r\n                                        onClick={handleClose}\r\n                                    >\r\n                                        {t(\"controls.cancel\")}\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    gridCont: {\r\n        height: 'fit-content'\r\n    },\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '10px',\r\n        padding: '10px 20px',\r\n        overflowY: 'overlay',\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: '81vh',\r\n            top: 0,\r\n            borderRadius: '0',\r\n            border: '0',\r\n            padding: '10px 5px'\r\n        },\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    headerRow: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: '100%',      \r\n        borderBottom: '1px solid rgba(255,255,255,0.2)'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        padding: '20px 10px 10px',\r\n        fontSize: '20px',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    iconBtn: {\r\n\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        fontSize: '20px'\r\n    },\r\n    section: {\r\n        margin: '10px 5px',\r\n        \r\n    },\r\n    sectionTitle: {\r\n        color: 'white',\r\n        fontSize: '16px',\r\n        padding: '10px 20px',\r\n        width: 'fit-content',\r\n        borderRadius: '10px 10px 0 0',\r\n        background: 'rgba(0,0,0,0.4)',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    fields: {\r\n        padding: '10px 20px',\r\n        borderRadius: '0px 10px 10px 10px',\r\n        background: 'rgba(0,0,0,0.4)',\r\n        [theme.breakpoints.down('sm')]: {\r\n            padding: '10px',\r\n        }\r\n    },\r\n    textContainer: {\r\n        padding: '5px',\r\n    },\r\n    textField: {\r\n        width: '100%',\r\n        '& fieldset': {\r\n            borderRadius: '5px',\r\n        },  \r\n    },\r\n    selectInput: {\r\n        width: '100%',\r\n        '& fieldset': {\r\n            borderRadius: '5px',\r\n        }   \r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.6)',\r\n        backdropFilter: 'blur(10px)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        marginRight: '7px',\r\n        marginLeft: '-5px',\r\n        maxHeight: '200px',\r\n        overflowY: 'auto',\r\n\r\n    },\r\n    menuitem: {\r\n        color: 'white',\r\n        '&:hover':{\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    controls: {\r\n        borderTop: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px 0',\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n       \r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white',\r\n       \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        '&:hover': { \r\n            boxShadow: 'inset rgba(255,255,255,0.3) 0 0 2px 1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBoxSelect.js",["718","719"],"import { ClickAwayListener, FormControl, IconButton, makeStyles, Menu, MenuItem, OutlinedInput } from '@material-ui/core';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport clsx from 'clsx';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam, removeQueryParam } from '../../api/genericApi';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { useQuery } from './customHooks/useQuery';\r\n\r\nexport const SearchBoxSelect = ({ placeholder, filterField, suggestionsFunc, reloadedLabel, reloadedValue }) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const cont = useRef();\r\n    const input = useRef();\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ onFocus, setOnFocus ] = useState(false);\r\n    const [ searchText, setSearchText ] = useState('');\r\n    const [ anchorEl, setAnchorEl ] = useState(null);\r\n    const [ menuOptions, setMenuOptions ] = useState([]);\r\n    const [ value, setValue ] = useState(reloadedValue || null);\r\n    \r\n    useEffect(() => {\r\n        if (Boolean(!searchText)) return;\r\n        const timeOutId = setTimeout(() => handleSearch(searchText), 700);\r\n        return () => clearTimeout(timeOutId);\r\n    }, [searchText])\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: addQueryParam(location.search, [{ name: filterField, value: value}])\r\n            });\r\n            return;\r\n        } else {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: removeQueryParam(location.search, filterField)\r\n            });\r\n        }\r\n    }, [value])\r\n\r\n    const handleChange = event => {\r\n        setSearchText(event.target.value)\r\n    }\r\n\r\n    const handleSearch = async searchText => {\r\n        if (searchText) {\r\n            const data = await suggestionsFunc(searchText);\r\n            setMenuOptions(data || []);\r\n            setAnchorEl(input.current)      \r\n        } else {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: removeQueryParam(location.search, filterField)\r\n            });\r\n        }\r\n    }\r\n    \r\n    const getTag = val => {\r\n        let data = menuOptions.find(op => val === op.value);\r\n        return createTag(data)\r\n    }\r\n\r\n    const createTag = data => {\r\n        if (!data) return;\r\n        return (\r\n            <div className={classes.tag}>\r\n                <label className={classes.tagLabel}>\r\n                    { data.label }\r\n                </label>\r\n                <IconButton \r\n                    className={classes.removeBtn}\r\n                    onClick={removeChoice(data.value)}\r\n                >\r\n                    <CloseRoundedIcon className={classes.tagRemove}/>\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const removeChoice = value => event => {\r\n        event.stopPropagation();\r\n        setValue(null)\r\n    }\r\n\r\n    const handleClick = val => event => {\r\n        setValue(val);\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={() => setOnFocus(false)}>\r\n            <div ref={cont} className={clsx(classes.container , onFocus && classes.focused, Boolean(value) && classes.selected)} xs={11} sm={9} md={8} lg={6}>\r\n                <SearchRoundedIcon className={classes.icon}/>\r\n                {\r\n                    value \r\n                    ?   query[filterField] === value\r\n                        ?  createTag(reloadedLabel && reloadedValue ? { label: reloadedLabel, value: reloadedValue} : null)\r\n                        :  getTag(value)\r\n                    :\r\n                    <FormControl variant='outlined' className={classes.form}>\r\n                        <OutlinedInput\r\n                            autoFocus={true}\r\n                            inputRef={input}\r\n                            value={ searchText || '' }\r\n                            onChange={handleChange}\r\n                            placeholder={placeholder}\r\n                            className={clsx(classes.searchInput)}\r\n                            onFocus={() => setOnFocus(true)}\r\n                        />\r\n                    </FormControl>\r\n                }\r\n                {\r\n                    Boolean(menuOptions.length) &&\r\n                    <Menu         \r\n                        anchorEl={anchorEl}\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={() => setAnchorEl(null)}\r\n                        classes={{\r\n                            paper : classes.menu\r\n                        }}\r\n                        keepMounted\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                    >\r\n                    {\r\n                        menuOptions.map((v,i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    key={i}\r\n                                    onClick={handleClick(v.value)}\r\n                                    className={classes.menuitem}\r\n                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                >\r\n                                    {v.label}\r\n                                </MenuItem>\r\n                            )\r\n                            \r\n                        })\r\n                    }\r\n                    </Menu>\r\n                }\r\n            </div>   \r\n        </ClickAwayListener>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        margin: '5px',\r\n        padding: '0 5px',\r\n        maxWidth: '450px',\r\n        minHeight: '43px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '50px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        transition: 'box-shadow 0.2s ease-in',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            transition: 'box-shadow 0.2s ease-in'\r\n        }\r\n\r\n    },\r\n    focused: {\r\n        boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        background: 'rgba(0,0,0,0.1)',\r\n        backdropFilter: 'blur(40px)'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        \r\n    },\r\n    searchInput: {\r\n        height: '34px',\r\n        width: '98.5%',\r\n        margin: '3px 0.75%',\r\n        borderRadius: '5px 25px 25px 5px',\r\n        color: 'white',\r\n        '& input': {\r\n            padding: '12.5px 14px',\r\n        },\r\n        '& fieldset': {\r\n            border: '0'\r\n        } \r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        marginRight: '5px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        \r\n    },\r\n    menu: {\r\n        marginTop: '55px',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(10px)',\r\n        color: 'white'\r\n    },\r\n    menuitem: {\r\n        minWidth: '200px'\r\n    },\r\n    tag: {\r\n        padding: '5px 10px',\r\n        borderRadius: '50px',\r\n        boxShadow: 'rgba(0,0,0,0.25) 0px 0px 3px 1px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'white',\r\n        margin: '3px 0'\r\n    },\r\n    tagLabel: {\r\n        padding: '0 5px'\r\n    },\r\n    removeBtn: {\r\n        padding: '4px',\r\n        color: 'white'\r\n    },\r\n    tagRemove: {\r\n        fontSize: '16px'\r\n    },\r\n    selected: {\r\n        width: 'fit-content'\r\n    }\r\n}))\r\n\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterBySelect.js",["720","721"],"import { Button, IconButton, makeStyles, Menu, MenuItem } from '@material-ui/core';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam, removeQueryParam } from '../../api/genericApi';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { useQuery } from './customHooks/useQuery';\r\n\r\nexport const FilterBySelect = ({ filterField, placeholder, filterIcon, optionsFunc }) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ menuOptions, setMenuOptions] = useState([]);\r\n    const [ anchorEl, setAnchorEl ] = useState(null);\r\n    const [ value, setValue ] = useState(query[filterField] || '')\r\n\r\n    useEffect(() => {\r\n        optionsFunc()\r\n        .then(data => {\r\n            setMenuOptions(data)\r\n        }) \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: addQueryParam(location.search, [{ name: filterField, value }])\r\n            });\r\n            return;\r\n        }\r\n        if(query[filterField]) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: removeQueryParam(location.search, filterField)\r\n            });\r\n        }     \r\n    }, [value])\r\n\r\n    const createTag = val => {\r\n        let data = menuOptions.find(op => val === op.value);\r\n        if (!data) return;\r\n        return (\r\n            <div className={classes.tag}>\r\n                <label className={classes.tagLabel}>\r\n                    { data.label }\r\n                </label>\r\n                <IconButton \r\n                    className={classes.removeBtn}\r\n                    onClick={removeChoice(data.value)}\r\n                >\r\n                    <CloseRoundedIcon className={classes.tagRemove}/>\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const removeChoice = value => event => {\r\n        event.stopPropagation();\r\n        setValue('')\r\n    }\r\n\r\n    const handleClick = val => event => {\r\n        setValue(val);\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                Boolean(menuOptions.length) &&\r\n                    <div item className={classes.select}>\r\n                        <Button \r\n                            className={classes.filterBy}\r\n                            onClick={event => setAnchorEl(event.currentTarget)}\r\n                            startIcon={filterIcon}\r\n                        >\r\n                            { value ? createTag(value) : <label style={{ padding: '0 15px', cursor: 'pointer' }}>{placeholder}</label>}\r\n                        </Button>\r\n                        <Menu\r\n                            anchorEl={anchorEl}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={() => setAnchorEl(null)}\r\n                            classes={{\r\n                                paper : classes.menu\r\n                            }}\r\n                            keepMounted\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                        >\r\n                            {\r\n                                menuOptions.map((v,i) => {\r\n                                    return (\r\n                                        <MenuItem\r\n                                            key={i}\r\n                                            onClick={handleClick(v.value)}\r\n                                            className={classes.menuitem}\r\n                                            style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                        >\r\n                                            {v.label}\r\n                                        </MenuItem>\r\n                                    )\r\n                                    \r\n                                })\r\n                            }\r\n                        </Menu>\r\n                    </div>\r\n            }          \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    select: {\r\n        margin: '5px',\r\n        height: '45px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    filterBy: {\r\n        textTransform: 'none',\r\n        color: 'white',\r\n        padding: '0 4px',\r\n        height: '45px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        whiteSpace: 'nowrap',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            \r\n        }\r\n    },\r\n    menu: {\r\n        marginTop: '55px',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(10px)',\r\n        color: 'white'\r\n    },\r\n    menuitem: {\r\n        minWidth: '200px'\r\n    },\r\n    container: {\r\n        height: '45px',\r\n        border: '1px solid rgba(0,0,0,0.25)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            \r\n        }\r\n    },\r\n    focused: {\r\n        border: `2px solid ${theme.palette.primary.main}`\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        \r\n    },\r\n    searchInput: {\r\n        height: '34px',\r\n        width: '98.5%',\r\n        margin: '3px 0.75%',\r\n        borderRadius: '5px 25px 25px 5px',\r\n        color: 'white',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '& fieldset': {\r\n            border: '0'\r\n        } \r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 5px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    tag: {\r\n        padding: '5px 10px',\r\n        borderRadius: '50px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    tagLabel: {\r\n        padding: '0 5px'\r\n    },\r\n    removeBtn: {\r\n        padding: '4px',\r\n        color: 'white'\r\n    },\r\n    tagRemove: {\r\n        fontSize: '16px'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateOwner.js",["722","723"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Paper, FormControl, IconButton, useMediaQuery, Fade, Modal, Backdrop,Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { getUserList } from '../../api/userApi';\r\nimport clsx from 'clsx'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\n\r\n\r\nexport const UpdateOwner = ({ handleClose, handleSave, isOpen, currentOwner, title, instructions }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ selectedUser, setSelectedUser ] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        getUserList()\r\n        .then(data => {\r\n            if (currentOwner) {\r\n                setSelectedUser(currentOwner._id)\r\n            }\r\n            setUserList(data.filter(u => u._id !== currentOwner._id ));\r\n        })\r\n    }, [currentOwner])\r\n\r\n    const handleChange = event => {\r\n        setSelectedUser(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={isOpen}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xs={11} sm={7} md={5} lg={3} xl={3}>\r\n                        <Paper \r\n                            className={classes.paper} \r\n                            style={{ direction: lang.dir }}\r\n                            elevation={6}    \r\n                        >\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {title}\r\n                                </div>\r\n                                <IconButton className={classes.closeBtn} onClick={handleClose}>\r\n                                    <ClearRoundedIcon className={classes.icon}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div className={classes.instructions}>\r\n                                {instructions}\r\n                            </div>\r\n                            <FormControl variant='outlined' className={classes.textInput} >\r\n                                <Select\r\n                                    value={selectedUser}\r\n                                    onChange={handleChange}\r\n                                    className={classes.menu}\r\n                                    MenuProps={{\r\n                                        classes: {\r\n                                            paper: classes.menupaper\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        userList.map( (user, i) => {\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    className={classes.menuitem}\r\n                                                    value={user._id} \r\n                                                    key={i}\r\n                                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                                >\r\n                                                    {`${user.firstName} ${user.lastName}`}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div className={classes.controls}>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.save)}\r\n                                    onClick={() => handleSave(selectedUser)}\r\n                                    disabled={!selectedUser}\r\n                                >\r\n                                    {t(\"alert.confirm\")}\r\n                                </Button>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.cancel)}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    {t(\"alert.cancel\")}\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    \r\n                </Grid> \r\n                \r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px',\r\n        borderRadius: '10px',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '18px',\r\n        padding: '5px 10px',\r\n        height: 'fit-content'\r\n    },\r\n    closeBtn: {\r\n        fontSize: '20px',\r\n        height: '40px',\r\n        width: '40px'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        borderRadius: '25px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    instructions: {\r\n        width: 'auto',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '12px',\r\n        margin: '0px 10px'\r\n    },\r\n    menu: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(10px)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        marginTop: '55px',\r\n        marginRight: '7px',\r\n        maxHeight: '200px',\r\n        overflowY: 'auto',\r\n\r\n    },\r\n    menuitem: {\r\n        color: 'white'\r\n    },\r\n    textInput: {\r\n        margin: '20px 5px',\r\n        width: '300px',\r\n        '& input': {\r\n            color: 'white',\r\n            paddingLeft: '20px',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        }    \r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\UpsertSystem.js",["724","725","726","727","728"],"import DateFnsUtils from '@date-io/date-fns';\r\nimport { Avatar, Backdrop, Button, Chip, Fade, FormControlLabel, FormHelperText, Grid, IconButton, makeStyles, MenuItem, Modal, Paper, Radio, RadioGroup, Select, TextField, useMediaQuery } from '@material-ui/core';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport clsx from 'clsx';\r\nimport heLocale from \"date-fns/locale/he\";\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getFullName } from '../../../api/genericApi';\r\nimport { getAssetsSuggestions } from '../../../api/systemsApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { UserItem } from '../../user/UserItem';\r\n\r\n\r\n\r\n\r\nexport const UpsertSystem = ({ handleClose, handleSave, handleUpdate, systemId, data }) => {\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const { t } = useTranslation();\r\n    const [ mode, setMode ] = useState(handleUpdate ? 'update' : 'create')\r\n    const [ errors, setErrors ] = useState([]);\r\n    const [ assets, setAssets ] = useState([]);\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ details, setDetails ] = useState({\r\n        name: '',\r\n        asset: '',\r\n        owner: '',\r\n        relatedUsers: []\r\n    });\r\n    const [ addData, setAddData ] = useState(data || {\r\n        general: {\r\n            location: '',\r\n            manufacturingYear: '',\r\n            SID: '',\r\n        },\r\n        manufacturer: {\r\n            name: '',\r\n            contactName: '',\r\n            email: '',\r\n            phoneNumber: '',\r\n            extension: '', \r\n        },\r\n        supplier: {\r\n            name: '',\r\n            contactName: '',\r\n            email: '',\r\n            phoneNumber: '',\r\n            extension: '',\r\n        },\r\n        insurance: {\r\n            name: '',\r\n            contanctName: '',\r\n            email: '',\r\n            phoneNumber: '',\r\n            extension: '',\r\n            expiryDate: null,\r\n        },\r\n        warranty: {\r\n            issuer: '',\r\n            expiryDate: null\r\n        }\r\n    })\r\n\r\n    const validateFields = () => {\r\n        return new Promise((resolve,reject) => {\r\n            let errList = [];\r\n            if (handleUpdate) resolve(true);\r\n            if (!details.owner) {\r\n                errList.push({ field: 'owner', text: t(\"errors.isRequired\")})\r\n            }\r\n            if (!details.asset) {\r\n                errList.push({ field: 'asset', text: t(\"errors.isRequired\")})\r\n            }\r\n            if (!details.name) {\r\n                errList.push({ field: 'name', text: t(\"errors.isRequired\")})\r\n            }\r\n            \r\n            if (errList.length) {\r\n                setErrors(errList);\r\n                resolve(false);\r\n            };\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        createUserOptions()\r\n        .then(data => {\r\n            setUserList(data);\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getAssetsSuggestions()\r\n        .then(data => {\r\n            if (data.length){\r\n                console.log(data)\r\n                setAssets(data);\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const handleConfirm = () => {\r\n        validateFields()\r\n        .then(res => {\r\n            if (res) {\r\n                if (mode === 'update') {\r\n                    handleUpdate({system: systemId, data: addData});\r\n                    return;\r\n                }\r\n                handleSave({ ...details, data: addData});\r\n                return;\r\n            };\r\n        })      \r\n    }\r\n\r\n    const handleChangeAddData = obj => event => {\r\n        setAddData({\r\n            ...addData,\r\n            [obj.type]: {\r\n                ...addData[obj.type],\r\n                [obj.field]: event.target.value\r\n            }\r\n        })\r\n    };\r\n\r\n    const handleChange = field => event => {\r\n        console.log(event.target.value)\r\n        setDetails({\r\n            ...details,\r\n            [field]: event.target.value\r\n        })\r\n        if (errors.length) {\r\n            setErrors(errors.filter(err => err.field !== field))\r\n        }\r\n    }\r\n\r\n    const handleChangeMultiple = (event) => {\r\n        setDetails({...details, \r\n            relatedUsers: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleLinkedRemove = (realtedUser) => event => {\r\n        event.stopPropagation();\r\n        console.log('clicked')\r\n        setDetails({ ...details, \r\n            relatedUsers: details.relatedUsers.filter(lu => lu !== realtedUser)\r\n        })\r\n        \r\n    }\r\n\r\n    const handleChangeInsuranceExpiry = date => {\r\n        setAddData({\r\n            ...addData,\r\n            insurance: {\r\n                ...addData.insurance,\r\n                expiryDate: date\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleChangeWarrantyExpiry = date => {\r\n        setAddData({\r\n            ...addData,\r\n            warranty: {\r\n                ...addData.warranty,\r\n                expiryDate: date\r\n            }\r\n        })\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <Modal\r\n            open={true}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 300\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={true} timeout={300}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xs={12} sm={10} md={8} lg={8} xl={6} className={classes.gridCont}>\r\n                        <Paper\r\n                            elevation={6}\r\n                            className={classes.paper}\r\n                            style={{ direction: lang.dir }}\r\n                        >\r\n                            <Grid container>\r\n                                <Grid item xs={12} className={classes.headerRow}>\r\n                                    <div className={classes.title}>\r\n                                        {mode === 'update' ? t(\"systemsModule.updateSystemDetails\") : t(\"systemsModule.createSystem\")}\r\n                                    </div>\r\n                                    <div className={classes.close}>\r\n                                        <IconButton\r\n                                            className={classes.iconBtn}\r\n                                            onClick={handleClose}\r\n                                        >\r\n                                            <ClearRounded className={classes.icon}/>\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </Grid>\r\n                                {\r\n                                    mode === 'create' &&\r\n                                    <React.Fragment>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.section}>\r\n                                            <Grid item xs={12}>\r\n                                                <div className={classes.sectionTitle}>\r\n                                                    {t(\"systemsModule.generalDetails\")}\r\n                                                </div>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} className={classes.fields}>\r\n                                                <Grid container justify='flex-start'>\r\n                                                    <Grid item xs={12} className={classes.textContainer}>\r\n                                                        <TextField\r\n                                                            variant={\"outlined\"}\r\n                                                            label={t(`systemsModule.systemName`)}\r\n                                                            error={ errors.filter(e => e.field === `name`).length > 0 }\r\n                                                            value={ details.name }\r\n                                                            onChange={handleChange('name')}\r\n                                                            className={classes.textField}\r\n                                                            size={'medium'}\r\n                                                            helperText={ errors.filter(e => e.field === `name`).length > 0 ? t(\"errors.isRequired\"): null }\r\n                                                        />\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={6} xl={6} className={classes.section}>\r\n                                            <Grid item xs={12}>\r\n                                                <div className={classes.sectionTitle}>\r\n                                                    {t(\"systemsModule.owningAsset\")}\r\n                                                </div>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} className={classes.fields}>\r\n                                                <Grid container justify='flex-start'>\r\n                                                    <Grid item xs={12} className={classes.textContainer}>\r\n                                                    <Select\r\n                                                        variant={\"outlined\"}\r\n                                                        error={ errors.filter(e => e.field === `asset`).length > 0 }\r\n                                                        value={ details.asset }\r\n                                                        onChange={handleChange(`asset`)}\r\n                                                        className={classes.selectInput}\r\n                                                        MenuProps={{\r\n                                                            anchorOrigin: {\r\n                                                                vertical: \"bottom\",\r\n                                                                horizontal: \"center\",\r\n                                                            },\r\n                                                            transformOrigin: {\r\n                                                                vertical: \"top\",\r\n                                                                horizontal: \"center\",\r\n                                                            },\r\n                                                            getContentAnchorEl: null,\r\n                                                            disablePortal: true,\r\n                                                            classes: {\r\n                                                                paper: classes.menupaper,\r\n                                                        \r\n                                                            }\r\n                                                        }}\r\n                                                        \r\n                                                    >\r\n                                                        {\r\n                                                            assets.map((asset, i) => \r\n                                                                <MenuItem \r\n                                                                    key={i}\r\n                                                                    value={asset.value}\r\n                                                                    style={{ direction: lang.dir }}\r\n                                                                    className={classes.menuitem}\r\n                                                                >\r\n                                                                    {asset.text}\r\n                                                                </MenuItem>\r\n                                                            )\r\n                                                        }\r\n                                                    </Select>\r\n                                                    {\r\n                                                        errors.filter(e => e.field === 'asset').length > 0 &&\r\n                                                        <FormHelperText style={{ color: '#f44336', marginRight: '15px'}}>{t(\"errors.isRequired\")}</FormHelperText>\r\n                                                    }\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4}  className={classes.section}>\r\n                                            <Grid item xs={12}>\r\n                                                <div className={classes.sectionTitle}>\r\n                                                    {t(\"systemsModule.systemOwner\")}\r\n                                                </div>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} className={classes.fields}>\r\n                                                <Grid item xs={12} className={classes.textContainer}>\r\n                                                    <Select\r\n                                                        variant={\"outlined\"}\r\n                                                        error={ errors.filter(e => e.field === `owner`).length > 0 }\r\n                                                        value={ details.owner }\r\n                                                        onChange={handleChange(`owner`)}\r\n                                                        className={classes.selectInput}\r\n                                                        MenuProps={{\r\n                                                            anchorOrigin: {\r\n                                                                vertical: \"bottom\",\r\n                                                                horizontal: \"center\",\r\n                                                            },\r\n                                                            transformOrigin: {\r\n                                                                vertical: \"top\",\r\n                                                                horizontal: \"center\",\r\n                                                            },\r\n                                                            getContentAnchorEl: null,\r\n                                                            disablePortal: true,\r\n                                                            classes: {\r\n                                                                paper: classes.menupaper,\r\n                                                        \r\n                                                            }\r\n                                                        }}\r\n                                                        renderValue={(selected) => {\r\n                                                            let user = userList.find( f => f._id === selected);\r\n                                                            return (\r\n                                                                \r\n                                                                    <Chip\r\n                                                                        size={'medium'}\r\n                                                                        avatar={<Avatar style={{ height: '40px', width: '40px'}} src={user.avatar} />}\r\n                                                                        label={getFullName(user)}\r\n                                                                        className={classes.chip}\r\n                                                                        \r\n                                                                    />\r\n                                                            \r\n                                                            )\r\n                                                        }}\r\n                                                    >\r\n                                                        {\r\n                                                            userList.map((user, i) => \r\n                                                                <MenuItem \r\n                                                                    key={i}\r\n                                                                    value={user.value}\r\n                                                                    style={{ direction: lang.dir }}\r\n                                                                    className={classes.menuitem}\r\n                                                                >\r\n                                                                    <div className={classes.userCont}>\r\n                                                                        <UserItem\r\n                                                                            showName\r\n                                                                            user={user}\r\n                                                                            avatarSize={40}\r\n                                                                            size={13}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                    \r\n                                                                </MenuItem>\r\n                                                            )\r\n                                                        }\r\n                                                    </Select>\r\n                                                    {\r\n                                                        errors.filter(e => e.field === 'owner').length > 0 &&\r\n                                                        <FormHelperText style={{ color: '#f44336', marginRight: '15px'}}>{t(\"errors.isRequired\")}</FormHelperText>\r\n                                                    }\r\n                                                    \r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={7} xl={7} className={classes.section}>\r\n                                        <Grid item xs={12}>\r\n                                            <div className={classes.sectionTitle}>\r\n                                                {t(\"systemsModule.relatedUsers\")}\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} className={classes.fields}>\r\n                                            <Grid item xs={12} className={classes.textContainer}>\r\n                                            <Select\r\n                                                variant={\"outlined\"}\r\n                                                multiple\r\n                                                value={details.relatedUsers}\r\n                                                onChange={handleChangeMultiple}\r\n                                                className={classes.selectInput}\r\n                                                MenuProps={{\r\n                                                    classes: {\r\n                                                        paper: classes.menupaper,\r\n                                                \r\n                                                    },\r\n                                                    anchorOrigin: {\r\n                                                        vertical: \"bottom\",\r\n                                                        horizontal: \"center\",\r\n                                                    },\r\n                                                    transformOrigin: {\r\n                                                        vertical: \"top\",\r\n                                                        horizontal: \"center\",\r\n                                                    },\r\n                                                    getContentAnchorEl: null,\r\n                                                    disablePortal: true,\r\n                                                    classes: {\r\n                                                        paper: classes.menupaper,\r\n                                    \r\n                                                    }\r\n                                                }}\r\n                                                renderValue={(selected) => (\r\n                                                    <div className={classes.chips}>\r\n                                                    {\r\n                                                        selected.map((value) => {\r\n                                                            let user = userList.find( f => f._id === value);\r\n                                                            return (\r\n                                                                <div className={classes.chipsCont}>\r\n                                                                    <Chip\r\n                                                                        clickable\r\n                                                                        size={'medium'}\r\n                                                                        avatar={<Avatar style={{ height: '40px', width: '40px'}} src={user.avatar} />}\r\n                                                                        label={getFullName(user)}\r\n                                                                        onDelete={handleLinkedRemove(value)}\r\n                                                                        deleteIcon={<ClearRounded className={classes.removeIcon}/>}\r\n                                                                        onMouseDown={e => e.stopPropagation()}\r\n                                                                        className={classes.chip}\r\n                                                                    />\r\n                                                                </div>\r\n                                                            )\r\n\r\n                                                            \r\n                                                        })\r\n                                                    }\r\n                                                    </div>\r\n                                                )}\r\n                                    \r\n                                                >\r\n                                                {\r\n                                                        userList.map((user, i) => \r\n                                                            <MenuItem \r\n                                                                key={i}\r\n                                                                value={user.value}\r\n                                                                style={{ direction: lang.dir }}\r\n                                                                className={classes.menuitem}\r\n                                                            >\r\n                                                                <div className={classes.userCont}>\r\n                                                                    <UserItem\r\n                                                                        showName\r\n                                                                        user={user}\r\n                                                                        avatarSize={40}\r\n                                                                        size={14}\r\n                                                                    />\r\n                                                                </div>\r\n                                                                \r\n                                                            </MenuItem>\r\n                                                        )\r\n                                                    }\r\n                                                </Select>\r\n                                                \r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    </React.Fragment>\r\n                                }\r\n                                <Grid item xs={12} className={classes.section}>\r\n                                    <Grid item xs={4}>\r\n                                        <div \r\n                                            className={classes.sectionTitle}\r\n                                        >\r\n                                            {t(\"systemsModule.additionalDetails\")}\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid container className={classes.fields}>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            <TextField\r\n                                                variant={\"outlined\"}\r\n                                                label={t(`systemsModule.location`)}\r\n                                                value={ addData.general.location }\r\n                                                onChange={handleChangeAddData({ type: 'general', field: 'location'})}\r\n                                                className={classes.textField}\r\n                                                size={'medium'}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            <TextField\r\n                                                variant={\"outlined\"}\r\n                                                label={t(`systemsModule.manufacturingYear`)}\r\n                                                value={ addData.general.manufacturingYear }\r\n                                                onChange={handleChangeAddData({ type: 'general', field: 'manufacturingYear'})}\r\n                                                className={classes.textField}\r\n                                                size={'medium'}\r\n\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            <TextField\r\n                                                variant={\"outlined\"}\r\n                                                label={t(`systemsModule.SID`)}\r\n                                                value={ addData.general.SID }\r\n                                                onChange={handleChangeAddData({ type: 'general', field: 'SID'})}\r\n                                                className={classes.textField}\r\n                                                size={'medium'}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} className={classes.section}>\r\n                                    <Grid item xs={4}>\r\n                                        <div \r\n                                            className={classes.sectionTitle}\r\n                                        >\r\n                                            {t(\"systemsModule.manufacturer\")}\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid container className={classes.fields}>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            <TextField\r\n                                                variant={\"outlined\"}\r\n                                                label={t(`systemsModule.manufacturerDetails.name`)}\r\n                                                value={ addData.manufacturer.name }\r\n                                                onChange={handleChangeAddData({ type: 'manufacturer', field: 'name'})}\r\n                                                className={classes.textField}\r\n                                                size={'medium'}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            <TextField\r\n                                                variant={\"outlined\"}\r\n                                                label={t(`systemsModule.manufacturerDetails.contactName`)}\r\n                                                value={ addData.manufacturer.contactName }\r\n                                                onChange={handleChangeAddData({ type: 'manufacturer', field: 'contactName'})}\r\n                                                className={classes.textField}\r\n                                                size={'medium'}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            <TextField\r\n                                                variant={\"outlined\"}\r\n                                                label={t(`systemsModule.manufacturerDetails.email`)}\r\n                                                value={  addData.manufacturer.email }\r\n                                                onChange={handleChangeAddData({ type: 'manufacturer', field: 'email'})}\r\n                                                className={classes.textField}\r\n                                                size={'medium'}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            <TextField\r\n                                                variant={\"outlined\"}\r\n                                                label={t(`systemsModule.manufacturerDetails.phoneNumber`)}\r\n                                                value={ addData.manufacturer.phoneNumber }\r\n                                                onChange={handleChangeAddData({ type: 'manufacturer', field: 'phoneNumber'})}\r\n                                                className={classes.textField}\r\n                                                size={'medium'}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            <TextField\r\n                                                variant={\"outlined\"}\r\n                                                label={t(`systemsModule.manufacturerDetails.extension`)}\r\n                                                value={ addData.manufacturer.extension }\r\n                                                onChange={handleChangeAddData({ type: 'manufacturer', field: 'extension'})}\r\n                                                className={classes.textField}\r\n                                                size={'medium'}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} className={classes.section}>\r\n                                    <Grid item xs={4}>\r\n                                        <div \r\n                                            className={classes.sectionTitle}\r\n                                        >\r\n                                            {t(\"systemsModule.supplier\")}\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid container className={classes.fields}>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            <TextField\r\n                                                variant={\"outlined\"}\r\n                                                label={t(`systemsModule.supplierDetails.name`)}\r\n                                                value={ addData.supplier.name }\r\n                                                onChange={handleChangeAddData({ type: 'supplier', field: 'name'})}\r\n                                                className={classes.textField}\r\n                                                size={'medium'}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            <TextField\r\n                                                variant={\"outlined\"}\r\n                                                label={t(`systemsModule.supplierDetails.contactName`)}\r\n                                                value={ addData.supplier.contactName }\r\n                                                onChange={handleChangeAddData({ type: 'supplier', field: 'contactName'})}\r\n                                                className={classes.textField}\r\n                                                size={'medium'}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            <TextField\r\n                                                variant={\"outlined\"}\r\n                                                label={t(`systemsModule.supplierDetails.email`)}\r\n                                                value={  addData.supplier.email }\r\n                                                onChange={handleChangeAddData({ type: 'supplier', field: 'email'})}\r\n                                                className={classes.textField}\r\n                                                size={'medium'}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            <TextField\r\n                                                variant={\"outlined\"}\r\n                                                label={t(`systemsModule.supplierDetails.phoneNumber`)}\r\n                                                value={ addData.supplier.phoneNumber }\r\n                                                onChange={handleChangeAddData({ type: 'supplier', field: 'phoneNumber'})}\r\n                                                className={classes.textField}\r\n                                                size={'medium'}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            <TextField\r\n                                                variant={\"outlined\"}\r\n                                                label={t(`systemsModule.supplierDetails.extension`)}\r\n                                                value={ addData.supplier.extension }\r\n                                                onChange={handleChangeAddData({ type: 'supplier', field: 'extension'})}\r\n                                                className={classes.textField}\r\n                                                size={'medium'}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} className={classes.section}>\r\n                                    <Grid item xs={4}>\r\n                                        <div \r\n                                            className={classes.sectionTitle}\r\n                                        >\r\n                                            {t(\"systemsModule.insurance\")}\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid container className={classes.fields}>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            <TextField\r\n                                                variant={\"outlined\"}\r\n                                                label={t(`systemsModule.insuranceDetails.name`)}\r\n                                                value={ addData.insurance.name }\r\n                                                onChange={handleChangeAddData({ type: 'insurance', field: 'name'})}\r\n                                                className={classes.textField}\r\n                                                size={'medium'}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            <TextField\r\n                                                variant={\"outlined\"}\r\n                                                label={t(`systemsModule.insuranceDetails.contactName`)}\r\n                                                value={ addData.insurance.contactName }\r\n                                                onChange={handleChangeAddData({ type: 'insurance', field: 'contactName'})}\r\n                                                className={classes.textField}\r\n                                                size={'medium'}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            <TextField\r\n                                                variant={\"outlined\"}\r\n                                                label={t(`systemsModule.insuranceDetails.email`)}\r\n                                                value={  addData.insurance.email }\r\n                                                onChange={handleChangeAddData({ type: 'insurance', field: 'email'})}\r\n                                                className={classes.textField}\r\n                                                size={'medium'}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            <TextField\r\n                                                variant={\"outlined\"}\r\n                                                label={t(`systemsModule.insuranceDetails.phoneNumber`)}\r\n                                                value={ addData.insurance.phoneNumber }\r\n                                                onChange={handleChangeAddData({ type: 'insurance', field: 'phoneNumber'})}\r\n                                                className={classes.textField}\r\n                                                size={'medium'}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            <TextField\r\n                                                variant={\"outlined\"}\r\n                                                label={t(`systemsModule.insuranceDetails.extension`)}\r\n                                                value={ addData.insurance.extension }\r\n                                                onChange={handleChangeAddData({ type: 'insurance', field: 'extension'})}\r\n                                                className={classes.textField}\r\n                                                size={'medium'}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            \r\n                                            <MuiPickersUtilsProvider utils={DateFnsUtils} locale={heLocale}>\r\n                                                <DatePicker\r\n                                                    \r\n                                                    format=\"dd/MM/yyyy\"\r\n                                                    label={t(`systemsModule.insuranceDetails.expiryDate`)}\r\n                                                    value={addData.insurance.expiryDate}\r\n                                                    onChange={handleChangeInsuranceExpiry}\r\n                                                    inputVariant={\"outlined\"}\r\n                                                    className={classes.textField}\r\n                                                    autoOk={true}\r\n                                                    disablePast={true}\r\n                                                \r\n                                                />\r\n                                            </MuiPickersUtilsProvider>\r\n                                        </Grid>\r\n                                        \r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} className={classes.section}>\r\n                                    <Grid item xs={4}>\r\n                                        <div \r\n                                            className={classes.sectionTitle}\r\n                                        >\r\n                                            {t(\"systemsModule.warranty\")}\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid container className={classes.fields}>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={8} xl={8} className={classes.textContainer}>\r\n                                            <RadioGroup\r\n                                                value={addData.warranty.issuer}\r\n                                                onChange={handleChangeAddData({ type: 'warranty', field: 'issuer'})}\r\n                                                className={classes.radioGroup}\r\n                                            >\r\n                                                <FormControlLabel value='supplier' control={<Radio color={'white'} className={classes.radioBtn}/>} label={t(\"systemsModule.warrantyDetails.supplier\")}/>\r\n                                                <FormControlLabel value='manufacturer' control={<Radio color={'white'} className={classes.radioBtn} />} label={t(\"systemsModule.warrantyDetails.manufacturer\")}/>\r\n                                                <FormControlLabel value='' control={<Radio color={'white'} className={classes.radioBtn} />} label={t(\"systemsModule.warrantyDetails.nowarranty\")}/>\r\n                                            </RadioGroup>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer}>\r\n                                            <MuiPickersUtilsProvider utils={DateFnsUtils} locale={heLocale}>\r\n                                                <DatePicker\r\n                                                    format=\"dd/MM/yyyy\"\r\n                                                    label={t(`systemsModule.warrantyDetails.expiryDate`)}\r\n                                                    value={addData.warranty.expiryDate}\r\n                                                    onChange={handleChangeWarrantyExpiry}\r\n                                                    inputVariant={\"outlined\"}\r\n                                                    className={classes.textField}\r\n                                                    autoOk={true}\r\n                                                    disablePast={true}\r\n                                                />\r\n                                            </MuiPickersUtilsProvider>\r\n                                        </Grid>\r\n                                        \r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} className={classes.controls}>\r\n                                    <Button\r\n                                        className={clsx(classes.control, classes.save)}\r\n                                        onClick={handleConfirm}\r\n                                    >\r\n                                        {t(\"controls.confirm\")}\r\n                                    </Button>\r\n                                    <Button\r\n                                        className={clsx(classes.control, classes.cancel)}\r\n                                        onClick={handleClose}\r\n                                    >\r\n                                        {t(\"controls.cancel\")}\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    gridCont: {\r\n        height: 'fit-content'\r\n    },\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '10px',\r\n        padding: '10px 20px',\r\n        overflowY: 'overlay',\r\n        height: '80vh',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: '81vh',\r\n            borderRadius: '0',\r\n            top: 0,\r\n            border: '0',\r\n            padding: '10px 5px'\r\n        },\r\n    },\r\n    headerRow: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: '100%',      \r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        padding: '20px 10px 10px',\r\n        fontSize: '20px',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    iconBtn: {\r\n        margin: '10px',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.3)'\r\n        }\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        fontSize: '20px'\r\n    },\r\n    section: {\r\n        margin: '10px 5px',\r\n        \r\n    },\r\n    sectionTitle: {\r\n        color: 'white',\r\n        fontSize: '16px',\r\n        padding: '10px 20px',\r\n        width: 'fit-content',\r\n        borderRadius: '10px 10px 0 0',\r\n        background: 'rgba(0,0,0,0.4)',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    fields: {\r\n        padding: '10px 20px',\r\n        borderRadius: '0px 10px 10px 10px',\r\n        background: 'rgba(0,0,0,0.4)',\r\n        [theme.breakpoints.down('sm')]: {\r\n            padding: '10px',\r\n        }\r\n    },\r\n    textContainer: {\r\n        padding: '5px',\r\n    },\r\n    textField: {\r\n        width: '100%',\r\n        '& fieldset': {\r\n            borderRadius: '5px',\r\n        },  \r\n    },\r\n    selectInput: {\r\n        width: '100%',\r\n        '& fieldset': {\r\n            borderRadius: '5px',\r\n        }   \r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.8)',\r\n        backdropFilter: 'blur(10px)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        marginRight: '7px',\r\n        marginLeft: '-5px',\r\n        maxHeight: '200px',\r\n        overflowY: 'auto',\r\n\r\n    },\r\n    menuitem: {\r\n        color: 'white',\r\n        width: '100%',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.1)'\r\n        }\r\n    },\r\n    controls: {\r\n        borderTop: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px 0',\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white',\r\n       \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        '&:hover': { \r\n            boxShadow: 'inset rgba(255,255,255,0.3) 0 0 2px 1px'\r\n        }\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    chip: {\r\n        height: '50px',\r\n        fontSize: '14px',\r\n        borderRadius: '50px',\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n        color: 'white',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'rgba(0,0,0,0.6)',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.6)',\r\n            boxShadow: 'inset lightgrey 0px 0px 1px 1px'\r\n        } \r\n    },\r\n    userCont: {\r\n        height: 'fit-content',\r\n        padding: 0,\r\n        margin: 0,\r\n        margin: '5px 0',\r\n        \r\n    },\r\n    chipsCont: {\r\n        height: 'fit-content',\r\n        padding: 0,\r\n        margin: '3px',\r\n        borderRadius: '50px',\r\n        background: 'rgba(255,255,255,0.1)',\r\n        boxShadow: 'inset rgba(0,0,0,0.5) 0px 0px 2px 1px',\r\n        display: 'flex',\r\n        jutifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        \r\n    },\r\n    removeIcon: {\r\n        color: 'rgba(255,255,255,0.2)',\r\n        padding: '5px',\r\n        marginRight: '5px',\r\n        borderRadius: '50px',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.8)',\r\n            color: 'white',\r\n        }\r\n    },\r\n    radioGroup: {\r\n        color: 'white',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignitems: 'center',\r\n        \r\n    },\r\n    radioBtn: {\r\n        color: 'white',\r\n        padding: '15px'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemAdditionalDetails.js",["729","730","731","732"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Collapse, Tooltip, IconButton, useMediaQuery, LinearProgress } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { format } from 'date-fns'\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\r\nimport { UpsertSystem } from './UpsertSystem';\r\n\r\nexport const SystemAdditionalDetails = ({ data, isOpen, systemId, toggleEdit }) => {\r\n\r\n    const classes = useStyles();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ systemData, setSystemData ] = useState(null);\r\n    const { t, i18n } = useTranslation(); \r\n    const [ isLoading, setIsLoading ] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        setSystemData(data);\r\n        setIsLoading(false);\r\n    }, [data])\r\n\r\n    return (\r\n      \r\n            isLoading ?\r\n            <LinearProgress />\r\n            :\r\n            <Collapse in={isOpen} >\r\n                <div className={classes.container}>\r\n                    <Grid container justify={'center'} className={classes.grid} spacing={2}>\r\n                        <Grid container className={classes.gridItem}>\r\n                            <Grid item xs={12} className={classes.headerRow}>\r\n                                <div className={classes.title}>\r\n                                    {t(\"systemsModule.additionalDetails\")}\r\n                                </div>\r\n                                <IconButton \r\n                                    className={classes.iconBtn}\r\n                                    onClick={toggleEdit}\r\n                                >\r\n                                    <EditRoundedIcon className={classes.icon}/>\r\n                                </IconButton>\r\n                            </Grid>\r\n                            <Grid item md={6} lg={3} xl={4} className={classes.fieldContainer}>\r\n                                <div className={classes.label}>\r\n                                    {t(\"systemsModule.location\")}\r\n                                </div>\r\n                                <div className={classes.fieldData}>\r\n                                    {systemData.general.location || t(\"general.noData\")}\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={3} xl={4} className={classes.fieldContainer}>\r\n                                <div className={classes.label}>\r\n                                    {t(\"systemsModule.manufacturingYear\")}\r\n                                </div>\r\n                                <div className={classes.fieldData}>\r\n                                    {systemData.general.manufacturingYear || t(\"general.noData\")}\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={3} xl={4} className={classes.fieldContainer}>\r\n                                <div className={classes.label}>\r\n                                    {t(\"systemsModule.SID\")}\r\n                                </div>\r\n                                <div className={classes.fieldData}>\r\n                                    {systemData.general.SID || t(\"general.noData\")}\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={3} xl={4} className={classes.fieldContainer}>\r\n                                <div className={classes.label}>\r\n                                    {t(\"systemsModule.warrantyDetails.issuer\")}\r\n                                </div>\r\n                                <div className={classes.fieldData}>\r\n                                    {t(`systemsModule.warrantyDetails.${systemData.warranty.issuer || 'nowarranty'}`)}\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={3} xl={4} className={classes.fieldContainer}>\r\n                                <div className={classes.label}>\r\n                                    {t(\"systemsModule.warrantyDetails.expiryDate\")}\r\n                                </div>\r\n                                <div className={classes.fieldData}>\r\n                                    {systemData.warranty.expiryDate ? format(new Date(systemData.warranty.expiryDate), lang.dateformat) : t(\"systemsModule.warrantyDetails.nowarranty\")}\r\n                                </div>\r\n                            </Grid>\r\n                            \r\n                        </Grid>\r\n                        <Grid item xs={12} lg={4} xl={4} className={classes.gridItem}>\r\n                            <div className={classes.card}>\r\n                                <div className={classes.cardTitle}>\r\n                                    {t(\"systemsModule.manufacturer\")}\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.manufacturerDetails.name\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.manufacturer.name || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.manufacturerDetails.contactName\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.manufacturer.contactName || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.manufacturerDetails.email\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.manufacturer.email || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.manufacturerDetails.phoneNumber\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.manufacturer.phoneNumber || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.manufacturerDetails.extension\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.manufacturer.extension || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} lg={4} xl={4} className={classes.gridItem}>\r\n                        <div className={classes.card}>\r\n                                <div className={classes.cardTitle}>\r\n                                    {t(\"systemsModule.supplier\")}\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.supplierDetails.name\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.supplier.name || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.supplierDetails.contactName\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.supplier.contactName || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.supplierDetails.email\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.supplier.email || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.supplierDetails.phoneNumber\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.supplier.phoneNumber || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.supplierDetails.extension\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.supplier.extension || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} lg={4} xl={4} className={classes.gridItem}>\r\n                            <div className={classes.card}>\r\n                                <div className={classes.cardTitle}>\r\n                                    {t(\"systemsModule.insurance\")}\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.insuranceDetails.name\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.insurance.name || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.insuranceDetails.contactName\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.insurance.contactName || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.insuranceDetails.email\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.insurance.email || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.insuranceDetails.phoneNumber\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.insurance.phoneNumber || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.insuranceDetails.extension\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.insurance.extension || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Collapse>\r\n      \r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'rgba(0,0,0,0.4)',\r\n        borderRadius: '5px',\r\n        margin: '10px',\r\n        padding: '10px'\r\n    },\r\n    grid: {\r\n        padding: '10px',\r\n    },\r\n    gridItem: {\r\n        display: 'flex',\r\n        margin: '10px 0'\r\n    },\r\n    fieldContainer: {\r\n        padding: '10px',\r\n        margin : '15px 0', \r\n        height: '60px',\r\n    },\r\n    label: {\r\n        padding: '5px 10px',\r\n        borderRadius: '5px 5px 0px 0',\r\n        background: 'rgba(0,0,0,0.3)',\r\n        color: 'white',\r\n        width: 'fit-content',\r\n        fontSize: '13px'\r\n    },\r\n    fieldData: {\r\n        padding: '15px 20px',\r\n        width: '200px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '0 5px 5px 5px',\r\n        color: 'white'\r\n    },\r\n    card: {\r\n        margin: '10px 0px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '5px',\r\n        padding: '10px',\r\n        width: '100%'\r\n    },\r\n    cardTitle: {\r\n        color: 'white',\r\n        fontSize: '20px',\r\n        padding: '10px',\r\n        background: 'rgba(0,0,0,0.3)',\r\n        borderRadius: '5px',\r\n        \r\n    },\r\n    cardRow: {\r\n        padding: '10px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        color: 'white',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)'\r\n    },\r\n    rowLabel: {\r\n        padding: '3px 0',\r\n        fontSize: '14px',\r\n        color: 'rgba(255,255,255,0.6)'\r\n    },\r\n    rowData: {\r\n        fontSize: '16px'\r\n    },\r\n    headerRow: {\r\n        color: 'white',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '0px 10px 10px 10px',\r\n        fontSize: '20px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)'\r\n    },\r\n    iconBtn: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.3)'\r\n        }\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        fontSize: '20px'\r\n    },\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskMinified.js",[],"C:\\projects\\leev\\leev-fe\\src\\api\\documentsApi.js",["733"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultsControls.js",["734","735"],"import {\r\n\tButton,\r\n\tButtonGroup,\r\n\tCollapse,\r\n\tGrid,\r\n\tmakeStyles,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport BlurOnRoundedIcon from '@material-ui/icons/BlurOnRounded';\r\nimport ViewListRoundedIcon from '@material-ui/icons/ViewListRounded';\r\nimport ViewWeekRoundedIcon from '@material-ui/icons/ViewWeekRounded';\r\nimport clsx from 'clsx';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { getAsset, getFullAddress } from '../../../api/assetsApi';\r\nimport { getFaultsStatusListSuggestions } from '../../../api/faultsApi';\r\nimport { removeQueryParam } from '../../../api/genericApi';\r\nimport {\r\n\tgetAssetsSuggestions,\r\n\tgetSystemsByAssetOptions,\r\n} from '../../../api/systemsApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\n\r\nexport const FaultsControls = ({ viewType, setViewType }) => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [reloadedValue, setReloadedValue] = useState(null);\r\n\tconst [collapsed, setCollapsed] = useState(!downSm ? true : false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (query.asset) {\r\n\t\t\thandleReloaded(query.asset).then((data) => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetReloadedValue(data);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetReloadedValue({\r\n\t\t\t\tlabel: '',\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\thistory.push({\r\n\t\t\t\tpath: location.pathname,\r\n\t\t\t\tsearch: removeQueryParam(location.search, 'system'),\r\n\t\t\t});\r\n\t\t}\r\n\t}, [location.search]);\r\n\r\n\tconst handleReloaded = async (assetId) => {\r\n\t\tconst res = await getAsset(assetId, false);\r\n\t\tif (res) {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: getFullAddress(res),\r\n\t\t\t\tvalue: res._id,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleCollapse = () => {\r\n\t\tif (collapsed) {\r\n\t\t\tsetCollapsed(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetCollapsed(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{downSm && (\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName={classes.sortandfilter}\r\n\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t<FilterListIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tendIcon={\r\n\t\t\t\t\t\t\t\tcollapsed ? (\r\n\t\t\t\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<ExpandMoreRoundedIcon />\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={toggleCollapse}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{t(\r\n\t\t\t\t\t\t\t\t`faultsModule.${\r\n\t\t\t\t\t\t\t\t\tcollapsed ? 'hide' : 'show'\r\n\t\t\t\t\t\t\t\t}Filters`\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t<Collapse in={collapsed}>\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t{reloadedValue && (\r\n\t\t\t\t\t\t\t<SearchBoxSelect\r\n\t\t\t\t\t\t\t\tsuggestionsFunc={getAssetsSuggestions}\r\n\t\t\t\t\t\t\t\tplaceholder={t('systemsModule.filterByAsset')}\r\n\t\t\t\t\t\t\t\tfilterField={'asset'}\r\n\t\t\t\t\t\t\t\treloadedLabel={reloadedValue.label}\r\n\t\t\t\t\t\t\t\treloadedValue={reloadedValue.value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{query.asset && (\r\n\t\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\t\toptionsFunc={() =>\r\n\t\t\t\t\t\t\t\t\tgetSystemsByAssetOptions(query.asset)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder={t(\r\n\t\t\t\t\t\t\t\t\t'systemsModule.filterBySystemName'\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t\t<BlurOnRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfilterField={'system'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{viewType === 'list' && (\r\n\t\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\t\toptionsFunc={getFaultsStatusListSuggestions}\r\n\t\t\t\t\t\t\t\tplaceholder={t('faultsModule.filterByStatus')}\r\n\t\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t\t<DoubleArrowIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfilterField={'status'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={createUserOptions}\r\n\t\t\t\t\t\t\tplaceholder={t('faultsModule.filterByFaultOwner')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<PersonRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'owner'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ButtonGroup className={classes.typeGroup}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\tclasses.modeBtn,\r\n\t\t\t\t\t\t\t\t\tclasses.listBtn,\r\n\t\t\t\t\t\t\t\t\tviewType === 'list'\r\n\t\t\t\t\t\t\t\t\t\t? classes.modeBtnActive\r\n\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t\t<ViewListRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() => setViewType('list')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{t('faultsModule.listMode')}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\tclasses.modeBtn,\r\n\t\t\t\t\t\t\t\t\tclasses.blocksBtn,\r\n\t\t\t\t\t\t\t\t\tviewType === 'blocks'\r\n\t\t\t\t\t\t\t\t\t\t? classes.modeBtnActive\r\n\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t\t<ViewWeekRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() => setViewType('blocks')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{t('faultsModule.blocksMode')}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Collapse>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((them) => ({\r\n\tgridItem: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'flex-start',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tmarginLeft: '4px',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '6px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tsortandfilter: {\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '5px 25px 5px 3px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'black',\r\n\t\t},\r\n\t},\r\n\ttypeGroup: {\r\n\t\tmargin: '5px',\r\n\t\theight: '45px',\r\n\t},\r\n\tmodeBtn: {\r\n\t\tpadding: '0 15px 0 5px',\r\n\t\tcolor: 'white',\r\n\t\twidth: 'auto',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tlistBtn: {\r\n\t\tborderRadius: '25px 0 0 25px',\r\n\t},\r\n\tblocksBtn: {\r\n\t\tborderRadius: '0px 25px 25px 0px',\r\n\t},\r\n\tmodeBtnActive: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\UpsertFault.js",["736","737","738","739","740","741"],"C:\\projects\\leev\\leev-fe\\src\\components\\user\\UserItem.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ItemLink.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\DocumentControls.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViewControls.js",["742"],"import { IconButton, makeStyles, Tooltip } from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport TransferWithinAStationRoundedIcon from '@material-ui/icons/TransferWithinAStationRounded';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Can } from '../../reuseables/Can';\r\n\r\nexport const FaultViewControls = ({\r\n\tfault,\r\n\teditFault,\r\n\tupdateOwner,\r\n\tchangeStatus,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [data, setData] = useState(fault);\r\n\r\n\tuseEffect(() => {\r\n        setData(fault);\r\n        console.log(fault)\r\n\t}, [fault]);\r\n\r\n\tconst openInNewWindow = () => {\r\n\t\twindow.open(`http://localhost:3000/workspace/faults/${fault.faultId}`);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.container}>\r\n\t\t\t<Tooltip title={t('general.openInNew')}>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\tonClick={openInNewWindow}\r\n\t\t\t\t>\r\n\t\t\t\t\t<OpenInNewIcon className={classes.icon} />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</Tooltip>\r\n\t\t\t<Can\r\n\t\t\t\tmodule=\"faults\"\r\n\t\t\t\taction=\"update\"\r\n\t\t\t\tuserList={[...data.relatedUsers.map(u => u._id), data.owner._id]}\r\n\t\t\t>\r\n\t\t\t\t<Tooltip title={t('faultsModule.controls.editDetails')}>\r\n\t\t\t\t\t<IconButton className={classes.iconBtn} onClick={editFault}>\r\n\t\t\t\t\t\t<CreateIcon className={classes.icon} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</Can>\r\n\t\t\t<Can\r\n\t\t\t\tmodule=\"faults\"\r\n\t\t\t\taction=\"changeOwner\"\r\n\t\t\t\tuserList={[...data.relatedUsers.map(u => u._id), data.owner._id]}\r\n\t\t\t>\r\n\t\t\t\t<Tooltip title={t('faultsModule.controls.changeOwner')}>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\tonClick={updateOwner}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TransferWithinAStationRoundedIcon\r\n\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</Can>\r\n\t\t\t<Can\r\n\t\t\t\tmodule=\"faults\"\r\n\t\t\t\taction=\"changeStatus\"\r\n\t\t\t\tuserList={[...data.relatedUsers.map(u => u._id), data.owner._id]}\r\n\t\t\t>\r\n\t\t\t\t<Tooltip title={t('faultsModule.controls.changeStatus')}>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\tonClick={changeStatus}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DoubleArrowIcon className={classes.icon} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</Can>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\ticonBtn: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tborderRadius: '50px',\r\n\t\tcolor: 'white',\r\n\t\tmargin: '0 5px',\r\n\t\tpadding: '10px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultLink.js",["743"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport const FaultLink = ({ faultId, size }) => {\r\n\r\n    return (\r\n        <Link\r\n            to={`/workspace/faults/${faultId}`}\r\n            style={{ textDecoration: 'none' }}\r\n        >\r\n           <span style={{\r\n               color: 'white',\r\n               fontSize: `${size}px`,\r\n               whiteSpace: 'nowrap'\r\n           }}>\r\n             {faultId}\r\n           </span>\r\n        </Link>\r\n    )\r\n}","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UserList.js",["744"],"import {\r\n\tIconButton,\r\n\tList,\r\n\tListItem,\r\n\tmakeStyles,\r\n\tTooltip,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getFullName } from '../../api/genericApi';\r\nimport { UserItem } from '../user/UserItem';\r\nimport { AlertDialog } from './AlertDialog';\r\nimport { Can } from './Can';\r\n\r\nexport const UserList = ({\r\n\tusers,\r\n\thandleRemove,\r\n\tremoveTooltip,\r\n\thandleAdd,\r\n\taddTooltip,\r\n\ttitle,\r\n\tplaceholder,\r\n    module,\r\n    owner\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst { t } = useTranslation();\r\n\tconst [userList, setUserList] = useState(users || []);\r\n\tconst [liHover, setLiHover] = useState(null);\r\n\tconst [alertDialog, setAlertDialog] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetUserList(users);\r\n\t}, [users]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(alertDialog);\r\n\t}, [alertDialog]);\r\n\r\n\tconst toggleHover = (index) => (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tsetLiHover(index);\r\n\t};\r\n\r\n\tconst removeUser = (user) => (event) => {\r\n\t\tsetAlertDialog({\r\n\t\t\thandleConfirm: async () => {\r\n\t\t\t\tconst res = await handleRemove(user._id);\r\n\t\t\t\tsetAlertDialog(null);\r\n\t\t\t},\r\n\t\t\thandleCancel: () => setAlertDialog(null),\r\n\t\t\ttext: `${t('general.removeUserConfirmation.part1')} ${getFullName(\r\n\t\t\t\tuser\r\n\t\t\t)} ${t('general.removeUserConfirmation.part2')}?`,\r\n\t\t\ttitle: `${t('general.removeUserFromFollowing')}`,\r\n\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={classes.linked}\r\n\t\t\tstyle={{ minWidth: `200px`, width: '100%' }}\r\n\t\t>\r\n\t\t\t<div className={classes.topRow}>\r\n\t\t\t\t<div className={classes.linkedHeader}>{title}</div>\r\n\t\t\t\t<Can module={module} action={'changeRelatedUsers'} userList={[...users.map(u => u._id), owner._id]} >\r\n\t\t\t\t\t<Tooltip title={addTooltip}>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tclassName={classes.addUser}\r\n\t\t\t\t\t\t\tonClick={handleAdd}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AddRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</Can>\r\n\t\t\t</div>\r\n\r\n\t\t\t<List className={classes.followingList}>\r\n\t\t\t\t{Boolean(userList.length) ? (\r\n\t\t\t\t\tuserList.map((user, i) => (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\tonMouseEnter={toggleHover(i)}\r\n\t\t\t\t\t\t\tonMouseLeave={() => setLiHover(null)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\tavatarSize={40}\r\n\t\t\t\t\t\t\t\tsize={11}\r\n\t\t\t\t\t\t\t\tshowTitle\r\n\t\t\t\t\t\t\t\tshowPhone\r\n\t\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\t/>\r\n                            <Can module={module} action={'changeRelatedUsers'} userList={[...users.map(u => u._id), owner._id]}>\r\n                                {(liHover === i || downSm) && (\r\n                                    <Tooltip title={removeTooltip}>\r\n                                        <IconButton\r\n                                            className={classes.removeUser}\r\n                                            onClick={removeUser(user)}\r\n                                        >\r\n                                            <ClearRounded\r\n                                                className={classes.icon}\r\n                                            />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                )}\r\n                            </Can>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<ListItem className={classes.placeholder}>\r\n\t\t\t\t\t\t{placeholder}\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t)}\r\n\t\t\t</List>\r\n\t\t\t{Boolean(alertDialog) && (\r\n\t\t\t\t<AlertDialog\r\n\t\t\t\t\tisOpen={Boolean(alertDialog)}\r\n\t\t\t\t\talertDialog={alertDialog}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tlinked: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'flex-start',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tmargin: '10px 0',\r\n\t\tborderRadius: '10px',\r\n\t\tpadding: '10px 0',\r\n\t\theight: '300px',\r\n\t},\r\n\ttopRow: {\r\n\t\tmargin: '0px auto',\r\n\t\twidth: '90%',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tlinkedHeader: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t\tpadding: '5px 5px 10px',\r\n\t},\r\n\tfollowingList: {\r\n\t\tpadding: '5px 0',\r\n\t\toverflowY: 'auto',\r\n\t},\r\n\tlistItem: {\r\n\t\twidth: '100%',\r\n\t\tborderRadius: '5px',\r\n\t\tpadding: '8px',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\t},\r\n\t},\r\n\tremoveUser: {\r\n\t\tcolor: 'white',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\t},\r\n\t},\r\n\taddUser: {\r\n\t\tcolor: 'white',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '5px',\r\n\t\tmargin: '0 0 10px 0',\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t},\r\n\tplaceholder: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tborderRadius: '25px',\r\n\t\tcolor: 'white',\r\n\t\tpadding: '10px 20px',\r\n\t\twidth: '90%',\r\n\t\tmargin: '10px auto',\r\n\t\tfontSize: '13px',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateStatus.js",["745","746","747"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Paper, FormControl, IconButton, useMediaQuery, Fade, Modal, Backdrop,Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport clsx from 'clsx'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { getStatusList } from '../../api/genericApi';\r\n\r\n\r\n\r\nexport const UpdateStatus = ({ handleClose, handleSave, isOpen, currentStatus, title, instructions, module }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ statusList, setStatusList ] = useState([]);\r\n    const [ selectedStatus, setSelectedStatus ] = useState('')\r\n    \r\n    useEffect(() => {\r\n        getStatusList('faults')\r\n        .then(data => {\r\n            console.log(data)\r\n            if (currentStatus) {\r\n                setSelectedStatus(currentStatus._id)\r\n            }\r\n            setStatusList(data.filter(s => s._id !== currentStatus._id ));\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = event => {\r\n        setSelectedStatus(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={isOpen}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xs={11} sm={7} md={5} lg={3} xl={3}>\r\n                        <Paper \r\n                            className={classes.paper} \r\n                            style={{ direction: lang.dir }}\r\n                            elevation={6}    \r\n                        >\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {title}\r\n                                </div>\r\n                                <IconButton className={classes.closeBtn} onClick={handleClose}>\r\n                                    <ClearRoundedIcon className={classes.icon}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div className={classes.instructions}>\r\n                                {instructions}\r\n                            </div>\r\n                            <FormControl variant='outlined' className={classes.textInput} >\r\n                                <Select\r\n                                    value={selectedStatus}\r\n                                    onChange={handleChange}\r\n                                    className={classes.menu}\r\n                                    MenuProps={{\r\n                                        classes: {\r\n                                            paper: classes.menupaper\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        statusList.map( (status, i) => {\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    className={classes.menuitem}\r\n                                                    value={status._id} \r\n                                                    key={i}\r\n                                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                                >\r\n                                                    {t(`${module}Module.statuses.${status.statusId}`)}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div className={classes.controls}>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.save)}\r\n                                    onClick={() => handleSave(selectedStatus)}\r\n                                    disabled={!selectedStatus}\r\n                                >\r\n                                    {t(\"alert.confirm\")}\r\n                                </Button>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.cancel)}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    {t(\"alert.cancel\")}\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    \r\n                </Grid> \r\n                \r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px',\r\n        borderRadius: '10px',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '18px',\r\n        padding: '5px 10px',\r\n        height: 'fit-content'\r\n    },\r\n    closeBtn: {\r\n        fontSize: '20px',\r\n        height: '40px',\r\n        width: '40px'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        borderRadius: '25px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    instructions: {\r\n        width: 'auto',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '12px',\r\n        margin: '0px 10px'\r\n    },\r\n    menu: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(10px)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        marginTop: '55px',\r\n        marginRight: '7px',\r\n        maxHeight: '200px',\r\n        overflowY: 'auto',\r\n        \r\n\r\n    },\r\n    menuitem: {\r\n        color: 'white'\r\n    },\r\n    textInput: {\r\n        margin: '20px 5px',\r\n        width: '300px',\r\n        '& input': {\r\n            color: 'white',\r\n            paddingLeft: '20px',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        }    \r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\StatusTag.js",["748","749"],"\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport CheckCircleOutlineRoundedIcon from '@material-ui/icons/CheckCircleOutlineRounded';\r\nimport HourglassEmptyRoundedIcon from '@material-ui/icons/HourglassEmptyRounded';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport clsx from 'clsx';\r\nimport { green, red, yellow } from '@material-ui/core/colors';\r\n\r\nexport const StatusTag = ({status, type, size}) => {\r\n\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    \r\n    return (\r\n        <div \r\n            className={clsx(classes.statusTag,classes[status.statusId])}\r\n            style={{ fontSize: size || '14px'}}    \r\n        >\r\n            {\r\n                status.statusId  === 'ready' ? \r\n                <PlayCircleOutlineIcon className={classes.icon}/> :\r\n                status.statusId  === 'inProgress' ? \r\n                <CachedIcon className={classes.icon} /> :\r\n                status.statusId  === 'pending' ?\r\n                <HourglassEmptyRoundedIcon className={classes.icon}className={classes.icon} /> : \r\n                status.statusId  === 'closed' ?\r\n                <CheckCircleOutlineRoundedIcon className={classes.icon} /> : null\r\n            }\r\n            <div className={classes.title}>\r\n                {t(`${type}sModule.statuses.${status.statusId}`)}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    statusTag: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'fit-content',\r\n        padding: '0 10px',\r\n        borderRadius: '25px',\r\n        whiteSpace: 'nowrap'\r\n\r\n    },\r\n    title: {\r\n        padding: '7px 10px 7px 0px'\r\n    },\r\n    ready: {\r\n       \r\n        background: red[600],\r\n        color: 'white'\r\n    },\r\n    inProgress: {\r\n        background: yellow[500],\r\n        color: 'black',\r\n        \r\n    },\r\n    pending: {\r\n        background: 'rgba(255,255,255,0.4)',\r\n        color: 'black'\r\n    },\r\n    closed: {\r\n        background: green[800],\r\n        color: 'white'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        padding: '0 5px'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CommentSection.js",["750","751","752","753"],"import {\r\n\tAvatar,\r\n\tButton,\r\n\tClickAwayListener,\r\n\tFormControl,\r\n\tGrid,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tOutlinedInput,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { green, red } from '@material-ui/core/colors';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport SaveRoundedIcon from '@material-ui/icons/SaveRounded';\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\nimport clsx from 'clsx';\r\nimport _ from 'lodash';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { getDatediffString } from '../../api/genericApi';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { Can } from './Can';\r\n\r\nexport const CommentSection = ({ parent, saveComment, updateComment, module }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst [commentList, setCommentList] = useState(parent.comments || []);\r\n\tconst [parentId, setParentId] = useState(parent._id);\r\n\tconst [text, setText] = useState('');\r\n\tconst [textFocused, setTextFocused] = useState(false);\r\n\tconst [editComment, setEditComment] = useState(null);\r\n\tconst [numOfComments, setNumOfComments] = useState(3);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCommentList(parent.comments);\r\n\t\tsetParentId(parent._id);\r\n\t}, [parent]);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetText(event.target.value);\r\n\t};\r\n\r\n\tconst handleSendComment = (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tsaveComment(parentId, auth.user._id, text)\r\n\t\t\t.then((data) => {\r\n\t\t\t\tif (!data) return;\r\n\t\t\t\tsetCommentList(data.comments);\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tsetText('');\r\n\t\t\t\tsetTextFocused(false);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleEditChange = (event) => {\r\n\t\tsetEditComment({\r\n\t\t\t...editComment,\r\n\t\t\ttext: event.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleUpdateComment = async () => {\r\n\t\tconst res = await updateComment(\r\n\t\t\tparentId,\r\n\t\t\teditComment._id,\r\n\t\t\teditComment.text\r\n\t\t);\r\n\t\tsetCommentList(res.comments);\r\n\t\tsetEditComment(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid container>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<div className={classes.title}>{t('comments.title')}</div>\r\n\t\t\t</Grid>\r\n\t\t\t{numOfComments < commentList.length && (\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName={classes.showMore}\r\n\t\t\t\t\t\tonClick={() => setNumOfComments(numOfComments + 3)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{t('comments.showMore')}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{_.takeRight(commentList, numOfComments).map((c, i) => (\r\n\t\t\t\t<Grid item xs={12} className={clsx(classes.comment)} key={i}>\r\n\t\t\t\t\t<div className={classes.commentContainer}>\r\n\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\tclassName={classes.avatar}\r\n\t\t\t\t\t\t\talt={'abc'}\r\n\t\t\t\t\t\t\tsrc={c.user.avatar}\r\n\t\t\t\t\t\t\tstyle={{ height: '50px', width: '50px' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className={classes.data}>\r\n\t\t\t\t\t\t\t<div className={classes.commenter}>\r\n\t\t\t\t\t\t\t\t{`${c.user.firstName} ${c.user.lastName}`}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{Boolean(editComment) &&\r\n\t\t\t\t\t\t\teditComment._id === c._id ? (\r\n\t\t\t\t\t\t\t\t<div className={classes.editContainer}>\r\n\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.form}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={editComment.text || ''}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleEditChange}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={t('comments.add')}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\t\t\t\tclasses.textInput,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttextFocused\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? classes.focused\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\tonFocus={() => setTextFocused(true)}\r\n\t\t\t\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tinputMultiline:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclasses.multiLine,\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.save}\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleUpdateComment}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<SaveRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.cancel}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setEditComment(null)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<ClearRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div className={classes.commentText}>\r\n\t\t\t\t\t\t\t\t\t{`${c.text}`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.commentFooter}>\r\n\t\t\t\t\t\t{/* <div className={classes.footerField}> \r\n                                <Button className={classes.footerBtn}> \r\n                                    {t(\"comments.reply\")}\r\n                                </Button>\r\n                            </div> */}\r\n\t\t\t\t\t\t{c.user._id == auth.user._id && (\r\n\t\t\t\t\t\t\t<div className={classes.footerField}>\r\n\t\t\t\t\t\t\t\t{/* {` · `} */}\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName={classes.footerBtn}\r\n\t\t\t\t\t\t\t\t\tonClick={() => setEditComment(c)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{t('comments.edit')}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div className={classes.footerField}>\r\n\t\t\t\t\t\t\t{` · `}\r\n\t\t\t\t\t\t\t<div className={classes.timePassed}>\r\n\t\t\t\t\t\t\t\t{`${getDatediffString(c.createdAt)}`}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t))}\r\n\r\n\t\t\t<Can\r\n\t\t\t\tmodule={module}\r\n\t\t\t\taction={'comment'}\r\n\t\t\t\tuserList={[\r\n\t\t\t\t\t...parent.relatedUsers.map((u) => u._id),\r\n\t\t\t\t\tparent.owner._id,\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t<ClickAwayListener onClickAway={() => setTextFocused(false)}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\tmd={8}\r\n\t\t\t\t\t\tlg={6}\r\n\t\t\t\t\t\txl={6}\r\n\t\t\t\t\t\tclassName={classes.addComment}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tclassName={classes.form}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\t\tvalue={text || ''}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\tplaceholder={t('comments.add')}\r\n\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\tclasses.textInput,\r\n\t\t\t\t\t\t\t\t\ttextFocused ? classes.focused : null\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tonFocus={() => setTextFocused(true)}\r\n\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\t\tinputMultiline: classes.multiLine,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tclassName={classes.postBtn}\r\n\t\t\t\t\t\t\tonClick={handleSendComment}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<SendRoundedIcon\r\n\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\tclasses.icon,\r\n\t\t\t\t\t\t\t\t\tlang.dir === 'rtl' ? classes.mirror : null\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</ClickAwayListener>\r\n\t\t\t</Can>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttitle: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '20px',\r\n\t\tpadding: '20px 30px 10px',\r\n\t\tmarginBottom: '10px',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\taddComment: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '10px',\r\n\t\twidth: 'fit-content',\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: '0 10px',\r\n\t},\r\n\tform: {\r\n\t\tcolor: 'white',\r\n\t\twidth: '100%',\r\n\t},\r\n\ttextInput: {\r\n\t\tpadding: '15px 10px',\r\n\t\tborderRadius: '42px',\r\n\t\t'& input': {\r\n\t\t\tcolor: 'white',\r\n\t\t\twidth: '80%',\r\n\t\t},\r\n\t\t'& label': {\r\n\t\t\tcolor: 'white',\r\n\t\t\tpaddingLeft: '5px',\r\n\t\t},\r\n\t\t'& fieldset': {\r\n\t\t\tborderColor: 'rgba(255,255,255,0.6)',\r\n\t\t\tborderRadius: '42px',\r\n\t\t},\r\n\t},\r\n\tfocused: {\r\n\t\tboxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t},\r\n\tpostBtn: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '7px',\r\n\t\tleft: '-40px',\r\n\t\tmarginBottom: '1px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t},\r\n\tmirror: {\r\n\t\ttransform: 'scaleX(-1)',\r\n\t},\r\n\tcomment: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tmargin: '5px 0',\r\n\t},\r\n\tcommentContainer: {\r\n\t\twidth: 'fit-content',\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: '10px 30px 10px 0px',\r\n\t\tmargin: '0px 10px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tborderRadius: '35px',\r\n\t},\r\n\tcommenter: {\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tfontSize: '13px',\r\n\t\tpadding: '5px',\r\n\t},\r\n\tcommentText: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tcommentFooter: {\r\n\t\tdisplay: 'flex',\r\n\t\tmarginLeft: '40px',\r\n\t\theight: '20px',\r\n\t},\r\n\tfooterField: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tfontSize: '11px',\r\n\t\tcolor: 'rgba(255,255,255,0.4)',\r\n\t},\r\n\tfooterBtn: {\r\n\t\tfontSize: '12px',\r\n\t\tpadding: '1px 2px',\r\n\t\tmargin: '0px 2px',\r\n\t\tminWidth: '0',\r\n\t\twidth: 'fit-content',\r\n\t\tcolor: 'rgba(255,255,255,0.4)',\r\n\t\tborderRadius: '50px',\r\n\t\t'&:hover': {\r\n\t\t\tcolor: 'white',\r\n\t\t\ttextDecoration: 'underline',\r\n\t\t\tboxShadow: 'none',\r\n\t\t\tbackground: 'transparent',\r\n\t\t},\r\n\t},\r\n\ttimePassed: {\r\n\t\tfontSize: '12px',\r\n\t\tpadding: '0px 2px',\r\n\t\tmargin: '0 2px',\r\n\t\tminWidth: '0',\r\n\t\twidth: 'fit-content',\r\n\t\tcolor: 'rgba(255,255,255,0.4)',\r\n\t},\r\n\tmultiLine: {\r\n\t\tpadding: '0px 20px',\r\n\t},\r\n\tshowMore: {\r\n\t\tmargin: '5px 30px',\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t\tpadding: '5px',\r\n\t\t'&:hover': {\r\n\t\t\tboxShadow: 'none',\r\n\t\t\tbackground: 'inherit',\r\n\t\t\ttextDecoration: 'underline',\r\n\t\t},\r\n\t},\r\n\tsave: {\r\n\t\tbackground: green[800],\r\n\t\tpadding: '8px',\r\n\t\tmargin: '18px 5px',\r\n\t},\r\n\tcancel: {\r\n\t\tbackground: red[800],\r\n\t\tpadding: '8px',\r\n\t\tmargin: '18px 5px',\r\n\t},\r\n\teditContainer: {\r\n\t\theight: 'auto',\r\n\t\tmargin: 'auto 0',\r\n\t\twidth: '100%',\r\n\t\tdispaly: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\Carousel.js",["754","755","756","757"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { makeStyles, Slide, Paper, IconButton, Backdrop, Modal } from '@material-ui/core'\r\nimport ChevronLeftRoundedIcon from '@material-ui/icons/ChevronLeftRounded';\r\nimport ChevronRightRoundedIcon from '@material-ui/icons/ChevronRightRounded';\r\nimport clsx from 'clsx';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport ZoomInRoundedIcon from '@material-ui/icons/ZoomInRounded';\r\nimport ZoomOutRoundedIcon from '@material-ui/icons/ZoomOutRounded';\r\nimport ZoomOutMapRoundedIcon from '@material-ui/icons/ZoomOutMapRounded';\r\n\r\nexport const Carousel = ({ images, isOpen, size }) => {\r\n    \r\n    const classes = useStyles();\r\n    const [ slideIn, setSlideIn ] = useState(isOpen);\r\n    const [ slideDirection, setSlideDirection ] = useState('left');\r\n    const [ index, setIndex ] = useState(0);\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ photoViewMode, setPhotoViewMode ] = useState(false);\r\n    const [ picSize, setPicSize ] = useState(size)\r\n\r\n    useEffect(() => {\r\n        if (photoViewMode) {\r\n            setPicSize(800)\r\n        }\r\n    }, [photoViewMode])\r\n\r\n    const handleClick = dir => event => {\r\n        setSlideDirection(dir);\r\n        setSlideIn(false);\r\n \r\n        setTimeout(() => {\r\n            setIndex((index - (dir === 'left' ? 1 : -1) + images.length) % images.length);\r\n            setSlideIn(true);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZoom = up => {\r\n        if (up) {\r\n            if (picSize === 1300) return;\r\n            setPicSize(picSize + 100)\r\n        } else {\r\n            if (picSize === 300) return;\r\n            setPicSize(picSize - 100)\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setPicSize(300);\r\n        setPhotoViewMode(false);\r\n    }\r\n\r\n    return (\r\n        <CarouselWrapper\r\n            isModal={photoViewMode}\r\n            wrapper={ children => \r\n                <Modal\r\n                    open={true}\r\n                    onClose={handleClose}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                        timeout: 500\r\n                    }}\r\n                    className={classes.modal}\r\n                >\r\n                    <div className={classes.content} >\r\n                        <CarouselControls \r\n                            handleZoom={handleZoom} \r\n                            picSize={picSize} \r\n                            handleClose={handleClose}\r\n                        />\r\n                        {children}\r\n                    </div>\r\n                    \r\n                </Modal>\r\n            }\r\n        >\r\n            <div \r\n                className={classes.container}\r\n                style={{ cursor: photoViewMode ? 'default' : 'pointer'}}\r\n            >\r\n                <IconButton\r\n                    className={clsx(classes.arrow, classes.arrowLeft)}\r\n                    onClick={handleClick('left')}\r\n                    style={{ left: lang.drection === 'rtl' ? '97%' : '3%' }}\r\n                >\r\n                    <ChevronLeftRoundedIcon className={classes.icon}/>\r\n                </IconButton>\r\n                <CarouselSlide image={images[index]} size={picSize} setPhotoViewMode={setPhotoViewMode}/>\r\n                <IconButton\r\n                    className={clsx(classes.arrow, classes.arrowRight)}\r\n                    onClick={handleClick('right')}\r\n                    style={{ right: lang.drection === 'rtl' ? '97%' : '3%' }}\r\n                >\r\n                    <ChevronRightRoundedIcon className={classes.icon}/>\r\n                </IconButton>\r\n            </div>\r\n        </CarouselWrapper>\r\n        \r\n    )\r\n}\r\n\r\nconst CarouselSlide = ({image, size, setPhotoViewMode}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper \r\n            className={classes.paper} \r\n            elevation={0} \r\n            style={{ height: `${size}px`}}\r\n            onClick={() => setPhotoViewMode(true)}\r\n        >\r\n            <img src={image} className={classes.image} />\r\n        </Paper>   \r\n    )\r\n}\r\n\r\nconst CarouselControls = ({handleZoom, picSize, handleClose}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.controls}>\r\n            <div className={classes.close}>\r\n                <IconButton\r\n                    className={classes.iconBtn}\r\n                    onClick={handleClose}\r\n                >\r\n                    <ClearRounded className={classes.icon} />\r\n                </IconButton>\r\n            </div>\r\n            \r\n            <div className={classes.zoomControl}>\r\n                <IconButton \r\n                    className={classes.iconBtn} \r\n                    onClick={() => handleZoom(true)} \r\n                    disabled={picSize === 1300}\r\n                >\r\n                    <ZoomInRoundedIcon className={classes.icon} />\r\n                </IconButton>\r\n                <IconButton \r\n                    className={classes.iconBtn} \r\n                    onClick={() => handleZoom(false)}\r\n                    disabled={picSize === 300}\r\n                >\r\n                    <ZoomOutRoundedIcon className={classes.icon} />\r\n                </IconButton>\r\n                <IconButton className={classes.iconBtn} >\r\n                    <ZoomOutMapRoundedIcon className={classes.icon} />\r\n                </IconButton>\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nconst CarouselWrapper = ({isModal, wrapper, children }) =>\r\n    isModal ? wrapper(children) : children\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        position: 'relative',\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        padding: '10px 5px',\r\n        borderRadius: '10px',\r\n        outline: 'none'\r\n    },\r\n    content: {\r\n        height: '100%', \r\n        width: '100%', \r\n        outline: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        padding: 0,\r\n        margin: 0,\r\n        width: '100%',\r\n        direction: 'ltr',\r\n        background: 'transparent',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        userSelect: 'none'\r\n    },\r\n    image: {\r\n        maxHeight: '90%',\r\n        maxWidth: '90%',\r\n        borderRadius: '5px',\r\n        objectFit: 'cover',\r\n        userSelect: 'none'\r\n    },\r\n    arrow: {\r\n        position: 'absolute',\r\n        background: 'rgba(0,0,0,0.6)',\r\n        color: 'white',\r\n        zIndex: 1,\r\n        padding: '5px',\r\n\r\n    },\r\n    arrowLeft: {\r\n        top: '50%',\r\n        transform: 'translateY(-50%)'\r\n    },\r\n    arrowRight: {\r\n        top: '50%',\r\n        transform: 'translateY(-50%)'\r\n    },\r\n    icon: {\r\n        fontSize: '32px',\r\n    },\r\n    iconBtn: {\r\n        background: 'rgba(255,255,255,0.6)',\r\n        color: 'black',\r\n        padding: '8px',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.8)',\r\n            color: 'white',\r\n        }\r\n\r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        position: 'absolute',\r\n        top: 0,\r\n        width: '90%',\r\n        padding: '2% 5%',\r\n        zIndex: 1\r\n    },\r\n    zoomControl: {\r\n        width: '170px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AddRelatedUser.js",["758","759","760"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Paper, FormControl, IconButton, useMediaQuery, Fade, Modal, Backdrop,Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { getUserList } from '../../api/userApi';\r\nimport clsx from 'clsx'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\n\r\n\r\nexport const AddRelatedUser = ({ handleClose, handleSave, isOpen, followerList, title, instructions }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ selectedUser, setSelectedUser ] = useState('')\r\n    \r\n    useEffect(() => {\r\n        getUserList()\r\n        .then(data => {  \r\n            setUserList(data.filter(u => Boolean(!followerList.find(f => f._id === u._id))));\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = event => {\r\n        setSelectedUser(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={isOpen}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xs={11} sm={7} md={5} lg={3} xl={3}>\r\n                        <Paper \r\n                            className={classes.paper} \r\n                            style={{ direction: lang.dir }}\r\n                            elevation={6}    \r\n                        >\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {title}\r\n                                </div>\r\n                                <IconButton className={classes.closeBtn} onClick={handleClose}>\r\n                                    <ClearRoundedIcon className={classes.icon}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div className={classes.instructions}>\r\n                                {instructions}\r\n                            </div>\r\n                            <FormControl variant='outlined' className={classes.textInput} >\r\n                                <Select\r\n                                    value={selectedUser}\r\n                                    onChange={handleChange}\r\n                                    className={classes.menu}\r\n                                    MenuProps={{\r\n                                        classes: {\r\n                                            paper: classes.menupaper,\r\n                                           \r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        userList.map( (user, i) => {\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    className={classes.menuitem}\r\n                                                    value={user._id} \r\n                                                    key={i}\r\n                                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                                >\r\n                                                    {`${user.firstName} ${user.lastName}`}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div className={classes.controls}>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.save)}\r\n                                    onClick={handleSave(selectedUser)}\r\n                                    disabled={!selectedUser}\r\n                                >\r\n                                    {t(\"alert.confirm\")}\r\n                                </Button>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.cancel)}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    {t(\"alert.cancel\")}\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    \r\n                </Grid> \r\n                \r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px',\r\n        borderRadius: '10px',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '18px',\r\n        padding: '5px 10px',\r\n        height: 'fit-content'\r\n    },\r\n    closeBtn: {\r\n        fontSize: '20px',\r\n        height: '40px',\r\n        width: '40px'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        borderRadius: '25px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    instructions: {\r\n        width: 'auto',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '12px',\r\n        margin: '0px 10px'\r\n    },\r\n    menu: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(10px)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        maxHeight: '200px',\r\n        overflowY: 'auto',\r\n        marginTop: '60px',\r\n        marginRight: '7px',\r\n    },\r\n    menuitem: {\r\n        color: 'white'\r\n    },\r\n    textInput: {\r\n        margin: '20px 5px',\r\n        width: '300px',\r\n        '& input': {\r\n            color: 'white',\r\n            paddingLeft: '20px',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        }    \r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\api\\faultsApi.js",["761"],"import axios from 'axios';\r\nimport i18next from 'i18next';\r\nimport { getFullAddress } from './assetsApi';\r\nimport { getUnauthorizedMessage } from './genericApi';\r\n\r\naxios.defaults.headers.common['token'] = localStorage.getItem('wb_token');\r\n\r\nexport const getFaultsStatusList = async () => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/statuses/getStatusList`,\r\n\t\t\t{ module: 'faults' },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport const getFaultsStatusListSuggestions = async () => {\r\n\tconst data = await getFaultsStatusList();\r\n\tlet statusList = [];\r\n\tif (data.length) {\r\n\t\tdata.forEach((st) => {\r\n\t\t\tstatusList.push({\r\n\t\t\t\tlabel: i18next.t(`faultsModule.statuses.${st.statusId}`),\r\n\t\t\t\tvalue: st._id,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\treturn statusList;\r\n};\r\n\r\nexport const getMinifiedFaults = async (filters) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/getFaults`,\r\n\t\t\t{ filters },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getFaults = async (tenant, filters) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/getFaults`,\r\n\t\t\t{ tenant, filters },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getFault = async (faultId, plain) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/getFault`,\r\n\t\t\t{ faultId, plain: plain },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn null;\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const createNewFault = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (f[0] === 'images') {\r\n\t\t\tfor (let i = 0; i < details.images.length; i++) {\r\n\t\t\t\tformData.append('images', details.images[i]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tformData.append(f[0], f[1]);\r\n\t\t}\r\n\t});\r\n\r\n\tlet config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': `multipart/form-data`,\r\n\t\t\ttoken: localStorage.getItem('wb_token'),\r\n\t\t\tmodule: 'faults',\r\n\t\t\trequesttype: 'create',\r\n\t\t},\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/createFault`,\r\n\t\t\tformData,\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateFault = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (f[0] === 'images') {\r\n\t\t\tfor (let i = 0; i < details.images.length; i++) {\r\n\t\t\t\tformData.append('images', details.images[i]);\r\n\t\t\t}\r\n\t\t} else if (f[0] === 'uploadedImages') {\r\n\t\t\tformData.append('uploadedImages', JSON.stringify(f[1]));\r\n\t\t} else {\r\n\t\t\tformData.append(f[0], f[1]);\r\n\t\t}\r\n\t});\r\n\tlet config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': `multipart/form-data`,\r\n\t\t\ttoken: localStorage.getItem('wb_token'),\r\n\t\t\tmodule: 'faults',\r\n\t\t\trequesttype: 'update',\r\n\t\t},\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/updateFaultData`,\r\n\t\t\tformData,\r\n\t\t\tconfig\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateFaultOwner = async (faultId, userId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/updateFaultOwner`,\r\n\t\t\t{ faultId, userId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeOwner',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn null;\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const removeRelatedUser = async (faultId, userId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/removeRelatedUser`,\r\n\t\t\t{ faultId, userId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeRelatedUsers',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const addRelatedUser = async (faultId, userId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/addRelatedUser`,\r\n\t\t\t{ faultId, userId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeRelatedUsers',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const saveFaultComment = async (faultId, userId, text) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/addFaultComment`,\r\n\t\t\t{ faultId, userId, text },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'comment',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateFaultComment = async (faultId, commentId, text) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/updateFaultComment`,\r\n\t\t\t{ faultId, commentId, text },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'comment',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateFaultStatus = async (faultId, status) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/changeFaultStatus`,\r\n\t\t\t{ faultId, status },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeStatus',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getFaultOptionsByAssetOrSystem = async (asset, system) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/getFaultOptions`,\r\n\t\t\t{ asset, system },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tlet options = [];\r\n\t\tif (!res) return [];\r\n\t\tres.data.forEach((f) => {\r\n\t\t\toptions.push({ label: f.faultId, value: f._id });\r\n\t\t});\r\n\t\treturn options;\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport const createExternalFault = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (f[0] === 'images' && details.images) {\r\n\t\t\tfor (let i = 0; i < details.images.length; i++) {\r\n\t\t\t\tformData.append('images', details.images[i]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tformData.append(f[0], f[1]);\r\n\t\t}\r\n\t});\r\n\r\n\tlet config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': `multipart/form-data`\r\n\t\t},\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/createExternalFault`,\r\n\t\t\tformData,\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n}\r\n\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterByMultiSelect.js",["762","763"],"import { Button, IconButton, makeStyles, Menu, MenuItem } from '@material-ui/core';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam, removeQueryParam } from '../../api/genericApi';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { useQuery } from './customHooks/useQuery';\r\n\r\nexport const FilterByMultiSelect = ({ filterField, placeholder, filterIcon, optionsFunc }) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ menuOptions, setMenuOptions] = useState([]);\r\n    const [ orgMenuOptions, setOrgMenuOptions ] = useState([])\r\n    const [ anchorEl, setAnchorEl ] = useState(null);\r\n    const [ values, setValues ] = useState( query[filterField] || [])\r\n\r\n    useEffect(() => {\r\n        optionsFunc()\r\n        .then(data => {\r\n            setOrgMenuOptions(data);\r\n            if (query[filterField]) {\r\n                data = data.filter(op => query[filterField].indexOf(op.value) === -1 )\r\n            }\r\n            setMenuOptions(data);\r\n            \r\n        }) \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (values.length) {\r\n            \r\n            history.push({\r\n                path: location.pathname,\r\n                search: addQueryParam(location.search, [{ name: filterField, value: values }])\r\n            });\r\n            return;\r\n        }\r\n        if (query[filterField] && !values.length) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: removeQueryParam(location.search, filterField)\r\n            });\r\n        }\r\n        \r\n    }, [values])\r\n\r\n    useEffect(() => {\r\n        if(!menuOptions.length) {\r\n            setAnchorEl(null)\r\n        }\r\n    }, [menuOptions])\r\n\r\n    const createTag = (val, key) => {\r\n        let data = orgMenuOptions.find(op => val === op.value);\r\n        if (!data) return;\r\n        return (\r\n            <div className={classes.tag} key={key}>\r\n                <label className={classes.tagLabel}>\r\n                    { data.label }\r\n                </label>\r\n                <IconButton \r\n                    className={classes.removeBtn}\r\n                    onClick={removeChoice(data.value)}\r\n                >\r\n                    <CloseRoundedIcon className={classes.tagRemove}/>\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const removeChoice = value => event => {\r\n        event.stopPropagation();\r\n        getMenuOptions(value)\r\n        .then(data => {\r\n            setValues(values => values.filter(val => val !== value ));\r\n            if (!menuOptions.length) {\r\n                setAnchorEl(null)\r\n            }\r\n            setMenuOptions(data)\r\n        });  \r\n    }\r\n\r\n    const handleClick = val => event => {\r\n        setValues([...values, val]);\r\n        setMenuOptions(menuOptions => menuOptions.filter( op => op.value !== val));\r\n    }\r\n\r\n    const getMenuOptions = (value) => {\r\n        return new Promise((resolve, reject) => {\r\n            let mop = menuOptions;\r\n            mop.push(orgMenuOptions.find( op => op.value === value));\r\n            resolve(mop);\r\n        }) \r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                Boolean(orgMenuOptions.length) &&\r\n                <div className={classes.select}>\r\n                        <Button \r\n                            className={classes.filterBy}\r\n                            onClick={event => setAnchorEl(event.currentTarget)}\r\n                            startIcon={filterIcon}\r\n                        >\r\n                            { \r\n                                values.length \r\n                                ?   \r\n                                    <div className={classes.selectedContainer}>\r\n                                        {\r\n                                             values.map((val, i ) => createTag(val, i)) \r\n                                        }\r\n                                    </div>\r\n                               \r\n                                :   <label style={{ \r\n                                        padding: '5px 0px 5px 20px', \r\n                                        cursor: 'pointer' \r\n                                    }}>\r\n                                        {placeholder}\r\n                                    </label>\r\n                            }\r\n                        </Button>\r\n                        <Menu\r\n                            anchorEl={anchorEl}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={() => setAnchorEl(null)}\r\n                            classes={{\r\n                                paper : classes.menu\r\n                            }}\r\n                            keepMounted\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                        >\r\n                            {\r\n                                menuOptions.map((v,i) => {\r\n                                    return (\r\n                                        <MenuItem\r\n                                            key={i}\r\n                                            onClick={handleClick(v.value)}\r\n                                            className={classes.menuitem}\r\n                                            style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                        >\r\n                                            {v.label}\r\n                                        </MenuItem>\r\n                                    )\r\n                                    \r\n                                })\r\n                            }\r\n                        </Menu>\r\n               </div>\r\n            }          \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    select: {\r\n        margin: '5px',\r\n        height: 'auto',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    filterBy: {\r\n        textTransform: 'none',\r\n        color: 'white',\r\n        padding: '0 5px',\r\n        minHeight: '45px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '25px',\r\n        \r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        }\r\n    },\r\n    selectedContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        whiteSpace: 'nowrap',\r\n        flexWrap: 'wrap',\r\n        width: 'fit-content',\r\n        maxWidth: '400px'\r\n    },\r\n    menu: {\r\n        marginTop: '55px',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(10px)',\r\n        color: 'white'\r\n    },\r\n    menuitem: {\r\n        minWidth: '200px'\r\n    },\r\n    container: {\r\n        height: '45px',\r\n        border: '1px solid rgba(0,0,0,0.25)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            \r\n        }\r\n    },\r\n    focused: {\r\n        boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        background: 'rgba(0,0,0,0.1)',\r\n        backdropFilter: 'blur(40px)'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        \r\n    },\r\n    searchInput: {\r\n        height: '34px',\r\n        width: '98.5%',\r\n        margin: '3px 0.75%',\r\n        borderRadius: '5px 25px 25px 5px',\r\n        color: 'white',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '& fieldset': {\r\n            border: '0'\r\n        } \r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 5px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    tag: {\r\n        padding: '5px 10px',\r\n        borderRadius: '50px',\r\n        boxShadow: 'rgba(0,0,0,0.25) 0px 0px 3px 1px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        margin: '3px'\r\n    },\r\n    tagLabel: {\r\n        padding: '0 5px'\r\n    },\r\n    removeBtn: {\r\n        padding: '4px',\r\n        color: 'white'\r\n    },\r\n    tagRemove: {\r\n        fontSize: '16px'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\tasksApi.js",["764"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlockView.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultListView.js",["765","766","767"],"import { Grid, List, ListItem, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { FaultsContext } from '../../../context/FaultsContext';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { FaultMinified } from './FaultMinified';\r\nimport { FaultView } from './FaultView';\r\n\r\nexport const FaultListView = ({ faults }) => {\r\n    \r\n    const location = useLocation();\r\n    const classes = useStyles();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    const { setFaults } = useContext(FaultsContext);\r\n    const [ faultView, setFaultView ] = useState(null);\r\n    const [ faultsData, setFaultsData ] = useState([]);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setFaultsData(faults);\r\n        setIsLoading(false);\r\n    }, [faults])\r\n   \r\n    const updateFaultState = (faultId, field, data) => {\r\n        setIsLoading(true);\r\n        let faultIndex = faultsData.findIndex(f => f._id === faultId);\r\n        if (!faultIndex && faultIndex !== 0) return;\r\n        let lf = [...faultsData];\r\n        lf[faultIndex][field] = data;\r\n        setFaults(lf);\r\n        setIsLoading(false);\r\n    }\r\n \r\n    return (\r\n        <Grid container className={classes.main} justify='flex-start'>\r\n            <Grid item xs={12} md={5} lg={3} xl={3} className={classes.faultList}>\r\n                <List className={classes.list}>\r\n                {   \r\n                    isLoading ? \r\n                    null\r\n                    :\r\n                    faultsData.map((f,i) => \r\n                        <ListItem \r\n                            button \r\n                            className={classes.item}\r\n                            onClick={() => setFaultView(f)}\r\n                        >  \r\n                            <FaultMinified \r\n                                data={f}\r\n                                key={i}\r\n                            />\r\n                        </ListItem>\r\n                        \r\n                    )\r\n                }\r\n                </List>\r\n            </Grid>\r\n            {\r\n                !downSm &&\r\n                Boolean(faultView) &&\r\n                <Grid item md={7} lg={9} xl={9} className={classes.faultPresenter}>\r\n                    <FaultView \r\n                        fid={faultView.faultId}\r\n                        updateFaultState={updateFaultState}\r\n                        faultData={faultView}\r\n                    />\r\n                </Grid>\r\n            }\r\n            \r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    main: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        height: '70vh',\r\n        [theme.breakpoints.down('sm')]: {\r\n            border: '0',\r\n            height: 'auto'\r\n        }\r\n    },\r\n    faultList: {\r\n        borderRight: '1px solid rgba(255,255,255,0.2)',\r\n        height: '100%',\r\n        overflowY: 'scroll',\r\n        '&::-webkit-scrollbar': {\r\n            display: 'none'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            border: '0',\r\n            overflowY: 'unset',\r\n        }\r\n    },\r\n    list: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        padding: 0,\r\n        overflowY: 'unset'\r\n    },\r\n    item: {\r\n        height:'200px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '10px 0'\r\n        }\r\n    },\r\n    faultPresenter: {\r\n        background: 'rgba(0,0,0,0.1)',\r\n        height: '100%'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\usePermissions.js",["768","769"],"import React, { useContext, useState } from 'react';\r\nimport { getMinPermLevel } from '../../../api/permissionsApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\n\r\nexport const usePermissions = (module, action, userList) => {\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { permissions } = auth.user.role;\r\n\tconst minPermLevel = getMinPermLevel(action);\r\n    const permLevel = permissions.find((p) => p.module === module)[action];\r\n \r\n\tif (permLevel < minPermLevel) {\r\n\t\treturn false;\r\n\t} else if (permLevel === 1) {\r\n       \r\n\t\tif (userList) {\r\n\t\t\tif (userList.includes(auth.user._id)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n        }\r\n        return false;\r\n\t}\r\n\treturn true;\r\n};\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\permissionsApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\TimeActive.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultMinified.js",["770","771"],"import { Grid, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getFullAddress } from '../../../api/assetsApi';\r\nimport { StatusTag } from '../../reuseables/StatusTag';\r\nimport { UserItem } from '../../user/UserItem';\r\nimport { FaultLink } from './FaultLink';\r\n\r\nexport const FaultMinified = ({ data }) => {\r\n\tconst classes = useStyles();\r\n\tconst [minifiedData, setMinifiedData] = useState(data);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMinifiedData(data);\r\n\t}, [data]);\r\n\r\n\treturn (\r\n\t\t<Grid container className={classes.container} alignItems=\"flex-start\">\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tclassName={classes.topRow}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.asset}>\r\n\t\t\t\t\t\t{getFullAddress(minifiedData.asset, true)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid xs={12} item className={classes.title}>\r\n\t\t\t\t{minifiedData.title}\r\n\t\t\t</Grid>\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tclassName={classes.bottomRow}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={5} className={classes.userData}>\r\n\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\tsize={13}\r\n\t\t\t\t\t\tavatarSize={40}\r\n\t\t\t\t\t\tuser={minifiedData.owner}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FaultLink faultId={minifiedData.faultId} size={14} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={7} className={classes.status}>\r\n\t\t\t\t\t<StatusTag status={minifiedData.status} type={'fault'} />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t\tposition: 'relative',\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t\tpadding: '15px 5px',\r\n\t\tdisplay: '-webkit-box',\r\n\t\tWebkitLineClamp: '2',\r\n\t\tWebkitBoxOrient: 'vertical',\r\n\t\toverflow: 'hidden',\r\n\t\ttextOverflow: 'ellipsis',\r\n\t\theight: '60px',\r\n\t},\r\n\ttopRow: {\r\n\t\tpadding: '5px',\r\n\t\tmaxHeight: '60px',\r\n\t},\r\n\tuserData: {\r\n\t\tpadding: '5px 0px',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'flex-start',\r\n\t},\r\n\tbottomRow: {\r\n\t\theight: '50px',\r\n\t},\r\n\tasset: {\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tpadding: '5px 15px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tboxShadow: 'rgba(0,0,0,0.3) 1px 1px 5px 2px',\r\n\t\twidth: 'fit-content',\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tfaultLink: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\tmargin: '3px 0',\r\n\t},\r\n\tstatus: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t},\r\n\tlink: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemRelatedUsers.js",["772","773"],"import React, { useState, useContext } from 'react';\r\nimport { Grid, makeStyles, Collapse, Tooltip, IconButton, useMediaQuery, Fade } from '@material-ui/core';\r\nimport { UserItem } from '../../user/UserItem';\r\nimport { getFullName } from '../../../api/genericApi';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { AlertDialog } from '../../reuseables/AlertDialog';\r\nimport { addUser, removeSystemUser } from '../../../api/systemsApi';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport { AddRelatedUser } from './AddRelatedUser';\r\nimport { Can } from '../../reuseables/Can';\r\nimport { SnackbarContext } from '../../../context/SnackbarContext';\r\n\r\nexport const SystemRelatedUsers = ({ userList, data, setData, systemId, isOpen }) => {\r\n\tconst classes = useStyles();\r\n    const downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n    const { setSnackbar } = useContext(SnackbarContext);\r\n\tconst [relatedUsers, setRelatedUsers] = useState(userList || []);\r\n\tconst [showControls, setShowControls] = useState(null);\r\n\tconst [showAddRelatedUser, setShowAddRelatedUser] = useState(false);\r\n\tconst [alertDialog, setAlertDialog] = useState(null);\r\n\tconst { t, i18n } = useTranslation();\r\n\r\n\tconst confirmRemove = (relatedUser) => (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tlet toRemove = relatedUsers.find((user) => user._id === relatedUser._id);\r\n\t\tsetAlertDialog({\r\n\t\t\ttext: `${t('systemsModule.userRemoveConfirmText')} ${getFullName(toRemove)}?`,\r\n\t\t\ttitle: t('systemsModule.userRemoveConfirmTitle'),\r\n\t\t\thandleConfirm: async () => {\r\n\t\t\t\tconst res = await removeSystemUser(systemId, relatedUser._id);\r\n\t\t\t\tif (res.status === 403) {\r\n                    setSnackbar(res)\r\n                } else if (res) {\r\n\t\t\t\t\tsetData(res);\r\n\t\t\t\t\tsetAlertDialog(null);\r\n\t\t\t\t\tsetRelatedUsers([]);\r\n\t\t\t\t\tsetRelatedUsers(res.relatedUsers);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thandleCancel: () => setAlertDialog(null),\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleAddRelatedUser = () => {\r\n\t\tif (showAddRelatedUser) {\r\n\t\t\tsetShowAddRelatedUser(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetShowAddRelatedUser(true);\r\n\t};\r\n\r\n\tconst handleAddLinekdUser = async (userId) => {\r\n\t\tconst res = await addUser(systemId, userId);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res)\r\n\t\t} else if (res) {\r\n\t\t\tsetData(res);\r\n\t\t\tsetRelatedUsers(res.relatedUsers);\r\n\t\t\tsetShowAddRelatedUser(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Collapse in={isOpen}>\r\n\t\t\t<div className={classes.linkedusers}>\r\n\t\t\t\t<Grid container justify=\"flex-start\" className={classes.container} alignItems=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.titleContainer}>\r\n\t\t\t\t\t\t<div className={classes.title}>{t('systemsModule.assignedUsers')}</div>\r\n\t\t\t\t\t\t<Can\r\n\t\t\t\t\t\t\tmodule=\"systems\"\r\n                            action=\"changeRelatedUsers\"\r\n\t\t\t\t\t\t\tuserList={[...data.relatedUsers.map((u) => u._id), data.owner]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<IconButton className={classes.addBtn} onClick={handleAddRelatedUser}>\r\n\t\t\t\t\t\t\t\t<AddRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t\t{showAddRelatedUser && (\r\n\t\t\t\t\t\t\t\t<AddRelatedUser\r\n\t\t\t\t\t\t\t\t\tisOpen={showAddRelatedUser}\r\n\t\t\t\t\t\t\t\t\thandleClose={handleAddRelatedUser}\r\n\t\t\t\t\t\t\t\t\trelatedUsers={relatedUsers}\r\n\t\t\t\t\t\t\t\t\thandleSave={handleAddLinekdUser}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{relatedUsers.length ? (\r\n\t\t\t\t\t\trelatedUsers.map((relatedUser, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={7} md={6} lg={3} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userCont}\r\n\t\t\t\t\t\t\t\t\t\tonMouseEnter={() => setShowControls(i)}\r\n\t\t\t\t\t\t\t\t\t\tonMouseLeave={() => setShowControls(null)}\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\t\t\t\t\tuser={relatedUser}\r\n\t\t\t\t\t\t\t\t\t\t\tshowTitle\r\n\t\t\t\t\t\t\t\t\t\t\tshowPhone\r\n\t\t\t\t\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\t\t\t\t\tavatarSize={'50px'}\r\n\t\t\t\t\t\t\t\t\t\t\tsize={12}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<Can\r\n\t\t\t\t\t\t\t\t\t\t\tmodule=\"systems\"\r\n\t\t\t\t\t\t\t\t\t\t\taction=\"changeRelatedUsers\"\r\n\t\t\t\t\t\t\t\t\t\t\tuserList={[...data.relatedUsers.map((u) => u._id), data.owner]}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Fade in={showControls === i || downSm}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.removeUser')}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.removeuser}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={confirmRemove(relatedUser)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ClearRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className={classes.noUsers}>{t('systemsModule.noUsersAssigned')}</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{Boolean(alertDialog) && <AlertDialog alertDialog={alertDialog} open={Boolean(alertDialog)} />}\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t</Collapse>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tlinkedusers: {\r\n\t\twidth: 'auto',\r\n\t\tmargin: '10px',\r\n\t\tborderRadius: '25px',\r\n\t\tbackground: 'rgba(0,0,0,0.1)',\r\n\t\tboxShadow: '0px 0px 5px 2px rgba(0,0,0,0.2)',\r\n\t},\r\n\tcontainer: {\r\n\t\twidth: 'auto',\r\n\t\tpadding: '5px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tborderRadius: '5px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tgridItem: {\r\n\t\tborderRadius: '10px',\r\n\t\tpadding: '5px 10px',\r\n\t\tmargin: '5px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.5)',\r\n\t\t\tboxShadow: '-0px 0px 5px 2px rgba(0,0,0,0.2)',\r\n\t\t},\r\n\t},\r\n\ttitleContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmargin: '0 10px',\r\n\t\tpadding: '5px 5px 10px',\r\n\t},\r\n\taddBtn: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '2px',\r\n\t\tborderRadius: '50px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.2)',\r\n\t\t},\r\n\t},\r\n\tcell: {\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tuserCont: {\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpadding: '5px 10px',\r\n\t\tposition: 'relative',\r\n\t},\r\n\tremoveuser: {\r\n\t\tpadding: '4px',\r\n\t\tmargin: 'auto 4px',\r\n\t\theight: '50%',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.1)',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',\r\n\t\tpadding: '8px',\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t},\r\n\tnoUsers: {\r\n\t\tmargin: '10px',\r\n\t\tpadding: '0px 0 15px',\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '14px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tpadding: '10px 20px',\r\n\t\tborderRadius: '25px',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemControls.js",["774","775","776","777","778"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlock.js",["779"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { FaultMinified } from './FaultMinified';\r\nimport { Link } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\n\r\nexport const FaultBlock = ({ data }) => {\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div \r\n            className={clsx(classes.faultContainer)}\r\n        >\r\n            <Link\r\n                to={`/workspace/faults/${data.faultId}`}\r\n                style={{ textDecoration: 'none' }}\r\n            >\r\n                <FaultMinified data={data}  />\r\n            </Link>\r\n        </div>                               \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({ \r\n   faultContainer: {\r\n    padding: '10px',\r\n    border: '1px solid rgba(255,255,255,0.2)',\r\n    borderRadius: '7px',\r\n    background: 'rgba(0,0,0,0.4)',\r\n    margin : '5px 0'\r\n   }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemName.js",["780","781"],"import React, { useState } from 'react';\r\nimport { makeStyles, useMediaQuery, Button, Fade, OutlinedInput, FormControl, InputLabel, ClickAwayListener, IconButton, } from '@material-ui/core';\r\nimport SaveRoundedIcon from '@material-ui/icons/SaveRounded';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { updateSystemName } from '../../../api/systemsApi'\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\r\nimport { green, red } from '@material-ui/core/colors';\r\n\r\nexport const SystemName = ({ systemId, editName, setEditName, setSystemName, title }) => {\r\n\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const [ textValue, setTextValue ] = useState(title);\r\n    const [ editNameHover, setEditNameHover ] = useState(false);\r\n\r\n    const handleChange = event => {\r\n        setTextValue(event.target.value);\r\n    };\r\n\r\n    const handleSave = async () => {\r\n         await updateSystemName(systemId, textValue);\r\n         setSystemName(textValue);\r\n         setEditName(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                editName ?\r\n                <ClickAwayListener onClickAway={() => setEditName(false)}>\r\n                    <div className={classes.editContainer}>\r\n                        <FormControl variant='outlined' className={classes.textInput}>\r\n                            <InputLabel htmlFor='olip' shrink>{t(\"systemsModule.systemName\")}</InputLabel>\r\n                            <OutlinedInput\r\n                                autoFocus\r\n                                notched\r\n                                id='olip' \r\n                                value={ textValue }\r\n                                onChange={handleChange}\r\n                                labelWidth={75}\r\n                                className={classes.input} \r\n                            />\r\n                        </FormControl>\r\n                        <IconButton \r\n                            className={classes.save}\r\n                            onClick={handleSave}\r\n                        >\r\n                            <SaveRoundedIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                        <IconButton \r\n                            className={classes.cancel}\r\n                            onClick={() => setEditName(false)}\r\n                        >\r\n                            <ClearRoundedIcon className={classes.icon} />\r\n                        </IconButton>\r\n                       </div> \r\n                </ClickAwayListener>\r\n                \r\n                : \r\n                <Button \r\n                    className={classes.systemName}\r\n                    onMouseEnter={() => setEditNameHover(true)}\r\n                    onMouseLeave={() => setEditNameHover(false)}\r\n                    onClick={() => { setEditNameHover(false); setEditName(true)}}\r\n                >\r\n                    { title }\r\n                    {\r\n                        editNameHover &&\r\n                        <Fade in={true} timeout={700}>\r\n                            <EditRoundedIcon style={{ \r\n                                margin: '0 10px 0 0',\r\n                                fontSize: '16px'\r\n                            }}/>\r\n                        </Fade>\r\n                        \r\n                    }\r\n                </Button>\r\n            }\r\n        </React.Fragment>                    \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    editContainer: {\r\n        height: 'auto',\r\n        margin: 'auto 0',\r\n        width: '100%',\r\n        dispaly: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    systemName: {\r\n        width: 'auto',\r\n        color: 'white',\r\n        margin: 'auto 20px',\r\n        fontSize: '16px',\r\n        whiteSpace: 'wrap',\r\n        borderRadius: '50px',\r\n        padding: '5px 20px',\r\n        textAlign: 'left'\r\n    },\r\n    textInput: {\r\n        width: '65%',\r\n        margin: '15px 5px 15px 10px',\r\n        '& label.Mui-focused': {\r\n            color: 'white',\r\n        },\r\n        '& label': {\r\n            color: 'white'\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: 'white',\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'rgba(255,255,255,0.7)',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'rgba(255,255,255,0.7)',\r\n              },\r\n        },\r\n        \r\n    },\r\n    input: {\r\n        color: 'white',\r\n        height: '45px',\r\n        borderRadius: '25px',\r\n        padding: '10px',\r\n        '&:focus': {\r\n            border: '2px solid white'\r\n        }\r\n\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        fontSize: '20px',\r\n        padding: '0px',\r\n        '&hover': {\r\n\r\n        }\r\n    },\r\n    save: {\r\n        background: green[800],\r\n        padding: '8px',\r\n        margin: '18px 5px',\r\n        \r\n    },\r\n    cancel: {\r\n        background: red[800],\r\n        padding: '8px',\r\n        margin: '18px 5px',\r\n       \r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBox.js",["782","783","784"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam, removeQueryParam, queryParamsToObject, specialStringPurge} from '../../api/genericApi';\r\nimport { OutlinedInput, FormControl, makeStyles, Grid, ClickAwayListener } from '@material-ui/core'\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport { useQuery } from './customHooks/useQuery';\r\nimport clsx from 'clsx';\r\n\r\nexport const SearchBox = ({ placeholder, filterField, returnValue }) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const [ onFocus, setOnFocus ] = useState(false);\r\n    const [ searchText, setSearchText ] = useState(specialStringPurge(query[filterField]) || '');\r\n    \r\n    useEffect(() => {\r\n        if (Boolean(searchText) && searchText === specialStringPurge(query[filterField])) return;\r\n        const timeOutId = setTimeout(() => handleSearch(searchText), 700);\r\n        return () => clearTimeout(timeOutId);\r\n    }, [searchText])\r\n\r\n    const handleChange = event => {\r\n        setSearchText(event.target.value)\r\n    }\r\n\r\n    const handleSearch = searchText => {\r\n        if (returnValue) {\r\n            returnValue(searchText);\r\n            return;\r\n       }\r\n        if (searchText) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: addQueryParam(location.search, [{ name: filterField, value: searchText}])\r\n            });\r\n            return; \r\n        }\r\n        history.push({\r\n            path: location.pathname,\r\n            search: removeQueryParam(location.search, filterField)\r\n        });\r\n        \r\n    }\r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={() => setOnFocus(false)}>\r\n            <div className={clsx(classes.container , onFocus && classes.focused)} xs={11} sm={9} md={8} lg={6}>\r\n                    <SearchRoundedIcon className={classes.icon}/>\r\n                    <FormControl variant='outlined' className={classes.form}>\r\n                        <OutlinedInput\r\n                            value={ searchText || '' }\r\n                            onChange={handleChange}\r\n                            placeholder={placeholder}\r\n                            className={clsx(classes.searchInput)}\r\n                            onFocus={() => setOnFocus(true)}\r\n                        />\r\n                    </FormControl>\r\n            </div>\r\n        </ClickAwayListener>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        margin: '5px',\r\n        height: '45px',\r\n        maxWidth: '450px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        transition: 'box-shadow 0.2s ease-in',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            transition: 'box-shadow 0.2s ease-in'\r\n        }\r\n\r\n    },\r\n    focused: {\r\n        boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        background: 'rgba(0,0,0,0.1)',\r\n        backdropFilter: 'blur(40px)'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        \r\n    },\r\n    searchInput: {\r\n        height: '34px',\r\n        width: '98.5%',\r\n        margin: '3px 0.75%',\r\n        borderRadius: '5px 25px 25px 5px',\r\n        color: 'white',\r\n        '& input': {\r\n            padding: '12.5px 14px',\r\n        },\r\n        '& fieldset': {\r\n            border: '0'\r\n        } \r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 5px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        \r\n    }\r\n}))\r\n\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SortBy.js",["785","786"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { makeStyles, ButtonGroup, Button, Menu, MenuItem } from '@material-ui/core'\r\nimport SortRoundedIcon from '@material-ui/icons/SortRounded';\r\nimport ArrowDropUpOutlinedIcon from '@material-ui/icons/ArrowDropUpOutlined';\r\nimport ArrowDropDownOutlinedIcon from '@material-ui/icons/ArrowDropDownOutlined';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam } from '../../api/genericApi';\r\nimport { useQuery } from './customHooks/useQuery';\r\nimport { useTranslation } from 'react-i18next'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\n\r\nexport const SortBy = ({menuOptions, handleSortChange}) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const { t, i18n } = useTranslation();\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ values, setValues ] = useState({\r\n        sortBy: query.sortBy || '',\r\n        sortOrder: query.sortOrder || 'asc' \r\n    })\r\n    const [ anchorEl, setAnchorEl ] = useState(null);\r\n \r\n    useEffect(() => {\r\n        if (!values.sortBy) return;\r\n        history.push({\r\n            path: location.pathname,\r\n            search: addQueryParam(location.search, [{ name: 'sortBy', value: values.sortBy}, {name: 'sortOrder', value: values.sortOrder}])\r\n        })\r\n    }, [values])\r\n\r\n    const handleClick = menuOption => event => {\r\n        setValues({\r\n            ...values, \r\n            sortBy: menuOption\r\n        })\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleChange = () => {\r\n        if (values.sortBy) {\r\n            setValues({\r\n                ...values, \r\n                sortOrder: values.sortOrder === 'asc' ? 'desc' : 'asc'\r\n            })\r\n        }\r\n    }\r\n    \r\n    const getOptionText = (option) => {\r\n        const result = menuOptions.find( mo => option === mo.field);\r\n        if (result) {\r\n            return result.text\r\n        }\r\n        return t(\"sort.sortBy\")\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup \r\n                className={classes.sort}\r\n            >\r\n\r\n                <Button \r\n                    className={classes.sortBy}\r\n                    onClick={event => setAnchorEl(event.currentTarget)}\r\n                    startIcon={<SortRoundedIcon className={classes.icon}/>}\r\n                >\r\n                    {values.sortBy ? getOptionText(values.sortBy) : `${t(\"sort.sortBy\")}`}\r\n                </Button>\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={() => setAnchorEl(null)}\r\n                    classes={{\r\n                        paper : classes.menu\r\n                    }}\r\n                    keepMounted\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                >\r\n                    {\r\n                        menuOptions.map((v,i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    key={i}\r\n                                    onClick={handleClick(v.field)}\r\n                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                >\r\n                                    {v.text}\r\n                                </MenuItem>\r\n                            )\r\n                            \r\n                        })\r\n                    }\r\n                </Menu>\r\n                <Button\r\n                    endIcon={ values.sortOrder === 'asc' ? <ArrowDropUpOutlinedIcon /> : <ArrowDropDownOutlinedIcon />}\r\n                    onClick={handleChange}\r\n                    className={classes.sortOrder}\r\n                >\r\n                    { `${ values.sortOrder === 'asc' ? `${t(\"sort.asc\")}` : `${t(\"sort.desc\")}`}`}\r\n                </Button> \r\n            </ButtonGroup>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    sort: {\r\n        margin: '5px',\r\n        height: '45px',\r\n        \r\n    },\r\n    sortBy: {\r\n        borderRadius: '25px 0 0 25px',\r\n        padding: '0 15px 0 3px',\r\n        color: 'white',\r\n        width: 'auto',\r\n        whiteSpace: 'nowrap',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    sortOrder: {\r\n        borderRadius: '0px 25px 25px 0px',\r\n        padding: 0,\r\n        color: 'white',\r\n       width: '100px',\r\n       border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    menu: {\r\n        marginTop: '55px',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(10px)',\r\n        color: 'white'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 6px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        \r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetControls.js",["787"],"import { Fade, IconButton, makeStyles, Tooltip } from '@material-ui/core';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport const AssetControls = ({ removeAsset, toggleEditMode }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t, i18n } = useTranslation();\r\n\r\n\treturn (\r\n\t\t<Fade in={true} timeout={500}>\r\n\t\t\t<div className={classes.container}>\r\n\t\t\t\t{/* <Tooltip title={t('assetsModule.changeOwner')}>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tclassName={classes.iconbutton}\r\n\t\t\t\t\t\tonClick={toggleEditMode('address')}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<EditRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip> */}\r\n\t\t\t\t<Tooltip title={t('assetsModule.editAddress')}>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tclassName={classes.iconbutton}\r\n\t\t\t\t\t\tonClick={toggleEditMode('address')}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<EditRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t\t<Tooltip title={t('assetsModule.deleteAsset')}>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tclassName={classes.iconbutton}\r\n\t\t\t\t\t\tonClick={removeAsset}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DeleteOutlineRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</div>\r\n\t\t</Fade>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tposition: 'absolute',\r\n\t\tright: 0,\r\n\t\ttop: '55%',\r\n\t},\r\n\ticonbutton: {\r\n\t\tmargin: '7px 5px',\r\n\t\tboxShadow: 'rgba(0,0,0,0.2) 0px 0px 3px 3px ',\r\n\t\tbackground: theme.palette.primary.main,\r\n\t\tcolor: 'white',\r\n\t\tpadding: '8px',\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\AddRelatedUser.js",["788","789","790"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Paper, FormControl, IconButton, useMediaQuery, Fade, Modal, Backdrop,Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { getUserList } from '../../../api/userApi';\r\nimport clsx from 'clsx'\r\n\r\n\r\n\r\nexport const AddRelatedUser = ({ handleClose, handleSave, isOpen, relatedUsers }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ selectedUser, setSelectedUser ] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        getUserList()\r\n        .then(data => {\r\n            let ul = relatedUsers.map(l => l._id);\r\n            setUserList(data.filter(u => ul.indexOf(u._id) === -1 ));\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = event => {\r\n        setSelectedUser(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={isOpen}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xl={3}>\r\n                        <Paper \r\n                            className={classes.paper} \r\n                            style={{ direction: lang.dir }}\r\n                            elevation={6}    \r\n                        >\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {t(\"systemsModule.addRelatedUserTitle\")}\r\n                                </div>\r\n                                <IconButton className={classes.closeBtn} onClick={handleClose}>\r\n                                    <ClearRoundedIcon className={classes.icon}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div className={classes.instructions}>\r\n                                {t(\"systemsModule.chooseUserToAdd\")}\r\n                            </div>\r\n                            <FormControl variant='outlined' className={classes.textInput} >\r\n                                <Select\r\n                                    value={selectedUser}\r\n                                    onChange={handleChange}\r\n                                    className={classes.menu}\r\n                                    MenuProps={{\r\n                                        classes: {\r\n                                            paper: classes.menupaper,\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        userList.map( (user, i) => {\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    className={classes.menuitem}\r\n                                                    value={user._id} \r\n                                                    key={i}\r\n                                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                                >\r\n                                                    {`${user.firstName} ${user.lastName}`}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div className={classes.controls}>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.save)}\r\n                                    onClick={() => handleSave(selectedUser)}\r\n                                    disabled={!selectedUser}\r\n                                >\r\n                                    {t(\"alert.confirm\")}\r\n                                </Button>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.cancel)}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    {t(\"alert.cancel\")}\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    \r\n                </Grid> \r\n                \r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px',\r\n        borderRadius: '10px',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '18px',\r\n        padding: '5px 10px',\r\n        height: 'fit-content'\r\n    },\r\n    closeBtn: {\r\n        fontSize: '20px',\r\n        height: '40px',\r\n        width: '40px'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        borderRadius: '25px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    instructions: {\r\n        width: 'auto',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '12px',\r\n        margin: '0px 10px'\r\n    },\r\n    menu: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(10px)',\r\n        maxHeight: '200px',\r\n        overflowY: 'auto',\r\n    },\r\n    menuitem: {\r\n        color: 'white'\r\n    },\r\n    textInput: {\r\n        margin: '20px 5px',\r\n        width: '300px',\r\n        '& input': {\r\n            color: 'white',\r\n            paddingLeft: '20px',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        }    \r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Notification.js",["791","792","793","794","795","796","797","798","799","800"],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UpsertUser.js",["801","802","803","804","805","806","807","808","809","810","811","812","813","814","815"],"import DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n\tAvatar,\r\n\tBackdrop,\r\n\tButton,\r\n\tChip,\r\n\tFade,\r\n\tFormControlLabel,\r\n\tFormHelperText,\r\n\tGrid,\r\n\tIconButton,\r\n\tLinearProgress,\r\n\tmakeStyles,\r\n\tMenuItem,\r\n\tModal,\r\n\tPaper,\r\n\tSelect,\r\n\tSwitch,\r\n\tTextField,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { ClearRounded, OpenInNewOutlined } from '@material-ui/icons';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport clsx from 'clsx';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getFault } from '../../../api/faultsApi';\r\nimport { getFullName } from '../../../api/genericApi';\r\nimport { createSystemMenuOptions, getAssetsSuggestions, getSystemsByAsset } from '../../../api/systemsApi';\r\nimport { createUserOptions, getUserDataById } from '../../../api/userApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { UserItem } from '../../user/UserItem';\r\nimport heLocale from 'date-fns/locale/he';\r\nimport { getRoles, getRolesSuggestions } from '../../../api/permissionsApi';\r\n\r\nexport const UpsertUser = ({ handleClose, handleSave, handleUpdate, userId }) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { t } = useTranslation();\r\n\tconst [mode, setMode] = useState(userId ? 'update' : 'create');\r\n\tconst [errors, setErrors] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [roles, setRoles] = useState([]);\r\n\tconst [details, setDetails] = useState({\r\n\t\ttenant: auth.user.tenant,\r\n\t\temail: '',\r\n\t\tfirstName: '',\r\n\t\tlastName: '',\r\n\t\tbirthDate: null,\r\n\t\trole: null,\r\n\t\tphoneNumber: '',\r\n\t\temployedBy: '',\r\n\t\tisActive: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetRoles()\r\n\t\t\t.then((data) => {\r\n\t\t\t\treturn getRolesSuggestions(data);\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetRoles(data || []);\r\n\t\t\t\tif (!userId) {\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\treturn getUserDataById(userId);\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (!res) return;\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tsetDetails({\r\n                    ...res,\r\n                    role: res.role._id\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconst validateFields = () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet errList = [];\r\n\t\t\tif (!details.email) {\r\n\t\t\t\terrList.push({ field: 'email', text: t('errors.isRequired') });\r\n\t\t\t}\r\n\t\t\tif (!details.firstName) {\r\n\t\t\t\terrList.push({ field: 'firstName', text: t('errors.isRequired') });\r\n\t\t\t}\r\n\t\t\tif (!details.lastName) {\r\n\t\t\t\terrList.push({ field: 'lastName', text: t('errors.isRequired') });\r\n\t\t\t}\r\n\t\t\tif (!details.phoneNumber) {\r\n\t\t\t\terrList.push({ field: 'phoneNumber', text: t('errors.isRequired') });\r\n\t\t\t}\r\n\t\t\tif (!details.role) {\r\n\t\t\t\terrList.push({ field: 'role', text: t('errors.isRequired') });\r\n\t\t\t}\r\n\r\n\t\t\tif (errList.length) {\r\n\t\t\t\tsetErrors(errList);\r\n\t\t\t\tresolve(false);\r\n\t\t\t}\r\n\t\t\tresolve(true);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tvalidateFields()\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (!res) return;\r\n\t\t\t\tif (mode === 'update') {\r\n\t\t\t\t\thandleUpdate({ userId, ...details });\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\thandleSave(details);\r\n\t\t\t})\r\n\t\t\t.finally(handleClose);\r\n\t};\r\n\r\n\tconst handleChange = (field) => async (event) => {\r\n\t\tlet val = field === 'isActive' ? event.target.checked : event.target.value;\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\t[field]: val,\r\n\t\t});\r\n\t\tif (errors.length) {\r\n\t\t\tsetErrors(errors.filter((err) => err.field !== field));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleChangeDate = (date) => {\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\tbirthDate: date,\r\n\t\t});\r\n\t};\r\n\r\n\treturn isLoading ? (\r\n\t\t<LinearProgress />\r\n\t) : (\r\n\t\t<Modal\r\n\t\t\topen={true}\r\n\t\t\tonClose={handleClose}\r\n\t\t\tcloseAfterTransition\r\n\t\t\tBackdropComponent={Backdrop}\r\n\t\t\tBackdropProps={{\r\n\t\t\t\ttimeout: 500,\r\n\t\t\t}}\r\n\t\t\tclassName={classes.modal}\r\n\t\t>\r\n\t\t\t<Fade in={true}>\r\n\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\" style={{ outline: '0' }}>\r\n\t\t\t\t\t<Grid item xs={12} sm={10} md={8} lg={8} xl={6} className={classes.gridCont}>\r\n\t\t\t\t\t\t<Paper elevation={6} className={classes.paper} style={{ direction: lang.dir }}>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.headerRow}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.title}>\r\n\t\t\t\t\t\t\t\t\t\t{mode === 'update'\r\n\t\t\t\t\t\t\t\t\t\t\t? t('users.upsert.editUserDetails')\r\n\t\t\t\t\t\t\t\t\t\t\t: t('users.upsert.createUser')}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.close}>\r\n\t\t\t\t\t\t\t\t\t\t<IconButton className={classes.iconBtn} onClick={handleClose}>\r\n\t\t\t\t\t\t\t\t\t\t\t<ClearRounded className={classes.icon} />\r\n\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>{t('users.upsert.generalDetails')}</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={t(`users.email`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `email`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('email')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={'medium'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `email`).length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tt('errors.isRequired')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: 60,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `email`).length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'rgb(244, 67, 54)',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={t(`users.firstName`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `firstName`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('firstName')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={'medium'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `firstName`).length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tt('errors.isRequired')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: 60,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `firstName`).length >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0 && 'rgb(244, 67, 54)',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={t(`users.lastName`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `lastName`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('lastName')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={'medium'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `lastName`).length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tt('errors.isRequired')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: 60,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `lastName`).length >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0 && 'rgb(244, 67, 54)',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={t(`users.phoneNumber`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `phoneNumber`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.phoneNumber}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('phoneNumber')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={'medium'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `phoneNumber`).length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tt('errors.isRequired')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: 60,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `phoneNumber`).length >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0 && 'rgb(244, 67, 54)',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils} locale={heLocale}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tformat=\"dd/MM/yyyy\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={t(`users.birthDate`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.birthDate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeDate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinputVariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tautoOk={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableFuture={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlg={4}\r\n\t\t\t\t\t\t\t\t\t\t\t\txl={4}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textContainer}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={t(`users.employedBy`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `employedBy`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.employedBy}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('employedBy')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={'medium'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `employedBy`).length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tt('errors.isRequired')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: 60,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `employedBy`).length >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0 && 'rgb(244, 67, 54)',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>{t('users.upsert.role')}</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `role`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.role}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange(`role`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{roles.map((role, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={role.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{role.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{errors.filter((e) => e.field === 'asset').length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormHelperText style={{ color: '#f44336', marginRight: '15px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{t('errors.isRequired')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>{t('users.upsert.activity')}</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.switchLabel}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={details.isActive}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('isActive')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tswitchBase: classes.switchBase,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked: classes.checked,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrack: classes.track,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdetails.isActive\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? t('users.upsert.userActive')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: t('users.upsert.userInactive')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.controls}>\r\n\t\t\t\t\t\t\t\t\t<Button className={clsx(classes.control, classes.save)} onClick={handleConfirm}>\r\n\t\t\t\t\t\t\t\t\t\t{t('controls.confirm')}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button className={clsx(classes.control, classes.cancel)} onClick={handleClose}>\r\n\t\t\t\t\t\t\t\t\t\t{t('controls.cancel')}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Fade>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmodal: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t},\r\n\r\n\tgridCont: {\r\n\t\theight: 'fit-content',\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tborderRadius: '10px',\r\n\t\tpadding: '10px 20px',\r\n\t\toverflowY: 'overlay',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: '81vh',\r\n\t\t\ttop: 0,\r\n\t\t\tborderRadius: '0',\r\n\t\t\tborder: '0',\r\n\t\t\tpadding: '10px 5px',\r\n\t\t},\r\n\t\t'&:focus': {\r\n\t\t\toutline: 'none',\r\n\t\t},\r\n\t},\r\n\theaderRow: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t\twidth: '100%',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '20px 10px 10px',\r\n\t\tfontSize: '20px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t},\r\n\ticonBtn: {\r\n\t\tmargin: '10px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '20px',\r\n\t},\r\n\tsection: {\r\n\t\tmargin: '10px 5px',\r\n\t},\r\n\tsectionTitle: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t\tpadding: '10px 20px',\r\n\t\twidth: 'fit-content',\r\n\t\tborderRadius: '10px 10px 0 0',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\twhiteSpace: 'nowrap',\r\n\t},\r\n\tfields: {\r\n\t\tpadding: '10px 20px',\r\n\t\tborderRadius: '0px 10px 10px 10px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tpadding: '10px',\r\n\t\t},\r\n\t},\r\n\ttextContainer: {\r\n\t\tpadding: '5px',\r\n\t},\r\n\ttextField: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\tselectInput: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: 'rgba(0,0,0,0.8)',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\theight: '200px',\r\n\t\toverflowY: 'auto',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmarginRight: '7px',\r\n\t\tmarginLeft: '-5px',\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: 'white',\r\n\t\twidth: '100%',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.1)',\r\n\t\t},\r\n\t},\r\n\tcontrols: {\r\n\t\tborderTop: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '10px 0',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t},\r\n\tcontrol: {\r\n\t\twidth: '30%',\r\n\t\tborder: '1px solid rgba(255,255,255,0.5)',\r\n\t\tfontSize: '16px',\r\n\t\tmargin: '5px',\r\n\t\tpadding: '5px 30px',\r\n\t\tborderRadius: '30px',\r\n\t\tcolor: 'white',\r\n\t},\r\n\tsave: {\r\n\t\tbackground: 'rgba(0,0,0,0.2)',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'black',\r\n\t\t},\r\n\t\t'&:disabled': {\r\n\t\t\tcolor: 'rgba(255,255,255,0.3)',\r\n\t\t},\r\n\t},\r\n\tcancel: {\r\n\t\t'&:hover': {\r\n\t\t\tboxShadow: 'inset rgba(255,255,255,0.3) 0 0 2px 1px',\r\n\t\t},\r\n\t},\r\n\tchips: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\tchip: {\r\n\t\theight: '50px',\r\n\t\tfontSize: '14px',\r\n\t\tborderRadius: '50px',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-start',\r\n\t\tcolor: 'white',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\t\tboxShadow: 'inset lightgrey 0px 0px 1px 1px',\r\n\t\t},\r\n\t},\r\n\tuserCont: {\r\n\t\theight: 'fit-content',\r\n\t\tpadding: 0,\r\n\t\tmargin: 0,\r\n\t\tmargin: '5px 0',\r\n\t},\r\n\tchipsCont: {\r\n\t\theight: 'fit-content',\r\n\t\tpadding: 0,\r\n\t\tmargin: '3px',\r\n\t\tborderRadius: '50px',\r\n\t\tbackground: 'rgba(255,255,255,0.1)',\r\n\t\tboxShadow: 'inset rgba(0,0,0,0.5) 0px 0px 2px 1px',\r\n\t\tdisplay: 'flex',\r\n\t\tjutifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tremoveIcon: {\r\n\t\tcolor: 'rgba(255,255,255,0.2)',\r\n\t\tpadding: '5px',\r\n\t\tmarginRight: '5px',\r\n\t\tborderRadius: '50px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.8)',\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t},\r\n\tradioGroup: {\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\talignitems: 'center',\r\n\t},\r\n\tradioBtn: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '15px',\r\n\t},\r\n\tfilesUploaded: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '0 15px',\r\n\t},\r\n\tuploadBtn: {\r\n\t\tmargin: '9px 0',\r\n\t\tbackground: 'rgba(0,0,0,0.1)',\r\n\t\tcolor: 'white',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tborderRadius: '50px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\t'&:hover': {\r\n\t\t\tboxShadow: 'inset white 0 0 2px 1px',\r\n\t\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\t},\r\n\t},\r\n\timageRow: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpadding: '10px 5px',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tpreviewImage: {\r\n\t\theight: '50px',\r\n\t\twidth: '100px',\r\n\t},\r\n\tremoveImageBtn: {\r\n\t\tcolor: 'rgba(255,255,255,0.5)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.5)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '6px',\r\n\t\t'&:hover': {\r\n\t\t\tcolor: 'white',\r\n\t\t\tborderColor: 'white',\r\n\t\t},\r\n\t},\r\n\tuploadedImagesTitle: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '10px 5px',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tswitchLabel: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '10px',\r\n\t},\r\n\tswitchBase: {\r\n\t\tcolor: 'rgba(255,255,255,0.4)',\r\n\t\t'&$checked': {\r\n\t\t\tcolor: 'rgba(255,255,255,1)',\r\n\t\t},\r\n\t\t'&$checked + $track': {\r\n\t\t\tbackgroundColor: 'rgba(255,255,255,0.8)',\r\n\t\t},\r\n\t},\r\n\tchecked: {},\r\n\ttrack: {\r\n\t\tbackgroundColor: 'rgba(255,255,255,0.4)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\UpsertTask.js",["816","817","818","819","820","821","822","823","824"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskSteps.js",["825","826","827","828"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, Grid, Collapse, TextField, FormControlLabel, Checkbox, IconButton, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\n\r\n\r\nexport const TaskSteps = ({ data,  isUsingSteps, handleChange, isSequential, toggleIsSequential, addStep, removeStep }) => {\r\n\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const [ isSeq, setIsSeq ] = useState(isSequential);\r\n    const [ steps, setSteps ] = useState(data || [{ order: 1, description: ''}]);\r\n\r\n    useEffect(() => {\r\n        setSteps(data)\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        setIsSeq(isSequential);\r\n    }, [isSequential])\r\n\r\n    return (\r\n        <Collapse in={isUsingSteps} >\r\n            <Grid container>\r\n                {/* <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox \r\n                                checked={isSeq} \r\n                                onChange={toggleIsSequential}\r\n                                classes={{ root: classes.checkbox, checked: classes.checked}}\r\n                            />\r\n                        }\r\n                        className={classes.isSequential} \r\n                        label={t(\"tasksModule.upsert.isSequential\")}\r\n                    />\r\n                </Grid> */}\r\n                {\r\n                    steps.map((step, i) => \r\n                    <Grid container className={classes.textContainer}>\r\n                        <Grid item xs={10}>\r\n                            <TextField\r\n                                variant={\"outlined\"}\r\n                                label={`${t(`tasksModule.upsert.step`)} ${step.order}`}\r\n                                value={ step.description }\r\n                                onChange={handleChange(i)}\r\n                                className={classes.textField}\r\n                                size={'medium'}\r\n                                multiline={true}\r\n                                helperText={ `${60 - step.description.length} ${t(\"tasksModule.upsert.titleLimit\")}` }\r\n                                inputProps={{\r\n                                    maxLength: 60\r\n                                }}\r\n                                FormHelperTextProps={{\r\n                                    style: { color: 'rgba(255,255,255,0.6)' }\r\n                                }}\r\n                                \r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <IconButton\r\n                                className={classes.iconBtn}\r\n                                onClick={removeStep(step.order)}\r\n                            >\r\n                                <DeleteOutlineRoundedIcon className={classes.icon} />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                    ) \r\n                }\r\n                <Grid item xs={12}>\r\n                    <Button \r\n                        className={classes.addBtn}\r\n                        startIcon={ <AddIcon className={classes.addIcon} />}\r\n                        onClick={addStep}\r\n                    >\r\n                        {t(\"tasksModule.upsert.addStep\")}\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Collapse>\r\n\r\n    )\r\n} \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textContainer: {\r\n        padding: '5px',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    textField: {\r\n        width: '100%',\r\n        '& fieldset': {\r\n            borderRadius: '5px',\r\n        },  \r\n    },\r\n    isSequential: {\r\n        color: 'white',\r\n        padding: '0px 15px 10px'\r\n    },\r\n    checkbox: {\r\n        color: 'rgba(255,255,255,0.2)',\r\n        '&$checked': {\r\n          color: 'rgba(255,255,255,0.8)',\r\n        },\r\n    },\r\n    checked: {},\r\n    addBtn: {\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '16px',\r\n        border: '1px solid rgba(255,255,255,0.6)' ,\r\n        borderRadius: '50px',\r\n        padding: '5px 30px 5px 15px',\r\n        margin: '5px',\r\n        whiteSpace: 'nowrap',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.8)',\r\n            color: 'rgba(0,0,0,0.8)',\r\n\r\n        }   \r\n    },\r\n    iconBtn: {\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '16px',\r\n        border: '1px solid rgba(255,255,255,0.6)' ,\r\n        borderRadius: '50px',\r\n        padding: '10px',\r\n        margin: '0 10px 20px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.8)',\r\n            color: 'rgba(0,0,0,0.8)',\r\n\r\n        }   \r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskView.js",["829","830","831"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TasksList.js",["832","833"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskViewControls.js",["834","835","836"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TasksControls.js",["837","838"],"import {\r\n\tButton,\r\n\tCollapse,\r\n\tGrid,\r\n\tmakeStyles,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport BlurOnRoundedIcon from '@material-ui/icons/BlurOnRounded';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { getAsset, getFullAddress } from '../../../api/assetsApi';\r\nimport { removeQueryParam } from '../../../api/genericApi';\r\nimport {\r\n\tgetAssetsSuggestions,\r\n\tgetSystemsByAssetOptions,\r\n} from '../../../api/systemsApi';\r\nimport { getTasksStatusListSuggestions } from '../../../api/tasksApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\n\r\nexport const TasksControls = () => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [reloadedValue, setReloadedValue] = useState(null);\r\n\tconst [collapsed, setCollapsed] = useState(!downSm ? true : false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (query.asset) {\r\n\t\t\thandleReloaded(query.asset).then((data) => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetReloadedValue(data);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetReloadedValue({\r\n\t\t\t\tlabel: '',\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\thistory.push({\r\n\t\t\t\tpath: location.pathname,\r\n\t\t\t\tsearch: removeQueryParam(location.search, 'system'),\r\n\t\t\t});\r\n\t\t}\r\n\t}, [location.search]);\r\n\r\n\tconst handleReloaded = async (assetId) => {\r\n\t\tconst res = await getAsset(assetId, false);\r\n\t\tif (res) {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: getFullAddress(res),\r\n\t\t\t\tvalue: res._id,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleCollapse = () => {\r\n\t\tif (collapsed) {\r\n\t\t\tsetCollapsed(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetCollapsed(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{downSm && (\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName={classes.sortandfilter}\r\n\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t<FilterListIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tendIcon={\r\n\t\t\t\t\t\t\t\tcollapsed ? (\r\n\t\t\t\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<ExpandMoreRoundedIcon />\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={toggleCollapse}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{t(\r\n\t\t\t\t\t\t\t\t`tasksModule.${\r\n\t\t\t\t\t\t\t\t\tcollapsed ? 'hide' : 'show'\r\n\t\t\t\t\t\t\t\t}Filters`\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t<Collapse in={collapsed}>\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t{reloadedValue && (\r\n\t\t\t\t\t\t\t<SearchBoxSelect\r\n\t\t\t\t\t\t\t\tsuggestionsFunc={getAssetsSuggestions}\r\n\t\t\t\t\t\t\t\tplaceholder={t('systemsModule.filterByAsset')}\r\n\t\t\t\t\t\t\t\tfilterField={'asset'}\r\n\t\t\t\t\t\t\t\treloadedLabel={reloadedValue.label}\r\n\t\t\t\t\t\t\t\treloadedValue={reloadedValue.value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{query.asset && (\r\n\t\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\t\toptionsFunc={() =>\r\n\t\t\t\t\t\t\t\t\tgetSystemsByAssetOptions(query.asset)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder={t(\r\n\t\t\t\t\t\t\t\t\t'systemsModule.filterBySystemName'\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t\t<BlurOnRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfilterField={'system'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={getTasksStatusListSuggestions}\r\n\t\t\t\t\t\t\tplaceholder={t('tasksModule.filterByStatus')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<DoubleArrowIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'status'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={createUserOptions}\r\n\t\t\t\t\t\t\tplaceholder={t('tasksModule.filterByTaskOwner')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<PersonRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'owner'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Collapse>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((them) => ({\r\n\tgridItem: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'flex-start',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tmarginLeft: '4px',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '6px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tsortandfilter: {\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '5px 25px 5px 3px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'black',\r\n\t\t},\r\n\t},\r\n\ttypeGroup: {\r\n\t\tmargin: '5px',\r\n\t\theight: '45px',\r\n\t},\r\n\tmodeBtn: {\r\n\t\tpadding: '0 15px 0 5px',\r\n\t\tcolor: 'white',\r\n\t\twidth: 'auto',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tlistBtn: {\r\n\t\tborderRadius: '25px 0 0 25px',\r\n\t},\r\n\tblocksBtn: {\r\n\t\tborderRadius: '0px 25px 25px 0px',\r\n\t},\r\n\tmodeBtnActive: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\scheduler\\Scheduler.js",["839","840","841"],"import {\r\n\tBackdrop,\r\n\tButton,\r\n\tFade,\r\n\tGrid,\r\n\tmakeStyles,\r\n\tModal,\r\n\tPaper,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { ScheduleItem } from './ScheduleItem';\r\nimport clsx from 'clsx';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\n\r\nconst intervals = ['day', 'week', 'month', 'year'];\r\nconst months = [\r\n\t'january',\r\n\t'february',\r\n\t'march',\r\n\t'april',\r\n\t'may',\r\n\t'june',\r\n\t'july',\r\n\t'august',\r\n\t'september',\r\n\t'october',\r\n\t'november',\r\n\t'december',\r\n];\r\n\r\nexport const Scheduler = ({ scData, handleSave, handleClose }) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { t } = useTranslation();\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst [schedules, setSchedules] = useState([\r\n\t\t{\r\n\t\t\ttenant: auth.user.tenant,\r\n\t\t\tcreatedBy: auth.user._id,\r\n\t\t\tstartDate: '',\r\n\t\t\tinterval: ''\r\n\t\t},\r\n\t]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSchedules(scData)\r\n\t}, [scData])\r\n\r\n\tconst updateSchedules = async (data, index) => {\r\n\t\tlet scs = [...schedules];\r\n\t\tscs[index] = data;\r\n\t\tsetSchedules(scs);\r\n\t};\r\n\r\n\tconst removeSchedule = (index) => (event) => {\r\n\t\tlet scs = schedules.filter((s, i) => s._id !== index && index !== i);\r\n\t\tsetSchedules(scs);\r\n\t};\r\n\r\n\tconst handleAddSchedule = () => {\r\n\t\tsetSchedules([\r\n\t\t\t...schedules,\r\n\t\t\t{\r\n\t\t\t\ttenant: auth.user.tenant,\r\n\t\t\t\tcreatedBy: auth.user._id,\r\n\t\t\t\tstartDate: '',\r\n\t\t\t\tinterval: ''\r\n\t\t\t},\r\n\t\t]);\r\n\t};\r\n\r\n\tconst handleConfirm = async () => {\r\n\t\tconsole.log(schedules)\r\n\t\tawait handleSave(schedules);\r\n\t\thandleClose();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\topen={true}\r\n\t\t\tonClose={handleClose}\r\n\t\t\tcloseAfterTransition\r\n\t\t\tBackdropComponent={Backdrop}\r\n\t\t\tBackdropProps={{\r\n\t\t\t\ttimeout: 500,\r\n\t\t\t}}\r\n\t\t\tclassName={classes.modal}\r\n\t\t>\r\n\t\t\t<Fade in={true}>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tstyle={{ outline: '0' }}\r\n\t\t\t\t\tclassName={classes.gridCont}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid item xs={12} sm={9} md={6} lg={6} xl={4}>\r\n\t\t\t\t\t\t<Paper\r\n\t\t\t\t\t\t\televation={6}\r\n\t\t\t\t\t\t\tclassName={classes.paper}\r\n\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.headerRow}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.title}>\r\n\t\t\t\t\t\t\t\t\t\t{t('tasksModule.upsert.scheduleTitle')}\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\tclasses.notificationsInstructions\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t'tasksModule.upsert.notificationsInstructions'\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tschedules.length ? \r\n\t\t\t\t\t\t\t\t\tschedules.map((sc, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\tclasses.scheduleContainer\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<ScheduleItem\r\n\t\t\t\t\t\t\t\t\t\t\t\tscData={sc}\r\n\t\t\t\t\t\t\t\t\t\t\t\tupdateSchedules={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tupdateSchedules\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tremoveSchedule={removeSchedule}\r\n\t\t\t\t\t\t\t\t\t\t\t\tindex={i}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t)) :\r\n\t\t\t\t\t\t\t\t\t<div className={classes.noItems}>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"scheduler.noItems\")}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.addBtn}\r\n\t\t\t\t\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t\t\t\t\t<AddIcon\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.addIcon}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddSchedule}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t'tasksModule.upsert.addScheduling'\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.controls}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\t\t\tclasses.control,\r\n\t\t\t\t\t\t\t\t\t\t\tclasses.save\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleConfirm}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{t('controls.confirm')}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\t\t\tclasses.control,\r\n\t\t\t\t\t\t\t\t\t\t\tclasses.cancel\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleClose}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{t('controls.cancel')}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Fade>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmodal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n\tpaper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '10px',\r\n        padding: '10px 20px',\r\n        overflowY: 'overlay',\r\n        height: '80vh',\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: '81vh',\r\n            borderRadius: '0',\r\n            border: '0',\r\n\t\t\tpadding: '10px 5px',\r\n\t\t\tposition: 'absolute',\r\n\t\t\ttop: 0\r\n        },\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n\t},\r\n\theaderRow: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: '100%',      \r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        padding: '20px 10px 10px',\r\n        fontSize: '24px'\r\n    },\r\n\tscheduleContainer: {\r\n\t\t\r\n\t\tborderRadius: '10px',\r\n\t\tpadding: '5px 0px',\r\n\t\tmargin: '0px',\r\n\t\theight: 'fit-content',\r\n\t},\r\n\ttextContainer: {\r\n\t\tpadding: '5px',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tselectInput: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: 'rgba(0,0,0,0.8)',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\theight: '200px',\r\n\t\toverflowY: 'auto',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmarginRight: '7px',\r\n\t\tmarginLeft: '-5px',\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: 'white',\r\n\t\twidth: '100%',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.1)',\r\n\t\t},\r\n\t},\r\n\taddBtn: {\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tfontSize: '16px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.6)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '8px 30px 8px 15px',\r\n\t\tmargin: '10px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.8)',\r\n\t\t\tcolor: 'rgba(0,0,0,0.8)',\r\n\t\t},\r\n\t},\r\n\ticonBtn: {\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tfontSize: '16px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.6)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '10px',\r\n\t\tmargin: '0 10px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.8)',\r\n\t\t\tcolor: 'rgba(0,0,0,0.8)',\r\n\t\t},\r\n\t},\r\n\tnotificationsInstructions: {\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tfontSize: '12px',\r\n\t\tpadding: '10px 0',\r\n\t},\r\n\trepeatLabel: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\ttextField: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\ttextField: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\tcontrols: {\r\n\t\tborderTop: '1px solid rgba(255,255,255,0.2)',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpadding: '10px',\r\n\t\tmarginTop: '100px'\r\n\t},\r\n\tcontrol: {\r\n\t\twidth: '30%',\r\n\t\tborder: '1px solid rgba(255,255,255,0.5)',\r\n\t\tfontSize: '16px',\r\n\t\tmargin: '5px',\r\n\t\tpadding: '5px 30px',\r\n\t\tborderRadius: '30px',\r\n\t\tcolor: 'white',\r\n\t},\r\n\tsave: {\r\n\t\tbackground: 'rgba(0,0,0,0.2)',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'black',\r\n\t\t},\r\n\t\t'&:disabled': {\r\n\t\t\tcolor: 'rgba(255,255,255,0.3)',\r\n\t\t},\r\n\t},\r\n\tcancel: {\r\n\t\t'&:hover': {\r\n\t\t\tboxShadow: 'inset rgba(255,255,255,0.3) 0 0 2px 1px',\r\n\t\t},\r\n\t},\r\n\tnoItems: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '10px 20px',\r\n\t\tborderRadius: '50px',\r\n\t\tmargin: '10px',\r\n\t\tbackground: 'rgba(0,0,0,0.5)'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\scheduler\\ScheduleItem.js",["842","843","844","845","846"],"import {\r\n\tFormControl,\r\n\tGrid,\r\n\tIconButton,\r\n\tInputLabel,\r\n\tmakeStyles,\r\n\tMenuItem,\r\n\tSelect,\r\n\tTextField\r\n} from '@material-ui/core';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getNextIterationDate } from '../../../api/genericApi';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { CustomDatePicker } from '../datepickers/CustomeDatePicker';\r\n\r\n\r\nconst intervals = ['day', 'week', 'month', 'year'];\r\n\r\nexport const ScheduleItem = ({\r\n\tscData,\r\n\tupdateSchedules,\r\n\tindex,\r\n\tremoveSchedule,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { t } = useTranslation();\r\n\tconst [schedule, setSchedule] = useState(scData);\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateSchedules(schedule, index);\r\n\t}, [schedule]);\r\n\r\n\tconst handleChangeStartDate = (date) => {\r\n\t\tsetSchedule({\r\n\t\t\t...schedule,\r\n\t\t\tstartDate: date,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (fieldName, payload) => (event) => {\r\n\t\tconsole.log(fieldName, payload);\r\n\t\tsetSchedule({\r\n\t\t\t...schedule,\r\n\t\t\t[fieldName]: payload ? payload : event.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleCalcNextIteration = () => {\r\n\t\treturn getNextIterationDate(\r\n\t\t\tschedule.startDate,\r\n\t\t\tschedule.interval,\r\n\t\t\tlang.dateonly\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid container className={classes.textContainer}>\r\n\t\t\t<Grid container className={classes.gridItem} spacing={1}>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<CustomDatePicker\r\n\t\t\t\t\t\tlabel={t('scheduler.startDate')}\r\n\t\t\t\t\t\tdata={schedule.startDate}\r\n\t\t\t\t\t\thandleChange={handleChangeStartDate}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<FormControl variant=\"outlined\" className={classes.formControl}>\r\n\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-age-native-simple\">{t('scheduler.repeatEvery')}</InputLabel>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\tvalue={schedule.interval}\r\n\t\t\t\t\t\t\tonChange={handleChange('interval')}\r\n\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\tlabel={t('scheduler.repeatEvery')}\r\n\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{intervals.map((interval, i) => {\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\tschedule.intervalNumber > 1 &&\r\n\t\t\t\t\t\t\t\t\tinterval === 'date'\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tvalue={interval}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tdirection: lang.dir,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{schedule.intervalNumber > 1\r\n\t\t\t\t\t\t\t\t\t\t\t? t(`dates.${interval}s`)\r\n\t\t\t\t\t\t\t\t\t\t\t: t(`dates.${interval}`)}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={2} className={classes.remove}>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\tonClick={removeSchedule(index)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DeleteOutlineRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\t\r\n\ttextContainer: {\r\n\t\tpadding: '5px',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tselectInput: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: 'rgba(0,0,0,0.8)',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\theight: '200px',\r\n\t\toverflowY: 'auto',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmarginRight: '7px',\r\n\t\tmarginLeft: '-5px',\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: 'white',\r\n\t\twidth: '100%',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.1)',\r\n\t\t},\r\n\t},\r\n\taddBtn: {\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tfontSize: '16px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.6)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '5px 30px 5px 15px',\r\n\t\tmargin: '5px 5px 15px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.8)',\r\n\t\t\tcolor: 'rgba(0,0,0,0.8)',\r\n\t\t},\r\n\t},\r\n\ticonBtn: {\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tfontSize: '16px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.6)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '10px',\r\n\t\tmargin: '0',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.8)',\r\n\t\t\tcolor: 'rgba(0,0,0,0.8)',\r\n\t\t},\r\n\t},\r\n\tnotificationsInstructions: {\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tfontSize: '12px',\r\n\t\tpadding: '10px',\r\n\t},\r\n\tlabel: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '0 10px',\r\n\t},\r\n\ttextField: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\ttextField: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\tgridItem: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '5px 10px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tpadding: '5px',\r\n\t\t},\r\n\t},\r\n\tnextIteration: {\r\n\t\tpadding: '10px 20px',\r\n\t\tcolor: 'rgba(255,255,255,0.5)',\r\n\t\tfontSize: '16px',\r\n\t\ttextAlign: 'right',\r\n\t},\r\n\tremove: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end'\r\n\t},\r\n\tdayContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\talignItems: 'center',\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '14px',\r\n\t},\r\n\tday: {\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tborderRadius: '50px',\r\n\t\theight: '30px',\r\n\t\twidth: '30px',\r\n\t\tmargin: '0 3px',\r\n\t\tcursor: 'pointer',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.4)',\r\n\t\t},\r\n\t},\r\n\tdayChosen: {\r\n\t\tbackground: 'white',\r\n\t\tcolor: 'black',\r\n\t},\r\n\tintervalNumber: {\r\n\t\tpaddingRight: '10px',\r\n\t},\r\n\tformControl: {\r\n\t\twidth: '100%'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\datepickers\\CustomeDatePicker.js",["847"],"import DateFnsUtils from '@date-io/date-fns';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport heLocale from 'date-fns/locale/he';\r\nimport React, {useContext} from 'react';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\n\r\nexport const CustomDatePicker = ({ data, handleChange, label, disablePast }) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\r\n\treturn (\r\n\t\r\n\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils} locale={heLocale}>\r\n\t\t\t\t<DatePicker\r\n\t\t\t\t\tformat={lang.dateonly}\r\n\t\t\t\t\tlabel={label}\r\n\t\t\t\t\tvalue={data || null}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tinputVariant={'outlined'}\r\n\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\tautoOk={true}\r\n\t\t\t\t\tampm={false}\r\n\t\t\t\t\tdisableToolbar={true}\r\n\t\t\t\t\tvariant={'inline'}\r\n\t\t\t\t\tdisablePast={disablePast}\r\n\t\t\t\t/>\r\n\t\t\t</MuiPickersUtilsProvider>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttextField: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\ttextField: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\context\\authContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\AuthContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageBoolean.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\RepeatableTasks.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\Calender.js",["848","849","850","851"],"C:\\projects\\leev\\leev-fe\\src\\api\\calenderApi.js",["852","853","854","855","856"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\CalenderHeaderRow.js",["857","858"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\CalenderRow.js",["859","860","861"],{"ruleId":"862","severity":1,"message":"863","line":9,"column":1,"nodeType":"864","messageId":"865","endLine":16,"endColumn":3},{"ruleId":"866","replacedBy":"867"},{"ruleId":"868","replacedBy":"869"},{"ruleId":"870","severity":1,"message":"871","line":32,"column":8,"nodeType":"872","endLine":32,"endColumn":10,"suggestions":"873"},{"ruleId":"870","severity":1,"message":"874","line":34,"column":8,"nodeType":"872","endLine":34,"endColumn":10,"suggestions":"875"},{"ruleId":"876","severity":1,"message":"877","line":17,"column":10,"nodeType":"878","messageId":"879","endLine":17,"endColumn":18},{"ruleId":"880","severity":1,"message":"881","line":21,"column":27,"nodeType":"882","messageId":"865","endLine":21,"endColumn":29},{"ruleId":"876","severity":1,"message":"883","line":24,"column":10,"nodeType":"878","messageId":"879","endLine":24,"endColumn":11},{"ruleId":"876","severity":1,"message":"884","line":2,"column":40,"nodeType":"878","messageId":"879","endLine":2,"endColumn":46},{"ruleId":"876","severity":1,"message":"885","line":22,"column":13,"nodeType":"878","messageId":"879","endLine":22,"endColumn":22},{"ruleId":"870","severity":1,"message":"886","line":56,"column":8,"nodeType":"872","endLine":56,"endColumn":10,"suggestions":"887"},{"ruleId":"888","severity":1,"message":"889","line":60,"column":13,"nodeType":"878","messageId":"890","endLine":60,"endColumn":21},{"ruleId":"870","severity":1,"message":"891","line":60,"column":24,"nodeType":"892","endLine":60,"endColumn":47},{"ruleId":"888","severity":1,"message":"889","line":65,"column":17,"nodeType":"878","messageId":"890","endLine":65,"endColumn":25},{"ruleId":"870","severity":1,"message":"893","line":96,"column":8,"nodeType":"872","endLine":96,"endColumn":22,"suggestions":"894"},{"ruleId":"876","severity":1,"message":"895","line":1,"column":17,"nodeType":"878","messageId":"879","endLine":1,"endColumn":26},{"ruleId":"876","severity":1,"message":"896","line":1,"column":10,"nodeType":"878","messageId":"879","endLine":1,"endColumn":14},{"ruleId":"876","severity":1,"message":"897","line":2,"column":38,"nodeType":"878","messageId":"879","endLine":2,"endColumn":48},{"ruleId":"876","severity":1,"message":"898","line":5,"column":10,"nodeType":"878","messageId":"879","endLine":5,"endColumn":24},{"ruleId":"876","severity":1,"message":"899","line":1,"column":18,"nodeType":"878","messageId":"879","endLine":1,"endColumn":29},{"ruleId":"876","severity":1,"message":"900","line":1,"column":61,"nodeType":"878","messageId":"879","endLine":1,"endColumn":74},{"ruleId":"876","severity":1,"message":"901","line":2,"column":10,"nodeType":"878","messageId":"879","endLine":2,"endColumn":28},{"ruleId":"876","severity":1,"message":"902","line":2,"column":10,"nodeType":"878","messageId":"879","endLine":2,"endColumn":21},{"ruleId":"876","severity":1,"message":"903","line":16,"column":8,"nodeType":"878","messageId":"879","endLine":16,"endColumn":16},{"ruleId":"870","severity":1,"message":"904","line":26,"column":5,"nodeType":"872","endLine":26,"endColumn":7,"suggestions":"905"},{"ruleId":"876","severity":1,"message":"906","line":12,"column":8,"nodeType":"878","messageId":"879","endLine":12,"endColumn":15},{"ruleId":"876","severity":1,"message":"903","line":13,"column":11,"nodeType":"878","messageId":"879","endLine":13,"endColumn":19},{"ruleId":"876","severity":1,"message":"907","line":15,"column":19,"nodeType":"878","messageId":"879","endLine":15,"endColumn":26},{"ruleId":"908","severity":1,"message":"909","line":44,"column":45,"nodeType":"910","endLine":44,"endColumn":112},{"ruleId":"876","severity":1,"message":"911","line":17,"column":16,"nodeType":"878","messageId":"879","endLine":17,"endColumn":20},{"ruleId":"870","severity":1,"message":"912","line":41,"column":8,"nodeType":"872","endLine":41,"endColumn":19,"suggestions":"913"},{"ruleId":"870","severity":1,"message":"914","line":41,"column":5,"nodeType":"872","endLine":41,"endColumn":16,"suggestions":"915"},{"ruleId":"876","severity":1,"message":"916","line":1,"column":28,"nodeType":"878","messageId":"879","endLine":1,"endColumn":41},{"ruleId":"876","severity":1,"message":"917","line":1,"column":43,"nodeType":"878","messageId":"879","endLine":1,"endColumn":53},{"ruleId":"876","severity":1,"message":"918","line":3,"column":10,"nodeType":"878","messageId":"879","endLine":3,"endColumn":13},{"ruleId":"870","severity":1,"message":"919","line":25,"column":5,"nodeType":"872","endLine":25,"endColumn":22,"suggestions":"920"},{"ruleId":"876","severity":1,"message":"916","line":1,"column":44,"nodeType":"878","messageId":"879","endLine":1,"endColumn":57},{"ruleId":"870","severity":1,"message":"921","line":42,"column":8,"nodeType":"872","endLine":42,"endColumn":19,"suggestions":"922"},{"ruleId":"876","severity":1,"message":"923","line":1,"column":10,"nodeType":"878","messageId":"879","endLine":1,"endColumn":14},{"ruleId":"876","severity":1,"message":"924","line":1,"column":40,"nodeType":"878","messageId":"879","endLine":1,"endColumn":45},{"ruleId":"876","severity":1,"message":"925","line":2,"column":17,"nodeType":"878","messageId":"879","endLine":2,"endColumn":25},{"ruleId":"876","severity":1,"message":"895","line":2,"column":27,"nodeType":"878","messageId":"879","endLine":2,"endColumn":36},{"ruleId":"876","severity":1,"message":"897","line":2,"column":38,"nodeType":"878","messageId":"879","endLine":2,"endColumn":48},{"ruleId":"876","severity":1,"message":"883","line":9,"column":13,"nodeType":"878","messageId":"879","endLine":9,"endColumn":14},{"ruleId":"926","severity":1,"message":"927","line":77,"column":18,"nodeType":"928","messageId":"929","endLine":77,"endColumn":19,"suggestions":"930"},{"ruleId":"876","severity":1,"message":"931","line":18,"column":10,"nodeType":"878","messageId":"879","endLine":18,"endColumn":14},{"ruleId":"876","severity":1,"message":"932","line":18,"column":16,"nodeType":"878","messageId":"879","endLine":18,"endColumn":23},{"ruleId":"876","severity":1,"message":"933","line":19,"column":10,"nodeType":"878","messageId":"879","endLine":19,"endColumn":14},{"ruleId":"870","severity":1,"message":"934","line":40,"column":5,"nodeType":"872","endLine":40,"endColumn":16,"suggestions":"935"},{"ruleId":"876","severity":1,"message":"936","line":1,"column":10,"nodeType":"878","messageId":"879","endLine":1,"endColumn":16},{"ruleId":"876","severity":1,"message":"906","line":29,"column":8,"nodeType":"878","messageId":"879","endLine":29,"endColumn":15},{"ruleId":"876","severity":1,"message":"903","line":30,"column":8,"nodeType":"878","messageId":"879","endLine":30,"endColumn":16},{"ruleId":"876","severity":1,"message":"933","line":32,"column":13,"nodeType":"878","messageId":"879","endLine":32,"endColumn":17},{"ruleId":"876","severity":1,"message":"907","line":32,"column":19,"nodeType":"878","messageId":"879","endLine":32,"endColumn":26},{"ruleId":"908","severity":1,"message":"909","line":47,"column":33,"nodeType":"910","endLine":47,"endColumn":54},{"ruleId":"876","severity":1,"message":"937","line":1,"column":22,"nodeType":"878","messageId":"879","endLine":1,"endColumn":30},{"ruleId":"876","severity":1,"message":"938","line":2,"column":10,"nodeType":"878","messageId":"879","endLine":2,"endColumn":15},{"ruleId":"876","severity":1,"message":"925","line":3,"column":29,"nodeType":"878","messageId":"879","endLine":3,"endColumn":37},{"ruleId":"876","severity":1,"message":"883","line":25,"column":13,"nodeType":"878","messageId":"879","endLine":25,"endColumn":14},{"ruleId":"876","severity":1,"message":"939","line":26,"column":13,"nodeType":"878","messageId":"879","endLine":26,"endColumn":21},{"ruleId":"876","severity":1,"message":"940","line":147,"column":7,"nodeType":"878","messageId":"879","endLine":147,"endColumn":16},{"ruleId":"876","severity":1,"message":"941","line":8,"column":2,"nodeType":"878","messageId":"879","endLine":8,"endColumn":6},{"ruleId":"876","severity":1,"message":"942","line":15,"column":8,"nodeType":"878","messageId":"879","endLine":15,"endColumn":31},{"ruleId":"876","severity":1,"message":"943","line":16,"column":8,"nodeType":"878","messageId":"879","endLine":16,"endColumn":20},{"ruleId":"876","severity":1,"message":"944","line":17,"column":8,"nodeType":"878","messageId":"879","endLine":17,"endColumn":17},{"ruleId":"876","severity":1,"message":"945","line":18,"column":8,"nodeType":"878","messageId":"879","endLine":18,"endColumn":19},{"ruleId":"876","severity":1,"message":"946","line":19,"column":8,"nodeType":"878","messageId":"879","endLine":19,"endColumn":27},{"ruleId":"876","severity":1,"message":"947","line":20,"column":8,"nodeType":"878","messageId":"879","endLine":20,"endColumn":25},{"ruleId":"876","severity":1,"message":"911","line":28,"column":13,"nodeType":"878","messageId":"879","endLine":28,"endColumn":17},{"ruleId":"876","severity":1,"message":"948","line":30,"column":8,"nodeType":"878","messageId":"879","endLine":30,"endColumn":15},{"ruleId":"949","severity":1,"message":"950","line":36,"column":49,"nodeType":"951","messageId":"865","endLine":36,"endColumn":51},{"ruleId":"908","severity":1,"message":"909","line":55,"column":9,"nodeType":"910","endLine":55,"endColumn":79},{"ruleId":"908","severity":1,"message":"909","line":71,"column":31,"nodeType":"910","endLine":71,"endColumn":103},{"ruleId":"908","severity":1,"message":"909","line":88,"column":11,"nodeType":"910","endLine":88,"endColumn":86},{"ruleId":"908","severity":1,"message":"909","line":107,"column":11,"nodeType":"910","endLine":107,"endColumn":83},{"ruleId":"908","severity":1,"message":"909","line":125,"column":31,"nodeType":"910","endLine":125,"endColumn":114},{"ruleId":"876","severity":1,"message":"952","line":2,"column":8,"nodeType":"878","messageId":"879","endLine":2,"endColumn":12},{"ruleId":"876","severity":1,"message":"953","line":4,"column":10,"nodeType":"878","messageId":"879","endLine":4,"endColumn":20},{"ruleId":"876","severity":1,"message":"954","line":5,"column":8,"nodeType":"878","messageId":"879","endLine":5,"endColumn":23},{"ruleId":"876","severity":1,"message":"955","line":6,"column":8,"nodeType":"878","messageId":"879","endLine":6,"endColumn":37},{"ruleId":"876","severity":1,"message":"956","line":7,"column":8,"nodeType":"878","messageId":"879","endLine":7,"endColumn":31},{"ruleId":"876","severity":1,"message":"957","line":8,"column":8,"nodeType":"878","messageId":"879","endLine":8,"endColumn":15},{"ruleId":"876","severity":1,"message":"958","line":11,"column":8,"nodeType":"878","messageId":"879","endLine":11,"endColumn":23},{"ruleId":"876","severity":1,"message":"959","line":13,"column":8,"nodeType":"878","messageId":"879","endLine":13,"endColumn":24},{"ruleId":"876","severity":1,"message":"960","line":14,"column":8,"nodeType":"878","messageId":"879","endLine":14,"endColumn":16},{"ruleId":"876","severity":1,"message":"961","line":15,"column":8,"nodeType":"878","messageId":"879","endLine":15,"endColumn":15},{"ruleId":"876","severity":1,"message":"962","line":16,"column":8,"nodeType":"878","messageId":"879","endLine":16,"endColumn":16},{"ruleId":"908","severity":1,"message":"909","line":62,"column":9,"nodeType":"910","endLine":62,"endColumn":84},{"ruleId":"908","severity":1,"message":"909","line":81,"column":8,"nodeType":"910","endLine":81,"endColumn":86},{"ruleId":"908","severity":1,"message":"909","line":92,"column":8,"nodeType":"910","endLine":92,"endColumn":72},{"ruleId":"908","severity":1,"message":"909","line":102,"column":8,"nodeType":"910","endLine":102,"endColumn":80},{"ruleId":"908","severity":1,"message":"909","line":119,"column":9,"nodeType":"910","endLine":119,"endColumn":95},{"ruleId":"876","severity":1,"message":"941","line":3,"column":2,"nodeType":"878","messageId":"879","endLine":3,"endColumn":6},{"ruleId":"876","severity":1,"message":"911","line":24,"column":13,"nodeType":"878","messageId":"879","endLine":24,"endColumn":17},{"ruleId":"876","severity":1,"message":"948","line":28,"column":8,"nodeType":"878","messageId":"879","endLine":28,"endColumn":15},{"ruleId":"963","severity":1,"message":"964","line":123,"column":3,"nodeType":"965","messageId":"865","endLine":123,"endColumn":9},{"ruleId":"876","severity":1,"message":"911","line":22,"column":13,"nodeType":"878","messageId":"879","endLine":22,"endColumn":17},{"ruleId":"876","severity":1,"message":"948","line":24,"column":8,"nodeType":"878","messageId":"879","endLine":24,"endColumn":15},{"ruleId":"876","severity":1,"message":"966","line":26,"column":10,"nodeType":"878","messageId":"879","endLine":26,"endColumn":25},{"ruleId":"949","severity":1,"message":"950","line":40,"column":46,"nodeType":"951","messageId":"865","endLine":40,"endColumn":48},{"ruleId":"908","severity":1,"message":"909","line":54,"column":9,"nodeType":"910","endLine":54,"endColumn":79},{"ruleId":"908","severity":1,"message":"909","line":67,"column":29,"nodeType":"910","endLine":67,"endColumn":101},{"ruleId":"908","severity":1,"message":"909","line":81,"column":29,"nodeType":"910","endLine":81,"endColumn":104},{"ruleId":"908","severity":1,"message":"909","line":94,"column":29,"nodeType":"910","endLine":94,"endColumn":103},{"ruleId":"908","severity":1,"message":"909","line":107,"column":31,"nodeType":"910","endLine":107,"endColumn":103},{"ruleId":"908","severity":1,"message":"909","line":120,"column":31,"nodeType":"910","endLine":120,"endColumn":114},{"ruleId":"908","severity":1,"message":"909","line":135,"column":29,"nodeType":"910","endLine":135,"endColumn":98},{"ruleId":"908","severity":1,"message":"909","line":149,"column":29,"nodeType":"910","endLine":149,"endColumn":104},{"ruleId":"876","severity":1,"message":"967","line":2,"column":108,"nodeType":"878","messageId":"879","endLine":2,"endColumn":116},{"ruleId":"876","severity":1,"message":"968","line":2,"column":118,"nodeType":"878","messageId":"879","endLine":2,"endColumn":123},{"ruleId":"876","severity":1,"message":"937","line":2,"column":125,"nodeType":"878","messageId":"879","endLine":2,"endColumn":133},{"ruleId":"876","severity":1,"message":"969","line":17,"column":10,"nodeType":"878","messageId":"879","endLine":17,"endColumn":21},{"ruleId":"876","severity":1,"message":"911","line":26,"column":16,"nodeType":"878","messageId":"879","endLine":26,"endColumn":20},{"ruleId":"963","severity":1,"message":"970","line":236,"column":9,"nodeType":"965","messageId":"865","endLine":236,"endColumn":19},{"ruleId":"876","severity":1,"message":"971","line":4,"column":8,"nodeType":"878","messageId":"879","endLine":4,"endColumn":25},{"ruleId":"876","severity":1,"message":"972","line":9,"column":10,"nodeType":"878","messageId":"879","endLine":9,"endColumn":29},{"ruleId":"876","severity":1,"message":"911","line":43,"column":16,"nodeType":"878","messageId":"879","endLine":43,"endColumn":20},{"ruleId":"876","severity":1,"message":"911","line":17,"column":20,"nodeType":"878","messageId":"879","endLine":17,"endColumn":24},{"ruleId":"876","severity":1,"message":"911","line":37,"column":16,"nodeType":"878","messageId":"879","endLine":37,"endColumn":20},{"ruleId":"870","severity":1,"message":"973","line":60,"column":8,"nodeType":"872","endLine":60,"endColumn":25,"suggestions":"974"},{"ruleId":"876","severity":1,"message":"911","line":9,"column":13,"nodeType":"878","messageId":"879","endLine":9,"endColumn":17},{"ruleId":"975","severity":1,"message":"976","line":12,"column":44,"nodeType":"977","endLine":12,"endColumn":51},{"ruleId":"963","severity":1,"message":"978","line":106,"column":9,"nodeType":"965","messageId":"865","endLine":106,"endColumn":16},{"ruleId":"876","severity":1,"message":"967","line":3,"column":2,"nodeType":"878","messageId":"879","endLine":3,"endColumn":10},{"ruleId":"876","severity":1,"message":"968","line":7,"column":2,"nodeType":"878","messageId":"879","endLine":7,"endColumn":7},{"ruleId":"876","severity":1,"message":"911","line":28,"column":13,"nodeType":"878","messageId":"879","endLine":28,"endColumn":17},{"ruleId":"949","severity":1,"message":"950","line":116,"column":29,"nodeType":"951","messageId":"865","endLine":116,"endColumn":31},{"ruleId":"949","severity":1,"message":"950","line":21,"column":40,"nodeType":"951","messageId":"865","endLine":21,"endColumn":42},{"ruleId":"876","severity":1,"message":"979","line":3,"column":2,"nodeType":"878","messageId":"879","endLine":3,"endColumn":19},{"ruleId":"876","severity":1,"message":"917","line":7,"column":22,"nodeType":"878","messageId":"879","endLine":7,"endColumn":32},{"ruleId":"876","severity":1,"message":"980","line":7,"column":34,"nodeType":"878","messageId":"879","endLine":7,"endColumn":51},{"ruleId":"876","severity":1,"message":"981","line":11,"column":10,"nodeType":"878","messageId":"879","endLine":11,"endColumn":20},{"ruleId":"876","severity":1,"message":"982","line":12,"column":10,"nodeType":"878","messageId":"879","endLine":12,"endColumn":27},{"ruleId":"876","severity":1,"message":"906","line":30,"column":8,"nodeType":"878","messageId":"879","endLine":30,"endColumn":15},{"ruleId":"908","severity":1,"message":"909","line":154,"column":9,"nodeType":"910","endLine":154,"endColumn":70},{"ruleId":"908","severity":1,"message":"909","line":178,"column":8,"nodeType":"910","endLine":185,"endColumn":10},{"ruleId":"876","severity":1,"message":"896","line":3,"column":2,"nodeType":"878","messageId":"879","endLine":3,"endColumn":6},{"ruleId":"876","severity":1,"message":"983","line":7,"column":2,"nodeType":"878","messageId":"879","endLine":7,"endColumn":16},{"ruleId":"876","severity":1,"message":"936","line":9,"column":2,"nodeType":"878","messageId":"879","endLine":9,"endColumn":8},{"ruleId":"876","severity":1,"message":"984","line":11,"column":10,"nodeType":"878","messageId":"879","endLine":11,"endColumn":15},{"ruleId":"876","severity":1,"message":"885","line":31,"column":9,"nodeType":"878","messageId":"879","endLine":31,"endColumn":18},{"ruleId":"876","severity":1,"message":"985","line":31,"column":20,"nodeType":"878","messageId":"879","endLine":31,"endColumn":32},{"ruleId":"870","severity":1,"message":"986","line":77,"column":5,"nodeType":"872","endLine":77,"endColumn":20,"suggestions":"987"},{"ruleId":"963","severity":1,"message":"988","line":219,"column":3,"nodeType":"965","messageId":"865","endLine":219,"endColumn":15},{"ruleId":"963","severity":1,"message":"988","line":231,"column":3,"nodeType":"965","messageId":"865","endLine":231,"endColumn":15},{"ruleId":"876","severity":1,"message":"917","line":1,"column":22,"nodeType":"878","messageId":"879","endLine":1,"endColumn":32},{"ruleId":"876","severity":1,"message":"980","line":1,"column":34,"nodeType":"878","messageId":"879","endLine":1,"endColumn":51},{"ruleId":"876","severity":1,"message":"989","line":4,"column":2,"nodeType":"878","messageId":"879","endLine":4,"endColumn":12},{"ruleId":"876","severity":1,"message":"990","line":5,"column":2,"nodeType":"878","messageId":"879","endLine":5,"endColumn":9},{"ruleId":"876","severity":1,"message":"991","line":15,"column":8,"nodeType":"878","messageId":"879","endLine":15,"endColumn":13},{"ruleId":"876","severity":1,"message":"992","line":16,"column":10,"nodeType":"878","messageId":"879","endLine":16,"endColumn":23},{"ruleId":"876","severity":1,"message":"993","line":17,"column":10,"nodeType":"878","messageId":"879","endLine":17,"endColumn":24},{"ruleId":"876","severity":1,"message":"994","line":18,"column":8,"nodeType":"878","messageId":"879","endLine":18,"endColumn":31},{"ruleId":"876","severity":1,"message":"995","line":19,"column":8,"nodeType":"878","messageId":"879","endLine":19,"endColumn":30},{"ruleId":"876","severity":1,"message":"883","line":33,"column":10,"nodeType":"878","messageId":"879","endLine":33,"endColumn":11},{"ruleId":"949","severity":1,"message":"950","line":76,"column":53,"nodeType":"951","messageId":"865","endLine":76,"endColumn":55},{"ruleId":"949","severity":1,"message":"950","line":84,"column":54,"nodeType":"951","messageId":"865","endLine":84,"endColumn":56},{"ruleId":"996","severity":1,"message":"997","line":162,"column":6,"nodeType":"998","messageId":"999","endLine":162,"endColumn":13},{"ruleId":"876","severity":1,"message":"1000","line":37,"column":8,"nodeType":"878","messageId":"879","endLine":37,"endColumn":14},{"ruleId":"876","severity":1,"message":"911","line":38,"column":13,"nodeType":"878","messageId":"879","endLine":38,"endColumn":17},{"ruleId":"876","severity":1,"message":"1001","line":46,"column":15,"nodeType":"878","messageId":"879","endLine":46,"endColumn":22},{"ruleId":"870","severity":1,"message":"1002","line":83,"column":5,"nodeType":"872","endLine":83,"endColumn":7,"suggestions":"1003"},{"ruleId":"870","severity":1,"message":"1004","line":118,"column":5,"nodeType":"872","endLine":118,"endColumn":36,"suggestions":"1005"},{"ruleId":"963","severity":1,"message":"964","line":748,"column":3,"nodeType":"965","messageId":"865","endLine":748,"endColumn":9},{"ruleId":"876","severity":1,"message":"1006","line":3,"column":2,"nodeType":"878","messageId":"879","endLine":3,"endColumn":9},{"ruleId":"876","severity":1,"message":"1007","line":10,"column":8,"nodeType":"878","messageId":"879","endLine":10,"endColumn":27},{"ruleId":"876","severity":1,"message":"1008","line":11,"column":8,"nodeType":"878","messageId":"879","endLine":11,"endColumn":29},{"ruleId":"876","severity":1,"message":"1009","line":12,"column":8,"nodeType":"878","messageId":"879","endLine":12,"endColumn":26},{"ruleId":"876","severity":1,"message":"1010","line":22,"column":10,"nodeType":"878","messageId":"879","endLine":22,"endColumn":40},{"ruleId":"876","severity":1,"message":"1011","line":23,"column":8,"nodeType":"878","messageId":"879","endLine":23,"endColumn":23},{"ruleId":"876","severity":1,"message":"972","line":24,"column":10,"nodeType":"878","messageId":"879","endLine":24,"endColumn":29},{"ruleId":"880","severity":1,"message":"881","line":28,"column":29,"nodeType":"882","messageId":"865","endLine":28,"endColumn":31},{"ruleId":"870","severity":1,"message":"973","line":51,"column":5,"nodeType":"872","endLine":51,"endColumn":22,"suggestions":"1012"},{"ruleId":"876","severity":1,"message":"916","line":1,"column":44,"nodeType":"878","messageId":"879","endLine":1,"endColumn":57},{"ruleId":"870","severity":1,"message":"1013","line":38,"column":8,"nodeType":"872","endLine":38,"endColumn":19,"suggestions":"1014"},{"ruleId":"870","severity":1,"message":"1015","line":49,"column":8,"nodeType":"872","endLine":49,"endColumn":18,"suggestions":"1016"},{"ruleId":"880","severity":1,"message":"881","line":34,"column":35,"nodeType":"882","messageId":"865","endLine":34,"endColumn":37},{"ruleId":"876","severity":1,"message":"911","line":40,"column":13,"nodeType":"878","messageId":"879","endLine":40,"endColumn":17},{"ruleId":"870","severity":1,"message":"1017","line":62,"column":5,"nodeType":"872","endLine":62,"endColumn":22,"suggestions":"1018"},{"ruleId":"876","severity":1,"message":"1019","line":8,"column":8,"nodeType":"878","messageId":"879","endLine":8,"endColumn":18},{"ruleId":"876","severity":1,"message":"1020","line":17,"column":10,"nodeType":"878","messageId":"879","endLine":17,"endColumn":13},{"ruleId":"870","severity":1,"message":"1021","line":66,"column":5,"nodeType":"872","endLine":66,"endColumn":25,"suggestions":"1022"},{"ruleId":"876","severity":1,"message":"917","line":1,"column":16,"nodeType":"878","messageId":"879","endLine":1,"endColumn":26},{"ruleId":"876","severity":1,"message":"1023","line":2,"column":8,"nodeType":"878","messageId":"879","endLine":2,"endColumn":20},{"ruleId":"876","severity":1,"message":"1019","line":10,"column":8,"nodeType":"878","messageId":"879","endLine":10,"endColumn":18},{"ruleId":"876","severity":1,"message":"925","line":1,"column":17,"nodeType":"878","messageId":"879","endLine":1,"endColumn":25},{"ruleId":"876","severity":1,"message":"1024","line":2,"column":10,"nodeType":"878","messageId":"879","endLine":2,"endColumn":25},{"ruleId":"876","severity":1,"message":"916","line":1,"column":139,"nodeType":"878","messageId":"879","endLine":1,"endColumn":152},{"ruleId":"876","severity":1,"message":"1001","line":18,"column":19,"nodeType":"878","messageId":"879","endLine":18,"endColumn":26},{"ruleId":"870","severity":1,"message":"1025","line":59,"column":7,"nodeType":"872","endLine":59,"endColumn":9,"suggestions":"1026"},{"ruleId":"870","severity":1,"message":"1027","line":30,"column":8,"nodeType":"872","endLine":30,"endColumn":20,"suggestions":"1028"},{"ruleId":"870","severity":1,"message":"1029","line":45,"column":8,"nodeType":"872","endLine":45,"endColumn":15,"suggestions":"1030"},{"ruleId":"870","severity":1,"message":"1031","line":25,"column":8,"nodeType":"872","endLine":25,"endColumn":10,"suggestions":"1032"},{"ruleId":"870","severity":1,"message":"1033","line":41,"column":8,"nodeType":"872","endLine":41,"endColumn":15,"suggestions":"1034"},{"ruleId":"876","severity":1,"message":"1000","line":15,"column":11,"nodeType":"878","messageId":"879","endLine":15,"endColumn":17},{"ruleId":"876","severity":1,"message":"911","line":16,"column":16,"nodeType":"878","messageId":"879","endLine":16,"endColumn":20},{"ruleId":"876","severity":1,"message":"916","line":2,"column":174,"nodeType":"878","messageId":"879","endLine":2,"endColumn":187},{"ruleId":"876","severity":1,"message":"1035","line":12,"column":10,"nodeType":"878","messageId":"879","endLine":12,"endColumn":21},{"ruleId":"876","severity":1,"message":"1001","line":23,"column":19,"nodeType":"878","messageId":"879","endLine":23,"endColumn":26},{"ruleId":"963","severity":1,"message":"1036","line":394,"column":53,"nodeType":"965","messageId":"865","endLine":394,"endColumn":60},{"ruleId":"963","severity":1,"message":"964","line":913,"column":9,"nodeType":"965","messageId":"865","endLine":913,"endColumn":15},{"ruleId":"876","severity":1,"message":"1006","line":2,"column":38,"nodeType":"878","messageId":"879","endLine":2,"endColumn":45},{"ruleId":"876","severity":1,"message":"1037","line":7,"column":10,"nodeType":"878","messageId":"879","endLine":7,"endColumn":22},{"ruleId":"876","severity":1,"message":"1000","line":12,"column":11,"nodeType":"878","messageId":"879","endLine":12,"endColumn":17},{"ruleId":"876","severity":1,"message":"911","line":15,"column":16,"nodeType":"878","messageId":"879","endLine":15,"endColumn":20},{"ruleId":"876","severity":1,"message":"1038","line":2,"column":8,"nodeType":"878","messageId":"879","endLine":2,"endColumn":15},{"ruleId":"876","severity":1,"message":"911","line":39,"column":13,"nodeType":"878","messageId":"879","endLine":39,"endColumn":17},{"ruleId":"870","severity":1,"message":"1017","line":60,"column":5,"nodeType":"872","endLine":60,"endColumn":22,"suggestions":"1039"},{"ruleId":"876","severity":1,"message":"916","line":1,"column":153,"nodeType":"878","messageId":"879","endLine":1,"endColumn":166},{"ruleId":"876","severity":1,"message":"1040","line":2,"column":24,"nodeType":"878","messageId":"879","endLine":2,"endColumn":41},{"ruleId":"876","severity":1,"message":"1001","line":23,"column":19,"nodeType":"878","messageId":"879","endLine":23,"endColumn":26},{"ruleId":"870","severity":1,"message":"1041","line":71,"column":8,"nodeType":"872","endLine":71,"endColumn":10,"suggestions":"1042"},{"ruleId":"908","severity":1,"message":"909","line":449,"column":73,"nodeType":"910","endLine":449,"endColumn":125},{"ruleId":"963","severity":1,"message":"964","line":645,"column":9,"nodeType":"965","messageId":"865","endLine":645,"endColumn":15},{"ruleId":"876","severity":1,"message":"911","line":17,"column":13,"nodeType":"878","messageId":"879","endLine":17,"endColumn":17},{"ruleId":"876","severity":1,"message":"1043","line":3,"column":10,"nodeType":"878","messageId":"879","endLine":3,"endColumn":20},{"ruleId":"876","severity":1,"message":"1044","line":52,"column":11,"nodeType":"878","messageId":"879","endLine":52,"endColumn":14},{"ruleId":"876","severity":1,"message":"1000","line":15,"column":11,"nodeType":"878","messageId":"879","endLine":15,"endColumn":17},{"ruleId":"876","severity":1,"message":"911","line":16,"column":16,"nodeType":"878","messageId":"879","endLine":16,"endColumn":20},{"ruleId":"870","severity":1,"message":"1045","line":29,"column":8,"nodeType":"872","endLine":29,"endColumn":10,"suggestions":"1046"},{"ruleId":"876","severity":1,"message":"911","line":15,"column":16,"nodeType":"878","messageId":"879","endLine":15,"endColumn":20},{"ruleId":"975","severity":1,"message":"976","line":28,"column":68,"nodeType":"977","endLine":28,"endColumn":92},{"ruleId":"876","severity":1,"message":"916","line":10,"column":2,"nodeType":"878","messageId":"879","endLine":10,"endColumn":15},{"ruleId":"876","severity":1,"message":"1047","line":20,"column":10,"nodeType":"878","messageId":"879","endLine":20,"endColumn":20},{"ruleId":"876","severity":1,"message":"1048","line":20,"column":22,"nodeType":"878","messageId":"879","endLine":20,"endColumn":33},{"ruleId":"949","severity":1,"message":"950","line":160,"column":19,"nodeType":"951","messageId":"865","endLine":160,"endColumn":21},{"ruleId":"876","severity":1,"message":"924","line":2,"column":22,"nodeType":"878","messageId":"879","endLine":2,"endColumn":27},{"ruleId":"876","severity":1,"message":"1049","line":15,"column":13,"nodeType":"878","messageId":"879","endLine":15,"endColumn":20},{"ruleId":"876","severity":1,"message":"1050","line":16,"column":13,"nodeType":"878","messageId":"879","endLine":16,"endColumn":27},{"ruleId":"908","severity":1,"message":"909","line":115,"column":13,"nodeType":"910","endLine":115,"endColumn":58},{"ruleId":"876","severity":1,"message":"1000","line":15,"column":11,"nodeType":"878","messageId":"879","endLine":15,"endColumn":17},{"ruleId":"876","severity":1,"message":"911","line":16,"column":16,"nodeType":"878","messageId":"879","endLine":16,"endColumn":20},{"ruleId":"870","severity":1,"message":"1051","line":25,"column":8,"nodeType":"872","endLine":25,"endColumn":10,"suggestions":"1052"},{"ruleId":"876","severity":1,"message":"993","line":3,"column":10,"nodeType":"878","messageId":"879","endLine":3,"endColumn":24},{"ruleId":"870","severity":1,"message":"1053","line":31,"column":8,"nodeType":"872","endLine":31,"endColumn":10,"suggestions":"1054"},{"ruleId":"870","severity":1,"message":"1033","line":49,"column":8,"nodeType":"872","endLine":49,"endColumn":16,"suggestions":"1055"},{"ruleId":"876","severity":1,"message":"1056","line":2,"column":34,"nodeType":"878","messageId":"879","endLine":2,"endColumn":52},{"ruleId":"876","severity":1,"message":"1047","line":3,"column":10,"nodeType":"878","messageId":"879","endLine":3,"endColumn":20},{"ruleId":"876","severity":1,"message":"1057","line":5,"column":10,"nodeType":"878","messageId":"879","endLine":5,"endColumn":18},{"ruleId":"876","severity":1,"message":"903","line":11,"column":11,"nodeType":"878","messageId":"879","endLine":11,"endColumn":19},{"ruleId":"876","severity":1,"message":"1058","line":1,"column":8,"nodeType":"878","messageId":"879","endLine":1,"endColumn":13},{"ruleId":"876","severity":1,"message":"925","line":1,"column":29,"nodeType":"878","messageId":"879","endLine":1,"endColumn":37},{"ruleId":"876","severity":1,"message":"916","line":1,"column":28,"nodeType":"878","messageId":"879","endLine":1,"endColumn":41},{"ruleId":"876","severity":1,"message":"898","line":3,"column":10,"nodeType":"878","messageId":"879","endLine":3,"endColumn":24},{"ruleId":"876","severity":1,"message":"911","line":22,"column":13,"nodeType":"878","messageId":"879","endLine":22,"endColumn":17},{"ruleId":"963","severity":1,"message":"1059","line":213,"column":3,"nodeType":"965","messageId":"865","endLine":213,"endColumn":10},{"ruleId":"876","severity":1,"message":"897","line":1,"column":17,"nodeType":"878","messageId":"879","endLine":1,"endColumn":27},{"ruleId":"876","severity":1,"message":"895","line":1,"column":29,"nodeType":"878","messageId":"879","endLine":1,"endColumn":38},{"ruleId":"876","severity":1,"message":"925","line":1,"column":40,"nodeType":"878","messageId":"879","endLine":1,"endColumn":48},{"ruleId":"876","severity":1,"message":"1060","line":5,"column":2,"nodeType":"878","messageId":"879","endLine":5,"endColumn":7},{"ruleId":"876","severity":1,"message":"911","line":35,"column":13,"nodeType":"878","messageId":"879","endLine":35,"endColumn":17},{"ruleId":"876","severity":1,"message":"1011","line":6,"column":8,"nodeType":"878","messageId":"879","endLine":6,"endColumn":23},{"ruleId":"876","severity":1,"message":"911","line":15,"column":16,"nodeType":"878","messageId":"879","endLine":15,"endColumn":20},{"ruleId":"876","severity":1,"message":"1000","line":16,"column":11,"nodeType":"878","messageId":"879","endLine":16,"endColumn":17},{"ruleId":"876","severity":1,"message":"1061","line":3,"column":43,"nodeType":"878","messageId":"879","endLine":3,"endColumn":62},{"ruleId":"876","severity":1,"message":"896","line":4,"column":50,"nodeType":"878","messageId":"879","endLine":4,"endColumn":54},{"ruleId":"870","severity":1,"message":"1062","line":22,"column":8,"nodeType":"872","endLine":22,"endColumn":20,"suggestions":"1063"},{"ruleId":"876","severity":1,"message":"911","line":19,"column":16,"nodeType":"878","messageId":"879","endLine":19,"endColumn":20},{"ruleId":"870","severity":1,"message":"1015","line":33,"column":8,"nodeType":"872","endLine":33,"endColumn":16,"suggestions":"1064"},{"ruleId":"876","severity":1,"message":"911","line":9,"column":13,"nodeType":"878","messageId":"879","endLine":9,"endColumn":17},{"ruleId":"876","severity":1,"message":"1000","line":15,"column":11,"nodeType":"878","messageId":"879","endLine":15,"endColumn":17},{"ruleId":"876","severity":1,"message":"911","line":16,"column":16,"nodeType":"878","messageId":"879","endLine":16,"endColumn":20},{"ruleId":"870","severity":1,"message":"1065","line":26,"column":8,"nodeType":"872","endLine":26,"endColumn":10,"suggestions":"1066"},{"ruleId":"876","severity":1,"message":"916","line":3,"column":5,"nodeType":"878","messageId":"879","endLine":3,"endColumn":18},{"ruleId":"876","severity":1,"message":"917","line":4,"column":5,"nodeType":"878","messageId":"879","endLine":4,"endColumn":15},{"ruleId":"876","severity":1,"message":"942","line":8,"column":8,"nodeType":"878","messageId":"879","endLine":8,"endColumn":31},{"ruleId":"876","severity":1,"message":"1067","line":11,"column":8,"nodeType":"878","messageId":"879","endLine":11,"endColumn":24},{"ruleId":"876","severity":1,"message":"1068","line":12,"column":8,"nodeType":"878","messageId":"879","endLine":12,"endColumn":37},{"ruleId":"876","severity":1,"message":"1069","line":13,"column":8,"nodeType":"878","messageId":"879","endLine":13,"endColumn":30},{"ruleId":"876","severity":1,"message":"902","line":15,"column":29,"nodeType":"878","messageId":"879","endLine":15,"endColumn":40},{"ruleId":"876","severity":1,"message":"1070","line":15,"column":42,"nodeType":"878","messageId":"879","endLine":15,"endColumn":58},{"ruleId":"876","severity":1,"message":"911","line":23,"column":13,"nodeType":"878","messageId":"879","endLine":23,"endColumn":17},{"ruleId":"963","severity":1,"message":"1059","line":159,"column":9,"nodeType":"965","messageId":"865","endLine":159,"endColumn":16},{"ruleId":"876","severity":1,"message":"1071","line":3,"column":2,"nodeType":"878","messageId":"879","endLine":3,"endColumn":8},{"ruleId":"876","severity":1,"message":"1072","line":6,"column":2,"nodeType":"878","messageId":"879","endLine":6,"endColumn":6},{"ruleId":"876","severity":1,"message":"916","line":20,"column":2,"nodeType":"878","messageId":"879","endLine":20,"endColumn":15},{"ruleId":"876","severity":1,"message":"1040","line":22,"column":24,"nodeType":"878","messageId":"879","endLine":22,"endColumn":41},{"ruleId":"876","severity":1,"message":"1073","line":23,"column":8,"nodeType":"878","messageId":"879","endLine":23,"endColumn":32},{"ruleId":"876","severity":1,"message":"1074","line":28,"column":10,"nodeType":"878","messageId":"879","endLine":28,"endColumn":18},{"ruleId":"876","severity":1,"message":"902","line":29,"column":10,"nodeType":"878","messageId":"879","endLine":29,"endColumn":21},{"ruleId":"876","severity":1,"message":"1075","line":30,"column":10,"nodeType":"878","messageId":"879","endLine":30,"endColumn":33},{"ruleId":"876","severity":1,"message":"1076","line":30,"column":35,"nodeType":"878","messageId":"879","endLine":30,"endColumn":55},{"ruleId":"876","severity":1,"message":"1077","line":30,"column":57,"nodeType":"878","messageId":"879","endLine":30,"endColumn":74},{"ruleId":"876","severity":1,"message":"1078","line":31,"column":10,"nodeType":"878","messageId":"879","endLine":31,"endColumn":27},{"ruleId":"876","severity":1,"message":"1079","line":34,"column":10,"nodeType":"878","messageId":"879","endLine":34,"endColumn":18},{"ruleId":"876","severity":1,"message":"1001","line":43,"column":15,"nodeType":"878","messageId":"879","endLine":43,"endColumn":22},{"ruleId":"870","severity":1,"message":"1080","line":83,"column":5,"nodeType":"872","endLine":83,"endColumn":7,"suggestions":"1081"},{"ruleId":"963","severity":1,"message":"964","line":618,"column":3,"nodeType":"965","messageId":"865","endLine":618,"endColumn":9},{"ruleId":"876","severity":1,"message":"1082","line":1,"column":42,"nodeType":"878","messageId":"879","endLine":1,"endColumn":50},{"ruleId":"876","severity":1,"message":"1083","line":21,"column":13,"nodeType":"878","messageId":"879","endLine":21,"endColumn":24},{"ruleId":"876","severity":1,"message":"1000","line":22,"column":11,"nodeType":"878","messageId":"879","endLine":22,"endColumn":17},{"ruleId":"876","severity":1,"message":"911","line":23,"column":16,"nodeType":"878","messageId":"879","endLine":23,"endColumn":20},{"ruleId":"876","severity":1,"message":"1001","line":24,"column":19,"nodeType":"878","messageId":"879","endLine":24,"endColumn":26},{"ruleId":"870","severity":1,"message":"1084","line":53,"column":8,"nodeType":"872","endLine":53,"endColumn":30,"suggestions":"1085"},{"ruleId":"870","severity":1,"message":"1086","line":81,"column":8,"nodeType":"872","endLine":81,"endColumn":10,"suggestions":"1087"},{"ruleId":"908","severity":1,"message":"909","line":572,"column":73,"nodeType":"910","endLine":572,"endColumn":125},{"ruleId":"963","severity":1,"message":"964","line":767,"column":9,"nodeType":"965","messageId":"865","endLine":767,"endColumn":15},{"ruleId":"876","severity":1,"message":"1088","line":2,"column":49,"nodeType":"878","messageId":"879","endLine":2,"endColumn":65},{"ruleId":"876","severity":1,"message":"1089","line":2,"column":67,"nodeType":"878","messageId":"879","endLine":2,"endColumn":75},{"ruleId":"876","severity":1,"message":"911","line":11,"column":16,"nodeType":"878","messageId":"879","endLine":11,"endColumn":20},{"ruleId":"876","severity":1,"message":"1090","line":12,"column":13,"nodeType":"878","messageId":"879","endLine":12,"endColumn":18},{"ruleId":"876","severity":1,"message":"1019","line":7,"column":8,"nodeType":"878","messageId":"879","endLine":7,"endColumn":18},{"ruleId":"876","severity":1,"message":"1000","line":49,"column":8,"nodeType":"878","messageId":"879","endLine":49,"endColumn":14},{"ruleId":"870","severity":1,"message":"1091","line":74,"column":5,"nodeType":"872","endLine":74,"endColumn":7,"suggestions":"1092"},{"ruleId":"876","severity":1,"message":"931","line":15,"column":10,"nodeType":"878","messageId":"879","endLine":15,"endColumn":14},{"ruleId":"870","severity":1,"message":"1093","line":28,"column":5,"nodeType":"872","endLine":28,"endColumn":16,"suggestions":"1094"},{"ruleId":"876","severity":1,"message":"923","line":7,"column":2,"nodeType":"878","messageId":"879","endLine":7,"endColumn":6},{"ruleId":"876","severity":1,"message":"952","line":18,"column":8,"nodeType":"878","messageId":"879","endLine":18,"endColumn":12},{"ruleId":"876","severity":1,"message":"911","line":31,"column":13,"nodeType":"878","messageId":"879","endLine":31,"endColumn":17},{"ruleId":"876","severity":1,"message":"911","line":35,"column":13,"nodeType":"878","messageId":"879","endLine":35,"endColumn":17},{"ruleId":"870","severity":1,"message":"1017","line":56,"column":5,"nodeType":"872","endLine":56,"endColumn":22,"suggestions":"1095"},{"ruleId":"876","severity":1,"message":"1096","line":18,"column":7,"nodeType":"878","messageId":"879","endLine":18,"endColumn":16},{"ruleId":"876","severity":1,"message":"1097","line":19,"column":7,"nodeType":"878","messageId":"879","endLine":19,"endColumn":13},{"ruleId":"963","severity":1,"message":"1098","line":310,"column":2,"nodeType":"965","messageId":"865","endLine":310,"endColumn":11},{"ruleId":"876","severity":1,"message":"1099","line":9,"column":2,"nodeType":"878","messageId":"879","endLine":9,"endColumn":11},{"ruleId":"870","severity":1,"message":"1100","line":34,"column":5,"nodeType":"872","endLine":34,"endColumn":15,"suggestions":"1101"},{"ruleId":"876","severity":1,"message":"1102","line":51,"column":8,"nodeType":"878","messageId":"879","endLine":51,"endColumn":31},{"ruleId":"1103","severity":1,"message":"1104","line":98,"column":10,"nodeType":"998","messageId":"1105","endLine":98,"endColumn":17},{"ruleId":"963","severity":1,"message":"1098","line":200,"column":2,"nodeType":"965","messageId":"865","endLine":200,"endColumn":11},{"ruleId":"963","severity":1,"message":"1098","line":39,"column":2,"nodeType":"965","messageId":"865","endLine":39,"endColumn":11},{"ruleId":"876","severity":1,"message":"1106","line":3,"column":10,"nodeType":"878","messageId":"879","endLine":3,"endColumn":24},{"ruleId":"876","severity":1,"message":"1107","line":3,"column":45,"nodeType":"878","messageId":"879","endLine":3,"endColumn":51},{"ruleId":"880","severity":1,"message":"881","line":10,"column":26,"nodeType":"882","messageId":"865","endLine":10,"endColumn":28},{"ruleId":"876","severity":1,"message":"1108","line":13,"column":18,"nodeType":"878","messageId":"879","endLine":13,"endColumn":28},{"ruleId":"876","severity":1,"message":"1109","line":2,"column":10,"nodeType":"878","messageId":"879","endLine":2,"endColumn":18},{"ruleId":"876","severity":1,"message":"1110","line":15,"column":11,"nodeType":"878","messageId":"879","endLine":15,"endColumn":25},{"ruleId":"949","severity":1,"message":"950","line":45,"column":40,"nodeType":"951","messageId":"865","endLine":45,"endColumn":42},{"ruleId":"949","severity":1,"message":"950","line":50,"column":36,"nodeType":"951","messageId":"865","endLine":50,"endColumn":38},{"ruleId":"949","severity":1,"message":"950","line":55,"column":40,"nodeType":"951","messageId":"865","endLine":55,"endColumn":42},{"ruleId":"876","severity":1,"message":"896","line":2,"column":22,"nodeType":"878","messageId":"879","endLine":2,"endColumn":26},{"ruleId":"880","severity":1,"message":"881","line":7,"column":35,"nodeType":"882","messageId":"865","endLine":7,"endColumn":37},{"ruleId":"876","severity":1,"message":"896","line":2,"column":22,"nodeType":"878","messageId":"879","endLine":2,"endColumn":26},{"ruleId":"876","severity":1,"message":"883","line":9,"column":13,"nodeType":"878","messageId":"879","endLine":9,"endColumn":14},{"ruleId":"876","severity":1,"message":"948","line":10,"column":11,"nodeType":"878","messageId":"879","endLine":10,"endColumn":18},"no-extend-native","Array prototype is read only, properties should not be added.","CallExpression","unexpected","no-native-reassign",["1111"],"no-negated-in-lhs",["1112"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAuth'. Either include it or remove the dependency array.","ArrayExpression",["1113"],"React Hook useEffect has a missing dependency: 'checkUserAuthentication'. Either include it or remove the dependency array.",["1114"],"no-unused-vars","'Settings' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'t' is assigned a value but never used.","'useRef' is defined but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setAuth' and 'vault'. Either include them or remove the dependency array. You can also do a functional update 'setVault(v => ...)' if you only need 'vault' in the 'setVault' call.",["1115"],"no-const-assign","'scenario' is constant.","const","Assignments to the 'scenario' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","React Hook useEffect has missing dependencies: 'auth', 'isLastStep', 'messages', and 'scenario'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["1116"],"'useEffect' is defined but never used.","'Grid' is defined but never used.","'useContext' is defined but never used.","'useTranslation' is defined but never used.","'FormControl' is defined but never used.","'OutlinedInput' is defined but never used.","'CancelScheduleSend' is defined but never used.","'getFullName' is defined but never used.","'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchNotifications'. Either include it or remove the dependency array.",["1117"],"'history' is assigned a value but never used.","'setLang' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'i18n' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location.search' and 'query'. Either include them or remove the dependency array.",["1118"],"React Hook useEffect has missing dependencies: 'auth.user.tenant' and 'query'. Either include them or remove the dependency array.",["1119"],"'useMediaQuery' is defined but never used.","'IconButton' is defined but never used.","'Map' is defined but never used.","React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["1120"],"React Hook useEffect has a missing dependency: 'location.search'. Either include it or remove the dependency array.",["1121"],"'Fade' is defined but never used.","'Slide' is defined but never used.","'useState' is defined but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["1122","1123"],"'auth' is assigned a value but never used.","'setAuth' is assigned a value but never used.","'lang' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setSnackbar'. Either include it or remove the dependency array.",["1124"],"'Button' is defined but never used.","'Snackbar' is defined but never used.","'Alert' is defined but never used.","'snackbar' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'Grow' is defined but never used.","'AddLocationOutlinedIcon' is defined but never used.","'GroupAddIcon' is defined but never used.","'QueueIcon' is defined but never used.","'PostAddIcon' is defined but never used.","'NoteAddOutlinedIcon' is defined but never used.","'BlurOnRoundedIcon' is defined but never used.","'matches' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'clsx' is defined but never used.","'withStyles' is defined but never used.","'MenuRoundedIcon' is defined but never used.","'NotificationsNoneOutlinedIcon' is defined but never used.","'ArrowForwardRoundedIcon' is defined but never used.","'AddIcon' is defined but never used.","'MapOutlinedIcon' is defined but never used.","'notificationIcon' is defined but never used.","'plusIcon' is defined but never used.","'mapIcon' is defined but never used.","'menuIcon' is defined but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","'setNotfications' is assigned a value but never used.","'Backdrop' is defined but never used.","'Modal' is defined but never used.","'UpdateOwner' is defined but never used.","Duplicate key 'background'.","'SearchRoundedIcon' is defined but never used.","'FilterByMultiSelect' is defined but never used.","React Hook useEffect has a missing dependency: 'query.asset'. Either include it or remove the dependency array.",["1125"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Duplicate key 'display'.","'FlyToInterpolator' is defined but never used.","'ClickAwayListener' is defined but never used.","'getMapData' is defined but never used.","'updateQueryParams' is defined but never used.","'LinearProgress' is defined but never used.","'Clear' is defined but never used.","'setIsLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFaults' needs the current value of 'data'.",["1126"],"Duplicate key 'borderRadius'.","'InfoWindow' is defined but never used.","'InfoBox' is defined but never used.","'house' is defined but never used.","'FaultMinified' is defined but never used.","'getFullAddress' is defined but never used.","'ChevronRightRoundedIcon' is defined but never used.","'ChevronLeftRoundedIcon' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'downSm' is assigned a value but never used.","'setMode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'documentId'. Either include it or remove the dependency array.",["1127"],"React Hook useEffect has a missing dependency: 'auth.user.tenant'. Either include it or remove the dependency array.",["1128"],"'Tooltip' is defined but never used.","'BusinessRoundedIcon' is defined but never used.","'AssignmentRoundedIcon' is defined but never used.","'WarningRoundedIcon' is defined but never used.","'getFaultsStatusListSuggestions' is defined but never used.","'DoubleArrowIcon' is defined but never used.",["1129"],"React Hook useEffect has missing dependencies: 'auth.user.tenant', 'query', and 'setFaults'. Either include them or remove the dependency array.",["1130"],"React Hook useEffect has missing dependencies: 'history', 'location.pathname', and 'location.search'. Either include them or remove the dependency array.",["1131"],"React Hook useEffect has missing dependencies: 'history', 'location.pathname', and 'query.asset'. Either include them or remove the dependency array.",["1132"],"'dateFormat' is defined but never used.","'Can' is defined but never used.","React Hook useEffect has missing dependencies: 'fid', 'history', and 'setSnackbar'. Either include them or remove the dependency array.",["1133"],"'MoreVertIcon' is defined but never used.","'getMinPermLevel' is defined but never used.","React Hook useEffect has a missing dependency: 'assetId'. Either include it or remove the dependency array.",["1134"],"React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.",["1135"],"React Hook useEffect has missing dependencies: 'filterField', 'history', 'location.pathname', and 'location.search'. Either include them or remove the dependency array.",["1136"],"React Hook useEffect has a missing dependency: 'optionsFunc'. Either include it or remove the dependency array. If 'optionsFunc' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1137"],"React Hook useEffect has missing dependencies: 'filterField', 'history', 'location.pathname', 'location.search', and 'query'. Either include them or remove the dependency array.",["1138"],"'AuthContext' is defined but never used.","Duplicate key 'classes'.","'UpsertSystem' is defined but never used.","'i18next' is defined but never used.",["1139"],"'OpenInNewOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'faultId'. Either include it or remove the dependency array.",["1140"],"'makeStyles' is defined but never used.","'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentStatus'. Either include it or remove the dependency array.",["1141"],"'useHistory' is defined but never used.","'useLocation' is defined but never used.","'slideIn' is assigned a value but never used.","'slideDirection' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'followerList'. Either include it or remove the dependency array. If 'setUserList' needs the current value of 'followerList', you can also switch to useReducer instead of useState and read 'followerList' in the reducer.",["1142"],"React Hook useEffect has missing dependencies: 'filterField', 'optionsFunc', and 'query'. Either include them or remove the dependency array. If 'optionsFunc' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1143"],["1144"],"'specialStringPurge' is defined but never used.","'useQuery' is defined but never used.","'React' is defined but never used.","Duplicate key 'padding'.","'Paper' is defined but never used.","'queryParamsToObject' is defined but never used.","React Hook useEffect has missing dependencies: 'filterField', 'handleSearch', and 'query'. Either include them or remove the dependency array.",["1145"],["1146"],"React Hook useEffect has a missing dependency: 'relatedUsers'. Either include it or remove the dependency array.",["1147"],"'ClearRoundedIcon' is defined but never used.","'CheckCircleOutlineRoundedIcon' is defined but never used.","'CheckCircleRoundedIcon' is defined but never used.","'updateStateField' is defined but never used.","'Avatar' is defined but never used.","'Chip' is defined but never used.","'DeleteOutlineRoundedIcon' is defined but never used.","'getFault' is defined but never used.","'createSystemMenuOptions' is defined but never used.","'getAssetsSuggestions' is defined but never used.","'getSystemsByAsset' is defined but never used.","'createUserOptions' is defined but never used.","'UserItem' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["1148"],"'Collapse' is defined but never used.","'setSnackbar' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'details' and 'mode'. Either include them or remove the dependency array. You can also do a functional update 'setDetails(d => ...)' if you only need 'details' in the 'setDetails' call.",["1149"],"React Hook useEffect has a missing dependency: 'taskId'. Either include it or remove the dependency array.",["1150"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'isSeq' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'setSnackbar', and 'taskId'. Either include them or remove the dependency array.",["1151"],"React Hook useEffect has missing dependencies: 'query' and 'repeatable'. Either include them or remove the dependency array.",["1152"],["1153"],"'intervals' is assigned a value but never used.","'months' is assigned a value but never used.","Duplicate key 'textField'.","'TextField' is defined but never used.","React Hook useEffect has missing dependencies: 'index' and 'updateSchedules'. Either include them or remove the dependency array. If 'updateSchedules' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1154"],"'handleCalcNextIteration' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedReturnValue","'getDaysInMonth' is defined but never used.","'format' is defined but never used.","'setCurrent' is assigned a value but never used.","'getTasks' is defined but never used.","'lastDayOfMonth' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1155","fix":"1156"},{"desc":"1157","fix":"1158"},{"desc":"1159","fix":"1160"},{"desc":"1161","fix":"1162"},{"desc":"1163","fix":"1164"},{"desc":"1165","fix":"1166"},{"desc":"1167","fix":"1168"},{"desc":"1169","fix":"1170"},{"desc":"1171","fix":"1172"},{"messageId":"1173","fix":"1174","desc":"1175"},{"messageId":"1176","fix":"1177","desc":"1178"},{"desc":"1179","fix":"1180"},{"desc":"1181","fix":"1182"},{"desc":"1183","fix":"1184"},{"desc":"1185","fix":"1186"},{"desc":"1187","fix":"1188"},{"desc":"1181","fix":"1189"},{"desc":"1190","fix":"1191"},{"desc":"1192","fix":"1193"},{"desc":"1194","fix":"1195"},{"desc":"1196","fix":"1197"},{"desc":"1198","fix":"1199"},{"desc":"1200","fix":"1201"},{"desc":"1202","fix":"1203"},{"desc":"1204","fix":"1205"},{"desc":"1206","fix":"1207"},{"desc":"1194","fix":"1208"},{"desc":"1209","fix":"1210"},{"desc":"1211","fix":"1212"},{"desc":"1213","fix":"1214"},{"desc":"1215","fix":"1216"},{"desc":"1217","fix":"1218"},{"desc":"1219","fix":"1220"},{"desc":"1221","fix":"1222"},{"desc":"1223","fix":"1224"},{"desc":"1225","fix":"1226"},{"desc":"1227","fix":"1228"},{"desc":"1229","fix":"1230"},{"desc":"1231","fix":"1232"},{"desc":"1233","fix":"1234"},{"desc":"1194","fix":"1235"},{"desc":"1236","fix":"1237"},"Update the dependencies array to be: [setAuth]",{"range":"1238","text":"1239"},"Update the dependencies array to be: [checkUserAuthentication]",{"range":"1240","text":"1241"},"Update the dependencies array to be: [setAuth, vault]",{"range":"1242","text":"1243"},"Update the dependencies array to be: [auth, isLastStep, messages, scenario, scenarioStep]",{"range":"1244","text":"1245"},"Update the dependencies array to be: [fetchNotifications]",{"range":"1246","text":"1247"},"Update the dependencies array to be: [isLoading, location.search, query]",{"range":"1248","text":"1249"},"Update the dependencies array to be: [auth.user.tenant, isLoading, query]",{"range":"1250","text":"1251"},"Update the dependencies array to be: [location.search, query]",{"range":"1252","text":"1253"},"Update the dependencies array to be: [isLoading, location.search]",{"range":"1254","text":"1255"},"removeEscape",{"range":"1256","text":"1257"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1258","text":"1259"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [isLoading, setSnackbar]",{"range":"1260","text":"1261"},"Update the dependencies array to be: [location.search, query.asset]",{"range":"1262","text":"1263"},"Update the dependencies array to be: [data, selectedAsset]",{"range":"1264","text":"1265"},"Update the dependencies array to be: [documentId]",{"range":"1266","text":"1267"},"Update the dependencies array to be: [auth.user.tenant, details.asset, details.system]",{"range":"1268","text":"1269"},{"range":"1270","text":"1263"},"Update the dependencies array to be: [auth.user.tenant, isLoading, query, setFaults]",{"range":"1271","text":"1272"},"Update the dependencies array to be: [history, location.pathname, location.search, viewType]",{"range":"1273","text":"1274"},"Update the dependencies array to be: [history, location.pathname, location.search, query.asset]",{"range":"1275","text":"1276"},"Update the dependencies array to be: [faultData, faultId, fid, history, setSnackbar]",{"range":"1277","text":"1278"},"Update the dependencies array to be: [assetId]",{"range":"1279","text":"1280"},"Update the dependencies array to be: [handleSearch, searchText]",{"range":"1281","text":"1282"},"Update the dependencies array to be: [filterField, history, location.pathname, location.search, value]",{"range":"1283","text":"1284"},"Update the dependencies array to be: [optionsFunc]",{"range":"1285","text":"1286"},"Update the dependencies array to be: [filterField, history, location.pathname, location.search, query, value]",{"range":"1287","text":"1288"},{"range":"1289","text":"1276"},"Update the dependencies array to be: [faultId]",{"range":"1290","text":"1291"},"Update the dependencies array to be: [currentStatus]",{"range":"1292","text":"1293"},"Update the dependencies array to be: [followerList]",{"range":"1294","text":"1295"},"Update the dependencies array to be: [filterField, optionsFunc, query]",{"range":"1296","text":"1297"},"Update the dependencies array to be: [filterField, history, location.pathname, location.search, query, values]",{"range":"1298","text":"1299"},"Update the dependencies array to be: [filterField, handleSearch, query, searchText]",{"range":"1300","text":"1301"},"Update the dependencies array to be: [history, location.pathname, location.search, values]",{"range":"1302","text":"1303"},"Update the dependencies array to be: [relatedUsers]",{"range":"1304","text":"1305"},"Update the dependencies array to be: [userId]",{"range":"1306","text":"1307"},"Update the dependencies array to be: [details, details.isUsingSteps, mode]",{"range":"1308","text":"1309"},"Update the dependencies array to be: [taskId]",{"range":"1310","text":"1311"},"Update the dependencies array to be: [history, setSnackbar, taskId]",{"range":"1312","text":"1313"},"Update the dependencies array to be: [isLoading, query, repeatable]",{"range":"1314","text":"1315"},{"range":"1316","text":"1276"},"Update the dependencies array to be: [index, schedule, updateSchedules]",{"range":"1317","text":"1318"},[1132,1134],"[setAuth]",[1038,1040],"[checkUserAuthentication]",[2281,2283],"[setAuth, vault]",[3687,3701],"[auth, isLastStep, messages, scenario, scenarioStep]",[1172,1174],"[fetchNotifications]",[1484,1495],"[isLoading, location.search, query]",[1489,1500],"[auth.user.tenant, isLoading, query]",[867,884],"[location.search, query]",[1442,1453],"[isLoading, location.search]",[1995,1996],"",[1995,1995],"\\",[1636,1647],"[isLoading, setSnackbar]",[2096,2113],"[location.search, query.asset]",[2300,2315],"[data, selectedAsset]",[2462,2464],"[documentId]",[3233,3264],"[auth.user.tenant, details.asset, details.system]",[1924,1941],[1492,1503],"[auth.user.tenant, isLoading, query, setFaults]",[1806,1816],"[history, location.pathname, location.search, viewType]",[2206,2223],"[history, location.pathname, location.search, query.asset]",[2469,2489],"[faultData, faultId, fid, history, setSnackbar]",[2058,2060],"[assetId]",[1483,1495],"[handleSearch, searchText]",[1942,1949],"[filterField, history, location.pathname, location.search, value]",[1078,1080],"[optionsFunc]",[1553,1560],"[filterField, history, location.pathname, location.search, query, value]",[2204,2221],[2735,2737],"[faultId]",[1238,1240],"[currentStatus]",[1095,1097],"[followerList]",[1345,1347],"[filterField, optionsFunc, query]",[1874,1882],"[filterField, history, location.pathname, location.search, query, values]",[1118,1130],"[filterField, handleSearch, query, searchText]",[1451,1459],"[history, location.pathname, location.search, values]",[1108,1110],"[relatedUsers]",[2430,2432],"[userId]",[2487,2509],"[details, details.isUsingSteps, mode]",[3357,3359],"[taskId]",[2750,2752],"[history, setSnackbar, taskId]",[1025,1036],"[isLoading, query, repeatable]",[1993,2010],[921,931],"[index, schedule, updateSchedules]"]