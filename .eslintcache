[{"C:\\projects\\leev\\leev-fe\\src\\index.js":"1","C:\\projects\\leev\\leev-fe\\src\\App.js":"2","C:\\projects\\leev\\leev-fe\\src\\i18n.js":"3","C:\\projects\\leev\\leev-fe\\src\\context\\LanguageContext.js":"4","C:\\projects\\leev\\leev-fe\\src\\context\\FiltersContext.js":"5","C:\\projects\\leev\\leev-fe\\src\\context\\SnackbarContext.js":"6","C:\\projects\\leev\\leev-fe\\src\\themes\\theme.js":"7","C:\\projects\\leev\\leev-fe\\src\\components\\workspace\\ProtectedWorkspace.js":"8","C:\\projects\\leev\\leev-fe\\src\\components\\routes\\InitialRouter.js":"9","C:\\projects\\leev\\leev-fe\\src\\components\\workspace\\Workspace.js":"10","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Chatbot.js":"11","C:\\projects\\leev\\leev-fe\\src\\components\\user\\Login.js":"12","C:\\projects\\leev\\leev-fe\\src\\context\\FaultsContext.js":"13","C:\\projects\\leev\\leev-fe\\src\\context\\NotificationsContext.js":"14","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Messages.js":"15","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageInput.js":"16","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Scenrio.js":"17","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageImage.js":"18","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageSelector.js":"19","C:\\projects\\leev\\leev-fe\\src\\api\\userApi.js":"20","C:\\projects\\leev\\leev-fe\\src\\api\\assetsApi.js":"21","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\Controls.js":"22","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Settings.js":"23","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Assets.js":"24","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\Tasks.js":"25","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\Documents.js":"26","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\Faults.js":"27","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MapView.js":"28","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\Systems.js":"29","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Message.js":"30","C:\\projects\\leev\\leev-fe\\src\\api\\chatbotApi.js":"31","C:\\projects\\leev\\leev-fe\\src\\api\\genericApi.js":"32","C:\\projects\\leev\\leev-fe\\src\\api\\notificationsApi.js":"33","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Users.js":"34","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UserProfile.js":"35","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\SettingsMenu.js":"36","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CreateContainer.js":"37","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\AddMenu.js":"38","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Navbar.js":"39","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Notifications.js":"40","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\SideMenu.js":"41","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Asset.js":"42","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetsControls.js":"43","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AlertDialog.js":"44","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsControls.js":"45","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsHeader.js":"46","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\System.js":"47","C:\\projects\\leev\\leev-fe\\src\\api\\systemsApi.js":"48","C:\\projects\\leev\\leev-fe\\src\\api\\mapApi.js":"49","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\Mapbox.js":"50","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MarkerData.js":"51","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\Map.js":"52","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\UpsertDocument.js":"53","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MapControls.js":"54","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViews.js":"55","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\DocumentsControls.js":"56","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultView.js":"57","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\Document.js":"58","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\useQuery.js":"59","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\Can.js":"60","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\UpsertAsset.js":"61","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBoxSelect.js":"62","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterBySelect.js":"63","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateOwner.js":"64","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\UpsertSystem.js":"65","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemAdditionalDetails.js":"66","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskMinified.js":"67","C:\\projects\\leev\\leev-fe\\src\\api\\documentsApi.js":"68","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultsControls.js":"69","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\UpsertFault.js":"70","C:\\projects\\leev\\leev-fe\\src\\components\\user\\UserItem.js":"71","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ItemLink.js":"72","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\DocumentControls.js":"73","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViewControls.js":"74","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultLink.js":"75","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UserList.js":"76","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateStatus.js":"77","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\StatusTag.js":"78","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CommentSection.js":"79","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\Carousel.js":"80","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AddRelatedUser.js":"81","C:\\projects\\leev\\leev-fe\\src\\api\\faultsApi.js":"82","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterByMultiSelect.js":"83","C:\\projects\\leev\\leev-fe\\src\\api\\tasksApi.js":"84","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlockView.js":"85","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultListView.js":"86","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\usePermissions.js":"87","C:\\projects\\leev\\leev-fe\\src\\api\\permissionsApi.js":"88","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\TimeActive.js":"89","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultMinified.js":"90","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemRelatedUsers.js":"91","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemControls.js":"92","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlock.js":"93","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemName.js":"94","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBox.js":"95","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SortBy.js":"96","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetControls.js":"97","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\AddRelatedUser.js":"98","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Notification.js":"99","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UpsertUser.js":"100","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\UpsertTask.js":"101","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskSteps.js":"102","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskView.js":"103","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TasksList.js":"104","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskViewControls.js":"105","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TasksControls.js":"106","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\scheduler\\Scheduler.js":"107","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\scheduler\\ScheduleItem.js":"108","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\datepickers\\CustomeDatePicker.js":"109","C:\\projects\\leev\\leev-fe\\src\\context\\authContext.js":"110","C:\\projects\\leev\\leev-fe\\src\\context\\AuthContext.js":"111","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageBoolean.js":"112","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\RepeatableTasks.js":"113","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\Calender.js":"114","C:\\projects\\leev\\leev-fe\\src\\api\\calenderApi.js":"115","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\CalenderHeaderRow.js":"116","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\CalenderRow.js":"117","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\RolesAndPermissions.js":"118","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UpsertRole.js":"119","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Permission.js":"120","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\EventBracket.js":"121","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\EventsViewer.js":"122","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetsList.js":"123","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetView.js":"124","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\SystemsGrid.js":"125","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\FaultsGrid.js":"126","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\TasksGrid.js":"127","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\locations\\UpsertLocation.js":"128","C:\\projects\\leev\\leev-fe\\src\\api\\locationsApi.js":"129","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\LocationsGrid.js":"130","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Residents.js":"131","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\ResidentsGrid.js":"132","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\Dashboard.js":"133","C:\\projects\\leev\\leev-fe\\src\\api\\dashboardApi.js":"134","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\LastOperations.js":"135","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\OpenItems.js":"136","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\AverageTimeToClose.js":"137","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\PendingFaults.js":"138","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\UpcomingTasks.js":"139","C:\\projects\\leev\\leev-fe\\src\\components\\user\\PasswordRecovery.js":"140","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ChangeLanguage.js":"141","C:\\projects\\leev\\leev-fe\\src\\components\\user\\ResetPassword.js":"142","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\clients\\UpsertClient.js":"143","C:\\projects\\leev\\leev-fe\\src\\api\\adminApi.js":"144","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\clients\\Clients.js":"145","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\clients\\ClientControls.js":"146","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\DynamicTable.js":"147","C:\\projects\\leev\\leev-fe\\src\\assets\\icons\\MenuIcon.js":"148","C:\\projects\\leev\\leev-fe\\src\\assets\\icons\\NotificationsIcon.js":"149","C:\\projects\\leev\\leev-fe\\src\\assets\\icons\\CalenderIcon.js":"150","C:\\projects\\leev\\leev-fe\\src\\assets\\icons\\MapIcon.js":"151","C:\\projects\\leev\\leev-fe\\src\\assets\\icons\\AddIcon.js":"152","C:\\projects\\leev\\leev-fe\\src\\context\\EnvContext.js":"153","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\NoDataFound.js":"154","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ReturnToPrevious.js":"155","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Messenger.js":"156","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Conversations.js":"157","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Conversation.js":"158","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Topbar.js":"159","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\MainConversation.js":"160","C:\\projects\\leev\\leev-fe\\src\\context\\SocketContext.js":"161","C:\\projects\\leev\\leev-fe\\src\\context\\ConversationsContext.js":"162","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\useSocket.js":"163","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Messages.js":"164","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Message.js":"165","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\MessageInput.js":"166","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\NewMessage.js":"167","C:\\projects\\leev\\leev-fe\\src\\api\\messengerApi.js":"168","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ModalContainer.js":"169","C:\\projects\\leev\\leev-fe\\src\\context\\UpsertContext.js":"170","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\LoadingProgress.js":"171"},{"size":1001,"mtime":1627400551300,"results":"172","hashOfConfig":"173"},{"size":2443,"mtime":1624851775580,"results":"174","hashOfConfig":"173"},{"size":948,"mtime":1623208037100,"results":"175","hashOfConfig":"173"},{"size":956,"mtime":1624083403819,"results":"176","hashOfConfig":"173"},{"size":463,"mtime":1619827455314,"results":"177","hashOfConfig":"173"},{"size":390,"mtime":1619827455315,"results":"178","hashOfConfig":"173"},{"size":2202,"mtime":1627400551301,"results":"179","hashOfConfig":"173"},{"size":1515,"mtime":1620606805126,"results":"180","hashOfConfig":"173"},{"size":1448,"mtime":1627400551298,"results":"181","hashOfConfig":"173"},{"size":4890,"mtime":1627400551299,"results":"182","hashOfConfig":"173"},{"size":9483,"mtime":1623246639473,"results":"183","hashOfConfig":"173"},{"size":11332,"mtime":1627400551299,"results":"184","hashOfConfig":"173"},{"size":372,"mtime":1619827455314,"results":"185","hashOfConfig":"173"},{"size":428,"mtime":1619827455314,"results":"186","hashOfConfig":"173"},{"size":2537,"mtime":1623247624485,"results":"187","hashOfConfig":"173"},{"size":2255,"mtime":1626314716476,"results":"188","hashOfConfig":"173"},{"size":5453,"mtime":1624988300538,"results":"189","hashOfConfig":"173"},{"size":3375,"mtime":1626977541885,"results":"190","hashOfConfig":"173"},{"size":3088,"mtime":1626314687164,"results":"191","hashOfConfig":"173"},{"size":7449,"mtime":1627400551274,"results":"192","hashOfConfig":"173"},{"size":7729,"mtime":1625352792262,"results":"193","hashOfConfig":"173"},{"size":4672,"mtime":1627400551276,"results":"194","hashOfConfig":"173"},{"size":5250,"mtime":1622662917816,"results":"195","hashOfConfig":"173"},{"size":671,"mtime":1626821123518,"results":"196","hashOfConfig":"173"},{"size":691,"mtime":1620493570053,"results":"197","hashOfConfig":"173"},{"size":4692,"mtime":1627400551287,"results":"198","hashOfConfig":"173"},{"size":669,"mtime":1619827455296,"results":"199","hashOfConfig":"173"},{"size":2737,"mtime":1621372748036,"results":"200","hashOfConfig":"173"},{"size":2908,"mtime":1627400551293,"results":"201","hashOfConfig":"173"},{"size":2129,"mtime":1627400551275,"results":"202","hashOfConfig":"173"},{"size":898,"mtime":1619993090833,"results":"203","hashOfConfig":"173"},{"size":6409,"mtime":1626742737719,"results":"204","hashOfConfig":"173"},{"size":2463,"mtime":1621228817970,"results":"205","hashOfConfig":"173"},{"size":6861,"mtime":1627401634685,"results":"206","hashOfConfig":"173"},{"size":5584,"mtime":1622643935491,"results":"207","hashOfConfig":"173"},{"size":3492,"mtime":1622662807679,"results":"208","hashOfConfig":"173"},{"size":8818,"mtime":1627400551296,"results":"209","hashOfConfig":"173"},{"size":7157,"mtime":1627400551277,"results":"210","hashOfConfig":"173"},{"size":8113,"mtime":1627400551277,"results":"211","hashOfConfig":"173"},{"size":4382,"mtime":1624853077502,"results":"212","hashOfConfig":"173"},{"size":11155,"mtime":1627400551278,"results":"213","hashOfConfig":"173"},{"size":5354,"mtime":1625352792265,"results":"214","hashOfConfig":"173"},{"size":5875,"mtime":1624915890579,"results":"215","hashOfConfig":"173"},{"size":3226,"mtime":1619827455305,"results":"216","hashOfConfig":"173"},{"size":6217,"mtime":1624973595465,"results":"217","hashOfConfig":"173"},{"size":3344,"mtime":1619827455301,"results":"218","hashOfConfig":"173"},{"size":6616,"mtime":1627400551292,"results":"219","hashOfConfig":"173"},{"size":8303,"mtime":1627400551274,"results":"220","hashOfConfig":"173"},{"size":1074,"mtime":1621228816911,"results":"221","hashOfConfig":"173"},{"size":5489,"mtime":1621985714682,"results":"222","hashOfConfig":"173"},{"size":9028,"mtime":1627400551291,"results":"223","hashOfConfig":"173"},{"size":5489,"mtime":1621228804740,"results":"224","hashOfConfig":"173"},{"size":20281,"mtime":1627401525989,"results":"225","hashOfConfig":"173"},{"size":5371,"mtime":1619827455297,"results":"226","hashOfConfig":"173"},{"size":3159,"mtime":1627400551290,"results":"227","hashOfConfig":"173"},{"size":6608,"mtime":1624973743069,"results":"228","hashOfConfig":"173"},{"size":14343,"mtime":1627400874083,"results":"229","hashOfConfig":"173"},{"size":6234,"mtime":1627400551287,"results":"230","hashOfConfig":"173"},{"size":164,"mtime":1619827455309,"results":"231","hashOfConfig":"173"},{"size":521,"mtime":1624481954990,"results":"232","hashOfConfig":"173"},{"size":13473,"mtime":1627401475575,"results":"233","hashOfConfig":"173"},{"size":8044,"mtime":1624915205732,"results":"234","hashOfConfig":"173"},{"size":6965,"mtime":1624565611941,"results":"235","hashOfConfig":"173"},{"size":7840,"mtime":1619827455308,"results":"236","hashOfConfig":"173"},{"size":27531,"mtime":1627401585971,"results":"237","hashOfConfig":"173"},{"size":10608,"mtime":1627400551292,"results":"238","hashOfConfig":"173"},{"size":5523,"mtime":1621438622708,"results":"239","hashOfConfig":"173"},{"size":4479,"mtime":1623737017999,"results":"240","hashOfConfig":"173"},{"size":7191,"mtime":1624974065856,"results":"241","hashOfConfig":"173"},{"size":18945,"mtime":1627401514921,"results":"242","hashOfConfig":"173"},{"size":3842,"mtime":1626274520393,"results":"243","hashOfConfig":"173"},{"size":398,"mtime":1619827455307,"results":"244","hashOfConfig":"173"},{"size":4253,"mtime":1623737018000,"results":"245","hashOfConfig":"173"},{"size":5128,"mtime":1621373863926,"results":"246","hashOfConfig":"173"},{"size":531,"mtime":1619827455294,"results":"247","hashOfConfig":"173"},{"size":4999,"mtime":1621228792092,"results":"248","hashOfConfig":"173"},{"size":7898,"mtime":1622522206579,"results":"249","hashOfConfig":"173"},{"size":2279,"mtime":1622521699787,"results":"250","hashOfConfig":"173"},{"size":12381,"mtime":1627400551296,"results":"251","hashOfConfig":"173"},{"size":7651,"mtime":1619827455305,"results":"252","hashOfConfig":"173"},{"size":7792,"mtime":1619827455304,"results":"253","hashOfConfig":"173"},{"size":8882,"mtime":1625352792263,"results":"254","hashOfConfig":"173"},{"size":8749,"mtime":1621488036051,"results":"255","hashOfConfig":"173"},{"size":9058,"mtime":1626743038266,"results":"256","hashOfConfig":"173"},{"size":2819,"mtime":1624938398119,"results":"257","hashOfConfig":"173"},{"size":3679,"mtime":1625352792270,"results":"258","hashOfConfig":"173"},{"size":817,"mtime":1624482004198,"results":"259","hashOfConfig":"173"},{"size":4139,"mtime":1624559589659,"results":"260","hashOfConfig":"173"},{"size":1011,"mtime":1619827455308,"results":"261","hashOfConfig":"173"},{"size":3015,"mtime":1621438362805,"results":"262","hashOfConfig":"173"},{"size":6428,"mtime":1619827455300,"results":"263","hashOfConfig":"173"},{"size":5458,"mtime":1621192851861,"results":"264","hashOfConfig":"173"},{"size":786,"mtime":1621438394418,"results":"265","hashOfConfig":"173"},{"size":5213,"mtime":1619827455300,"results":"266","hashOfConfig":"173"},{"size":3806,"mtime":1621211496662,"results":"267","hashOfConfig":"173"},{"size":5224,"mtime":1621209954782,"results":"268","hashOfConfig":"173"},{"size":5997,"mtime":1627400551281,"results":"269","hashOfConfig":"173"},{"size":7683,"mtime":1619827455299,"results":"270","hashOfConfig":"173"},{"size":5232,"mtime":1621006829713,"results":"271","hashOfConfig":"173"},{"size":26998,"mtime":1627401456778,"results":"272","hashOfConfig":"173"},{"size":26541,"mtime":1627401595997,"results":"273","hashOfConfig":"173"},{"size":4930,"mtime":1621988119222,"results":"274","hashOfConfig":"173"},{"size":20888,"mtime":1627400551294,"results":"275","hashOfConfig":"173"},{"size":2946,"mtime":1627400551295,"results":"276","hashOfConfig":"173"},{"size":5844,"mtime":1621228799049,"results":"277","hashOfConfig":"173"},{"size":6043,"mtime":1624973622217,"results":"278","hashOfConfig":"173"},{"size":6906,"mtime":1621996468627,"results":"279","hashOfConfig":"173"},{"size":6110,"mtime":1623261297986,"results":"280","hashOfConfig":"173"},{"size":1220,"mtime":1623260962925,"results":"281","hashOfConfig":"173"},{"size":457,"mtime":1619828447544,"results":"282","hashOfConfig":"173"},{"size":457,"mtime":1619828447544,"results":"283","hashOfConfig":"173"},{"size":1546,"mtime":1622652068401,"results":"284","hashOfConfig":"173"},{"size":700,"mtime":1620426895691,"results":"285","hashOfConfig":"173"},{"size":3220,"mtime":1624973782836,"results":"286","hashOfConfig":"173"},{"size":3133,"mtime":1621701052703,"results":"287","hashOfConfig":"173"},{"size":1084,"mtime":1621062087694,"results":"288","hashOfConfig":"173"},{"size":2197,"mtime":1621700262676,"results":"289","hashOfConfig":"173"},{"size":6195,"mtime":1627401657192,"results":"290","hashOfConfig":"173"},{"size":10143,"mtime":1627400551279,"results":"291","hashOfConfig":"173"},{"size":3926,"mtime":1621480499559,"results":"292","hashOfConfig":"173"},{"size":1076,"mtime":1621659968409,"results":"293","hashOfConfig":"173"},{"size":6434,"mtime":1627400551285,"results":"294","hashOfConfig":"173"},{"size":3498,"mtime":1627400551282,"results":"295","hashOfConfig":"173"},{"size":9712,"mtime":1627400551281,"results":"296","hashOfConfig":"173"},{"size":4163,"mtime":1627400551284,"results":"297","hashOfConfig":"173"},{"size":4112,"mtime":1627400551283,"results":"298","hashOfConfig":"173"},{"size":4453,"mtime":1627400551285,"results":"299","hashOfConfig":"173"},{"size":12025,"mtime":1627401576856,"results":"300","hashOfConfig":"173"},{"size":3220,"mtime":1625715181202,"results":"301","hashOfConfig":"173"},{"size":6727,"mtime":1627401404590,"results":"302","hashOfConfig":"173"},{"size":6878,"mtime":1627401650684,"results":"303","hashOfConfig":"173"},{"size":4370,"mtime":1627400551284,"results":"304","hashOfConfig":"173"},{"size":4159,"mtime":1627400551286,"results":"305","hashOfConfig":"173"},{"size":479,"mtime":1623387433353,"results":"306","hashOfConfig":"173"},{"size":9083,"mtime":1624988254877,"results":"307","hashOfConfig":"173"},{"size":2939,"mtime":1623603040851,"results":"308","hashOfConfig":"173"},{"size":4484,"mtime":1624988250990,"results":"309","hashOfConfig":"173"},{"size":5765,"mtime":1624973489083,"results":"310","hashOfConfig":"173"},{"size":5131,"mtime":1624977048586,"results":"311","hashOfConfig":"173"},{"size":8023,"mtime":1624084137119,"results":"312","hashOfConfig":"173"},{"size":1904,"mtime":1624083581430,"results":"313","hashOfConfig":"173"},{"size":11872,"mtime":1624234201621,"results":"314","hashOfConfig":"173"},{"size":14426,"mtime":1627401539325,"results":"315","hashOfConfig":"173"},{"size":2235,"mtime":1624565667317,"results":"316","hashOfConfig":"173"},{"size":1395,"mtime":1624420884498,"results":"317","hashOfConfig":"173"},{"size":4943,"mtime":1624390052255,"results":"318","hashOfConfig":"173"},{"size":3706,"mtime":1624421113673,"results":"319","hashOfConfig":"173"},{"size":1631,"mtime":1624851054834,"results":"320","hashOfConfig":"173"},{"size":1990,"mtime":1624851208205,"results":"321","hashOfConfig":"173"},{"size":7881,"mtime":1624851046091,"results":"322","hashOfConfig":"173"},{"size":4618,"mtime":1624851001241,"results":"323","hashOfConfig":"173"},{"size":2577,"mtime":1624890396626,"results":"324","hashOfConfig":"173"},{"size":467,"mtime":1626285476010,"results":"325","hashOfConfig":"173"},{"size":1955,"mtime":1627400551298,"results":"326","hashOfConfig":"173"},{"size":1041,"mtime":1626276670763,"results":"327","hashOfConfig":"173"},{"size":5145,"mtime":1626742737722,"results":"328","hashOfConfig":"173"},{"size":896,"mtime":1626238266960,"results":"329","hashOfConfig":"173"},{"size":3366,"mtime":1626977431181,"results":"330","hashOfConfig":"173"},{"size":1754,"mtime":1626240947578,"results":"331","hashOfConfig":"173"},{"size":4245,"mtime":1626977431563,"results":"332","hashOfConfig":"173"},{"size":628,"mtime":1626238266970,"results":"333","hashOfConfig":"173"},{"size":1934,"mtime":1626238266969,"results":"334","hashOfConfig":"173"},{"size":184,"mtime":1626238266967,"results":"335","hashOfConfig":"173"},{"size":2145,"mtime":1626289969776,"results":"336","hashOfConfig":"173"},{"size":2709,"mtime":1626742737721,"results":"337","hashOfConfig":"173"},{"size":2925,"mtime":1626742737721,"results":"338","hashOfConfig":"173"},{"size":4631,"mtime":1626238266965,"results":"339","hashOfConfig":"173"},{"size":962,"mtime":1626742737720,"results":"340","hashOfConfig":"173"},{"size":4546,"mtime":1627400551297,"results":"341","hashOfConfig":"173"},{"size":443,"mtime":1627400551299,"results":"342","hashOfConfig":"173"},{"size":1563,"mtime":1627400551297,"results":"343","hashOfConfig":"173"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ryrvlx",{"filePath":"346","messages":"347","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"349"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"349"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"349"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"366","messages":"367","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"368","messages":"369","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"349"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"349"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"349"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"349"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"349"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"397","messages":"398","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"349"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"349"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"413","messages":"414","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"349"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"349"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"349"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"432","messages":"433","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"436","messages":"437","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"349"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"441","messages":"442","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"349"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"349"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"349"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"349"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"349"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"460","messages":"461","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"349"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"349"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"468","messages":"469","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"349"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"473","messages":"474","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"349"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"478","messages":"479","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"349"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"483","messages":"484","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"349"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"492","messages":"493","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"349"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"349"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"349"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"503","messages":"504","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"349"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"349"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"349"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"349"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"349"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"349"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"349"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"538","messages":"539","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"349"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"349"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"349"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"349"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"349"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"349"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"349"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"349"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"349"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"349"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"349"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"349"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582","usedDeprecatedRules":"349"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"349"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"588","messages":"589","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"349"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"349"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"596","messages":"597","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"598","messages":"599","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"349"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"603","messages":"604","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"605","messages":"606","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607","usedDeprecatedRules":"349"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610","usedDeprecatedRules":"349"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613","usedDeprecatedRules":"349"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616","usedDeprecatedRules":"349"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619","usedDeprecatedRules":"349"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630","usedDeprecatedRules":"349"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"349"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636","usedDeprecatedRules":"349"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"349"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"642","messages":"643","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"644","messages":"645","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"349"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649","usedDeprecatedRules":"349"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"652","messages":"653","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"654","messages":"655","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"656","messages":"657","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"658","messages":"659","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"660","messages":"661","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"662","messages":"663","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"668","messages":"669","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"670","messages":"671","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"672","messages":"673","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678","usedDeprecatedRules":"349"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"681","usedDeprecatedRules":"349"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"684","usedDeprecatedRules":"349"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687","usedDeprecatedRules":"349"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"690","usedDeprecatedRules":"349"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"693","usedDeprecatedRules":"349"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"696","usedDeprecatedRules":"349"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"349"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"349"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"349"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"349"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"727","messages":"728","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"729","usedDeprecatedRules":"349"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"732","usedDeprecatedRules":"349"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735","usedDeprecatedRules":"349"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"738","usedDeprecatedRules":"349"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"741","usedDeprecatedRules":"349"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"744","usedDeprecatedRules":"349"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"749","usedDeprecatedRules":"349"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"752","usedDeprecatedRules":"349"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755","usedDeprecatedRules":"349"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"349"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761","usedDeprecatedRules":"349"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"764","usedDeprecatedRules":"349"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"771","messages":"772","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\projects\\leev\\leev-fe\\src\\index.js",["773"],"C:\\projects\\leev\\leev-fe\\src\\App.js",["774","775","776"],"import './App.css';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { Login } from './components/user/Login';\r\nimport { PasswordRecovery } from './components/user/PasswordRecovery';\r\nimport { ProtectedWorkspace } from './components/workspace/ProtectedWorkspace';\r\nimport { InitialRouter } from './components/routes/InitialRouter';\r\nimport { Workspace } from './components/workspace/Workspace';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { theme } from './themes/theme';\r\nimport { FiltersContextProvider } from './context/FiltersContext';\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\r\nimport { LanguageContext } from './context/LanguageContext';\r\nimport { SnackbarContextProvider } from './context/SnackbarContext';\r\nimport { Chatbot } from './components/chatbot/Chatbot';\r\nimport { ResetPassword } from './components/user/ResetPassword';\r\nimport { EnvContext } from './context/EnvContext';\r\nimport { AlertTitle } from '@material-ui/lab';\r\n\r\n\r\nfunction App() {\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { env, setEnv } = useContext(EnvContext);\r\n\tconst jss = create({\r\n\t\tplugins: [...jssPreset().plugins, lang.code === 'he' ? rtl() : null],\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('resize', () => {\r\n\t\t\tsetEnv({\r\n\t\t\t\tscreenHeight: window.innerHeight,\r\n\t\t\t\tscreenWidth: window.innerWidth\r\n\t\t\t})\r\n\t\t})\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<StylesProvider jss={jss}>\r\n\t\t\t<div className=\"App\" dir={lang.dir}>\r\n\t\t\t\t<ThemeProvider theme={{...theme, direction: lang.dir}}>\r\n\t\t\t\t\t<Router>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<InitialRouter exact path=\"/\"></InitialRouter>\r\n\t\t\t\t\t\t\t<Route path=\"/login\">\r\n\t\t\t\t\t\t\t\t<Login />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path=\"/passwordrecovery\">\r\n\t\t\t\t\t\t\t\t<PasswordRecovery />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path=\"/reset/:handle\">\r\n\t\t\t\t\t\t\t\t<ResetPassword />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<ProtectedWorkspace path=\"/workspace\">\r\n\t\t\t\t\t\t\t\t<SnackbarContextProvider>\r\n\t\t\t\t\t\t\t\t\t<FiltersContextProvider>\r\n\t\t\t\t\t\t\t\t\t\t<Workspace />\r\n\t\t\t\t\t\t\t\t\t</FiltersContextProvider>\r\n\t\t\t\t\t\t\t\t</SnackbarContextProvider>\r\n\t\t\t\t\t\t\t</ProtectedWorkspace>\r\n\t\t\t\t\t\t\t<Route path=\"/open/:assetId\">\r\n\t\t\t\t\t\t\t\t<Chatbot />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</Router>\r\n\t\t\t\t</ThemeProvider>\r\n\t\t\t</div>\r\n\t\t</StylesProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n",["777","778"],"C:\\projects\\leev\\leev-fe\\src\\i18n.js",["779","780"],"import { FiberManualRecordRounded } from '@material-ui/icons';\r\nimport i18n from 'i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next }from 'react-i18next';\r\nimport { handleLS } from './api/userApi';\r\nimport en from './lacales/en/translation.json';\r\nimport he from './lacales/he/translation.json';\r\n\r\nlet fbc = 'en';\r\nlet lsg = localStorage.getItem('wb_lang');\r\nif (lsg) {\r\n    fbc = JSON.parse(localStorage.getItem('wb_lang')).lang;\r\n}\r\n\r\n\r\n\r\nconst resources = {\r\n    en: {\r\n        translation: en\r\n    },\r\n    he: {\r\n        translation: he\r\n    }\r\n}\r\n\r\ni18n\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init({\r\n        resources,\r\n        fallbackLng: fbc,\r\n        detection: {\r\n            order: ['queryString', 'cookie'],\r\n            cache: ['cookie']\r\n        },\r\n        interpolation: {\r\n            escapeValue: false\r\n        }\r\n    });\r\n\r\nexport default i18n;\r\n    ","C:\\projects\\leev\\leev-fe\\src\\context\\LanguageContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\FiltersContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\SnackbarContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\themes\\theme.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\workspace\\ProtectedWorkspace.js",["781"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authenticate, handleLS } from '../../api/userApi';\r\n\r\nexport const ProtectedWorkspace = ({ children, isAuthenticated,...rest}) => {\r\n    \r\n    const { auth, setAuth } = useContext(AuthContext);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const checkUserAuthentication = async () => {\r\n            let token = await handleLS('wb_token', 'get');\r\n            if (!token) {\r\n                setIsLoading(false);\r\n                return;\r\n            };\r\n            let res = await authenticate(token);\r\n            if (res.auth) {\r\n               setAuth({\r\n                    isAuth: res.auth,\r\n                    user: res.user,\r\n                    token: res.token.token,\r\n                    refreshToken: res.token.refreshToken\r\n                });\r\n                  \r\n            }\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        checkUserAuthentication();\r\n    }, []);\r\n\r\n    return (\r\n        <Route {...rest}\r\n          render={({ location }) => isLoading ? \r\n            'loading' : \r\n            auth.isAuth\r\n            ? children\r\n            :   <Redirect\r\n                    to={{\r\n                    pathname: \"/login\",\r\n                    state: { from: location }\r\n                }}/>\r\n            }      \r\n        />\r\n      );\r\n}\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\routes\\InitialRouter.js",["782"],"C:\\projects\\leev\\leev-fe\\src\\components\\workspace\\Workspace.js",["783","784","785","786","787"],"C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Chatbot.js",["788","789","790","791","792","793","794","795","796","797","798","799"],"import {\r\n\tButton,\r\n\tFade,\r\n\tGrid,\r\n\tmakeStyles,\r\n\tMenu,\r\n\tMenuItem,\r\n} from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useParams } from \"react-router\";\r\nimport { getAssetExternal, getFullAddress } from \"../../api/assetsApi\";\r\nimport { authenticate, handleLS } from \"../../api/userApi\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { MessageImage } from \"./MessageImage\";\r\nimport { MessageInput } from \"./MessageInput\";\r\nimport { Messages } from \"./Messages\";\r\nimport { MessageSelector } from \"./MessageSelector\";\r\nimport { MessageBoolean } from \"./MessageBoolean\";\r\nimport * as scenarios from \"./Scenrio\";\r\nimport { LanguageContext } from \"../../context/LanguageContext\";\r\nimport { getLocalization } from \"../../api/genericApi\";\r\nimport i18next from \"i18next\";\r\n\r\nconst languages = [\"en\", \"he\"];\r\n\r\nexport const Chatbot = () => {\r\n\tconst classes = useStyles();\r\n\tconst { auth, setAuth } = useContext(AuthContext);\r\n\tconst { lang, setLang } = useContext(LanguageContext);\r\n\tconst params = useParams();\r\n\tconst [scenario, setScenario] = useState(scenarios.openFault);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [scenarioStep, setScenarioStep] = useState(null);\r\n\tconst [messages, setMessages] = useState([]);\r\n\tconst [mainAsset, setMainAsset] = useState(null);\r\n\tconst [inputValue, setInputValue] = useState({\r\n\t\ttext: \"\",\r\n\t\tvalue: \"\",\r\n\t\ttype: \"\",\r\n\t});\r\n\tconst [systems, setSystems] = useState([]);\r\n\tconst [locations, setLocations] = useState([]);\r\n\tconst [optionalValues, setOptionalValues] = useState([]);\r\n\tconst [vault, setVault] = useState({});\r\n\tconst [showInput, setShowInput] = useState(null);\r\n\tconst [langMenu, setLangMenu] = useState(false);\r\n\t// const messageContainer = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst checkUserAuthentication = async () => {\r\n\t\t\tlet token = await handleLS(\"wb_token\", \"get\");\r\n\t\t\tif (!token) {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet res = await authenticate(token);\r\n\t\t\tif (res.auth) {\r\n\t\t\t\tsetAuth({\r\n\t\t\t\t\tisAuth: res.auth,\r\n\t\t\t\t\tuser: res.user,\r\n\t\t\t\t\ttoken: res.token.token,\r\n\t\t\t\t\trefreshToken: res.token.refreshToken,\r\n\t\t\t\t});\r\n\t\t\t\tsetVault({\r\n\t\t\t\t\t...vault,\r\n\t\t\t\t\tuser: res.user,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tsetIsLoading(false);\r\n\t\t\treturn;\r\n\t\t};\r\n\t\tcheckUserAuthentication();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!params.assetId) {\r\n\t\t\tscenario = scenarios.assetNotFound;\r\n\t\t}\r\n\t\tgetAssetExternal(params.assetId)\r\n\t\t\t.then((data) => {\r\n\t\t\t\tif (!data.asset || !data.systems) {\r\n\t\t\t\t\tscenario = scenarios.assetNotFound;\r\n\t\t\t\t}\r\n\t\t\t\tsetMainAsset(data.asset);\r\n\t\t\t\tsetSystems([\r\n\t\t\t\t\t...data.systems.map((s, i) => ({ name: s.name, value: s._id })),\r\n\t\t\t\t]);\r\n\t\t\t\tsetLocations([\r\n\t\t\t\t\t...data.locations.map((l, i) => ({ name: l.name, value: l._id })),\r\n\t\t\t\t]);\r\n\t\t\t\treturn updateScenarioState(data.asset._id, \"asset\");\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tsetScenarioStep(scenario.questions[0]);\r\n\t\t\t});\r\n\t}, [params]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!scenarioStep) return;\r\n\t\tsetTimeout(async () => {\r\n\t\t\tsetMessages([\r\n\t\t\t\t...messages,\r\n\t\t\t\t{ text: scenarioStep.text, isUser: false, type: \"string\" },\r\n\t\t\t]);\r\n\t\t\tif (!scenarioStep.actionRequired) {\r\n\t\t\t\tif (isLastStep()) {\r\n\t\t\t\t\tlet sc = await scenarios.getNextScenario(scenario, auth);\r\n\t\t\t\t\tsetScenario(sc);\r\n\t\t\t\t\tsetScenarioStep(null);\r\n\t\t\t\t\tsetScenarioStep(sc.questions[0]);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tsetScenarioStep(scenario.questions[scenarioStep.order + 1]);\r\n\t\t\t} else {\r\n\t\t\t\tsetShowInput(scenarioStep.inputType);\r\n\t\t\t}\r\n\t\t}, 1000);\r\n\t}, [scenarioStep]);\r\n\r\n\tconst { t } = useTranslation();\r\n\r\n\tconst handleInputChange = async (inputVal) => {\r\n\t\tif (!inputVal.value && inputVal.type === \"image\") {\r\n\t\t\tsetShowInput(null);\r\n\t\t\tsetMessages([\r\n\t\t\t\t...messages,\r\n\t\t\t\t{ text: inputVal.text, isUser: true, type: inputVal.type },\r\n\t\t\t]);\r\n\t\t\tawait handleSubmit();\r\n\t\t}\r\n\t\tif (inputVal.type === \"boolean\") {\r\n\t\t\tsetShowInput(null);\r\n\t\t\tawait updateScenarioState(inputVal.value, scenarioStep.inputField);\r\n\t\t\tsetMessages([\r\n\t\t\t\t...messages,\r\n\t\t\t\t{ text: inputVal.text, isUser: true, type: inputVal.type },\r\n\t\t\t]);\r\n\t\t\tsetInputValue({ text: \"\", value: \"\", type: \"\" });\r\n\t\t\tawait handleSubmit();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetInputValue(inputVal);\r\n\t};\r\n\r\n\tconst handleSendInput = async () => {\r\n\t\tsetShowInput(null);\r\n\t\tawait updateScenarioState(inputValue.value, scenarioStep.inputField);\r\n\t\tsetMessages([\r\n\t\t\t...messages,\r\n\t\t\t{ text: inputValue.text, isUser: true, type: inputValue.type },\r\n\t\t]);\r\n\t\tawait handleSubmit();\r\n\t};\r\n\r\n\tconst nextStep = async () => {\r\n\t\tsetInputValue({ text: \"\", value: \"\", type: \"\" });\r\n\t\tif (isLastStep()) {\r\n\t\t\tlet sc = await scenarios.getNextScenario(scenario, auth);\r\n\t\t\tsetScenario(sc);\r\n\t\t\tsetScenarioStep(null);\r\n\t\t\tsetScenarioStep(sc.questions[0]);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetScenarioStep(null);\r\n\t\tsetScenarioStep(scenario.questions[scenarioStep.order + 1]);\r\n\t};\r\n\r\n\tconst handleSubmit = async () => {\r\n\t\tif (!scenarioStep.submit) {\r\n\t\t\tnextStep();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet res = await scenario.submit(vault);\r\n\t\tif (res) {\r\n\t\t\tsetVault({\r\n\t\t\t\t...vault,\r\n\t\t\t\t...res,\r\n\t\t\t});\r\n\t\t\tnextStep();\r\n\t\t}\r\n\t};\r\n\r\n\tconst updateScenarioState = (data, field) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tsetScenario((prev) => {\r\n\t\t\t\tprev.submitInput(data, field);\r\n\t\t\t\treturn prev;\r\n\t\t\t});\r\n\t\t\tresolve();\r\n\t\t});\r\n\t};\r\n\r\n\tconst isLastStep = () => {\r\n\t\treturn scenarioStep.order + 1 === scenario.questions.length;\r\n\t};\r\n\r\n\tconst getOptions = () => {\r\n\t\treturn scenarioStep.inputField === \"system\" ? systems : locations;\r\n\t};\r\n\r\n\tconst changeLanguage = (l) => (event) => {\r\n        setMessages([]);\r\n\t\tsetLang(getLocalization(l))\r\n\t\tsetLangMenu(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.gridContainer}>\r\n\t\t\t<div className={classes.topBar}>\r\n\t\t\t\t<div className={classes.addressContainer}>\r\n\t\t\t\t\t<div className={classes.title}>{t(\"chatbot.title\")}</div>\r\n\t\t\t\t\t<div className={classes.address}>\r\n\t\t\t\t\t\t{mainAsset && getFullAddress(mainAsset)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName={classes.changeLanguage}\r\n\t\t\t\t\tonClick={(e) => setLangMenu(e.target)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{lang.code ? lang.code.toUpperCase() : \"\"}\r\n\t\t\t\t</Button>\r\n                <Menu\r\n\t\t\t\t\tclasses={{\r\n                        paper : classes.langMenu\r\n                    }}\r\n                    keepMounted\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n\t\t\t\t\tanchorEl={langMenu}\r\n\t\t\t\t\tkeepMounted\r\n\t\t\t\t\topen={Boolean(langMenu)}\r\n\t\t\t\t\tonClose={() => setLangMenu(null)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{languages.map((l, i) => (\r\n\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\tonClick={changeLanguage(l)}\r\n\t\t\t\t\t\t\tclassName={classes.langItem}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{l.toUpperCase()}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Menu>\r\n\t\t\t</div>\r\n\r\n\t\t\t<Messages data={messages} />\r\n\t\t\t<Grid container className={classes.inputContainer} alignItems=\"center\">\r\n\t\t\t\t{showInput === \"string\" ? (\r\n\t\t\t\t\t<MessageInput\r\n\t\t\t\t\t\thandleInputChange={handleInputChange}\r\n\t\t\t\t\t\thandleSendInput={handleSendInput}\r\n\t\t\t\t\t\tvalue={inputValue.value}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : showInput === \"select\" ? (\r\n\t\t\t\t\t<MessageSelector\r\n\t\t\t\t\t\tvalue={inputValue.value}\r\n\t\t\t\t\t\toptions={getOptions()}\r\n\t\t\t\t\t\thandleInputChange={handleInputChange}\r\n\t\t\t\t\t\thandleSendInput={handleSendInput}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : showInput === \"image\" ? (\r\n\t\t\t\t\t<MessageImage\r\n\t\t\t\t\t\tvalue={inputValue.value || []}\r\n\t\t\t\t\t\thandleInputChange={handleInputChange}\r\n\t\t\t\t\t\thandleSendInput={handleSendInput}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : showInput === \"boolean\" ? (\r\n\t\t\t\t\t<MessageBoolean handleInputChange={handleInputChange} />\r\n\t\t\t\t) : null}\r\n\t\t\t</Grid>\r\n            \r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tgridContainer: {\r\n\t\theight: \"100%\",\r\n\t\twidth: \"100%\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tbackgroundRepeat: \"repeat\",\r\n\t},\r\n\ttopBar: {\r\n\t\tdisplay: \"flex\",\r\n        background: \"rgba(0,0,0,0.9)\",\r\n        height: '75px',\r\n\t},\r\n\taddressContainer: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"40px\",\r\n\t\t\r\n\t\tbackdropFilter: \"blur(5px)\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tpadding: \"15px\",\r\n\t},\r\n    langMenu: {\r\n        background: 'rgba(0,0,0,0.8)',\r\n        backdropFilter: 'blur(10px)',\r\n        \r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n\r\n    },\r\n    changeLanguage: {\r\n        background: 'transparent',\r\n        color: 'white',\r\n        borderRadius: '0',\r\n        height: '70px'\r\n    },\r\n    langItem: {\r\n        color: 'white',\r\n        width: '100%',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.1)'\r\n        }\r\n    },\r\n\tmessagesContainer: {\r\n\t\theight: \"calc(100% - 120px)\",\r\n\t\twidth: \"100%\",\r\n\t\tbackground: \"rgba(0,0,0,0.1)\",\r\n\t},\r\n\tinputContainer: {\r\n\t\tbackground: \"rgba(0,0,0,0.1)\",\r\n\t\tbackdropFilter: \"blur(5px)\",\r\n\t\twidth: \"100%\",\r\n\t\theight: \"50px\",\r\n\t\tpadding: \"4px 0\",\r\n\t\tborderTop: \"1px solid rgba(0,0,0,0.1)\",\r\n\t\tcolor: \"black\",\r\n\t},\r\n\ttopProfile: {\r\n\t\twidth: \"100%\",\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t},\r\n\tavatar: {\r\n\t\theight: \"150px\",\r\n\t\twidth: \"150px\",\r\n\t\tmargin: \"10px\",\r\n\t},\r\n\t\"@global\": {\r\n\t\t\"*::-webkit-scrollbar\": {\r\n\t\t\twidth: \"0em\",\r\n\t\t},\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: \"rgba(255,255,255,0.8)\",\r\n\t\tfontSize: \"14px\",\r\n\t},\r\n\taddress: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"20px\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\user\\Login.js",["800","801","802"],"C:\\projects\\leev\\leev-fe\\src\\context\\FaultsContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\NotificationsContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Messages.js",["803","804"],"import { Grid, makeStyles, Avatar, Fade } from '@material-ui/core';\r\nimport React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { Message } from './Message';\r\nimport logo from '../../assets/logo/leev_logo.png';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nexport const Messages = ({ data }) => {\r\n\r\n    const classes = useStyles();\r\n    const [ messages, setMessages ] = useState(data || []);\r\n    const { t } = useTranslation();\r\n    const ms = useRef();\r\n\r\n    useEffect(() => {\r\n        setMessages(data);\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (ms) {\r\n            // ms.current.scrollTop = ms.current.scrollHeight - ms.current.clientHeight;\r\n            let len = ms.current.children.length;\r\n            ms.current.children[len - 1].scrollIntoView({ bahavior: 'smooth'}) \r\n        }    \r\n    }, [ messages ])\r\n\r\n\treturn (\r\n\t\t<div className={classes.messagesContainer} ref={ms} >\r\n            <Fade in={Boolean(data.length)}>\r\n            <div className={classes.topProfile}>\r\n                <Avatar src={logo} className={classes.avatar}/>\r\n                <div className={classes.welcome}>\r\n                    {t(\"chatbot.welcome\")}\r\n                </div>\r\n                <div className={classes.welcomeSub}>\r\n                    {t(\"chatbot.welcomeSub\")}\r\n                </div>\r\n            </div>\r\n            </Fade>\r\n           \r\n            {\r\n                messages.length ?\r\n                messages.map((m,i) => \r\n                    <Message data={m} key={i} />\r\n                ):\r\n                null\r\n            }\r\n        </div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    messagesContainer: {\r\n        padding: '10px 0',\r\n        height: 'calc(100% - 120px)',\r\n        overflow: 'auto'\r\n    },\r\n    topProfile: {\r\n        width: '100%',\r\n        display: 'grid',\r\n        placeItems: 'center'\r\n    },\r\n    avatar: {\r\n        height: '150px',\r\n        width: '150px',\r\n        margin: '10px'\r\n    },\r\n    welcome: {\r\n        color: 'white',\r\n        fontSize: '14px',\r\n        margin: '5px',\r\n        background: 'rgba(0,0,0,0.8)',\r\n        padding: '10px 25px',\r\n        borderRadius: '50px',\r\n    },\r\n    welcomeSub: {\r\n        color: 'rgba(255,255,255,0.7)',\r\n        fontSize: '12px',\r\n        background: 'rgba(0,0,0,0.8)',\r\n        borderRadius: '50px',\r\n        padding: '10px 25px',\r\n        margin: '5px 30px 30px',\r\n        textAlign: 'center'\r\n    },\r\n    '@global': {\r\n\t\t'*::-webkit-scrollbar': {\r\n\t\t\twidth: '0em',\r\n        }\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageInput.js",["805"],"import {\r\n\tFormControl,\r\n\tGrid,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tOutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport clsx from \"clsx\";\r\nimport React, { useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LanguageContext } from \"../../context/LanguageContext\";\r\n\r\nexport const MessageInput = ({\r\n\tvalue,\r\n\thandleInputChange,\r\n\thandleSendInput,\r\n\tplaceholder,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tlet val = event.target.value;\r\n\t\thandleInputChange({ text: val, value: val, type: \"string\" });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} className={classes.addComment}>\r\n\t\t\t<FormControl variant=\"outlined\" className={classes.form}>\r\n\t\t\t\t<OutlinedInput\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\tclassName={clsx(classes.textInput)}\r\n\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\tinputMultiline: classes.multiLine,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</FormControl>\r\n\r\n\t\t\t<IconButton \r\n\t\t\t\tclassName={classes.postBtn} \r\n\t\t\t\tonClick={handleSendInput}\r\n\t\t\t\tdisabled={!Boolean(value.length)} \r\n\t\t\t>\r\n\t\t\t\t<SendRoundedIcon\r\n\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\tclasses.icon,\r\n\t\t\t\t\t\tlang.dir === \"rtl\" ? classes.mirror : null\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</IconButton>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\taddComment: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\twidth: \"fit-content\",\r\n\t\tpadding: \"0 5px\",\r\n\t},\r\n\tform: {\r\n\t\tcolor: \"black\",\r\n\t\twidth: \"100%\",\r\n\t\tmargin: \"0 5px 0 0px\",\r\n\t\tborder: \"1px solid rgba(0,0,0,0.1)\",\r\n\t\tborderRadius: \"42px\",\r\n\t\tbackground: \"white\",\r\n\t},\r\n\ttextInput: {\r\n\t\tpadding: \"4px 10px\",\r\n\t\tborderRadius: \"42px\",\r\n\r\n\t\t\"& input\": {\r\n\t\t\tcolor: \"black\",\r\n\t\t\twidth: \"80%\",\r\n\t\t\tpadding: \"4px 10px\",\r\n\t\t\tfontSize: \"14px\",\r\n\t\t},\r\n\t\t\"& label\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\tpaddingLeft: \"5px\",\r\n\t\t},\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderColor: \"rgba(255,255,255,0.2)\",\r\n\t\t\tborderRadius: \"42px\",\r\n\t\t},\r\n\t},\r\n\tpostBtn: {\r\n\t\tbackground: \"#42A5F5\",\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"7px\",\r\n\t\tmargin: \" 0 5px 1px\",\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: \"20px\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tmirror: {\r\n\t\ttransform: \"scaleX(-1)\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Scenrio.js",["806"],"import i18next from 'i18next';\r\nimport { assignUserToFault, checkEmailExists } from '../../api/chatbotApi';\r\nimport { createExternalFault } from '../../api/faultsApi';\r\n\r\nexport const welcome = {\r\n\tquerstions: [\r\n\t\t\r\n\t]\r\n}\r\n\r\nexport const assetNotFound = {\r\n\ttype: 'assetNotFound',\r\n\tquestions: [\r\n\t\t{\r\n\t\t\torder: 0,\r\n            text: 'chatbot.assetNotFound',\r\n\t\t\tactionRequired: false,\r\n\t\t\tinputType: null,\r\n            submitFunc: null\r\n\t\t},\r\n\t]\r\n};\r\n\r\nexport const openFault = {\r\n\ttype: 'openFault',\r\n\tdata: {\r\n\t\tasset: null,\r\n\t\tsystem: null,\r\n\t\tlocation: null,\r\n\t\tdescription: null,\r\n\t\timages: null\r\n\t},\r\n\tsubmitInput: function(data, field) {\r\n\t\tthis.data[field] = data;\r\n\t\treturn Promise.resolve();\r\n\t},\r\n\tsubmit: async function(vault) {\r\n\t\tlet createdBy = vault.user ? vault.user._id : null;\r\n\t\tconst res = await createExternalFault({...this.data, createdBy})\r\n\t\tif (res) {\r\n\t\t\treturn res;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tquestions: [\r\n\t\t{\r\n\t\t\torder: 0,\r\n            text: 'chatbot.welcomeMessage',\r\n\t\t\tactionRequired: false,\r\n\t\t\tinputType: null,\r\n            submitFunc: null\r\n\t\t},\r\n\t\t{\r\n\t\t\torder: 1,\r\n            text: 'chatbot.notLoggedIn.requestSystem',\r\n\t\t\tactionRequired: true,\r\n\t\t\tinputType: 'select',\r\n\t\t\tinputField: 'system'\r\n\t\t},\r\n\t\t{\r\n\t\t\torder: 2,\r\n            text: 'chatbot.notLoggedIn.requestLocation',\r\n\t\t\tactionRequired: true,\r\n\t\t\tinputType: 'select',\r\n\t\t\tinputField: 'location'\r\n\t\t},\r\n\t\t{\r\n\t\t\torder: 3,\r\n            text: 'chatbot.notLoggedIn.requestDescription1',\r\n            actionRequired: false,\r\n\t\t\tinputType: null,\r\n\t\t\tinputField: null\r\n           \r\n\t\t},\r\n\t\t{\r\n\t\t\torder: 4,\r\n            text: 'chatbot.notLoggedIn.requestDescription2',\r\n\t\t\tactionRequired: true,\r\n\t\t\tinputType: 'string',\r\n\t\t\tinputField: 'description'\r\n\t\t},\r\n\t\t{\r\n\t\t\torder: 5,\r\n            text: 'chatbot.notLoggedIn.requestPhotos',\r\n\t\t\tactionRequired: true,\r\n\t\t\tinputType: 'image',\r\n\t\t\tinputField: 'images',\r\n\t\t\tsubmit: true\r\n\t\t},\r\n\t\t{\r\n\t\t\torder: 6,\r\n            text: 'chatbot.notLoggedIn.faultOpenedSuccessfully',\r\n            actionRequired: false,\r\n\t\t\tinputType: null,\r\n\t\t\tinputField: null\r\n\t\t}\r\n\t]\r\n};\r\n\r\nexport const followFault = {\r\n\ttype: 'followFault',\r\n\tdata: {\r\n\t\tshouldFollow: false,\r\n\t\tassignStatus: null\r\n\t},\r\n\tsubmitInput: function(data, field) {\r\n\t\tthis.data[field] = data;\r\n\t\treturn Promise.resolve();\r\n\t},\r\n\tsubmit: async function(vault) {\r\n\t\tif (!this.data.shouldFollow) {\r\n\t\t\tthis.data.assignStatus = false;\r\n\t\t\treturn this.data;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tif (!vault.user) return this.data;\r\n\t\t\tlet data = await assignUserToFault(vault.user._id, vault._id);\r\n\t\t\tif (data) {\r\n\t\t\t\tthis.data.assignStatus = true;\r\n\t\t\t\treturn this.data;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e.message);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\tquestions: [\r\n\t\t{\r\n\t\t\torder: 0,\r\n            text: 'chatbot.requestFollow',\r\n\t\t\tactionRequired: true,\r\n\t\t\tinputType: 'boolean',\r\n\t\t\tinputField: 'shouldFollow',\r\n            submit: true\r\n\t\t}\r\n\t]\r\n};\r\n\r\nexport const checkUserAuthentication = {\r\n\ttype: 'checkUserAuthentication',\r\n\tdata: {\r\n\t\temail: null,\r\n\t\tauthenticated: false\r\n\t},\r\n\tsubmitInput: function(data, field) {\r\n\t\tthis.data[field] = data;\r\n\t\treturn Promise.resolve();\r\n\t},\r\n\tsubmit: async function(vault) {\r\n\t\tif (!this.data.email) return false;\r\n\t\ttry {\r\n\t\t\tlet res = await checkEmailExists(this.data.email);\r\n\t\t\tif (!res) {\r\n\t\t\t\tthis.data.authenticated = false;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tthis.data.authenticated = true;\r\n\t\t\tlet data = await assignUserToFault(res.userId, vault._id);\r\n\t\t\tif (data) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e.message);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\tquestions: [\r\n\t\t{\r\n\t\t\torder: 0,\r\n            text: 'chatbot.requestEmail',\r\n\t\t\tactionRequired: true,\r\n\t\t\tinputType: 'string',\r\n\t\t\tinputField: 'email',\r\n            submit: true\r\n\t\t}\r\n\t]\r\n}\r\n\r\nexport const assignedSuccessfully = {\r\n\tquestions: [\r\n\t\t{\r\n\t\t\torder: 0,\r\n\t\t\ttext: 'chatbot.assignedSuccessfully',\r\n\t\t\tactionRequired: false,\r\n\t\t\tinputType: null,\r\n\t\t\tinputField: null,\r\n\t\t\tsubmit: false\r\n\t\t}\r\n\t]\r\n}\r\n\r\nexport const assignFailed = {\r\n\tquestions: [\r\n\t\t{\r\n\t\t\torder: 0,\r\n\t\t\ttext: 'chatbot.userNotFound',\r\n\t\t\tactionRequired: false,\r\n\t\t\tinputType: null,\r\n\t\t\tinputField: null,\r\n\t\t\tsubmit: false\r\n\t\t}\r\n\t]\r\n}\r\n\r\n\r\nexport const userAssigned = {\r\n\ttype: 'userAssigned',\r\n\tquestions: [\r\n\t\t{\r\n\t\t\torder: 0,\r\n            text: 'chatbot.notLoggedIn.emailSent',\r\n            actionRequired: false,\r\n\t\t\tinputType: null,\r\n\t\t\tinputField: null,\r\n            submitFunc: null\r\n\t\t}\r\n\t]\r\n}\r\n\r\nexport const thankyou = {\r\n\tquestions: [\r\n\t\t{\r\n\t\t\torder: 0,\r\n            text: 'chatbot.notLoggedIn.thankyou',\r\n            actionRequired: false,\r\n\t\t\tinputType: null,\r\n\t\t\tinputField: null,\r\n            submitFunc: null\r\n\t\t}\r\n\t]\r\n}\r\n\r\nexport const getNextScenario = (currentScenario, auth) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (currentScenario.type === 'openFault') {\r\n\t\t\tresolve(followFault);\r\n\t\t};\r\n\t\tif (currentScenario.type === 'followFault') {\r\n\t\t\tif (currentScenario.data.shouldFollow) {\r\n\t\t\t\tif (currentScenario.data.assignStatus) {\r\n\t\t\t\t\tresolve(userAssigned);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresolve(checkUserAuthentication);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tresolve(thankyou);\r\n\t\t}\r\n\t\tif (currentScenario.type === 'checkUserAuthentication') {\r\n\t\t\tif (currentScenario.data.authenticated) {\r\n\t\t\t\tresolve(assignedSuccessfully)\r\n\t\t\t} else {\r\n\t\t\t\tresolve(assignFailed)\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (['assignedSuccessfully', 'assignFailed'].includes(currentScenario.type)) {\r\n\t\t\tresolve(thankyou);\r\n\t\t}\r\n\t})\r\n\t\r\n}","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageImage.js",["807","808","809"],"import { Button, FormControl, Grid, IconButton, makeStyles, OutlinedInput } from '@material-ui/core';\r\nimport { CancelScheduleSend } from '@material-ui/icons';\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\nimport clsx from 'clsx';\r\nimport React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\nexport const MessageImage = ({ value, handleInputChange, handleSendInput, placeholder}) => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const { lang } = useContext(LanguageContext);\r\n\r\n    const handleFileUpload = event => {\r\n        let val = event.target.files;\r\n        handleInputChange({ text: `${val.length} ${t(\"chatbot.imagesSelected\")} ` , value: val, type: 'image'});\r\n    }\r\n\r\n    const handleNoImages = () => {\r\n        handleInputChange({ text: `${t(\"chatbot.noImages\")}` , value: null, type: 'image'});\r\n    }\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} className={classes.addComment}>\r\n\t\t\t<Button\r\n                component={'label'}\r\n                variant={'contained'}\r\n                className={clsx(classes.uploadBtn, value.length ? classes.imagesUploaded : classes.noImages)}\r\n            >\r\n                { value.length ? `${value.length} ${t(\"chatbot.imagesSelected\")}` : t(\"chatbot.uploadImages\")}\r\n                <input \r\n                    accepts='image/*'\r\n                    type='file'\r\n                    multiple\r\n                    onChange={handleFileUpload}\r\n                    hidden  \r\n                />\r\n            </Button>\r\n            {\r\n                !value.length ? \r\n                <Button\r\n                className={clsx(classes.noImagesBtn, classes.noImages)}\r\n                variant={'contained'}\r\n                onClick={handleNoImages}\r\n            >\r\n                {t(\"chatbot.noImages\")}\r\n            </Button> : \r\n\t\t\t<IconButton className={classes.postBtn} onClick={handleSendInput}>\r\n\t\t\t\t<SendRoundedIcon className={clsx(classes.icon, lang.dir === 'rtl' ? classes.mirror : null)} />\r\n\t\t\t</IconButton>\r\n            }\r\n            \r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\taddComment: {\r\n\t\tdisplay: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: 'fit-content',\r\n        padding: '0 5px'\r\n\t},\r\n    uploadBtn: {\r\n        padding: '6px 10px',\r\n        borderRadius: '42px',\r\n        background: '#42A5F5',\r\n        color: 'white',\r\n        width: '100%',\r\n        margin: '0 5px 0 0px',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n            background: 'rgba(0,0,0,0.3)'\r\n        }\r\n    },\r\n    noImagesBtn: {\r\n        padding: '6px 10px',\r\n        borderRadius: '42px',\r\n        background: 'rgba(255,255,255,0.1)',\r\n        color: 'black',\r\n        margin: '0 5px 0 0px',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n            background: 'rgba(0,0,0,0.3)'\r\n        }\r\n    },\r\n    imagesUploaded: {\r\n        width: '100%',\r\n    },\r\n    noImages: {\r\n        width: '50%'\r\n    },\r\n    postBtn: {\r\n        background: '#3399ff',\r\n\t\tcolor: 'white',\r\n        padding: '7px',\r\n\t\tmargin: ' 0 5px 1px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n        fontSize: '20px',\r\n        color: 'white'\r\n\t},\r\n\tmirror: {\r\n\t\ttransform: 'scaleX(-1)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageSelector.js",[],"C:\\projects\\leev\\leev-fe\\src\\api\\userApi.js",["810"],"C:\\projects\\leev\\leev-fe\\src\\api\\assetsApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\Controls.js",["811","812","813","814","815"],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Settings.js",["816","817","818","819"],"import { Backdrop, Fade, Grid, Icon, IconButton, makeStyles, Modal, Paper } from '@material-ui/core';\r\nimport React, { useState, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { RolesAndPermissions } from './RolesAndPermissions';\r\nimport { SettingsMenu } from './SettingsMenu';\r\nimport { UserProfile } from './UserProfile';\r\nimport { Users } from './Users';\r\nimport { Residents } from './Residents'\r\n\r\nexport const Settings = ({ open, handleClose}) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n    const location = useLocation();\r\n    const { t } = useTranslation();\r\n    const { lang, setLang } = useContext(LanguageContext);\r\n    const [ active, setActive ] = useState('profile');\r\n\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\topen={open}\r\n\t\t\tonClose={handleClose}\r\n\t\t\tcloseAfterTransition\r\n\t\t\tBackdropComponent={Backdrop}\r\n\t\t\tBackdropProps={{\r\n\t\t\t\ttimeout: 500,\r\n\t\t\t}}\r\n\t\t\tclassName={classes.modal}\r\n\t\t>\r\n\t\t\t<Fade in={open}>\r\n\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\" style={{ outline: '0' }}>\r\n\t\t\t\t\t<Grid item xs={12} sm={12} md={12} lg={10} xl={6} className={classes.gridCont}>\r\n\t\t\t\t\t\t<Paper elevation={6} className={classes.paper} style={{ direction: lang.dir }}>\r\n                            <Grid container className={classes.mainGrid}>\r\n                                <Grid item xs={12} className={classes.headerRow}>\r\n                                    <div className={classes.title}>\r\n                                        {t(\"settings.title\")}\r\n                                    </div>\r\n                                    <IconButton\r\n                                        className={classes.closeBtn}\r\n                                        onClick={handleClose}\r\n                                    >\r\n                                        <Icon classes={{root: classes.iconRoot}}>\r\n                                            <img src=\"https://img.icons8.com/ios-filled/36/4a90e2/cancel.png\"/>\r\n                                        </Icon>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                <Grid container className={classes.dataGrid}>\r\n                                    <Grid item xl={3} lg={3} md={3} sm={2} xs={12}>\r\n                                        <SettingsMenu\r\n                                            active={active} \r\n                                            setActive={setActive}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xl={9} lg={9} md={9} sm={10} xs={12} className={classes.dataContainer}>\r\n                                        {\r\n                                            active === 'profile' &&\r\n                                            <UserProfile />\r\n                                        }\r\n                                        {\r\n                                            active === 'users' &&\r\n                                            <Users />\r\n                                        }\r\n                                        {\r\n                                            active === 'residents' &&\r\n                                            <Residents />\r\n                                        }\r\n                                        {\r\n                                            active === 'permissions' &&\r\n                                            <RolesAndPermissions />\r\n                                        }\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Fade>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmodal: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'\r\n\t},\r\n\tgridCont: {\r\n\t\theight: 'fit-content',\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tborderRadius: '10px',\r\n        height: '80vh',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: '81vh',\r\n\t\t\ttop: 0,\r\n\t\t\tborderRadius: '0',\r\n\t\t\tborder: '0',\r\n\t\t\tpadding: '10px 5px',\r\n\t\t},\r\n\t\t'&:focus': {\r\n\t\t\toutline: 'none',\r\n\t\t},\r\n    },\r\n    mainGrid: {\r\n        height: '100%',\r\n        width: '100%'\r\n    },\r\n    dataGrid: {\r\n        height: '90%'\r\n    },\r\n    dataContainer: {\r\n        height: '100%',\r\n        width: '100%'\r\n    },\r\n    headerRow: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '10px 20px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        height: '10%',\r\n        [theme.breakpoints.down('xs')]: {\r\n            padding: '0 5px'\r\n        }\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '22px',\r\n        padding: '0 20px',\r\n    },\r\n    iconRoot: {\r\n\t\ttextAlign: 'center',\r\n\t\twidth: '50px',\r\n\t\theight: '35px',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center'\r\n    },\r\n    closeBtn: {\r\n        padding: '6px'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Assets.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\Tasks.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\Documents.js",["820","821","822"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\Faults.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MapView.js",["823","824","825","826"],"import { makeStyles, Grid, useMediaQuery, IconButton } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Map } from './Map';\r\nimport { MapControls } from './MapControls';\r\nimport { MarkerData } from './MarkerData';\r\nimport { Mapbox } from './Mapbox';\r\nimport { getMapData, getMapFilters } from '../../../api/mapApi';\r\nimport { useLocation } from 'react-router';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\n\r\n\r\nexport const MapView = () => {\r\n\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const [ data, setData ] = useState(null);\r\n    const [ listArray, setListArray ] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        getMapFilters(query)\r\n        .then(filters => {\r\n            fetchMapData(filters);\r\n        });\t\r\n\t}, [location.search]);\r\n\r\n\tconst fetchMapData = async (filters) => {\r\n\t\tconst res = await getMapData(filters);\r\n\t\tsetData(res);\r\n    };\r\n    \r\n    return (\r\n         <Grid container justify='center' className={classes.mapContainer}>\r\n            <Grid container className={classes.mapGridItem}>\r\n                {\r\n                    Boolean(listArray.length) &&\r\n                    <Grid xs={12} sm={6} md={4} lg={3} className={classes.markDataGrid}>\r\n                         <MarkerData markersData={listArray} handleClose={() => setListArray([])} />\r\n                    </Grid>\r\n                   \r\n                }\r\n                {\r\n                    data &&\r\n                    <Grid xs={12}>\r\n                        <Mapbox data={data} setData={setListArray} />\r\n                    </Grid>\r\n                }\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.gridControls}>                  \r\n                <MapControls />\r\n            </Grid>\r\n         </Grid>\r\n\r\n    )\r\n};\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    mapContainer: {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative'\r\n    },\r\n    mapGridItem: {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative'\r\n    },\r\n    gridControls: {\r\n        position: 'absolute',\r\n        zIndex: 2,\r\n        right: 0,\r\n        top: 0,\r\n\r\n    },\r\n    markDataGrid: {\r\n        position: 'absolute',\r\n        zIndex: 3,\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(40px)',\r\n        height: '100%'\r\n    },\r\n    filterBtn: {\r\n        color: 'white',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '50px',\r\n        padding: '10px',\r\n        margin: '10px',\r\n        boxShadow: 'inset rgba(0,0,0,0.4) 0 0 10px 2px'\r\n    },\r\n    icon: {\r\n        fontSize: '28px'\r\n    }\r\n}));","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\Systems.js",["827"],"C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Message.js",["828","829","830","831"],"C:\\projects\\leev\\leev-fe\\src\\api\\chatbotApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\api\\genericApi.js",["832","833","834","835","836","837","838","839"],"\r\nimport axios from 'axios';\r\nimport { addMonths, addWeeks, addYears, eachDayOfInterval, isAfter, isBefore, parseISO, toDate } from 'date-fns';\r\nimport { addDays, format } from 'date-fns/esm';\r\nimport i18next from 'i18next';\r\nimport heLocale from 'date-fns/locale/he';\r\nimport deLocale from 'date-fns/locale/de'\r\nimport usLocale from 'date-fns/locale/en-US'\r\nimport { getDateParts } from './calenderApi';\r\n\r\nexport const localizations = {\r\n\the: {\r\n\t\tname: 'Hebrew',\r\n        code: 'he',\r\n        dir: 'rtl',\r\n        dateformat: 'dd/MM/yyyy HH:mm',\r\n        dateonly: 'dd/MM/yyyy',\r\n        timeonly: 'HH:mm'\r\n\t},\r\n\ten: {\r\n\t\tname: 'English',\r\n        code: 'en',\r\n        dir: 'ltr',\r\n        dateformat: 'MM/dd/yyyy p',\r\n        dateonly: 'MM/dd/yyyy',\r\n        timeonly: 'p'\r\n\t}\r\n}\r\n\r\nexport const queryParamsToObject = (search) => {\r\n\tif (!search) return {};\r\n\tsearch = search.substring(1);\r\n\r\n\tlet decoded = JSON.parse(\r\n\t\t'{\"' +\r\n\t\t\tdecodeURI(search)\r\n\t\t\t\t.replace(/\"/g, '\\\\\"')\r\n\t\t\t\t.replace(/&/g, '\",\"')\r\n\t\t\t\t.replace(/=/g, '\":\"')\r\n\t\t\t\t.replace(/%2C/g, ',')\r\n\t\t\t\t.replace(/%5D/g, ',')\r\n\t\t\t\t.replace(/%5B/g, ',') +\r\n\t\t\t'\"}'\r\n\t);\r\n\tObject.entries(decoded).forEach((entry) => {\r\n\t\tif (entry[1].substring(0, 1) === '[') {\r\n\t\t\tdecoded[entry[0]] = JSON.parse(entry[1]);\r\n\t\t}\r\n\t});\r\n\treturn decoded;\r\n};\r\n\r\nexport const removeQueryParam = (search, paramName) => {\r\n\tlet params = new URLSearchParams(search);\r\n\tparams.delete(paramName);\r\n\treturn params.toString() ? '?' + params.toString() : '';\r\n};\r\n\r\nexport const addQueryParam = (search, paramList) => {\r\n\tlet params = new URLSearchParams(search);\r\n\tif (!paramList.length) return '?' + params.toString();\r\n\tparamList.forEach((param) => {\r\n\t\tif (param.value instanceof Array) {\r\n\t\t\tparam.value = JSON.stringify(param.value);\r\n\t\t}\r\n\t\tif (params.get(param.name)) {\r\n\t\t\tparams.set(param.name, param.value);\r\n\t\t} else {\r\n\t\t\tparams.append(param.name, param.value);\r\n\t\t}\r\n\t});\r\n\treturn '?' + params.toString();\r\n};\r\n\r\nexport const updateQueryParams = (search, add, remove) => {\r\n\tlet params = new URLSearchParams(search);\r\n\tif (remove) {\r\n\t\tremove.forEach((pName) => {\r\n\t\t\tparams.delete(pName);\r\n\t\t});\r\n\t}\r\n\tif (add) {\r\n\t\tadd.forEach((param) => {\r\n\t\t\tif (param.value instanceof Array) {\r\n\t\t\t\tparam.value = JSON.stringify(param.value);\r\n\t\t\t}\r\n\t\t\tif (params.get(param.name)) {\r\n\t\t\t\tparams.set(param.name, param.value);\r\n\t\t\t} else {\r\n\t\t\t\tparams.append(param.name, param.value);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn '?' + params.toString();\r\n};\r\n\r\nexport const specialStringPurge = (string) => {\r\n\tif (!string) return null;\r\n\treturn string\r\n\t\t.replaceAll('+', ' ')\r\n\t\t.replaceAll(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '')\r\n\t\t.replaceAll(' ,', '')\r\n\t\t.replaceAll(',', ' ');\r\n};\r\n\r\nexport const getLabelsByLanguage = async (lang) => {\r\n\tconst res = await axios.post(\r\n\t\t`${process.env.REACT_APP_BACKEND_URL}/users/getLabels`,\r\n\t\t{ lang }\r\n\t);\r\n\tif (res) {\r\n\t\treturn res.data;\r\n\t}\r\n};\r\n\r\nexport const getFullName = (user) => {\r\n\treturn `${user.firstName} ${user.lastName}`;\r\n};\r\n\r\nexport const getDatediffString = (fromDate) => {\r\n\tlet diffInSecs = Math.round((new Date() - new Date(fromDate)) / 1000);\r\n\tlet diff;\r\n\tif (diffInSecs < 60) {\r\n\t\tdiff = diffInSecs.toString();\r\n\t\treturn diff + ' ' + i18next.t('dates.shortsecond');\r\n\t}\r\n\tif (diffInSecs > 60 && diffInSecs < 3600) {\r\n\t\tdiff = Math.round(diffInSecs / 60).toString();\r\n\t\treturn diff + ' ' + i18next.t('dates.shortminute');\r\n\t}\r\n\tif (diffInSecs > 3600 && diffInSecs < 86400) {\r\n\t\tdiff = Math.round(diffInSecs / 3600).toString();\r\n\t\treturn diff + ' ' + i18next.t('dates.shorthour');\r\n\t}\r\n\tif (diffInSecs > 86400 && diffInSecs < 604800) {\r\n\t\tdiff = Math.round(diffInSecs / 86400).toString();\r\n\t\treturn diff + ' ' + i18next.t('dates.shortday');\r\n\t}\r\n\tif (diffInSecs > 604800 && diffInSecs < 2629743) {\r\n\t\tdiff = Math.round(diffInSecs / 604800).toString();\r\n\t\treturn diff + ' ' + i18next.t('dates.shortweek');\r\n\t}\r\n\tif (diffInSecs > 2629743 && diffInSecs < 31556926) {\r\n\t\tdiff = Math.round(diffInSecs / 2629743).toString();\r\n\t\treturn diff + ' ' + i18next.t('dates.shortmonth');\r\n\t}\r\n\tif (diffInSecs < 31556926) {\r\n\t\tdiff = Math.round(diffInSecs / 31556926).toString();\r\n\t\treturn diff + ' ' + i18next.t('dates.shortyear');\r\n\t}\r\n};\r\n\r\nexport const getStatusList = async (module) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/statuses/getStatusList`,\r\n\t\t\t{ module }\r\n\t\t);\r\n\t\tif (res) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tconsole.log(e.message);\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport const updateArrayStateField = (arr, itemId, fieldName, fieldValue) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tarr.forEach((t, i) => {\r\n\t\t\tif (t._id === itemId || i === itemId) {\r\n\t\t\t\tt[fieldName] = fieldValue;\r\n\t\t\t}\r\n\t\t});\r\n\t\tresolve(arr);\r\n\t});\r\n};\r\n\r\nexport const updateStateField = (currState, fieldName, fieldValue) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tcurrState[fieldName] = fieldValue;\r\n\t\tresolve(currState);\r\n\t});\r\n};\r\n\r\nexport const getNextIterationDate = (startDate, interval) => {\r\n\tlet currDate = new Date(startDate);\r\n\tlet today = new Date();\r\n\tlet addFunctions = {\r\n\t\tyear: addYears,\r\n\t\tmonth: addMonths,\r\n\t\tweek: addWeeks,\r\n\t\tday: addDays\r\n\t};\r\n\r\n\tlet dateFunc = addFunctions[interval];\r\n\r\n\twhile(true) {\r\n\t\tif (isBefore(currDate, today)) {\r\n\t\t\tcurrDate = dateFunc(currDate, 1);\r\n\t\t} else {\r\n\t\t\treturn currDate;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\nexport const getUnauthorizedMessage = () => {\r\n\treturn { text: i18next.t('errors.unauthorized'), severity: 'error', status: 403 }\r\n};\r\n\r\nexport const getDeactivateDeniedMessage = () => {\r\n\treturn { text: i18next.t('errors.cannotDeactivateAssetOwner'), severity: 'error', status: 405 }\r\n};\r\n\r\nexport const getSuccessMessage = (type, idenitifer, action) => {\r\n\treturn { text: `${i18next.t(\"messages.snackMessage.itemOfType\")} ${i18next.t(`general.${type}`)} ${i18next.t(\"messages.snackMessage.withIdentifier\")} ${idenitifer} ${i18next.t(`messages.snackMessage.${action}`)} ${i18next.t(`messages.snackMessage.withSuccess`)}`, severity: 'success', status: 200 }\r\n}\r\n\r\nexport const getServerError = () => {\r\n\treturn { text: i18next.t('errors.serverError'), severity: 'error', status: 500 }\r\n}\r\n\r\nexport const getLocalization = (langCode) => {\r\n\treturn localizations[langCode];\r\n}\r\n\r\nexport const getLocale = (langCode) => {\r\n\tconst locales = {\r\n\t\the: heLocale,\r\n\t\ten: deLocale,\r\n\t\tde: deLocale\r\n\t};\r\n\r\n\treturn locales[langCode];\r\n}","C:\\projects\\leev\\leev-fe\\src\\api\\notificationsApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Users.js",["840","841","842","843"],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UserProfile.js",["844"],"import {\r\n\tAvatar,\r\n\tButton,\r\n\tGrid,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tTooltip,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport dateFormat from \"dateformat\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getFullName } from \"../../../api/genericApi\";\r\nimport { getUserDataById, uploadAvatar } from \"../../../api/userApi\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { Can } from \"../../reuseables/Can\";\r\nimport { UpsertUser } from \"./UpsertUser\";\r\n\r\nconst userData = [\"email\", \"phoneNumber\", \"birthDate\", \"employedBy\", \"status\"];\r\nexport const UserProfile = () => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { auth, setAuth } = useContext(AuthContext);\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst [editUser, setEditUser] = useState(null);\r\n\r\n\tconst handleFileUpload = (event) => {\r\n\t\tuploadAvatar(event.target.files[0]).then((res) => {\r\n\t\t\tif (res.avatar) {\r\n\t\t\t\tsetAuth({\r\n\t\t\t\t\t...auth,\r\n\t\t\t\t\tuser: { ...auth.user, avatar: res.avatar },\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst closeAddEdit = () => {\r\n\t\tsetEditUser(false);\r\n\t};\r\n\r\n\tconst reloadUserData = async () => {\r\n\t\tlet user = await getUserDataById(auth.user._id);\r\n\t\tsetAuth({\r\n\t\t\t...auth, \r\n\t\t\tuser\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid container className={classes.container}>\r\n\t\t\t\t<Grid item xs={12} className={classes.avatarContainer}>\r\n\t\t\t\t\t<div className={classes.avDiv}>\r\n\t\t\t\t\t\t<Avatar src={auth.user.avatar} className={classes.avatar} />\r\n\t\t\t\t\t\t<Tooltip title={t(\"users.uploadAvatar\")}>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tcomponent={\"label\"}\r\n\t\t\t\t\t\t\t\tvariant={\"contained\"}\r\n\t\t\t\t\t\t\t\tclassName={classes.uploadAvatar}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<AddIcon className={classes.addIcon} />\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\taccepts=\"image/*\"\r\n\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\tonChange={handleFileUpload}\r\n\t\t\t\t\t\t\t\t\thidden\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.nameContainer}>\r\n\t\t\t\t\t<div className={classes.name}>{getFullName(auth.user)}</div>\r\n\t\t\t\t\t<div className={classes.role}>{auth.user.role.roleName}</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Can module=\"users\" action=\"update\" userList={[auth.user._id]}>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.controls}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tstartIcon={<EditIcon className={classes.editIcon} />}\r\n\t\t\t\t\t\t\tclassName={classes.editBtn}\r\n\t\t\t\t\t\t\tonClick={() => setEditUser(auth.user._id)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{t(\"settings.editUserDetails\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Can>\r\n\t\t\t\t<Grid container className={classes.userData}>\r\n\t\t\t\t\t{userData.map((ud, i) => {\r\n\t\t\t\t\t\tlet val =\r\n\t\t\t\t\t\t\tud === \"birthDate\"\r\n\t\t\t\t\t\t\t\t? format(parseISO(auth.user.birthDate), lang.dateonly)\r\n\t\t\t\t\t\t\t\t: ud === \"status\"\r\n\t\t\t\t\t\t\t\t? auth.user.isActive\r\n\t\t\t\t\t\t\t\t\t? t(\"users.active\")\r\n\t\t\t\t\t\t\t\t\t: t(\"users.inactive\")\r\n\t\t\t\t\t\t\t\t: auth.user[ud];\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Grid item xs={12} xl={6} className={classes.dataRow}>\r\n\t\t\t\t\t\t\t\t<div className={classes.dataLabel}>{t(`users.${ud}`)}</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.dataValue}>{val}</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t{editUser && (\r\n\t\t\t\t<UpsertUser\r\n\t\t\t\t\thandleClose={() => closeAddEdit(false)}\r\n\t\t\t\t\tuserId={editUser}\r\n\t\t\t\t\treloadUsers={reloadUserData}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\twidth: \"100%\",\r\n\t\tborderLeft: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: 'calc(100% - 50px)',\r\n\t\t\toverflowY: 'overlay'\r\n\t\t}\r\n\t},\r\n\tcontrols: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n\tavatarContainer: {\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t\tpadding: \"40px 0 10px\",\r\n\t\theight: \"fit-content\",\r\n\t\twidth: \"fit-content\",\r\n\t},\r\n\tavatar: {\r\n\t\theight: \"150px\",\r\n\t\twidth: \"150px\",\r\n\t\tposition: \"relative\",\r\n\t},\r\n\tnameContainer: {\r\n\t\theight: \"fit-content\",\r\n\t\twidth: \"fit-content\",\r\n\t\tpadding: \"10px 0\",\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t},\r\n\tname: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"24px\",\r\n\t},\r\n\trole: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"5px 0\",\r\n\t},\r\n\tuserData: {\r\n\t\tpadding: \"20px 10px 10px\",\r\n\t},\r\n\tdataRow: {\r\n\t\tpadding: \"10px 20px\",\r\n\t},\r\n\tdataLabel: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"fit-content\",\r\n\t\tpadding: \"5px 20px\",\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tborderRadius: \"5px 5px 0 0\",\r\n\t\tfontSize: \"14px\",\r\n\t},\r\n\tdataValue: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"15px 20px\",\r\n\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\tborderRadius: \"0px 5px 5px 5px\",\r\n\t\tfontSize: \"16px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\teditBtn: {\r\n\t\tpadding: \"3px 25px 3px 15px\",\r\n\t\tborder: \"1px solid black\",\r\n\t\tbackground: \"black\",\r\n\t\tcolor: \"rgba(255,255,255,0.5)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tmargin: \"0 30px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tborder: \"1px solid white\",\r\n\t\t\tcolor: \"white\",\r\n\t\t},\r\n\t},\r\n\teditIcon: {\r\n\t\tcolor: \"inherit\",\r\n\t\tfontSize: \"20px\",\r\n\t\tpadding: \"5px\",\r\n\t},\r\n\tuploadAvatar: {\r\n\t\tborder: \"2px solid rgba(255,255,255,0.5)\",\r\n\t\tpadding: \"4px\",\r\n\t\tposition: \"absolute\",\r\n\t\tbottom: 0,\r\n\t\tcolor: \"rgba(255,255,255,0.5)\",\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"black\",\r\n\t\t\tcolor: \"white\",\r\n\t\t\tborderColor: \"white\",\r\n\t\t},\r\n\t},\r\n\tavDiv: {\r\n\t\tposition: \"relative\",\r\n\t},\r\n\taddIcon: {\r\n\t\tfontSize: \"24px\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\SettingsMenu.js",["845","846","847","848","849","850"],"import { Button, Icon, List, ListItem, ListItemIcon, ListItemText, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport clsx from 'clsx';\r\n\r\nconst menuOptions = [\r\n    {\r\n        tab: 'profile',\r\n        icon: \"https://img.icons8.com/ios-filled/25/4a90e2/name.png\"\r\n    },\r\n    {\r\n        tab: 'users',\r\n        icon: \"https://img.icons8.com/ios-filled/25/4a90e2/conference-background-selected.png\"\r\n    },\r\n    {\r\n        tab: 'residents',\r\n        icon: \"https://img.icons8.com/ios-filled/25/4a90e2/person-at-home.png\"\r\n    },\r\n    {\r\n        tab: 'permissions',\r\n        icon: \"https://img.icons8.com/ios-filled/25/4a90e2/shield.png\"\r\n    },\r\n    {\r\n        tab: 'appearance',\r\n        icon: \"https://img.icons8.com/ios-filled/25/4a90e2/monitor--v1.png\"\r\n    }\r\n]\r\n\r\nexport const SettingsMenu = ({ active, setActive }) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst { t } = useTranslation();\r\n    const { lang, setLang } = useContext(LanguageContext);\r\n    const downLg = useMediaQuery((theme) => theme.breakpoints.down('sm'))\r\n\r\n\treturn (\r\n\t\t<List className={classes.menuContainer}>\r\n            {\r\n                menuOptions.map((mo, i) => {\r\n                    return (\r\n                        <ListItem \r\n                        className={clsx(classes.listItem, active === mo.tab && classes.active)} \r\n                        button={true}\r\n                        onClick={() => setActive(mo.tab)}\r\n                        >\r\n                        <ListItemIcon className={classes.iconContainer}>\r\n                            <Icon className={classes.icon}>\r\n                                <img src={mo.icon} />\r\n                            </Icon>\r\n                        </ListItemIcon>\r\n                        {\r\n                            !downLg &&\r\n                            <ListItemText className={classes.textContainer}>{t(`settings.${mo.tab}`)}</ListItemText>\r\n                        }\r\n                        \r\n                    </ListItem>\r\n                    )\r\n                })\r\n            }  \r\n\t\t</List>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmenuContainer: {\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRight: '1px solid rgba(255,255,255,0.2)',\r\n        padding: 0,\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: 'flex',\r\n            borderRight: 'unset',\r\n            borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n            height: '50px'\r\n        }\r\n\t},\r\n\tlistItem: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '15px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.1)',\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            padding: '15px 0',\r\n            justifyContent: 'center'\r\n        }\r\n\t},\r\n\ticonContainer: {\r\n\t\twidth: 'fit-content',\r\n\t\theight: 'fit-content',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t},\r\n\ticon: {\r\n\t\twidth: '25px',\r\n\t\theight: '25px',\r\n\t},\r\n\ttextContainer: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t},\r\n\tactive: {\r\n\t\tbackground: 'black',\r\n        borderLeft: '3px solid #5B5BFB',\r\n        [theme.breakpoints.down('xs')]: {\r\n            borderLeft: 'unset',\r\n            borderBottom: '3px solid #5B5BFB',\r\n        }\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CreateContainer.js",["851","852","853","854","855","856","857"],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\AddMenu.js",["858","859","860","861","862","863","864","865"],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Navbar.js",["866","867"],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Notifications.js",["868","869","870","871"],"import {\r\n\tClickAwayListener,\r\n\tGrow,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tSlide,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { differenceInHours } from 'date-fns';\r\nimport React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { updateArrayStateField } from '../../../api/genericApi';\r\nimport { updateNotificationRead } from '../../../api/notificationsApi';\r\nimport { NotificationsContext } from '../../../context/NotificationsContext';\r\nimport { Notification } from './Notification';\r\n\r\nexport const Notifications = ({\r\n\topen,\r\n\ttoggleNotifications,\r\n\tfetchNotifications\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst { notifications, setNotifications } = useContext(\r\n\t\tNotificationsContext\r\n\t);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.up('sm'));\r\n\r\n\tconst updateNotificationReadStatus = async (notificationId, read) => {\r\n\t\tconst res = await updateNotificationRead(notificationId, read);\r\n\t\tif (res) {\r\n\t\t\tlet nt = await updateArrayStateField(\r\n\t\t\t\tnotifications,\r\n\t\t\t\tnotificationId,\r\n\t\t\t\t'read',\r\n\t\t\t\tread\r\n\t\t\t);\r\n\t\t\tsetNotifications([...nt]);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ClickAwayListener onClickAway={toggleNotifications}>\r\n\t\t\t<Slide in={open} direction={'up'} timeout={300}>\r\n\t\t\t\t<div className={classes.container}>\r\n\t\t\t\t\t<div className={classes.header}>\r\n\t\t\t\t\t\t<div>{t('notificationsModule.notifications')}</div>\r\n\t\t\t\t\t\t<IconButton onClick={toggleNotifications}>\r\n\t\t\t\t\t\t\t<ClearRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.list} onClick={toggleNotifications}>\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<div className={classes.subheader}>\r\n\t\t\t\t\t\t\t\t{t('notificationsModule.new')}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{notifications\r\n\t\t\t\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t\t\t\t(n) =>\r\n\t\t\t\t\t\t\t\t\t\tdifferenceInHours(\r\n\t\t\t\t\t\t\t\t\t\t\tnew Date(),\r\n\t\t\t\t\t\t\t\t\t\t\tnew Date(n.createdAt)\r\n\t\t\t\t\t\t\t\t\t\t) < 6\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t.map((n, i) => (\r\n\t\t\t\t\t\t\t\t\t<Notification\r\n\t\t\t\t\t\t\t\t\t\tdata={n}\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tupdateNotificationReadStatus={\r\n\t\t\t\t\t\t\t\t\t\t\tupdateNotificationReadStatus\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t<div className={classes.subheader}>\r\n\t\t\t\t\t\t\t\t{t('notificationsModule.earlier')}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{notifications\r\n\t\t\t\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t\t\t\t(n) =>\r\n\t\t\t\t\t\t\t\t\t\tdifferenceInHours(\r\n\t\t\t\t\t\t\t\t\t\t\tnew Date(),\r\n\t\t\t\t\t\t\t\t\t\t\tnew Date(n.createdAt)\r\n\t\t\t\t\t\t\t\t\t\t) > 6\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t.map((n, i) => (\r\n\t\t\t\t\t\t\t\t\t<Notification\r\n\t\t\t\t\t\t\t\t\t\tdata={n}\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tupdateNotificationReadStatus={\r\n\t\t\t\t\t\t\t\t\t\t\tupdateNotificationReadStatus\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Slide>\r\n\t\t</ClickAwayListener>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tzIndex: 2,\r\n\t\twidth: '360px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\tboxShadow: 'rgba(0,0,0,0.25) 0px 0px 6px 3px',\r\n\t\tposition: 'absolute',\r\n\t\tright: 0,\r\n\t\ttop: '64px',\r\n\t\theight: 'calc(100% - 64px)',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\twidth: '100%',\r\n\t\t\theight: '100%',\r\n\t\t\ttop: 0,\r\n\t\t\tbackground: 'rgba(0,0,0,0.6)'\r\n\t\t},\r\n\t},\r\n\tlist: {\r\n\t\twidth: '100%',\r\n\t\tmargin: '0px auto',\r\n\t\tpadding: 0,\r\n\t\tmargin: 0,\r\n\t\toverflow: 'overlay',\r\n\t\tborderRadius: '0 0 10px 10px',\r\n\t\theight: 'calc(100% - 61px)',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tmarginBottom: '50px',\r\n\t\t},\r\n\t},\r\n\tlistItem: {\r\n\t\theight: '100px',\r\n\t\tcolor: 'theme.palette.primary.main',\r\n\t\ttransition: 'background box-shadow 0.3s ease-in-out',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\t\ttransition: 'background box-shadow 0.2s ease-in-out',\r\n\t\t\tboxShadow: '0 8px 32px 0 rgb(0 0 0 / 80%)',\r\n\t\t},\r\n\t},\r\n\tlistItemIcon: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tlistItemText: {\r\n\t\tfontSize: '14px',\r\n\t\tcolor: 'white',\r\n\t},\r\n\tbottomList: {\r\n\t\tpadding: '10px 0',\r\n\t},\r\n\theader: {\r\n\t\theight: '40px',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tfontSize: '22px',\r\n\t\talignItems: 'center',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '10px 20px',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tborderRadius: '10px 10px 0 0',\r\n\t},\r\n\ticon: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tsubheader: {\r\n\t\tcolor: 'white',\r\n\t\twidth: 'fit-content',\r\n\t\tmargin: '10px 20px 5px',\r\n\t\tfontSize: '18px',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.5)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\SideMenu.js",["872","873","874","875","876","877","878","879","880","881","882","883","884"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Asset.js",["885","886","887","888","889"],"import {\r\n\tGrid, Link, makeStyles, useMediaQuery\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getAddress, getSecondaryAddress } from \"../../../api/assetsApi\";\r\nimport HomeWorkIcon from '@material-ui/icons/HomeWork';\r\nimport VerticalSplitIcon from '@material-ui/icons/VerticalSplit';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { AssetControls } from \"./AssetControls\";\r\n\r\nexport const Asset = ({ data }) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst { t } = useTranslation();\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.up(\"sm\"));\r\n\r\n\tconst handleReferralClick = (type) => (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\thistory.push(`${type}?asset=${data._id}`);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} sm={8} md={6} lg={5} xl={4} className={classes.mainContainer}>\r\n\t\t\t\t<div className={classes.imageContainer}\r\n\t\t\t\t\tstyle={{ \r\n\t\t\t\t\t\tbackground: data.images.length ? `url(${data.images[0]})` : 'url(https://leevstore.blob.core.windows.net/images/dscn8142.jpg)',\r\n\t\t\t\t\t\tbackgroundSize: 'cover'\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.dataContainer} onClick={() => history.push(`/workspace/assets/${data._id}`)}>\r\n\t\t\t\t\t<div className={classes.addressContainer}>\r\n\t\t\t\t\t\t<div className={classes.mainAddress}>\r\n\t\t\t\t\t\t\t{getAddress(data)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={classes.secondaryAddress}>\r\n\t\t\t\t\t\t\t{getSecondaryAddress(data)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={classes.zipCode}>\r\n\t\t\t\t\t\t\t{data.address.zipcode}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.openFaults}>\r\n\t\t\t\t\t\t{`${data.faultCount} ${t(\"mapModule.openFaults\")} `}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<AdditionalData data={data}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.controlsContainer}>\r\n\t\t\t\t\t<AssetControls data={data} />\r\n\t\t\t\t</div>\r\n\t\t</Grid>\r\n\t\t\r\n\t);\r\n};\r\n\r\nconst AdditionalData = ({ data }) => {\r\n\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\r\n\tconst type = data.type;\r\n\t\r\n\tconst f = type === 'building' ? data.addInfo.floors : data.addInfo.floor;\r\n\tconst ftype = type === 'building' ? 'floors' : 'floor';\r\n\tconst u = type === 'building' ? data.addInfo.units : data.addInfo.unit;\r\n\tconst utype = type === 'building' ? 'units' : 'unit';\r\n\r\n\treturn (\r\n\t\t<div className={classes.moreInfo}>\r\n\t\t\t<HomeWorkIcon className={classes.icon} />\r\n\t\t\t<div className={classes.addInfoText}>\r\n\t\t\t\t{`${t(`assetsModule.${type}`)}`}\r\n\t\t\t</div>\r\n\t\t\t<VerticalSplitIcon className={classes.icon} />\r\n\t\t\t<div className={classes.addInfoText} style={{ display: 'flex', flexDirection: type === 'building' ? 'row' : 'row-reverse'}}>\r\n\t\t\t\t<span>{f}</span>\r\n\t\t\t\t&nbsp;\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{`${t(`assetsModule.${ftype}`)}`}\r\n\t\t\t\t</span>\t\r\n\t\t\t</div>\r\n\t\t\t<HomeIcon className={classes.icon} />\r\n\t\t\t<div className={classes.addInfoText} style={{ display: 'flex', flexDirection: type === 'building' ? 'row' : 'row-reverse'}}>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{u}\r\n\t\t\t\t</span>\r\n\t\t\t\t&nbsp;\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{`${t(`assetsModule.${utype}`)}`}\r\n\t\t\t\t</span>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\theight: '250px',\r\n\t\tmargin: '20px',\r\n\t\tborderRadius: '5px 5px 30px 30px',\r\n\t\tposition: 'relative',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tmargin : '10px 0',\r\n\t\t\theight: '200px',\r\n\t\t\tborderRadius: '0'\r\n\t\t}\r\n\t},\r\n\timageContainer: {\r\n\t\theight: '250px',\r\n\t\twidth: '100%',\r\n\t\tborderRadius: 'inherit',\r\n\t\tposition: 'absolute',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: '200px'\r\n\t\t}\t\r\n\t},\r\n\tdataContainer: {\r\n\t\theight: '250px',\r\n\t\twidth: '100%',\r\n\t\tbackground: 'rgba(0,0,0,0.5)',\r\n\t\tbackdropFilter: 'blur(0px)',\r\n\t\tborderRadius: 'inherit',\r\n\t\tcursor: 'pointer',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: '200px',\r\n\t\t}\r\n\t},\r\n\taddressContainer: {\r\n\t\tcolor: 'rgba(255,255,255,0.8)',\r\n\t\tpadding: '30px',\r\n\t\tmarginBottom: '20px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tpadding: '15px',\r\n\t\t}\r\n\t},\r\n\tmainAddress: {\r\n\t\tfontSize: '22px',\r\n\t\tfontWeight: '500',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tfontSize: '18px',\r\n\t\t}\r\n\t},\r\n\tsecondaryAddress: {\r\n\t\tfontSize: '14px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tfontSize: '12px',\r\n\t\t}\r\n\t},\r\n\tzipCode: {\r\n\t\tfontSize: '14px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tfontSize: '12px',\r\n\t\t}\r\n\t},\r\n\topenFaults: {\r\n\t\tcolor: 'white',\r\n\t\tbackground: '#e53935',\r\n\t\twidth: 'fit-content',\r\n\t\tpadding: '7px 15px',\r\n\t\tborderRadius: '50px',\r\n\t\tmargin: '0 30px',\r\n\t\tfontSize: '14px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tmargin: '10px 15px',\r\n\t\t}\r\n\t},\r\n\tmoreInfo: {\r\n\t\tcolor: 'rgba(255,255,255,0.8)',\r\n\t\tpadding: '7px 15px 7px 1px',\r\n\t\tfontSize: '14px',\r\n\t\tbackground: 'rgba(0,0,0,1)',\r\n\t\twidth: 'fit-content',\r\n\t\tborderRadius: '50px',\r\n\t\tborder: '1px solid white',\r\n\t\tmargin: '10px 30px',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tmargin: '10px 15px',\r\n\t\t}\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '16px',\r\n\t\tmargin: '0 5px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.8)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '3px',\r\n\t\tcolor: 'rgba(255,255,255,0.8)',\r\n\t},\r\n\taddInfoText: {\r\n\t\tlineHeight: '3px',\r\n\t\tpadding: '0 10px 0 3px'\r\n\t},\r\n\tcontrolsContainer: {\r\n\t\tposition: 'absolute',\r\n\t\ttop: '20px',\r\n\t\tright: '20px'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetsControls.js",["890","891","892"],"import React, { useContext, useState } from 'react'\r\nimport { Grid, makeStyles,  useMediaQuery, Slide, Button } from '@material-ui/core'\r\nimport { SortBy } from '../../reuseables/SortBy'\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport { SearchBox } from '../../reuseables/SearchBox';\r\nimport { FilterBySelect } from '../../reuseables/FilterBySelect';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport { getUserList } from '../../../api/userApi';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport { useTranslation } from 'react-i18next';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport { getTenantOptions } from '../../../api/adminApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\n\r\n\r\nconst sortOptions = [\r\n    {\r\n        text: 'כתובת',\r\n        field: 'street'\r\n    },\r\n    {\r\n        text: 'עיר',\r\n        field: 'city'\r\n    },\r\n    {\r\n        text: 'מנהל בניין',\r\n        field: 'owner'\r\n    }\r\n    \r\n]\r\n\r\nexport const AssetsControls = () => {\r\n    \r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const { auth } = useContext(AuthContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    const [ collapsed, setCollapsed ] = useState(false);\r\n    \r\n\r\n    const createUserOptions = async () => {\r\n        const res = await getUserList();\r\n        if ([403, 500].includes(res.status))\r\n            return [];\r\n        let userList = [];\r\n        res.forEach(user => {\r\n            userList.push({ label: `${user.firstName} ${user.lastName}`, value: user._id });\r\n        });\r\n        return userList;\r\n    }\r\n\r\n\r\n    const createTenantsOptions = async () => {\r\n        const res = await getTenantOptions();\r\n        return res;\r\n    }\r\n\r\n\r\n    const toggleCollapse = () => {\r\n        if (collapsed) {\r\n            setCollapsed(false);\r\n            return;\r\n        }\r\n        setCollapsed(true)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                downSm &&\r\n                <Grid container justify='center'>\r\n                    <Grid item xs={11} className={classes.gridItem}>\r\n                        <Button\r\n                        className={classes.sortandfilter}\r\n                        startIcon={<FilterListIcon className={classes.icon} />}\r\n                        endIcon={collapsed ? <ClearRounded /> : <ExpandMoreRoundedIcon />}\r\n                        onClick={toggleCollapse}\r\n                    >\r\n                        {t(`faultsModule.${ collapsed ? 'hide' : 'show'}Filters`)}\r\n                    </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                    \r\n            }\r\n            {\r\n                (!downSm || collapsed) &&\r\n            <Slide direction={'up'} in={true} timeout={downSm ? 500 : 0}>\r\n                <Grid container justify='center' className={classes.filtersContainer}>\r\n                    <Grid item xs={11} sm={9} md={7} lg={5} xl={4} className={classes.gridItem}>\r\n                        {\r\n                            auth.user.isAdmin && \r\n                            <FilterBySelect \r\n                                optionsFunc={createTenantsOptions}\r\n                                placeholder={t(\"assetsModule.filterByClient\")}\r\n                                filterIcon={<PeopleAltIcon className={classes.icon }/>}\r\n                                filterField={'tenant'}\r\n                            />\r\n                        }\r\n                        \r\n                        <SearchBox \r\n                            placeholder={t(\"assetsModule.filterByCityOrAddress\")}\r\n                            filterField={'searchText'}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={11} className={classes.gridItem}>         \r\n                        <FilterBySelect \r\n                            optionsFunc={createUserOptions}\r\n                            placeholder={t(\"assetsModule.filterByAssetOwner\")}\r\n                            filterIcon={<PersonRoundedIcon className={classes.icon }/>}\r\n                            filterField={'owner'}\r\n                        />     \r\n                        <SortBy \r\n                            menuOptions={sortOptions}\r\n                        />   \r\n                    </Grid>  \r\n                </Grid>\r\n                </Slide>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    filtersContainer: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            position: 'absolute',\r\n            bottom: '0',\r\n            background: 'rgba(0,0,0,0.8)',\r\n            backdropFilter: 'blur(22px)',\r\n            zIndex: 3,\r\n            padding: '40px 0 155px',\r\n            borderRadius: '30px 30px 0 0',\r\n            boxShadow: '0px -1px 1px 0px rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    gridItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        marginLeft: '4px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    sortandfilter: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'black',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '5px 25px 5px 3px',\r\n        whiteSpace: 'nowrap',\r\n        margin: '10px 0 0',\r\n        position: 'absolute',\r\n        bottom: '100px',\r\n        zIndex: 4,\r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    }\r\n}))\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AlertDialog.js",["893"],"import React, { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { useTranslation } from 'react-i18next';\r\nimport clsx from 'clsx';\r\n\r\nexport const AlertDialog = ({ alertDialog , open }) => {\r\n\r\n        const classes = useStyles();\r\n        const { lang } = useContext(LanguageContext);\r\n        const { t, i18n } = useTranslation();\r\n  return (\r\n    <Dialog\r\n        open={true}\r\n        onClose={alertDialog.handleCancel}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        style={{ direction: lang.dir}}\r\n        classes={{\r\n            root: classes.root, \r\n            paper: classes.paper,\r\n            container: classes.container\r\n        }}\r\n        BackdropProps={{\r\n            timeout: 500,\r\n            classes: {\r\n                root: classes.root\r\n            }\r\n        }}\r\n    >\r\n    <DialogTitle id=\"alert-dialog-title\" style={{ direction: lang.dir}} className={classes.title}>\r\n        {alertDialog.title}\r\n    </DialogTitle>\r\n    <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\" style={{ direction: lang.dir}} className={classes.text}>\r\n        { alertDialog.text }\r\n        </DialogContentText>\r\n    </DialogContent>\r\n    <DialogActions className={classes.controls}>\r\n        <Button\r\n            className={clsx(classes.control, classes.save)}\r\n            onClick={alertDialog.handleConfirm}\r\n        >\r\n            { alertDialog.confirmText || t(\"alert.confirm\") }\r\n        </Button>\r\n        <Button\r\n            className={clsx(classes.control, classes.cancel)}\r\n            onClick={alertDialog.handleCancel}\r\n        >\r\n            { alertDialog.cancelText || t(\"alert.cancel\") }\r\n        </Button>\r\n    </DialogActions>\r\n    </Dialog>\r\n\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: 'rgba(0,0,0,0.4)'\r\n    },\r\n    container: {\r\n        backdropFilter: 'blur(10px)',\r\n    },\r\n    paper: {\r\n        width: 'auto',\r\n        padding: '5px',\r\n        background: 'rgba(0,0,0,0.4)',\r\n        borderRadius: '10px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        color: 'white'\r\n    },\r\n    text: {\r\n        color: 'white'\r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsControls.js",["894","895"],"import React, { useState, useEffect } from 'react'\r\nimport { Grid, makeStyles, useMediaQuery, Button, Slide } from '@material-ui/core'\r\nimport { SortBy } from '../../reuseables/SortBy'\r\nimport { SearchBox } from '../../reuseables/SearchBox';\r\nimport { FilterBySelect } from '../../reuseables/FilterBySelect';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\nimport { getAssetsSuggestions } from '../../../api/systemsApi';\r\nimport { getFullAddress, getAsset } from '../../../api/assetsApi';\r\nimport { useLocation } from 'react-router';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport { ClearRounded } from '@material-ui/icons';\r\n\r\nconst sortOptions = [\r\n    {\r\n        text: 'שם מערכת',\r\n        field: 'systemName'\r\n    },\r\n    {\r\n        text: 'מנהל מערכת',\r\n        field: 'owner'\r\n    },\r\n    {\r\n        text: 'כמות תקלות פתוחות',\r\n        field: 'openFaultsCount'\r\n    },\r\n    \r\n]\r\n\r\nexport const SystemsControls = () => {\r\n    \r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    const [ reloadedValue, setReloadedValue ] = useState(null);\r\n    const [ collapsed, setCollapsed ] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        if (query.asset) {\r\n            handleReloaded(query.asset)\r\n            .then(data => {\r\n                if (data) {\r\n                    setReloadedValue(data);\r\n                } else {\r\n                    \r\n                }\r\n            })\r\n        } else {\r\n            setReloadedValue({\r\n                label: '',\r\n                value: null\r\n            });\r\n        }\r\n    }, [location.search])\r\n\r\n    const handleReloaded = async (assetId) => {\r\n        const res = await getAsset(assetId, false);\r\n        if (res) {\r\n            return {\r\n                label: getFullAddress(res),\r\n                value: res._id\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const toggleCollapse = () => {\r\n        if (collapsed) {\r\n            setCollapsed(false);\r\n            return;\r\n        }\r\n        setCollapsed(true)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                downSm &&\r\n                <Grid container justify='center'>\r\n                    <Grid item xs={11} className={classes.gridItem}>\r\n                        <Button\r\n                        className={classes.sortandfilter}\r\n                        startIcon={<FilterListIcon className={classes.icon} />}\r\n                        endIcon={collapsed ? <ClearRounded /> : <ExpandMoreRoundedIcon />}\r\n                        onClick={toggleCollapse}\r\n                    >\r\n                        {t(`faultsModule.${ collapsed ? 'hide' : 'show'}Filters`)}\r\n                    </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                    \r\n            }\r\n           { \r\n\t\t\t(!downSm || collapsed) &&\r\n\t\t\t<Slide in={true} direction={'up'} timeout={downSm ? 500  : 0}>\r\n                <Grid container justify='center' className={classes.filtersContainer}>\r\n                    <Grid item xs={12} className={classes.gridItem}>\r\n\r\n                        {\r\n                            reloadedValue &&\r\n                            <SearchBoxSelect\r\n                                suggestionsFunc={getAssetsSuggestions}\r\n                                placeholder={t(\"systemsModule.filterByAsset\")}\r\n                                filterField={'asset'}\r\n                                reloadedLabel={reloadedValue.label}\r\n                                reloadedValue={reloadedValue.value}\r\n                            />\r\n                        }  \r\n                        <SearchBox \r\n                                placeholder={t(\"systemsModule.filterBySystemName\")}\r\n                                filterField={'name'}\r\n                            />\r\n                        </Grid>\r\n                    <Grid xs={11} className={classes.gridItem}>\r\n                        <FilterBySelect \r\n                            optionsFunc={createUserOptions}\r\n                            placeholder={t(\"systemsModule.filterBySystemOwner\")}\r\n                            filterIcon={<PersonRoundedIcon className={classes.icon }/>}\r\n                            filterField={'owner'}\r\n                        />\r\n                        <SortBy \r\n                            menuOptions={sortOptions}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n            </Slide>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    filtersContainer: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            position: 'absolute',\r\n            bottom: '0',\r\n            background: 'rgba(0,0,0,0.8)',\r\n            backdropFilter: 'blur(22px)',\r\n            zIndex: 3,\r\n            padding: '40px 0 155px',\r\n            borderRadius: '30px 30px 0 0',\r\n            boxShadow: '0px -1px 1px 0px rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    gridItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        marginLeft: '4px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    sortandfilter: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'black',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '5px 25px 5px 3px',\r\n        whiteSpace: 'nowrap',\r\n        margin: '10px 0 0',\r\n        position: 'absolute',\r\n        bottom: '100px',\r\n        zIndex: 4,\r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    },\r\n}))\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsHeader.js",["896","897","898"],"import React from 'react';\r\nimport { Grid, makeStyles, Paper, useMediaQuery } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Can } from '../../reuseables/Can';\r\n\r\nexport const SystemsHeader = () => {\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst { t, i18n } = useTranslation();\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} sm={7} md={8} lg={11} lg={11}>\r\n\t\t\t<Paper elevation={9} className={classes.headerPaper}>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item lg={4}>\r\n\t\t\t\t\t\t<div className={classes.systemName}>\r\n\t\t\t\t\t\t\t{t('systemsModule.systemName')}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t{!downSm && (\r\n\t\t\t\t\t\t<Grid item lg={8} className={classes.controller}>\r\n\t\t\t\t\t\t\t<Grid container style={{ height: '100%' }}>\r\n\t\t\t\t\t\t\t\t<Grid item lg={9}>\r\n\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.actionsContainer}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.moreDetails')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.tasks')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.faults')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.documents')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Can module='systems' action='changeRelatedUsers' userList={[]}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t'systemsModule.changeOwner'\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.users')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>{' '}\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n                                <Grid item lg={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.ownerHeader}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.ownerHeader')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Paper>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\theaderPaper: {\r\n\t\theight: '45px',\r\n\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\tmargin: '5px',\r\n\t\tborderRadius: '5px',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tfontSize: '12px',\r\n\t},\r\n\tsystemName: {\r\n\t\tmargin: 'auto 20px',\r\n        whiteSpace: 'nowrap',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n\t},\r\n\tactionsContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tfontSize: '12px',\r\n        justifyContent: 'flex-end',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n\t},\r\n\ticonHeader: {\r\n\t\ttextAlign: 'center',\r\n\t\tmargin: 'auto',\r\n\t},\r\n\townerHeader: {\r\n\t\ttextAlign: 'center',\r\n        margin: 'auto',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tmargin: 'auto 0',\r\n\t\t},\r\n    },\r\n    controller: {\r\n        padding: '5px'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\System.js",["899","900","901","902","903"],"C:\\projects\\leev\\leev-fe\\src\\api\\systemsApi.js",["904"],"C:\\projects\\leev\\leev-fe\\src\\api\\mapApi.js",["905"],"import axios from 'axios';\r\n\r\nexport const getMapData = async (filters) => {\r\n\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/map/getMapData`,\r\n            { filters },\r\n            {\r\n                headers: {\r\n                    requesttype: 'read',\r\n                    module: 'map'\r\n                }\r\n            }\r\n        );\r\n        if (res) {\r\n            let assets = res.data.assets;\r\n            res.data.assets.forEach((a,i) => {\r\n                assets[i].faultCount = res.data.faults.filter(f => {\r\n                    return f.asset._id == a._id\r\n                }).length;\r\n                    \r\n            })\r\n            return {...res.data, assets };\r\n        }\r\n        return [];\r\n    } catch (e) {\r\n        console.log(e.message);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const getMapFilters = (query) => {\r\n    return new Promise((resolve, rejecet) => {\r\n        if (!query) resolve(null);\r\n        delete query.lat;\r\n        delete query.lng;\r\n        resolve(query);\r\n    })\r\n    \r\n}\r\n\r\n\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\Mapbox.js",["906","907","908","909","910","911","912","913"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport ReactMapGL, {\r\n\tFlyToInterpolator,\r\n\tMarker,\r\n\tsetRTLTextPlugin,\r\n} from 'react-map-gl';\r\nimport { makeStyles, IconButton, ClickAwayListener } from '@material-ui/core';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport useSupercluster from 'use-supercluster';\r\nimport { getMapData } from '../../../api/mapApi';\r\nimport { updateQueryParams } from '../../../api/genericApi';\r\nimport clsx from 'clsx';\r\nimport mapboxgl from \"mapbox-gl\";\r\n\r\n// @ts-ignore\r\n// eslint-disable-next-line import/no-webpack-loader-syntax, import/no-unresolved\r\nmapboxgl.workerClass = require(\"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\").default;\r\n\r\nsetRTLTextPlugin(\r\n\t// find out the latest version at https://www.npmjs.com/package/@mapbox/mapbox-gl-rtl-text\r\n\t'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js',\r\n\tnull,\r\n\t// lazy: only load when the map first encounters Hebrew or Arabic text\r\n\ttrue\r\n);\r\n\r\nexport const Mapbox = ({ data, setData }) => {\r\n\tconst location = useLocation();\r\n\tconst history = useHistory();\r\n\tconst query = useQuery(location.search);\r\n\tconst map = useRef();\r\n\tconst classes = useStyles();\r\n\tconst [mapData, setMapData] = useState(data);\r\n\tconst [extId, setExtId] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (data) {\r\n\t\t\tsetMapData(data);\r\n\t\t}\r\n\t}, [data]);\r\n\r\n\tconst [viewport, setViewport] = useState({\r\n\t\tlatitude: Number(query.lat),\r\n\t\tlongitude: Number(query.lng),\r\n\t\tzoom: 10,\r\n\t\twidth: 'auto',\r\n\t\theight: '100%'\r\n\t});\r\n\r\n\tconst points = mapData.assets.map((asset, i) => ({\r\n\t\ttype: 'Feature',\r\n\t\tproperties: {\r\n\t\t\tcluster: false,\r\n\t\t\tasset,\r\n\t\t},\r\n\t\tgeometry: {\r\n\t\t\ttype: 'Point',\r\n\t\t\tcoordinates: [asset.coordinates.lng, asset.coordinates.lat],\r\n\t\t},\r\n\t}));\r\n\r\n\tconst bounds = map.current\r\n\t\t? map.current.getMap().getBounds().toArray().flat()\r\n\t\t: null;\r\n\r\n\tconst { clusters, supercluster } = useSupercluster({\r\n\t\tpoints,\r\n\t\tzoom: viewport.zoom,\r\n\t\tbounds,\r\n\t\toptions: {\r\n\t\t\tradius: 15,\r\n\t\t\tmaxZoom: 20,\r\n\t\t},\r\n\t});\r\n\r\n\tconst handleMarkerClick = (cluster) => (event) => {\r\n\t\tconst { cluster: isCluster } = cluster.properties;\r\n\t\tsetExtId(cluster.id);\r\n\t\tif (isCluster) {\r\n\t\t\tlet leaves = getClusterLeaves(cluster.id);\r\n\r\n\t\t\tlet reqData = leaves.map((lv) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tasset: lv.properties.asset,\r\n\t\t\t\t\tfaults: mapData.faults.filter(\r\n\t\t\t\t\t\t(f) => f.asset._id === lv.properties.asset._id\r\n\t\t\t\t\t),\r\n\t\t\t\t\ttasks: mapData.tasks.filter(\r\n\t\t\t\t\t\t(t) => t.asset._id === lv.properties.asset._id\r\n\t\t\t\t\t),\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\tsetData(reqData);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetData([\r\n\t\t\t{\r\n\t\t\t\tasset: cluster.properties.asset,\r\n\t\t\t\tfaults: mapData.faults.filter(\r\n\t\t\t\t\t(f) => f.asset._id === cluster.properties.asset._id\r\n\t\t\t\t),\r\n\t\t\t\ttasks: mapData.tasks.filter(\r\n\t\t\t\t\t(t) => t.asset._id === cluster.properties.asset._id\r\n\t\t\t\t),\r\n\t\t\t},\r\n\t\t]);\r\n\t};\r\n\r\n\tconst getClusterLeaves = (clusterId) => {\r\n\t\treturn supercluster.getLeaves(clusterId);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ReactMapGL\r\n\t\t\tref={map}\r\n\t\t\t{...viewport}\r\n\t\t\tmapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n\t\t\tonViewportChange={(viewport) =>\r\n\t\t\t\tsetViewport(viewport)\r\n\t\t\t}\r\n\t\t\tmapStyle={'mapbox://styles/nivmimran/ckngo7jr231jt18pcc4bzobs3'}\r\n\t\t\tattributionControl={false}\r\n\t\t>\r\n\t\t\t{clusters.map((cluster, i) => {\r\n\t\t\t\tconst [longitude, latitude] = cluster.geometry.coordinates;\r\n\t\t\t\tconst { cluster: isCluster } = cluster.properties;\r\n\r\n\t\t\t\tif (isCluster) {\r\n\t\t\t\t\tconst leaves = getClusterLeaves(cluster.id);\r\n\t\t\t\t\tlet totalFaults = 0;\r\n\t\t\t\t\tleaves.forEach((lv) => {\r\n\t\t\t\t\t\ttotalFaults += lv.properties.asset.faultCount;\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Marker\r\n\t\t\t\t\t\t\tlongitude={longitude}\r\n\t\t\t\t\t\t\tlatitude={latitude}\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tonClick={handleMarkerClick(cluster)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{!!totalFaults && (\r\n\t\t\t\t\t\t\t\t<div className={classes.totalFaults}>\r\n\t\t\t\t\t\t\t\t\t{totalFaults}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\tclasses.markerIcon,\r\n\t\t\t\t\t\t\t\t\textId === cluster.id ? classes.active : null\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<img src=\"https://img.icons8.com/nolan/30/skyscrapers.png\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Marker>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Marker\r\n\t\t\t\t\t\tlongitude={longitude}\r\n\t\t\t\t\t\tlatitude={latitude}\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tonClick={handleMarkerClick(cluster)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Boolean(cluster.properties.asset.faultCount) && (\r\n\t\t\t\t\t\t\t<div className={classes.totalFaults}>\r\n\t\t\t\t\t\t\t\t{cluster.properties.asset.faultCount}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\tclasses.markerIcon,\r\n\t\t\t\t\t\t\t\textId === cluster.id ? classes.active : null\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\tcluster.properties.asset.type ===\r\n\t\t\t\t\t\t\t\t\t'apartment'\r\n\t\t\t\t\t\t\t\t\t\t? 'https://img.icons8.com/nolan/30/cottage.png'\r\n\t\t\t\t\t\t\t\t\t\t: 'https://img.icons8.com/nolan/30/company.png'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Marker>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</ReactMapGL>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttotalFaults: {\r\n\t\tbackground: 'red',\r\n\t\tcolor: 'white',\r\n\t\twidth: 'fit-content',\r\n\t\theight: 'fit-content',\r\n\t\tpadding: '2px 5px',\r\n\t\tborderRadius: '50px',\r\n\t\tfontSize: '13px',\r\n\t\tposition: 'relative',\r\n\t\ttop: '15px',\r\n\t\tright: '10px'\r\n\t},\r\n\tmarkerIcon: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '3px 5px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tcursor: 'pointer',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MarkerData.js",["914","915","916","917","918"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\Map.js",["919","920","921","922","923","924","925","926","927","928","929","930","931"],"import { makeStyles, IconButton, ClickAwayListener } from '@material-ui/core';\r\nimport {\r\n\tGoogleMap,\r\n\tInfoWindow,\r\n\tInfoBox,\r\n\tMarker,\r\n\tuseJsApiLoader,\r\n\tMarkerClusterer,\r\n} from '@react-google-maps/api';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { addQueryParam } from '../../../api/genericApi';\r\nimport { getMapData } from '../../../api/mapApi';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport house from '../../../assets/icons/house.png';\r\nimport { FaultMinified } from '../faults/FaultMinified';\r\nimport { getFullAddress } from '../../../api/assetsApi';\r\nimport ChevronRightRoundedIcon from '@material-ui/icons/ChevronRightRounded';\r\nimport ChevronLeftRoundedIcon from '@material-ui/icons/ChevronLeftRounded';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst containerStyle = {\r\n\twidth: '100%',\r\n\theight: '100%',\r\n\tborderRadius: '5px',\r\n};\r\n\r\nexport const Map = ({ setData }) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst { t } = useTranslation();\r\n\tconst [map, setMap] = useState(null);\r\n\tconst [mapData, setMapData] = useState({});\r\n\tconst [markers, setMarkers] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (mapData.assets) {\r\n\t\t\tsetMarkers(mapData.assets);\r\n\t\t}\r\n\t}, [mapData]);\r\n\r\n\tconst { isLoaded } = useJsApiLoader({\r\n\t\tid: 'google-map-script',\r\n\t\tgoogleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\r\n\t\tlanguage: 'he',\r\n\t\tregion: 'IL',\r\n\t});\r\n\r\n\tconst onLoad = React.useCallback(function callback(map) {\r\n\t\tsetMap(map);\r\n\t\tfetchMapData();\r\n\t}, []);\r\n\r\n\tconst onDragEnd = () => {\r\n\t\tconst lat = map.getCenter().lat();\r\n\t\tconst lng = map.getCenter().lng();\r\n\t\thistory.push({\r\n\t\t\tpath: location.pathname,\r\n\t\t\tsearch: addQueryParam(location.search, [\r\n\t\t\t\t{ name: 'lat', value: lat },\r\n\t\t\t\t{ name: 'lng', value: lng },\r\n\t\t\t]),\r\n\t\t});\r\n\t\tlocalStorage.setItem('wb_map_pref', JSON.stringify({ lat, lng }));\r\n\t};\r\n\r\n\tconst fetchMapData = async () => {\r\n\t\tconst data = await getMapData();\r\n\t\tsetMapData(data);\r\n\t};\r\n\r\n\tconst handleMarkerClick = (asset, index) => (event) => {\r\n\t\tlet fs = mapData.faults.filter((f) => f.asset._id == asset._id);\r\n\t\tsetData([{ asset, faults: fs }]);\r\n\t};\r\n\r\n\tconst handleClusterClick = (cluster) => {\r\n\t\tconst markers = cluster.getMarkers();\r\n\t\tlet md = [];\r\n\t\tmarkers.forEach(m => {\r\n\t\t\tlet fs = mapData.faults.filter((f) => f.asset._id == m.data._id);\r\n\t\t\tmd.push({asset: m.data, faults: fs});\r\n\t\t});\r\n\t\tsetData(md);\r\n\t}\r\n\r\n\treturn isLoaded ? (\r\n\t\t<GoogleMap\r\n\t\t\tmapContainerStyle={containerStyle}\r\n\t\t\tzoom={15}\r\n\t\t\tonLoad={onLoad}\r\n\t\t\tonDragEnd={onDragEnd}\r\n\t\t\tcenter={{ lat: Number(query.lat), lng: Number(query.lng) }}\r\n\t\t\toptions={{\r\n\t\t\t\tmaxZoom: 18,\r\n\t\t\t\tfullscreenControl: false,\r\n\t\t\t\tstreetViewControl: false,\r\n\t\t\t\tmapTypeControl: false,\r\n\t\t\t\tgestureHandling: 'greedy',\r\n\t\t\t\tstyles: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfeatureType: 'poi',\r\n\t\t\t\t\t\tstylers: [{ visibility: 'off' }],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfeatureType: 'transit',\r\n\t\t\t\t\t\telementType: 'labels.icon',\r\n\t\t\t\t\t\tstylers: [{ visibility: 'off' }],\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<MarkerClusterer\r\n\t\t\t\tonClick={handleClusterClick}\r\n\t\t\t\tgridSize={30}\r\n\t\t\t\tenableRetinaIcons\r\n\t\t\t\tclusterClass={classes.mcLabel}\r\n\t\t\t\tzoomOnClick={false}\r\n\t\t\t\t\r\n\t\t\t\tstyles={[\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\ttextColor: 'white',\r\n\t\t\t\t\t\tfontWeight: '500',\r\n\t\t\t\t\t\ttextSize: 12,\r\n\t\t\t\t\t\twidth: 20,\r\n\t\t\t\t\t\theight: 20,\r\n\t\t\t\t\t\tanchorText: [0,0],\r\n\t\t\t\t\t\turl: 'https://img.icons8.com/nolan/50/company.png',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t{(clusterer) => {\r\n\t\t\t\t\treturn markers.map((marker, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Marker\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\t\t\tdata: marker\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tlabel={{\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\ttext: marker.faultCount.toString(),\r\n\t\t\t\t\t\t\t\t\tclassName: classes.markerLabel,\r\n\t\t\t\t\t\t\t\t\tcolor: 'white',\r\n\t\t\t\t\t\t\t\t\tfontSize: '11px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\ticon={\r\n\t\t\t\t\t\t\t\t\t'https://img.icons8.com/nolan/50/marker.png'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tposition={{\r\n\t\t\t\t\t\t\t\t\tlat: marker.coordinates.lat,\r\n\t\t\t\t\t\t\t\t\tlng: marker.coordinates.lng,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClick={handleMarkerClick(marker, i)}\r\n\t\t\t\t\t\t\t\tclusterer={clusterer}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}}\r\n\t\t\t</MarkerClusterer>\r\n\t\t</GoogleMap>\r\n\t) : null;\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmapFull: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t\tborderRadius: '10px',\r\n\t\t'&div': {\r\n\t\t\toutline: 'none !important',\r\n\t\t},\r\n\t},\r\n\tmarkerLabel: {\r\n\t\tbackground: 'red',\r\n\t\tpadding: '5px 6px',\r\n\t\tborderRadius: '50px',\r\n\t\tlineHeight: '0.9',\r\n\t\tposition: 'absolute',\r\n\t\tright: '4px',\r\n\t\ttop: '20px',\r\n\t},\r\n\tfaultInfo: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\tborderRadius: '5px',\r\n\t\twidth: '300px',\r\n\t\tpadding: '10px',\r\n\t\tmaxHeight: '400px',\r\n\t\toverflowY: 'overlay',\r\n\t},\r\n\tfaultContainer: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\tmargin: '5px 0',\r\n\t\tpadding: '10px',\r\n\t\tborderRadius: '5px',\r\n\t},\r\n\taddress: {\r\n\t\tcolor: 'white',\r\n\t\tbackground: 'black',\r\n\t\tfontSize: '18px',\r\n\t\tpadding: '15px',\r\n\t\tborderRadius: '5px',\r\n\t},\r\n\tcardPagination: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t},\r\n\tarrow: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tpaginationMiddle: {\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t\tfontSize: '14px',\r\n\t},\r\n\t'@global': {\r\n\t\t'*': {\r\n\t\t\toutline: 'none',\r\n\t\t},\r\n\t},\r\n\tmcLabel: {\r\n\t\tbackground: 'red',\r\n\t\tborderRadius: '50px',\r\n\t\topacity: '0.8'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\UpsertDocument.js",["932","933","934","935","936","937"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MapControls.js",["938","939","940","941","942","943","944","945","946"],"import {\r\n\tmakeStyles,\r\n\tTooltip,\r\n\tIconButton,\r\n\tGrid,\r\n\tuseMediaQuery,\r\n\tClickAwayListener,\r\n} from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport BusinessRoundedIcon from '@material-ui/icons/BusinessRounded';\r\nimport AssignmentRoundedIcon from '@material-ui/icons/AssignmentRounded';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\nimport { getAssetsSuggestions } from '../../../api/systemsApi';\r\nimport { useLocation } from 'react-router';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { getAsset, getFullAddress } from '../../../api/assetsApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport { FilterBySelect } from '../../reuseables/FilterBySelect';\r\nimport { getFaultsStatusListSuggestions } from '../../../api/faultsApi';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport FilterListRoundedIcon from '@material-ui/icons/FilterListRounded';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\n\r\nexport const MapControls = ({}) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst location = useLocation();\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst query = useQuery(location.search);\r\n\tconst [reloadedValue, setReloadedValue] = useState(null);\r\n\tconst [expanded, setExpanded] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (query.asset) {\r\n\t\t\thandleReloaded(query.asset).then((data) => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetReloadedValue(data);\r\n\t\t\t\t} else {\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetReloadedValue({\r\n\t\t\t\tlabel: '',\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t}\r\n\t}, [location.search]);\r\n\r\n\tconst handleReloaded = async (assetId) => {\r\n\t\tconst res = await getAsset(assetId, false);\r\n\t\tif (res) {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: getFullAddress(res),\r\n\t\t\t\tvalue: res._id,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClickFilter = () => {\r\n\t\tif (expanded) {\r\n\t\t\tsetExpanded(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetExpanded(true);\r\n\t};\r\n\r\n\treturn matches && !expanded ? (\r\n\t\t<IconButton className={classes.filterBtn} onClick={handleClickFilter}>\r\n\t\t\t<FilterListRoundedIcon className={classes.icon} />\r\n\t\t</IconButton>\r\n\t) : (\r\n\t\t<MobileWrappar handleClickFilter={handleClickFilter}>\r\n\t\t\t<Grid container className={classes.container}>\r\n\t\t\t\t{matches && expanded && (\r\n\t\t\t\t\t<Grid item xs={12} className={classes.controls}>\r\n\t\t\t\t\t\t<div className={classes.title}>\r\n\t\t\t\t\t\t\t{t(\"mapModule.filters\")}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<IconButton onClick={handleClickFilter} className={classes.expandedBtn}>\r\n\t\t\t\t\t\t\t<ClearRoundedIcon className={classes.icon}/>\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t\t{reloadedValue && (\r\n\t\t\t\t\t<Grid item className={classes.filterContainer}>\r\n\t\t\t\t\t\t<SearchBoxSelect\r\n\t\t\t\t\t\t\tsuggestionsFunc={getAssetsSuggestions}\r\n\t\t\t\t\t\t\tplaceholder={t('filters.filterByAsset')}\r\n\t\t\t\t\t\t\tfilterField={'asset'}\r\n\t\t\t\t\t\t\treloadedLabel={reloadedValue.label}\r\n\t\t\t\t\t\t\treloadedValue={reloadedValue.value}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t\t<Grid item className={classes.filterContainer}>\r\n\t\t\t\t\t<FilterBySelect\r\n\t\t\t\t\t\toptionsFunc={createUserOptions}\r\n\t\t\t\t\t\tplaceholder={t('filters.filterByUser')}\r\n\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t<PersonRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfilterField={'owner'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{/* <Grid item classNam={classes.filterContainer}>\r\n\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\toptionsFunc={getFaultsStatusListSuggestions}\r\n\t\t\t\t\t\tplaceholder={t('filters.filterByStatus')}\r\n\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t<DoubleArrowIcon className={classes.icon} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfilterField={'status'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid> */}\r\n\t\t\t</Grid>\r\n\t\t</MobileWrappar>\r\n\t);\r\n};\r\n\r\nconst MobileWrappar = ({ children, handleClickFilter }) => {\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.up('md'));\r\n\r\n\treturn matches ? (\r\n\t\t<div>{children}</div>\r\n\t) : (\r\n\t\t<ClickAwayListener onClickAway={handleClickFilter}>\r\n\t\t\t{children}\r\n\t\t</ClickAwayListener>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\twidth: 'fit-content',\r\n\t\theight: 'fit-content',\r\n\t\tdisplay: 'flex',\r\n\t\tbackground: 'rgba(0,0,0,0.2)',\r\n\t\tborderRadius: '50px',\r\n\t\tmargin: '10px',\r\n\t\tbackdropFilter: 'blur(5px)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tposition: 'relative',\r\n\t\tboxShadow: 'rgba(0,0,0,0.4) 0 0 5px 2px',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tborderRadius: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '10px',\r\n\t\t\tborder: 0\r\n\t\t},\r\n\t},\r\n\tbtn: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tpadding: '8px',\r\n\t\tmargin: '5px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'black',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '24px',\r\n\t\tmarginLeft: '4px',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '6px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tcontrols: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpaddingBottom: '10px',\r\n\t\tmarginBottom: '10px'\r\n\t},\r\n\tfilterContainer: {\r\n\t\tjustifySelf: 'center'\r\n\t},\r\n\texpandedBtn: {\r\n\t\tpadding: '2px'\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '20px',\r\n\t\tpadding: '0 10px'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViews.js",["947","948","949"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\DocumentsControls.js",["950","951","952"],"import {\r\n    Button,\r\n    Slide,\r\n    Grid,\r\n    makeStyles,\r\n    useMediaQuery\r\n} from '@material-ui/core';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { getAsset, getFullAddress } from '../../../api/assetsApi';\r\nimport {\r\n    getFaultOptionsByAssetOrSystem\r\n} from '../../../api/faultsApi';\r\nimport { removeQueryParam } from '../../../api/genericApi';\r\nimport {\r\n    getAssetsSuggestions,\r\n    getSystemsByAssetOptions\r\n} from '../../../api/systemsApi';\r\nimport { getTaskOptionsByAssetOrSystem } from '../../../api/tasksApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport DescriptionRoundedIcon from '@material-ui/icons/DescriptionRounded';\r\nimport BlurOnRoundedIcon from '@material-ui/icons/BlurOnRounded';\r\n\r\n\r\nexport const DocumentsControls = ({}) => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [reloadedValue, setReloadedValue] = useState(null);\r\n\tconst [collapsed, setCollapsed] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (query.asset) {\r\n\t\t\thandleReloaded(query.asset).then((data) => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetReloadedValue(data);\r\n\t\t\t\t}\r\n            });\r\n            \r\n\t\t} else {\r\n\t\t\tsetReloadedValue({\r\n\t\t\t\tlabel: '',\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\thistory.push({\r\n\t\t\t\tpath: location.pathname,\r\n\t\t\t\tsearch: removeQueryParam(location.search, 'system'),\r\n\t\t\t});\r\n\t\t}\r\n\t}, [location.search]);\r\n\r\n\tconst handleReloaded = async (assetId) => {\r\n\t\tconst res = await getAsset(assetId, false);\r\n\t\tif (res) {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: getFullAddress(res),\r\n\t\t\t\tvalue: res._id,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleCollapse = () => {\r\n\t\tif (collapsed) {\r\n\t\t\tsetCollapsed(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetCollapsed(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{downSm && (\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName={classes.sortandfilter}\r\n\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t<FilterListIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tendIcon={\r\n\t\t\t\t\t\t\t\tcollapsed ? (\r\n\t\t\t\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<ExpandMoreRoundedIcon />\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={toggleCollapse}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{t(\r\n\t\t\t\t\t\t\t\t`filters.${\r\n\t\t\t\t\t\t\t\t\tcollapsed ? 'hide' : 'show'\r\n\t\t\t\t\t\t\t\t}Filters`\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{ \r\n\t\t\t\r\n\t\t\t(!downSm || collapsed) &&\r\n\t\t\t<Slide in={true} direction={'up'} timeout={downSm ? 500 : 0}>\r\n\t\t\t\t<Grid container justify=\"center\" className={classes.filtersContainer}>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t{reloadedValue && (\r\n\t\t\t\t\t\t\t<SearchBoxSelect\r\n\t\t\t\t\t\t\t\tsuggestionsFunc={getAssetsSuggestions}\r\n\t\t\t\t\t\t\t\tplaceholder={t('filters.filterByAsset')}\r\n\t\t\t\t\t\t\t\tfilterField={'asset'}\r\n\t\t\t\t\t\t\t\treloadedLabel={reloadedValue.label}\r\n\t\t\t\t\t\t\t\treloadedValue={reloadedValue.value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{query.asset && (\r\n\t\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\t\toptionsFunc={() =>\r\n\t\t\t\t\t\t\t\t\tgetSystemsByAssetOptions(query.asset)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder={t('filters.filterBySystemName')}\r\n\t\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t\t<BlurOnRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfilterField={'system'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={createUserOptions}\r\n\t\t\t\t\t\t\tplaceholder={t('filters.filterByUser')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<PersonRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'user'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={() =>\r\n\t\t\t\t\t\t\t\tgetFaultOptionsByAssetOrSystem(\r\n\t\t\t\t\t\t\t\t\tquery.asset,\r\n\t\t\t\t\t\t\t\t\tquery.system\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tplaceholder={t('filters.filterByFault')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<WarningRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'fault'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={() =>\r\n\t\t\t\t\t\t\t\tgetTaskOptionsByAssetOrSystem(\r\n\t\t\t\t\t\t\t\t\tquery.asset,\r\n\t\t\t\t\t\t\t\t\tquery.system\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tplaceholder={t('filters.filterByTask')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<DescriptionRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'task'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Slide>\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tfiltersContainer: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            position: 'absolute',\r\n            bottom: '0',\r\n            background: 'rgba(0,0,0,0.8)',\r\n            backdropFilter: 'blur(22px)',\r\n            zIndex: 3,\r\n            padding: '40px 0 155px',\r\n            borderRadius: '30px 30px 0 0',\r\n            boxShadow: '0px -1px 1px 0px rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n\tgridItem: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'flex-start',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tmarginLeft: '4px',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '6px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tsortandfilter: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'black',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '5px 25px 5px 3px',\r\n        whiteSpace: 'nowrap',\r\n        margin: '10px 0 0',\r\n        position: 'absolute',\r\n        bottom: '100px',\r\n        zIndex: 4,\r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    },\r\n\ttypeGroup: {\r\n\t\tmargin: '5px',\r\n\t\theight: '45px',\r\n\t},\r\n\tmodeBtn: {\r\n\t\tpadding: '0 15px 0 5px',\r\n\t\tcolor: 'white',\r\n\t\twidth: 'auto',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tlistBtn: {\r\n\t\tborderRadius: '25px 0 0 25px',\r\n\t},\r\n\tblocksBtn: {\r\n\t\tborderRadius: '0px 25px 25px 0px',\r\n\t},\r\n\tmodeBtnActive: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultView.js",["953","954"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\Document.js",["955","956","957"],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\useQuery.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\Can.js",["958","959"],"import React, { useState } from 'react';\r\nimport { getMinPermLevel } from '../../api/permissionsApi';\r\nimport { usePermissions } from './customHooks/usePermissions';\r\n\r\n\r\n\r\nexport const Can = ({ module, action, userList, shouldRender, children }) => {\r\n    \r\n    const isPermitted = usePermissions({ module, action, userList });\r\n    if (shouldRender === false) return null;\r\n    \r\n    return (\r\n        isPermitted ? \r\n        <React.Fragment>\r\n            {children}\r\n        </React.Fragment>\r\n        : null\r\n    )\r\n}","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\UpsertAsset.js",["960","961","962","963"],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBoxSelect.js",["964","965"],"import { ClickAwayListener, FormControl, IconButton, makeStyles, Menu, MenuItem, OutlinedInput } from '@material-ui/core';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport clsx from 'clsx';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam, removeQueryParam } from '../../api/genericApi';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { useQuery } from './customHooks/useQuery';\r\n\r\nexport const SearchBoxSelect = ({ placeholder, filterField, suggestionsFunc, reloadedLabel, reloadedValue }) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const cont = useRef();\r\n    const input = useRef();\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ onFocus, setOnFocus ] = useState(false);\r\n    const [ searchText, setSearchText ] = useState('');\r\n    const [ anchorEl, setAnchorEl ] = useState(null);\r\n    const [ menuOptions, setMenuOptions ] = useState([]);\r\n    const [ value, setValue ] = useState(reloadedValue || null);\r\n    \r\n    useEffect(() => {\r\n        if (Boolean(!searchText)) return;\r\n        const timeOutId = setTimeout(() => handleSearch(searchText), 700);\r\n        return () => clearTimeout(timeOutId);\r\n    }, [searchText])\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: addQueryParam(location.search, [{ name: filterField, value: value}])\r\n            });\r\n            return;\r\n        } else {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: removeQueryParam(location.search, filterField)\r\n            });\r\n        }\r\n    }, [value])\r\n\r\n    const handleChange = event => {\r\n        setSearchText(event.target.value)\r\n    }\r\n\r\n    const handleSearch = async searchText => {\r\n        if (searchText) {\r\n            const data = await suggestionsFunc(searchText);\r\n            setMenuOptions(data || []);\r\n            setAnchorEl(input.current)      \r\n        } else {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: removeQueryParam(location.search, filterField)\r\n            });\r\n        }\r\n    }\r\n    \r\n    const getTag = val => {\r\n        let data = menuOptions.find(op => val === op.value);\r\n        return createTag(data)\r\n    }\r\n\r\n    const createTag = data => {\r\n        if (!data) return;\r\n        return (\r\n            <div className={classes.tag}>\r\n                <label className={classes.tagLabel}>\r\n                    { data.label }\r\n                </label>\r\n                <IconButton \r\n                    className={classes.removeBtn}\r\n                    onClick={removeChoice(data.value)}\r\n                >\r\n                    <CloseRoundedIcon className={classes.tagRemove}/>\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const removeChoice = value => event => {\r\n        event.stopPropagation();\r\n        setValue(null)\r\n    }\r\n\r\n    const handleClick = val => event => {\r\n        setValue(val);\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={() => setOnFocus(false)}>\r\n            <div ref={cont} className={clsx(classes.container , onFocus && classes.focused, Boolean(value) && classes.selected)} xs={11} sm={9} md={8} lg={6}>\r\n                <SearchRoundedIcon className={classes.icon}/>\r\n                {\r\n                    value \r\n                    ?   query[filterField] === value\r\n                        ?  createTag(reloadedLabel && reloadedValue ? { label: reloadedLabel, value: reloadedValue} : null)\r\n                        :  getTag(value)\r\n                    :\r\n                    <FormControl variant='outlined' className={classes.form}>\r\n                        <OutlinedInput\r\n                            inputRef={input}\r\n                            value={ searchText || '' }\r\n                            onChange={handleChange}\r\n                            placeholder={placeholder}\r\n                            className={clsx(classes.searchInput)}\r\n                            onFocus={() => setOnFocus(true)}\r\n                        />\r\n                    </FormControl>\r\n                }\r\n                {\r\n                    Boolean(menuOptions.length) &&\r\n                    <Menu         \r\n                        anchorEl={anchorEl}\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={() => setAnchorEl(null)}\r\n                        classes={{\r\n                            paper : classes.menu\r\n                        }}\r\n                        getContentAnchorEl={null}\r\n                        keepMounted\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'center',\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center',\r\n                        }}\r\n                    >\r\n                    {\r\n                        menuOptions.map((v,i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    key={i}\r\n                                    onClick={handleClick(v.value)}\r\n                                    className={classes.menuitem}\r\n                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                >\r\n                                    {v.label}\r\n                                </MenuItem>\r\n                            )\r\n                            \r\n                        })\r\n                    }\r\n                    </Menu>\r\n                }\r\n            </div>   \r\n        </ClickAwayListener>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        margin: '5px',\r\n        padding: '0 5px',\r\n        maxWidth: '450px',\r\n        minHeight: '43px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '50px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        transition: 'box-shadow 0.2s ease-in',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            transition: 'box-shadow 0.2s ease-in'\r\n        }\r\n\r\n    },\r\n    focused: {\r\n        boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        background: 'rgba(0,0,0,0.1)',\r\n        backdropFilter: 'blur(40px)'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        \r\n    },\r\n    searchInput: {\r\n        height: '34px',\r\n        width: '98.5%',\r\n        margin: '3px 0.75%',\r\n        borderRadius: '5px 25px 25px 5px',\r\n        color: 'white',\r\n        '& input': {\r\n            padding: '12.5px 20px 12.5px 5px',\r\n        },\r\n        '& fieldset': {\r\n            border: '0'\r\n        } \r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        marginRight: '5px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        \r\n    },\r\n    menu: {\r\n        marginRight: '25px',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(10px)',\r\n        color: 'white'\r\n    },\r\n    menuitem: {\r\n        minWidth: '200px'\r\n    },\r\n    tag: {\r\n        padding: '5px 10px',\r\n        borderRadius: '50px',\r\n        boxShadow: 'rgba(0,0,0,0.25) 0px 0px 3px 1px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'white',\r\n        margin: '3px 0'\r\n    },\r\n    tagLabel: {\r\n        padding: '0 5px'\r\n    },\r\n    removeBtn: {\r\n        padding: '4px',\r\n        color: 'white'\r\n    },\r\n    tagRemove: {\r\n        fontSize: '16px'\r\n    },\r\n    selected: {\r\n        width: 'fit-content'\r\n    }\r\n}))\r\n\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterBySelect.js",["966","967"],"import { Button, IconButton, makeStyles, Menu, MenuItem } from '@material-ui/core';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam, removeQueryParam } from '../../api/genericApi';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { useQuery } from './customHooks/useQuery';\r\n\r\nexport const FilterBySelect = ({ filterField, placeholder, filterIcon, optionsFunc }) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ menuOptions, setMenuOptions] = useState([]);\r\n    const [ anchorEl, setAnchorEl ] = useState(null);\r\n    const [ value, setValue ] = useState(query[filterField] || '')\r\n\r\n    useEffect(() => {\r\n        optionsFunc()\r\n        .then(data => {\r\n            console.log(data)\r\n            setMenuOptions(data)\r\n        }) \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: addQueryParam(location.search, [{ name: filterField, value }])\r\n            });\r\n            return;\r\n        }\r\n        if(query[filterField]) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: removeQueryParam(location.search, filterField)\r\n            });\r\n        }     \r\n    }, [value])\r\n\r\n    const createTag = val => {\r\n        let data = menuOptions.find(op => val === op.value);\r\n        if (!data) return;\r\n        return (\r\n            <div className={classes.tag}>\r\n                <label className={classes.tagLabel}>\r\n                    { data.label }\r\n                </label>\r\n                <IconButton \r\n                    className={classes.removeBtn}\r\n                    onClick={removeChoice(data.value)}\r\n                >\r\n                    <CloseRoundedIcon className={classes.tagRemove}/>\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const removeChoice = value => event => {\r\n        event.stopPropagation();\r\n        setValue('')\r\n    }\r\n\r\n    const handleClick = val => event => {\r\n        setValue(val);\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                Boolean(menuOptions.length) &&\r\n                    <div item className={classes.select}>\r\n                        <Button \r\n                            className={classes.filterBy}\r\n                            onClick={event => setAnchorEl(event.currentTarget)}\r\n                            startIcon={filterIcon}\r\n                        >\r\n                            { value ? createTag(value) : <label className={classes.searchLabel}>{placeholder}</label>}\r\n                        </Button>\r\n                        <Menu\r\n                            anchorEl={anchorEl}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={() => setAnchorEl(null)}\r\n                            classes={{\r\n                                paper : classes.menu\r\n                            }}\r\n                            keepMounted\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                        >\r\n                            {\r\n                                menuOptions.map((v,i) => {\r\n                                    return (\r\n                                        <MenuItem\r\n                                            key={i}\r\n                                            onClick={handleClick(v.value)}\r\n                                            className={classes.menuitem}\r\n                                            style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                        >\r\n                                            {v.label}\r\n                                        </MenuItem>\r\n                                    )\r\n                                    \r\n                                })\r\n                            }\r\n                        </Menu>\r\n                    </div>\r\n            }          \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    select: {\r\n        margin: '5px',\r\n        height: '45px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    filterBy: {\r\n        textTransform: 'none',\r\n        color: 'white',\r\n        padding: '0 4px',\r\n        height: '45px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        whiteSpace: 'nowrap',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            \r\n        }\r\n    },\r\n    menu: {\r\n        marginTop: '55px',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(10px)',\r\n        color: 'white',\r\n        height: '200px'\r\n    },\r\n    menuitem: {\r\n        minWidth: '200px'\r\n    },\r\n    container: {\r\n        height: '45px',\r\n        border: '1px solid rgba(0,0,0,0.25)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            \r\n        }\r\n    },\r\n    focused: {\r\n        border: `2px solid ${theme.palette.primary.main}`\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        \r\n    },\r\n    searchInput: {\r\n        height: '34px',\r\n        width: '98.5%',\r\n        margin: '3px 0.75%',\r\n        borderRadius: '5px 25px 25px 5px',\r\n        color: 'white',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '& fieldset': {\r\n            border: '0'\r\n        } \r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 5px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    tag: {\r\n        padding: '5px 10px',\r\n        borderRadius: '50px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    tagLabel: {\r\n        padding: '0 5px'\r\n    },\r\n    removeBtn: {\r\n        padding: '4px',\r\n        color: 'white'\r\n    },\r\n    tagRemove: {\r\n        fontSize: '16px'\r\n    },\r\n    searchLabel: {\r\n        padding: '5px 20px 5px 10px', \r\n        cursor: 'pointer',\r\n        color: 'rgba(255,255,255,0.5)',\r\n        fontSize: '15px' \r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateOwner.js",["968","969"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Paper, FormControl, IconButton, useMediaQuery, Fade, Modal, Backdrop,Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { getUserList } from '../../api/userApi';\r\nimport clsx from 'clsx'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\n\r\n\r\nexport const UpdateOwner = ({ handleClose, handleSave, isOpen, currentOwner, title, instructions }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ selectedUser, setSelectedUser ] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        getUserList()\r\n        .then(data => {\r\n            if (currentOwner) {\r\n                setSelectedUser(currentOwner._id)\r\n            }\r\n            setUserList(data.filter(u => u._id !== currentOwner._id ));\r\n        })\r\n    }, [currentOwner])\r\n\r\n    const handleChange = event => {\r\n        setSelectedUser(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={isOpen}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xs={11} sm={7} md={5} lg={3} xl={3}>\r\n                        <Paper \r\n                            className={classes.paper} \r\n                            style={{ direction: lang.dir }}\r\n                            elevation={6}    \r\n                        >\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {title}\r\n                                </div>\r\n                                <IconButton className={classes.closeBtn} onClick={handleClose}>\r\n                                    <ClearRoundedIcon className={classes.icon}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div className={classes.instructions}>\r\n                                {instructions}\r\n                            </div>\r\n                            <FormControl variant='outlined' className={classes.textInput} >\r\n                                <Select\r\n                                    value={selectedUser}\r\n                                    onChange={handleChange}\r\n                                    className={classes.menu}\r\n                                    MenuProps={{\r\n                                        classes: {\r\n                                            paper: classes.menupaper\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        userList.map( (user, i) => {\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    className={classes.menuitem}\r\n                                                    value={user._id} \r\n                                                    key={i}\r\n                                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                                >\r\n                                                    {`${user.firstName} ${user.lastName}`}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div className={classes.controls}>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.save)}\r\n                                    onClick={() => handleSave(selectedUser)}\r\n                                    disabled={!selectedUser}\r\n                                >\r\n                                    {t(\"alert.confirm\")}\r\n                                </Button>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.cancel)}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    {t(\"alert.cancel\")}\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    \r\n                </Grid> \r\n                \r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px',\r\n        borderRadius: '10px',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '18px',\r\n        padding: '5px 10px',\r\n        height: 'fit-content'\r\n    },\r\n    closeBtn: {\r\n        fontSize: '20px',\r\n        height: '40px',\r\n        width: '40px'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        borderRadius: '25px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    instructions: {\r\n        width: 'auto',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '12px',\r\n        margin: '0px 10px'\r\n    },\r\n    menu: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(10px)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        marginTop: '55px',\r\n        marginRight: '7px',\r\n        maxHeight: '200px',\r\n        overflowY: 'auto',\r\n\r\n    },\r\n    menuitem: {\r\n        color: 'white'\r\n    },\r\n    textInput: {\r\n        margin: '20px 5px',\r\n        width: '300px',\r\n        '& input': {\r\n            color: 'white',\r\n            paddingLeft: '20px',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        }    \r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\UpsertSystem.js",["970","971","972","973"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemAdditionalDetails.js",["974","975"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskMinified.js",[],"C:\\projects\\leev\\leev-fe\\src\\api\\documentsApi.js",["976"],"import axios from 'axios';\r\nimport i18next from 'i18next';\r\nimport path from 'path';\r\nimport { getUnauthorizedMessage } from './genericApi';\r\n\r\nexport const getDocument = async (documentId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/documents/getDocument`,\r\n\t\t\t{ documentId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tmodule: 'documents',\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getDocuments = async (tenant, filters) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/documents/getDocuments`,\r\n\t\t\t{ filters },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tmodule: 'documents',\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const deleteDocument = async (tenant, documentId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/documents/deleteDocument`, {\r\n\t\t\ttenant,\r\n\t\t\tdocumentId,\r\n\t\t},\r\n        {\r\n            headers: {\r\n                module: 'documents',\r\n                requesttype: 'delete',\r\n            },\r\n        });\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getFileTypeName = (type) => {\r\n\tif (type === '.doc' || type === '.docx') {\r\n\t\treturn 'MS Word';\r\n\t} else if (type === '.xls' || type === '.xlsx') {\r\n\t\treturn 'MS Excel';\r\n\t} else if (type === '.ppt' || type === '.pptx') {\r\n\t\treturn 'MS PowerPoint';\r\n\t} else if (type === '.csv') {\r\n\t\treturn 'CSV File';\r\n\t} else if (type === 'pdf') {\r\n\t\treturn 'PDF File';\r\n\t}\r\n\treturn 'Text File';\r\n};\r\n\r\nexport const downloadDocument = async (url) => {\r\n\tconst filename = path.basename(url);\r\n\ttry {\r\n\t\tconst res = await axios({\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: `${process.env.REACT_APP_BACKEND_URL}/documents/download?url=${url}`,\r\n            responseType: 'blob',\r\n            headers: {\r\n                module: 'documents',\r\n                requesttype: 'download'\r\n            }\r\n        });\r\n        if (res.status === 200) {\r\n            const file = window.URL.createObjectURL(new Blob([res.data]));\r\n            const link = document.createElement('a');\r\n            link.href = file;\r\n            link.setAttribute('download', filename);\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            return;\r\n        };\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const uploadDocument = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (!f[1]) return;\r\n\t\tformData.append(f[0], f[1]);\r\n\t});\r\n\tlet config = {\r\n\t\theaders: {\r\n            'Content-Type': `multipart/form-data`,\r\n            module: 'documents',\r\n            requesttype: 'upload'\r\n\t\t},\r\n\t};\r\n\ttry {\r\n\t\tconst res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/documents/createDocument`, formData, config);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateDocumentDetails = async (details) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/documents/updateDocumentDetails`, {\r\n\t\t\tdetails\r\n\t\t},\r\n        {\r\n            headers: {\r\n                module: 'documents',\r\n                requesttype: 'update',\r\n            },\r\n        });\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n} \r\n\r\nexport const getDocumentFromURL = async (url) => {\r\n\ttry {\r\n\t\tconst res = axios.get(url);\r\n\t\tconsole.log(res)\r\n\t} catch(e) {\r\n\t\tconsole.log(e)\r\n\t}\r\n}","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultsControls.js",["977","978"],"import {\r\n\tButton,\r\n\tButtonGroup,\r\n\tSlide,\r\n\tGrid,\r\n\tmakeStyles,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport BlurOnRoundedIcon from '@material-ui/icons/BlurOnRounded';\r\nimport ViewListRoundedIcon from '@material-ui/icons/ViewListRounded';\r\nimport ViewWeekRoundedIcon from '@material-ui/icons/ViewWeekRounded';\r\nimport clsx from 'clsx';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { getAsset, getFullAddress } from '../../../api/assetsApi';\r\nimport { getFaultsStatusListSuggestions } from '../../../api/faultsApi';\r\nimport { removeQueryParam } from '../../../api/genericApi';\r\nimport {\r\n\tgetAssetsSuggestions,\r\n\tgetSystemsByAssetOptions,\r\n} from '../../../api/systemsApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\n\r\nexport const FaultsControls = ({ viewType, setViewType }) => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [reloadedValue, setReloadedValue] = useState(null);\r\n\tconst [collapsed, setCollapsed] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (query.asset) {\r\n\t\t\thandleReloaded(query.asset).then((data) => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetReloadedValue(data);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetReloadedValue({\r\n\t\t\t\tlabel: '',\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\thistory.push({\r\n\t\t\t\tpath: location.pathname,\r\n\t\t\t\tsearch: removeQueryParam(location.search, 'system'),\r\n\t\t\t});\r\n\t\t}\r\n\t}, [location.search]);\r\n\r\n\tconst handleReloaded = async (assetId) => {\r\n\t\tconst res = await getAsset(assetId, false);\r\n\t\tif (res) {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: getFullAddress(res),\r\n\t\t\t\tvalue: res._id,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleCollapse = () => {\r\n\t\tif (collapsed) {\r\n\t\t\tsetCollapsed(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetCollapsed(true);\r\n\t};\r\n\r\n\tconst handleViewType = (type) => event => {\r\n\t\tsetViewType(type);\r\n\t\tsetCollapsed(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{downSm && (\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName={classes.sortandfilter}\r\n\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t<FilterListIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tendIcon={\r\n\t\t\t\t\t\t\t\tcollapsed ? (\r\n\t\t\t\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<ExpandMoreRoundedIcon />\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={toggleCollapse}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{t(\r\n\t\t\t\t\t\t\t\t`faultsModule.${\r\n\t\t\t\t\t\t\t\t\tcollapsed ? 'hide' : 'show'\r\n\t\t\t\t\t\t\t\t}Filters`\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t {\r\n                (!downSm || collapsed) &&\r\n\t\t\t<Slide in={true} direction={'up'} timeout={downSm ? 500 : 0}>\r\n\t\t\t\t<Grid container justify=\"center\" className={classes.filtersContainer}>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t{reloadedValue && (\r\n\t\t\t\t\t\t\t<SearchBoxSelect\r\n\t\t\t\t\t\t\t\tsuggestionsFunc={getAssetsSuggestions}\r\n\t\t\t\t\t\t\t\tplaceholder={t('systemsModule.filterByAsset')}\r\n\t\t\t\t\t\t\t\tfilterField={'asset'}\r\n\t\t\t\t\t\t\t\treloadedLabel={reloadedValue.label}\r\n\t\t\t\t\t\t\t\treloadedValue={reloadedValue.value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{query.asset && (\r\n\t\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\t\toptionsFunc={() => getSystemsByAssetOptions(query.asset)}\r\n\t\t\t\t\t\t\t\tplaceholder={t('systemsModule.filterBySystemName')}\r\n\t\t\t\t\t\t\t\tfilterIcon={<BlurOnRoundedIcon className={classes.icon} />}\r\n\t\t\t\t\t\t\t\tfilterField={'system'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{viewType === 'list' && (\r\n\t\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\t\toptionsFunc={getFaultsStatusListSuggestions}\r\n\t\t\t\t\t\t\t\tplaceholder={t('faultsModule.filterByStatus')}\r\n\t\t\t\t\t\t\t\tfilterIcon={<DoubleArrowIcon className={classes.icon} />}\r\n\t\t\t\t\t\t\t\tfilterField={'status'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={createUserOptions}\r\n\t\t\t\t\t\t\tplaceholder={t('faultsModule.filterByFaultOwner')}\r\n\t\t\t\t\t\t\tfilterIcon={<PersonRoundedIcon className={classes.icon} />}\r\n\t\t\t\t\t\t\tfilterField={'owner'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ButtonGroup className={classes.typeGroup}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\tclasses.modeBtn,\r\n\t\t\t\t\t\t\t\t\tclasses.listBtn,\r\n\t\t\t\t\t\t\t\t\tviewType === 'list'\r\n\t\t\t\t\t\t\t\t\t\t? classes.modeBtnActive\r\n\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t\t<ViewListRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={handleViewType('list')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{t('faultsModule.listMode')}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\tclasses.modeBtn,\r\n\t\t\t\t\t\t\t\t\tclasses.blocksBtn,\r\n\t\t\t\t\t\t\t\t\tviewType === 'blocks'\r\n\t\t\t\t\t\t\t\t\t\t? classes.modeBtnActive\r\n\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t\t<ViewWeekRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={handleViewType('blocks')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{t('faultsModule.blocksMode')}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Slide>\r\n}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tfiltersContainer: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            position: 'absolute',\r\n            bottom: '0',\r\n            background: 'rgba(0,0,0,0.8)',\r\n            backdropFilter: 'blur(22px)',\r\n            zIndex: 3,\r\n            padding: '40px 0 155px',\r\n            borderRadius: '30px 30px 0 0',\r\n            boxShadow: '0px -1px 1px 0px rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n\tgridItem: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'flex-start',\r\n\t\tflexWrap: 'wrap'\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tmarginLeft: '4px',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '6px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tsortandfilter: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'black',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '5px 25px 5px 3px',\r\n        whiteSpace: 'nowrap',\r\n        margin: '10px 0 0',\r\n        position: 'absolute',\r\n        bottom: '100px',\r\n        zIndex: 4,\r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    },\r\n\ttypeGroup: {\r\n\t\tmargin: '5px',\r\n\t\theight: '45px',\r\n\t},\r\n\tmodeBtn: {\r\n\t\tpadding: '0 15px 0 5px',\r\n\t\tcolor: 'white',\r\n\t\twidth: 'auto',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tlistBtn: {\r\n\t\tborderRadius: '25px 0 0 25px',\r\n\t},\r\n\tblocksBtn: {\r\n\t\tborderRadius: '0px 25px 25px 0px',\r\n\t},\r\n\tmodeBtnActive: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\UpsertFault.js",["979","980","981","982"],"C:\\projects\\leev\\leev-fe\\src\\components\\user\\UserItem.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ItemLink.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\DocumentControls.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViewControls.js",["983"],"import { IconButton, makeStyles, Menu, MenuItem, ListItemIcon } from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport TransferWithinAStationRoundedIcon from '@material-ui/icons/TransferWithinAStationRounded';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { Can } from '../../reuseables/Can';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\n\r\nexport const FaultViewControls = ({\r\n\tfault,\r\n\teditFault,\r\n\tupdateOwner,\r\n\tchangeStatus,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst [data, setData] = useState(fault);\r\n\tconst [expanded, setExpanded] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n        setData(fault);\r\n\t}, [fault]);\r\n\r\n\tconst openInNewWindow = () => {\r\n\t\twindow.open(`${process.env.REACT_APP_FRONTEND_URL}/workspace/faults/${fault.faultId}`);\r\n\t};\r\n\r\n\tconst handleExpanded = (event) => {\r\n\t\tif (expanded) {\r\n\t\t\tsetExpanded(null);\r\n\t\t}\r\n\t\tsetExpanded(event.currentTarget);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<IconButton className={classes.expandIcon} onClick={handleExpanded}>\r\n\t\t\t\t<MoreVertIcon className={classes.icon} />\r\n\t\t\t</IconButton>\r\n\t\t\t<Menu\r\n\t\t\t\tonClick={() => setExpanded(null)}\r\n\t\t\t\tclassName={classes.container}\r\n\t\t\t\tanchorEl={expanded}\r\n\t\t\t\topen={Boolean(expanded)}\r\n\t\t\t\tonClose={() => setExpanded(null)}\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tpaper: classes.menu,\r\n\t\t\t\t}}\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t}}\r\n\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdirection: lang.code === 'he' ? 'rtl' : 'ltr',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={classes.menuHeader}\r\n\t\t\t\t>\r\n\t\t\t\t\t{t('tasksModule.controls.taskMenu')}\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tstyle={{ display: 'flex', justifyContent: 'flex-end' }}\r\n\t\t\t\t\t\tonClick={() => setExpanded(null)}\r\n\t\t\t\t\t\tclassName={classes.close}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CloseRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t<MenuItem\r\n\t\t\t\t\tstyle={{ direction: lang.code === 'he' ? 'rtl' : 'ltr' }}\r\n\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\tonClick={openInNewWindow}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t<OpenInNewIcon className={classes.icon} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t{t('general.openInNew')}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t\t<Can\r\n\t\t\t\t\tmodule=\"faults\"\r\n\t\t\t\t\taction=\"update\"\r\n\t\t\t\t\tuserList={[\r\n\t\t\t\t\t\t...data.relatedUsers.map((u) => u._id),\r\n\t\t\t\t\t\tdata.owner._id,\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdirection: lang.code === 'he' ? 'rtl' : 'ltr',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\tonClick={editFault}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<CreateIcon className={classes.icon} />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t{t('faultsModule.controls.editDetails')}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t</Can>\r\n\r\n\t\t\t\t<Can\r\n\t\t\t\t\tmodule=\"faults\"\r\n\t\t\t\t\taction=\"changeOwner\"\r\n\t\t\t\t\tuserList={[\r\n\t\t\t\t\t\t...data.relatedUsers.map((u) => u._id),\r\n\t\t\t\t\t\tdata.owner._id,\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdirection: lang.code === 'he' ? 'rtl' : 'ltr',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\tonClick={updateOwner}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<TransferWithinAStationRoundedIcon\r\n\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t{t('faultsModule.controls.changeOwner')}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t</Can>\r\n\t\t\t\t<Can\r\n\t\t\t\t\tmodule=\"faults\"\r\n\t\t\t\t\taction=\"changeStatus\"\r\n\t\t\t\t\tuserList={[\r\n\t\t\t\t\t\t...data.relatedUsers.map((u) => u._id),\r\n\t\t\t\t\t\tdata.owner._id,\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdirection: lang.code === 'he' ? 'rtl' : 'ltr',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\tonClick={changeStatus}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<DoubleArrowIcon className={classes.icon} />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t{t('faultsModule.controls.changeStatus')}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t</Can>\r\n\t\t\t</Menu>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\texpandIcon: {\r\n\t\tcolor: 'white',\r\n\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.5)',\r\n\t\t},\r\n\t},\r\n\ticonBtn: {\r\n\t\tcolor: 'white',\r\n\t\tmarginRight: '20px',\r\n\t\tborderRadius: '0 25px 25px 0',\r\n\t\t'&:hover': {\r\n\t\t\ttransform: 'scale(1.077)',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',\r\n\t},\r\n\tmenu: {\r\n\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\tcolor: 'white',\r\n\t\tboxShadow: 'rgba(0,0,0,0.4) 0 0 2px 1px',\r\n\t\tborderRadius: '10px',\r\n\t},\r\n\tmenuitem: {\r\n\t\tminWidth: '200px',\r\n\t},\r\n\tmenuHeader: {\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmarginBottom: '10px',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpadding: '5px 10px 5px 20px',\r\n\t\talignItems: 'center',\r\n\t\toutline: 'none',\r\n\t},\r\n\tclose: {\r\n\t\tpadding: '6px',\r\n\t\tmargin: 0,\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultLink.js",["984"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport const FaultLink = ({ faultId, size }) => {\r\n\r\n    return (\r\n        <Link\r\n            to={`/workspace/faults/${faultId}`}\r\n            style={{ textDecoration: 'none' }}\r\n        >\r\n           <span style={{\r\n               color: 'white',\r\n               fontSize: `${size}px`,\r\n               whiteSpace: 'nowrap'\r\n           }}>\r\n             {faultId}\r\n           </span>\r\n        </Link>\r\n    )\r\n}","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UserList.js",["985"],"import {\r\n\tIconButton,\r\n\tList,\r\n\tListItem,\r\n\tmakeStyles,\r\n\tTooltip,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getFullName } from '../../api/genericApi';\r\nimport { UserItem } from '../user/UserItem';\r\nimport { AlertDialog } from './AlertDialog';\r\nimport { Can } from './Can';\r\n\r\nexport const UserList = ({\r\n\tusers,\r\n\thandleRemove,\r\n\tremoveTooltip,\r\n\thandleAdd,\r\n\taddTooltip,\r\n\ttitle,\r\n\tplaceholder,\r\n    module,\r\n    owner\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst { t } = useTranslation();\r\n\tconst [userList, setUserList] = useState(users || []);\r\n\tconst [liHover, setLiHover] = useState(null);\r\n\tconst [alertDialog, setAlertDialog] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetUserList(users);\r\n\t}, [users]);\r\n\r\n\tuseEffect(() => {\r\n\t}, [alertDialog]);\r\n\r\n\tconst toggleHover = (index) => (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tsetLiHover(index);\r\n\t};\r\n\r\n\tconst removeUser = (user) => (event) => {\r\n\t\tsetAlertDialog({\r\n\t\t\thandleConfirm: async () => {\r\n\t\t\t\tconst res = await handleRemove(user._id);\r\n\t\t\t\tsetAlertDialog(null);\r\n\t\t\t},\r\n\t\t\thandleCancel: () => setAlertDialog(null),\r\n\t\t\ttext: `${t('general.removeUserConfirmation.part1')} ${getFullName(\r\n\t\t\t\tuser\r\n\t\t\t)} ${t('general.removeUserConfirmation.part2')}?`,\r\n\t\t\ttitle: `${t('general.removeUserFromFollowing')}`,\r\n\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={classes.linked}\r\n\t\t\tstyle={{ minWidth: `200px`, width: '100%' }}\r\n\t\t>\r\n\t\t\t<div className={classes.topRow}>\r\n\t\t\t\t<div className={classes.linkedHeader}>{title}</div>\r\n\t\t\t\t<Can module={module} action={'changeRelatedUsers'} userList={[...users.map(u => u._id), owner._id]} >\r\n\t\t\t\t\t<Tooltip title={addTooltip}>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tclassName={classes.addUser}\r\n\t\t\t\t\t\t\tonClick={handleAdd}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AddRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</Can>\r\n\t\t\t</div>\r\n\r\n\t\t\t<List className={classes.followingList}>\r\n\t\t\t\t{Boolean(userList.length) ? (\r\n\t\t\t\t\tuserList.map((user, i) => (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\tonMouseEnter={toggleHover(i)}\r\n\t\t\t\t\t\t\tonMouseLeave={() => setLiHover(null)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\tavatarSize={40}\r\n\t\t\t\t\t\t\t\tsize={11}\r\n\t\t\t\t\t\t\t\tshowTitle\r\n\t\t\t\t\t\t\t\tshowPhone\r\n\t\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\t/>\r\n                            <Can module={module} action={'changeRelatedUsers'} userList={[...users.map(u => u._id), owner._id]}>\r\n                                {(liHover === i || downSm) && (\r\n                                    <Tooltip title={removeTooltip}>\r\n                                        <IconButton\r\n                                            className={classes.removeUser}\r\n                                            onClick={removeUser(user)}\r\n                                        >\r\n                                            <ClearRounded\r\n                                                className={classes.icon}\r\n                                            />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                )}\r\n                            </Can>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<ListItem className={classes.placeholder}>\r\n\t\t\t\t\t\t{placeholder}\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t)}\r\n\t\t\t</List>\r\n\t\t\t{Boolean(alertDialog) && (\r\n\t\t\t\t<AlertDialog\r\n\t\t\t\t\tisOpen={Boolean(alertDialog)}\r\n\t\t\t\t\talertDialog={alertDialog}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tlinked: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'flex-start',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tmargin: '10px 0',\r\n\t\tborderRadius: '10px',\r\n\t\tpadding: '10px 0',\r\n\t\theight: '300px',\r\n\t},\r\n\ttopRow: {\r\n\t\tmargin: '0px auto',\r\n\t\twidth: '90%',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tlinkedHeader: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t\tpadding: '5px 5px 10px',\r\n\t},\r\n\tfollowingList: {\r\n\t\tpadding: '5px 0',\r\n\t\toverflowY: 'auto',\r\n\t},\r\n\tlistItem: {\r\n\t\twidth: '100%',\r\n\t\tborderRadius: '5px',\r\n\t\tpadding: '8px',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\t},\r\n\t},\r\n\tremoveUser: {\r\n\t\tcolor: 'white',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\t},\r\n\t},\r\n\taddUser: {\r\n\t\tcolor: 'white',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '5px',\r\n\t\tmargin: '0 0 10px 0',\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t},\r\n\tplaceholder: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tborderRadius: '25px',\r\n\t\tcolor: 'white',\r\n\t\tpadding: '10px 20px',\r\n\t\twidth: '90%',\r\n\t\tmargin: '10px auto',\r\n\t\tfontSize: '13px',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateStatus.js",["986","987","988"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Paper, FormControl, IconButton, useMediaQuery, Fade, Modal, Backdrop,Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport clsx from 'clsx'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { getStatusList } from '../../api/genericApi';\r\n\r\n\r\n\r\nexport const UpdateStatus = ({ handleClose, handleSave, isOpen, currentStatus, title, instructions, module }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ statusList, setStatusList ] = useState([]);\r\n    const [ selectedStatus, setSelectedStatus ] = useState('')\r\n    \r\n    useEffect(() => {\r\n        getStatusList(module)\r\n        .then(data => {\r\n            if (currentStatus) {\r\n                setSelectedStatus(currentStatus._id)\r\n            }\r\n            setStatusList(data.filter(s => s._id !== currentStatus._id ));\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = event => {\r\n        setSelectedStatus(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={isOpen}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xs={11} sm={7} md={5} lg={3} xl={3}>\r\n                        <Paper \r\n                            className={classes.paper} \r\n                            style={{ direction: lang.dir }}\r\n                            elevation={6}    \r\n                        >\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {title}\r\n                                </div>\r\n                                <IconButton className={classes.closeBtn} onClick={handleClose}>\r\n                                    <ClearRoundedIcon className={classes.icon}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div className={classes.instructions}>\r\n                                {instructions}\r\n                            </div>\r\n                            <FormControl variant='outlined' className={classes.textInput} >\r\n                                <Select\r\n                                    value={selectedStatus}\r\n                                    onChange={handleChange}\r\n                                    className={classes.menu}\r\n                                    MenuProps={{\r\n                                        classes: {\r\n                                            paper: classes.menupaper\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        statusList.map( (status, i) => {\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    className={classes.menuitem}\r\n                                                    value={status._id} \r\n                                                    key={i}\r\n                                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                                >\r\n                                                    {t(`${module}Module.statuses.${status.statusId}`)}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div className={classes.controls}>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.save)}\r\n                                    onClick={() => handleSave(selectedStatus)}\r\n                                    disabled={!selectedStatus}\r\n                                >\r\n                                    {t(\"alert.confirm\")}\r\n                                </Button>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.cancel)}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    {t(\"alert.cancel\")}\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    \r\n                </Grid> \r\n                \r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px',\r\n        borderRadius: '10px',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '18px',\r\n        padding: '5px 10px',\r\n        height: 'fit-content'\r\n    },\r\n    closeBtn: {\r\n        fontSize: '20px',\r\n        height: '40px',\r\n        width: '40px'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        borderRadius: '25px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    instructions: {\r\n        width: 'auto',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '12px',\r\n        margin: '0px 10px'\r\n    },\r\n    menu: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(10px)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        marginTop: '55px',\r\n        marginRight: '7px',\r\n        maxHeight: '200px',\r\n        overflowY: 'auto',\r\n        \r\n\r\n    },\r\n    menuitem: {\r\n        color: 'white'\r\n    },\r\n    textInput: {\r\n        margin: '20px 5px',\r\n        width: '300px',\r\n        '& input': {\r\n            color: 'white',\r\n            paddingLeft: '20px',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        }    \r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\StatusTag.js",["989","990"],"\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport CheckCircleOutlineRoundedIcon from '@material-ui/icons/CheckCircleOutlineRounded';\r\nimport HourglassEmptyRoundedIcon from '@material-ui/icons/HourglassEmptyRounded';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport clsx from 'clsx';\r\nimport { green, red, yellow } from '@material-ui/core/colors';\r\n\r\nexport const StatusTag = ({status, type, size}) => {\r\n\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n\r\n    return (\r\n        <div \r\n            className={clsx(classes.statusTag,classes[status.statusId])}\r\n            style={{ fontSize: size || '14px'}}    \r\n        >\r\n            {\r\n                status.statusId  === 'ready' ? \r\n                <PlayCircleOutlineIcon className={classes.icon}/> :\r\n                status.statusId  === 'inProgress' ? \r\n                <CachedIcon className={classes.icon} /> :\r\n                status.statusId  === 'pending' ?\r\n                <HourglassEmptyRoundedIcon className={classes.icon}className={classes.icon} /> : \r\n                status.statusId  === 'closed' ?\r\n                <CheckCircleOutlineRoundedIcon className={classes.icon} /> : null\r\n            }\r\n            <div className={classes.title}>\r\n                {t(`${type}sModule.statuses.${status.statusId}`)}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    statusTag: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'fit-content',\r\n        padding: '2px 5px',\r\n        borderRadius: '25px',\r\n        whiteSpace: 'nowrap'\r\n\r\n    },\r\n    title: {\r\n        padding: '7px 10px 7px 0px'\r\n    },\r\n    ready: {\r\n       \r\n        background: red[600],\r\n        color: 'white'\r\n    },\r\n    inProgress: {\r\n        background: yellow[500],\r\n        color: 'black',\r\n        \r\n    },\r\n    pending: {\r\n        background: 'rgba(255,255,255,0.4)',\r\n        color: 'black'\r\n    },\r\n    closed: {\r\n        background: green[800],\r\n        color: 'white'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        padding: '0 5px'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CommentSection.js",["991","992","993","994","995","996"],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\Carousel.js",["997","998","999","1000"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { makeStyles, Slide, Paper, IconButton, Backdrop, Modal } from '@material-ui/core'\r\nimport ChevronLeftRoundedIcon from '@material-ui/icons/ChevronLeftRounded';\r\nimport ChevronRightRoundedIcon from '@material-ui/icons/ChevronRightRounded';\r\nimport clsx from 'clsx';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport ZoomInRoundedIcon from '@material-ui/icons/ZoomInRounded';\r\nimport ZoomOutRoundedIcon from '@material-ui/icons/ZoomOutRounded';\r\nimport ZoomOutMapRoundedIcon from '@material-ui/icons/ZoomOutMapRounded';\r\n\r\nexport const Carousel = ({ images, isOpen, size }) => {\r\n    \r\n    const classes = useStyles();\r\n    const [ slideIn, setSlideIn ] = useState(isOpen);\r\n    const [ slideDirection, setSlideDirection ] = useState('left');\r\n    const [ index, setIndex ] = useState(0);\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ photoViewMode, setPhotoViewMode ] = useState(false);\r\n    const [ picSize, setPicSize ] = useState(size)\r\n\r\n    useEffect(() => {\r\n        if (photoViewMode) {\r\n            setPicSize(800)\r\n        }\r\n    }, [photoViewMode])\r\n\r\n    const handleClick = dir => event => {\r\n        setSlideDirection(dir);\r\n        setSlideIn(false);\r\n \r\n        setTimeout(() => {\r\n            setIndex((index - (dir === 'left' ? 1 : -1) + images.length) % images.length);\r\n            setSlideIn(true);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZoom = up => {\r\n        if (up) {\r\n            if (picSize === 1300) return;\r\n            setPicSize(picSize + 100)\r\n        } else {\r\n            if (picSize === 300) return;\r\n            setPicSize(picSize - 100)\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setPicSize(300);\r\n        setPhotoViewMode(false);\r\n    }\r\n\r\n    return (\r\n        <CarouselWrapper\r\n            isModal={photoViewMode}\r\n            wrapper={ children => \r\n                <Modal\r\n                    open={true}\r\n                    onClose={handleClose}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                        timeout: 500\r\n                    }}\r\n                    className={classes.modal}\r\n                >\r\n                    <div className={classes.content} >\r\n                        <CarouselControls \r\n                            handleZoom={handleZoom} \r\n                            picSize={picSize} \r\n                            handleClose={handleClose}\r\n                        />\r\n                        {children}\r\n                    </div>\r\n                    \r\n                </Modal>\r\n            }\r\n        >\r\n            <div \r\n                className={classes.container}\r\n                style={{ cursor: photoViewMode ? 'default' : 'pointer'}}\r\n            >\r\n                <IconButton\r\n                    className={clsx(classes.arrow, classes.arrowLeft)}\r\n                    onClick={handleClick('left')}\r\n                    style={{ left: lang.drection === 'rtl' ? '97%' : '3%' }}\r\n                >\r\n                    <ChevronLeftRoundedIcon className={classes.icon}/>\r\n                </IconButton>\r\n                <CarouselSlide image={images[index]} size={picSize} setPhotoViewMode={setPhotoViewMode}/>\r\n                <IconButton\r\n                    className={clsx(classes.arrow, classes.arrowRight)}\r\n                    onClick={handleClick('right')}\r\n                    style={{ right: lang.drection === 'rtl' ? '97%' : '3%' }}\r\n                >\r\n                    <ChevronRightRoundedIcon className={classes.icon}/>\r\n                </IconButton>\r\n            </div>\r\n        </CarouselWrapper>\r\n        \r\n    )\r\n}\r\n\r\nconst CarouselSlide = ({image, size, setPhotoViewMode}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper \r\n            className={classes.paper} \r\n            elevation={0} \r\n            style={{ height: `${size}px`}}\r\n            onClick={() => setPhotoViewMode(true)}\r\n        >\r\n            <img src={image} className={classes.image} />\r\n        </Paper>   \r\n    )\r\n}\r\n\r\nconst CarouselControls = ({handleZoom, picSize, handleClose}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.controls}>\r\n            <div className={classes.close}>\r\n                <IconButton\r\n                    className={classes.iconBtn}\r\n                    onClick={handleClose}\r\n                >\r\n                    <ClearRounded className={classes.icon} />\r\n                </IconButton>\r\n            </div>\r\n            \r\n            <div className={classes.zoomControl}>\r\n                <IconButton \r\n                    className={classes.iconBtn} \r\n                    onClick={() => handleZoom(true)} \r\n                    disabled={picSize === 1300}\r\n                >\r\n                    <ZoomInRoundedIcon className={classes.icon} />\r\n                </IconButton>\r\n                <IconButton \r\n                    className={classes.iconBtn} \r\n                    onClick={() => handleZoom(false)}\r\n                    disabled={picSize === 300}\r\n                >\r\n                    <ZoomOutRoundedIcon className={classes.icon} />\r\n                </IconButton>\r\n                <IconButton className={classes.iconBtn} >\r\n                    <ZoomOutMapRoundedIcon className={classes.icon} />\r\n                </IconButton>\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nconst CarouselWrapper = ({isModal, wrapper, children }) =>\r\n    isModal ? wrapper(children) : children\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        position: 'relative',\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        padding: '10px 5px',\r\n        borderRadius: '10px',\r\n        outline: 'none'\r\n    },\r\n    content: {\r\n        height: '100%', \r\n        width: '100%', \r\n        outline: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        padding: 0,\r\n        margin: 0,\r\n        width: '100%',\r\n        direction: 'ltr',\r\n        background: 'transparent',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        userSelect: 'none'\r\n    },\r\n    image: {\r\n        maxHeight: '90%',\r\n        maxWidth: '90%',\r\n        borderRadius: '5px',\r\n        objectFit: 'cover',\r\n        userSelect: 'none'\r\n    },\r\n    arrow: {\r\n        position: 'absolute',\r\n        background: 'rgba(0,0,0,0.6)',\r\n        color: 'white',\r\n        zIndex: 1,\r\n        padding: '5px',\r\n\r\n    },\r\n    arrowLeft: {\r\n        top: '50%',\r\n        transform: 'translateY(-50%)'\r\n    },\r\n    arrowRight: {\r\n        top: '50%',\r\n        transform: 'translateY(-50%)'\r\n    },\r\n    icon: {\r\n        fontSize: '32px',\r\n    },\r\n    iconBtn: {\r\n        background: 'rgba(255,255,255,0.6)',\r\n        color: 'black',\r\n        padding: '8px',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.8)',\r\n            color: 'white',\r\n        }\r\n\r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        position: 'absolute',\r\n        top: 0,\r\n        width: '90%',\r\n        padding: '2% 5%',\r\n        zIndex: 1\r\n    },\r\n    zoomControl: {\r\n        width: '170px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AddRelatedUser.js",["1001","1002","1003"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Paper, FormControl, IconButton, useMediaQuery, Fade, Modal, Backdrop,Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { getUserList } from '../../api/userApi';\r\nimport clsx from 'clsx'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\n\r\n\r\nexport const AddRelatedUser = ({ handleClose, handleSave, isOpen, followerList, title, instructions }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ selectedUser, setSelectedUser ] = useState('')\r\n    \r\n    useEffect(() => {\r\n        getUserList()\r\n        .then(data => {  \r\n            setUserList(data.filter(u => Boolean(!followerList.find(f => f._id === u._id))));\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = event => {\r\n        setSelectedUser(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={isOpen}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xs={11} sm={7} md={5} lg={3} xl={3}>\r\n                        <Paper \r\n                            className={classes.paper} \r\n                            style={{ direction: lang.dir }}\r\n                            elevation={6}    \r\n                        >\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {title}\r\n                                </div>\r\n                                <IconButton className={classes.closeBtn} onClick={handleClose}>\r\n                                    <ClearRoundedIcon className={classes.icon}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div className={classes.instructions}>\r\n                                {instructions}\r\n                            </div>\r\n                            <FormControl variant='outlined' className={classes.textInput} >\r\n                                <Select\r\n                                    value={selectedUser}\r\n                                    onChange={handleChange}\r\n                                    className={classes.menu}\r\n                                    MenuProps={{\r\n                                        classes: {\r\n                                            paper: classes.menupaper,\r\n                                           \r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        userList.map( (user, i) => {\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    className={classes.menuitem}\r\n                                                    value={user._id} \r\n                                                    key={i}\r\n                                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                                >\r\n                                                    {`${user.firstName} ${user.lastName}`}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div className={classes.controls}>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.save)}\r\n                                    onClick={handleSave(selectedUser)}\r\n                                    disabled={!selectedUser}\r\n                                >\r\n                                    {t(\"alert.confirm\")}\r\n                                </Button>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.cancel)}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    {t(\"alert.cancel\")}\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    \r\n                </Grid> \r\n                \r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px',\r\n        borderRadius: '10px',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '18px',\r\n        padding: '5px 10px',\r\n        height: 'fit-content'\r\n    },\r\n    closeBtn: {\r\n        fontSize: '20px',\r\n        height: '40px',\r\n        width: '40px'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        borderRadius: '25px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    instructions: {\r\n        width: 'auto',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '12px',\r\n        margin: '0px 10px'\r\n    },\r\n    menu: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(10px)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        maxHeight: '200px',\r\n        overflowY: 'auto',\r\n        marginTop: '60px',\r\n        marginRight: '7px',\r\n    },\r\n    menuitem: {\r\n        color: 'white'\r\n    },\r\n    textInput: {\r\n        margin: '20px 5px',\r\n        width: '300px',\r\n        '& input': {\r\n            color: 'white',\r\n            paddingLeft: '20px',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        }    \r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\api\\faultsApi.js",["1004"],"import axios from 'axios';\r\nimport i18next from 'i18next';\r\nimport { getFullAddress } from './assetsApi';\r\nimport { getUnauthorizedMessage } from './genericApi';\r\n\r\naxios.defaults.headers.common['token'] = localStorage.getItem('wb_token');\r\n\r\nexport const getFaultsStatusList = async () => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/statuses/getStatusList`,\r\n\t\t\t{ module: 'faults' },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport const getFaultsStatusListSuggestions = async () => {\r\n\tconst data = await getFaultsStatusList();\r\n\tlet statusList = [];\r\n\tif (data.length) {\r\n\t\tdata.forEach((st) => {\r\n\t\t\tstatusList.push({\r\n\t\t\t\tlabel: i18next.t(`faultsModule.statuses.${st.statusId}`),\r\n\t\t\t\tvalue: st._id,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\treturn statusList;\r\n};\r\n\r\nexport const getMinifiedFaults = async (filters) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/getFaults`,\r\n\t\t\t{ filters },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getFaults = async (filters) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/getFaults`,\r\n\t\t\t{ filters },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getFault = async (faultId, plain) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/getFault`,\r\n\t\t\t{ faultId, plain: plain },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn null;\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const createNewFault = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (f[0] === 'images') {\r\n\t\t\tfor (let i = 0; i < details.images.length; i++) {\r\n\t\t\t\tformData.append('images', details.images[i]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tformData.append(f[0], f[1]);\r\n\t\t}\r\n\t});\r\n\r\n\tlet config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': `multipart/form-data`,\r\n\t\t\ttoken: localStorage.getItem('wb_token'),\r\n\t\t\tmodule: 'faults',\r\n\t\t\trequesttype: 'create',\r\n\t\t},\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/createFault`,\r\n\t\t\tformData,\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateFault = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (f[0] === 'images') {\r\n\t\t\tfor (let i = 0; i < details.images.length; i++) {\r\n\t\t\t\tformData.append('images', details.images[i]);\r\n\t\t\t}\r\n\t\t} else if (f[0] === 'uploadedImages') {\r\n\t\t\tformData.append('uploadedImages', JSON.stringify(f[1]));\r\n\t\t} else {\r\n\t\t\tformData.append(f[0], f[1]);\r\n\t\t}\r\n\t});\r\n\tlet config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': `multipart/form-data`,\r\n\t\t\ttoken: localStorage.getItem('wb_token'),\r\n\t\t\tmodule: 'faults',\r\n\t\t\trequesttype: 'update',\r\n\t\t},\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/updateFaultData`,\r\n\t\t\tformData,\r\n\t\t\tconfig\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateFaultOwner = async (faultId, userId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/updateFaultOwner`,\r\n\t\t\t{ faultId, userId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeOwner',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn null;\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const removeRelatedUser = async (faultId, userId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/removeRelatedUser`,\r\n\t\t\t{ faultId, userId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeRelatedUsers',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const addRelatedUser = async (faultId, userId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/addRelatedUser`,\r\n\t\t\t{ faultId, userId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeRelatedUsers',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const saveFaultComment = async (faultId, userId, text, image) => {\r\n\ttry {\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append('faultId', faultId)\r\n\t\tformData.append('userId', userId)\r\n\t\tformData.append('text', text)\r\n\t\tformData.append('image', image || null)\r\n\t\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/addFaultComment`,\r\n\t\t\tformData,\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': `multipart/form-data`,\r\n\t\t\t\t\trequesttype: 'comment',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateFaultComment = async (faultId, commentId, text) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/updateFaultComment`,\r\n\t\t\t{ faultId, commentId, text },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'comment',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateFaultStatus = async (faultId, status) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/changeFaultStatus`,\r\n\t\t\t{ faultId, status },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeStatus',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getFaultOptionsByAssetOrSystem = async (asset, system) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/getFaultOptions`,\r\n\t\t\t{ asset, system },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tlet options = [];\r\n\t\tif (!res) return [];\r\n\t\tres.data.forEach((f) => {\r\n\t\t\toptions.push({ label: f.faultId, value: f._id });\r\n\t\t});\r\n\t\treturn options;\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport const createExternalFault = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (f[0] === 'images' && details.images) {\r\n\t\t\tfor (let i = 0; i < details.images.length; i++) {\r\n\t\t\t\tformData.append('images', details.images[i]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tformData.append(f[0], f[1]);\r\n\t\t}\r\n\t});\r\n\r\n\tlet config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': `multipart/form-data`\r\n\t\t},\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/createExternalFault`,\r\n\t\t\tformData,\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n}\r\n\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterByMultiSelect.js",["1005","1006"],"import { Button, IconButton, makeStyles, Menu, MenuItem } from '@material-ui/core';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam, removeQueryParam } from '../../api/genericApi';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { useQuery } from './customHooks/useQuery';\r\n\r\nexport const FilterByMultiSelect = ({ filterField, placeholder, filterIcon, optionsFunc }) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ menuOptions, setMenuOptions] = useState([]);\r\n    const [ orgMenuOptions, setOrgMenuOptions ] = useState([])\r\n    const [ anchorEl, setAnchorEl ] = useState(null);\r\n    const [ values, setValues ] = useState( query[filterField] || [])\r\n\r\n    useEffect(() => {\r\n        optionsFunc()\r\n        .then(data => {\r\n            setOrgMenuOptions(data);\r\n            if (query[filterField]) {\r\n                data = data.filter(op => query[filterField].indexOf(op.value) === -1 )\r\n            }\r\n            setMenuOptions(data);\r\n            \r\n        }) \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (values.length) {\r\n            \r\n            history.push({\r\n                path: location.pathname,\r\n                search: addQueryParam(location.search, [{ name: filterField, value: values }])\r\n            });\r\n            return;\r\n        }\r\n        if (query[filterField] && !values.length) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: removeQueryParam(location.search, filterField)\r\n            });\r\n        }\r\n        \r\n    }, [values])\r\n\r\n    useEffect(() => {\r\n        if(!menuOptions.length) {\r\n            setAnchorEl(null)\r\n        }\r\n    }, [menuOptions])\r\n\r\n    const createTag = (val, key) => {\r\n        let data = orgMenuOptions.find(op => val === op.value);\r\n        if (!data) return;\r\n        return (\r\n            <div className={classes.tag} key={key}>\r\n                <label className={classes.tagLabel}>\r\n                    { data.label }\r\n                </label>\r\n                <IconButton \r\n                    className={classes.removeBtn}\r\n                    onClick={removeChoice(data.value)}\r\n                >\r\n                    <CloseRoundedIcon className={classes.tagRemove}/>\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const removeChoice = value => event => {\r\n        event.stopPropagation();\r\n        getMenuOptions(value)\r\n        .then(data => {\r\n            setValues(values => values.filter(val => val !== value ));\r\n            if (!menuOptions.length) {\r\n                setAnchorEl(null)\r\n            }\r\n            setMenuOptions(data)\r\n        });  \r\n    }\r\n\r\n    const handleClick = val => event => {\r\n        setValues([...values, val]);\r\n        setMenuOptions(menuOptions => menuOptions.filter( op => op.value !== val));\r\n    }\r\n\r\n    const getMenuOptions = (value) => {\r\n        return new Promise((resolve, reject) => {\r\n            let mop = menuOptions;\r\n            mop.push(orgMenuOptions.find( op => op.value === value));\r\n            resolve(mop);\r\n        }) \r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                Boolean(orgMenuOptions.length) &&\r\n                <div className={classes.select}>\r\n                        <Button \r\n                            className={classes.filterBy}\r\n                            onClick={event => setAnchorEl(event.currentTarget)}\r\n                            startIcon={filterIcon}\r\n                        >\r\n                            { \r\n                                values.length \r\n                                ?   \r\n                                    <div className={classes.selectedContainer}>\r\n                                        {\r\n                                             values.map((val, i ) => createTag(val, i)) \r\n                                        }\r\n                                    </div>\r\n                               \r\n                                :   <label className={classes.searchLabel} >\r\n                                        {placeholder}\r\n                                    </label>\r\n                            }\r\n                        </Button>\r\n                        <Menu\r\n                            anchorEl={anchorEl}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={() => setAnchorEl(null)}\r\n                            classes={{\r\n                                paper : classes.menu\r\n                            }}\r\n                            keepMounted\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                        >\r\n                            {\r\n                                menuOptions.map((v,i) => {\r\n                                    return (\r\n                                        <MenuItem\r\n                                            key={i}\r\n                                            onClick={handleClick(v.value)}\r\n                                            className={classes.menuitem}\r\n                                            style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                        >\r\n                                            {v.label}\r\n                                        </MenuItem>\r\n                                    )\r\n                                    \r\n                                })\r\n                            }\r\n                        </Menu>\r\n               </div>\r\n            }          \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    select: {\r\n        margin: '5px',\r\n        height: 'auto',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    filterBy: {\r\n        textTransform: 'none',\r\n        color: 'white',\r\n        padding: '0 5px',\r\n        minHeight: '45px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '25px',\r\n        \r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        }\r\n    },\r\n    selectedContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        whiteSpace: 'nowrap',\r\n        flexWrap: 'wrap',\r\n        width: 'fit-content',\r\n        maxWidth: '400px'\r\n    },\r\n    menu: {\r\n        marginTop: '55px',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(10px)',\r\n        color: 'white',\r\n        height: '200px'\r\n    },\r\n    menuitem: {\r\n        minWidth: '200px'\r\n    },\r\n    container: {\r\n        height: '45px',\r\n        border: '1px solid rgba(0,0,0,0.25)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            \r\n        }\r\n    },\r\n    focused: {\r\n        boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        background: 'rgba(0,0,0,0.1)',\r\n        backdropFilter: 'blur(40px)'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        \r\n    },\r\n    searchInput: {\r\n        height: '34px',\r\n        width: '98.5%',\r\n        margin: '3px 0.75%',\r\n        borderRadius: '5px 25px 25px 5px',\r\n        color: 'white',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '& fieldset': {\r\n            border: '0'\r\n        } \r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 5px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    tag: {\r\n        padding: '5px 10px',\r\n        borderRadius: '50px',\r\n        boxShadow: 'rgba(0,0,0,0.25) 0px 0px 3px 1px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        margin: '3px'\r\n    },\r\n    tagLabel: {\r\n        padding: '0 5px'\r\n    },\r\n    removeBtn: {\r\n        padding: '4px',\r\n        color: 'white'\r\n    },\r\n    tagRemove: {\r\n        fontSize: '16px'\r\n    },\r\n    searchLabel: {\r\n        padding: '5px 20px 5px 10px', \r\n        cursor: 'pointer',\r\n        color: 'rgba(255,255,255,0.5)',\r\n        fontSize: '15px' \r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\tasksApi.js",["1007"],"import axios from 'axios';\r\nimport { getServerError, getUnauthorizedMessage, specialStringPurge } from './genericApi';\r\nimport i18next from 'i18next';\r\n\r\naxios.defaults.headers.common['token'] = localStorage.getItem('wb_token');\r\n\r\nexport const getTask = async (taskId, plain) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/getTask`,\r\n\t\t\t{ taskId, plain },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const createNewTask = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (f[0] === 'images') {\r\n\t\t\tfor (let i = 0; i < details.images.length; i++) {\r\n\t\t\t\tformData.append('images', details.images[i]);\r\n\t\t\t}\r\n\t\t} else if (f[1] instanceof Array) {\r\n\t\t\tformData.append(f[0], JSON.stringify(f[1]));\r\n\t\t} else {\r\n\t\t\tif (!f[1]) {\r\n\t\t\t\tformData.append(f[0], '');\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tformData.append(f[0], f[1]);\r\n\t\t}\r\n\t});\r\n\tlet config = {\r\n\t\theaders: {\r\n            'Content-Type': `multipart/form-data`,\r\n            requesttype: 'create',\r\n            module: 'tasks'\r\n\t\t},\r\n\t};\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/createTask`,\r\n\t\t\tformData,\r\n\t\t\tconfig\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getTasks = async (filters) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/getTasks`,\r\n\t\t\t{ filters },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateTaskOwner = async (taskId, owner) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/updateTaskOwner`,\r\n\t\t\t{ taskId, owner },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeOwner',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const completeTaskStep = async (taskId, order, isCompleted ) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/completeTaskStep`,\r\n\t\t\t{ taskId, order, isCompleted },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'completeSteps',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn getServerError();\r\n\t}\r\n};\r\n\r\nexport const updateTaskStatus = async (taskId, status) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/updateTaskStatus`,\r\n\t\t\t{ taskId, status },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeStatus',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const saveTaskComment = async (taskId, userId, text, image) => {\r\n\ttry {\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append('taskId', taskId)\r\n\t\tformData.append('userId', userId)\r\n\t\tformData.append('text', text)\r\n\t\tformData.append('image', image || null)\r\n\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/addTaskComment`,\r\n\t\t\tformData,\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': `multipart/form-data`,\r\n\t\t\t\t\trequesttype: 'comment',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateTaskComment = async (taskId, commentId, text) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/updateTaskComment`,\r\n\t\t\t{ taskId, commentId, text },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'comment',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const addTaskRelatedUser = async (taskId, userId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/addRelatedUser`,\r\n\t\t\t{ taskId, userId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeRelatedUsers',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const removeTaskRelatedUser = async (taskId, userId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/removeRelatedUser`,\r\n\t\t\t{ taskId, userId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeRelatedUsers',\r\n\t\t\t\t\tmodule: 'tasks'\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateTask = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (f[0] === 'images') {\r\n\t\t\tfor (let i = 0; i < details.images.length; i++) {\r\n\t\t\t\tformData.append('images', details.images[i]);\r\n\t\t\t}\r\n\t\t} else if (f[0] === 'uploadedImages') {\r\n\t\t\tformData.append('uploadedImages', JSON.stringify(f[1]));\r\n\t\t} else if (f[1] instanceof Array) {\r\n\t\t\tformData.append(f[0], JSON.stringify(f[1]));\r\n\t\t} else {\r\n\t\t\tif (f[1] === null) {\r\n\t\t\t\tformData.append(f[0], '');\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tformData.append(f[0], f[1]);\r\n\t\t}\r\n\t});\r\n\tlet config = {\r\n\t\theaders: {\r\n            'Content-Type': `multipart/form-data`,\r\n            requesttype: 'update',\r\n            module: 'tasks'\r\n\t\t},\r\n\t};\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/updateTask`,\r\n\t\t\tformData,\r\n\t\t\tconfig\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getTasksStatusList = async () => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/statuses/getStatusList`,\r\n\t\t\t{ module: 'tasks' },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'tasks'\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getTasksStatusListSuggestions = async () => {\r\n\tconst data = await getTasksStatusList();\r\n\tlet statusList = [];\r\n\tif (data.length) {\r\n\t\tdata.forEach((st) => {\r\n\t\t\tstatusList.push({\r\n\t\t\t\tlabel: i18next.t(`tasksModule.statuses.${st.statusId}`),\r\n\t\t\t\tvalue: st._id,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\treturn statusList;\r\n};\r\n\r\nexport const updateTaskSchedule = async (taskId, schedule) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/updateTaskSchedule`,\r\n\t\t\t{ taskId, schedule },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'update',\r\n\t\t\t\t\tmodule: 'tasks'\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getTaskOptionsByAssetOrSystem = async (asset, system) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/getTaskOptions`,\r\n\t\t\t{ asset, system },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n                    requesttype: 'read',\r\n\t\t\t\t\tmodule: 'tasks'\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tlet options = [];\r\n\t\tif (!res) return [];\r\n\t\tres.data.forEach((t) => {\r\n\t\t\toptions.push({ label: t.taskId, value: t._id });\r\n\t\t});\r\n\t\treturn options;\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlockView.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultListView.js",["1008","1009","1010"],"import { Grid, List, ListItem, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { FaultsContext } from '../../../context/FaultsContext';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { FaultMinified } from './FaultMinified';\r\nimport { FaultView } from './FaultView';\r\n\r\nexport const FaultListView = ({ faults }) => {\r\n    \r\n    const location = useLocation();\r\n    const classes = useStyles();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    const { setFaults } = useContext(FaultsContext);\r\n    const [ faultView, setFaultView ] = useState(faults.length ? faults[0] : null);\r\n    const [ faultsData, setFaultsData ] = useState([]);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setFaultsData(faults);\r\n        setIsLoading(false);\r\n    }, [faults])\r\n   \r\n    const updateFaultState = (faultId, field, data) => {\r\n        setIsLoading(true);\r\n        let faultIndex = faultsData.findIndex(f => f._id === faultId);\r\n        if (!faultIndex && faultIndex !== 0) return;\r\n        let lf = [...faultsData];\r\n        lf[faultIndex][field] = data;\r\n        setFaults(lf);\r\n        setIsLoading(false);\r\n    }\r\n \r\n    return (\r\n        <Grid container className={classes.main} justify='flex-start'>\r\n            <Grid item xs={12} md={5} lg={3} xl={3} className={classes.faultList}>\r\n                <List className={classes.list}>\r\n                {   \r\n                    isLoading ? \r\n                    null\r\n                    :\r\n                    faultsData.map((f,i) => \r\n                        <ListItem \r\n                            button \r\n                            className={classes.item}\r\n                            onClick={() => setFaultView(f)}\r\n                        >  \r\n                            <FaultMinified \r\n                                data={f}\r\n                                key={i}\r\n                            />\r\n                        </ListItem>\r\n                        \r\n                    )\r\n                }\r\n                </List>\r\n            </Grid>\r\n            {\r\n                !downSm &&\r\n                Boolean(faultView) &&\r\n                <Grid item md={7} lg={9} xl={9} className={classes.faultPresenter}>\r\n                    <FaultView \r\n                        fid={faultView.faultId}\r\n                        updateFaultState={updateFaultState}\r\n                        faultData={faultView}\r\n                    />\r\n                </Grid>\r\n            }\r\n            \r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    main: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        height: '70vh',\r\n        [theme.breakpoints.down('sm')]: {\r\n            border: '0',\r\n            height: 'auto'\r\n        }\r\n    },\r\n    faultList: {\r\n        borderRight: '1px solid rgba(255,255,255,0.2)',\r\n        height: '100%',\r\n        overflowY: 'scroll',\r\n        '&::-webkit-scrollbar': {\r\n            display: 'none'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            border: '0',\r\n            overflowY: 'unset',\r\n        }\r\n    },\r\n    list: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        padding: 0,\r\n        overflowY: 'unset'\r\n    },\r\n    item: {\r\n        height:'200px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '10px 0'\r\n        }\r\n    },\r\n    faultPresenter: {\r\n        background: 'rgba(0,0,0,0.1)',\r\n        height: '100%'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\usePermissions.js",["1011","1012"],"import React, { useContext, useState } from 'react';\r\nimport { getMinPermLevel } from '../../../api/permissionsApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\n\r\nexport const usePermissions = ({ module, action, userList }) => {\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { permissions } = auth.user.role;\r\n\tconst { isAdmin } = auth.user;\r\n\r\n\tif (isAdmin) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tconst minPermLevel = getMinPermLevel(action);\r\n    let permLevel = permissions.find((p) => p.module === module);\r\n\tif (permLevel) {\r\n\t\tpermLevel = permLevel.action\r\n\t}\r\n \r\n\tif (permLevel < minPermLevel) {\r\n\t\treturn false;\r\n\t} else if (permLevel === 1) {\r\n       \r\n\t\tif (userList) {\r\n\t\t\tif (userList.includes(auth.user._id)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n        }\r\n        return false;\r\n\t}\r\n\treturn true;\r\n};\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\permissionsApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\TimeActive.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultMinified.js",["1013","1014"],"import { Grid, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getFullAddress } from \"../../../api/assetsApi\";\r\nimport { StatusTag } from \"../../reuseables/StatusTag\";\r\nimport { UserItem } from \"../../user/UserItem\";\r\nimport { FaultLink } from \"./FaultLink\";\r\n\r\nconst LinkWrapper = ({ withLink, faultId, children}) => {\r\n\tif (withLink) {\r\n\t\treturn (\r\n\t\t\t<Link\r\n\t\t\tto={`/workspace/faults/${faultId}`}\r\n\t\t\tstyle={{ textDecoration: \"none\" }}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</Link>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{children}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\n\r\nexport const FaultMinified = ({ data, withLink }) => {\r\n\tconst classes = useStyles();\r\n\tconst [fault, setFault] = useState(data);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetFault(data);\r\n\t}, [data]);\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t\t<LinkWrapper withLink={withLink} faultId={fault.faultId} >\r\n\t\t\t\t<Grid container className={classes.container} alignItems=\"flex-start\">\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tclassName={classes.topRow}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<div className={classes.asset}>\r\n\t\t\t\t\t\t\t{getFullAddress(fault.asset, true)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid xs={12} item className={classes.title}>\r\n\t\t\t\t\t{fault.title}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tclassName={classes.bottomRow}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid item xs={5} className={classes.userData}>\r\n\t\t\t\t\t\t<UserItem size={13} avatarSize={40} user={fault.owner} />\r\n\t\t\t\t\t\t<FaultLink faultId={fault.faultId} size={14} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={7} className={classes.status}>\r\n\t\t\t\t\t\t<StatusTag status={fault.status} type={\"fault\"} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t</LinkWrapper>\r\n\t\t\t\r\n\t\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\tposition: \"relative\",\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"15px 5px\",\r\n\t\tdisplay: \"-webkit-box\",\r\n\t\tWebkitLineClamp: \"2\",\r\n\t\tWebkitBoxOrient: \"vertical\",\r\n\t\toverflow: \"hidden\",\r\n\t\ttextOverflow: \"ellipsis\",\r\n\t\theight: \"60px\",\r\n\t},\r\n\ttopRow: {\r\n\t\tpadding: \"5px\",\r\n\t\tmaxHeight: \"60px\",\r\n\t},\r\n\tuserData: {\r\n\t\tpadding: \"5px 0px\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t},\r\n\tbottomRow: {\r\n\t\theight: \"50px\",\r\n\t},\r\n\tasset: {\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tpadding: \"5px 15px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tboxShadow: \"rgba(0,0,0,0.3) 1px 1px 5px 2px\",\r\n\t\twidth: \"fit-content\",\r\n\t\ttextAlign: \"center\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t},\r\n\tfaultLink: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t\tmargin: \"3px 0\",\r\n\t},\r\n\tstatus: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n\tlink: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemRelatedUsers.js",["1015","1016"],"import React, { useState, useContext } from 'react';\r\nimport { Grid, makeStyles, Collapse, Tooltip, IconButton, useMediaQuery, Fade } from '@material-ui/core';\r\nimport { UserItem } from '../../user/UserItem';\r\nimport { getFullName } from '../../../api/genericApi';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { AlertDialog } from '../../reuseables/AlertDialog';\r\nimport { addUser, removeSystemUser } from '../../../api/systemsApi';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport { AddRelatedUser } from './AddRelatedUser';\r\nimport { Can } from '../../reuseables/Can';\r\nimport { SnackbarContext } from '../../../context/SnackbarContext';\r\n\r\nexport const SystemRelatedUsers = ({ userList, data, setData, systemId, isOpen }) => {\r\n\tconst classes = useStyles();\r\n    const downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n    const { setSnackbar } = useContext(SnackbarContext);\r\n\tconst [relatedUsers, setRelatedUsers] = useState(userList || []);\r\n\tconst [showControls, setShowControls] = useState(null);\r\n\tconst [showAddRelatedUser, setShowAddRelatedUser] = useState(false);\r\n\tconst [alertDialog, setAlertDialog] = useState(null);\r\n\tconst { t, i18n } = useTranslation();\r\n\r\n\tconst confirmRemove = (relatedUser) => (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tlet toRemove = relatedUsers.find((user) => user._id === relatedUser._id);\r\n\t\tsetAlertDialog({\r\n\t\t\ttext: `${t('systemsModule.userRemoveConfirmText')} ${getFullName(toRemove)}?`,\r\n\t\t\ttitle: t('systemsModule.userRemoveConfirmTitle'),\r\n\t\t\thandleConfirm: async () => {\r\n\t\t\t\tconst res = await removeSystemUser(systemId, relatedUser._id);\r\n\t\t\t\tif (res.status === 403) {\r\n                    setSnackbar(res)\r\n                } else if (res) {\r\n\t\t\t\t\tsetData(res);\r\n\t\t\t\t\tsetAlertDialog(null);\r\n\t\t\t\t\tsetRelatedUsers([]);\r\n\t\t\t\t\tsetRelatedUsers(res.relatedUsers);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thandleCancel: () => setAlertDialog(null),\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleAddRelatedUser = () => {\r\n\t\tif (showAddRelatedUser) {\r\n\t\t\tsetShowAddRelatedUser(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetShowAddRelatedUser(true);\r\n\t};\r\n\r\n\tconst handleAddLinekdUser = async (userId) => {\r\n\t\tconst res = await addUser(systemId, userId);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res)\r\n\t\t} else if (res) {\r\n\t\t\tsetData(res);\r\n\t\t\tsetRelatedUsers(res.relatedUsers);\r\n\t\t\tsetShowAddRelatedUser(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Collapse in={isOpen}>\r\n\t\t\t<div className={classes.linkedusers}>\r\n\t\t\t\t<Grid container justify=\"flex-start\" className={classes.container} alignItems=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.titleContainer}>\r\n\t\t\t\t\t\t<div className={classes.title}>{t('systemsModule.assignedUsers')}</div>\r\n\t\t\t\t\t\t<Can\r\n\t\t\t\t\t\t\tmodule=\"systems\"\r\n                            action=\"changeRelatedUsers\"\r\n\t\t\t\t\t\t\tuserList={[...data.relatedUsers.map((u) => u._id), data.owner]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<IconButton className={classes.addBtn} onClick={handleAddRelatedUser}>\r\n\t\t\t\t\t\t\t\t<AddRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t\t{showAddRelatedUser && (\r\n\t\t\t\t\t\t\t\t<AddRelatedUser\r\n\t\t\t\t\t\t\t\t\tisOpen={showAddRelatedUser}\r\n\t\t\t\t\t\t\t\t\thandleClose={handleAddRelatedUser}\r\n\t\t\t\t\t\t\t\t\trelatedUsers={relatedUsers}\r\n\t\t\t\t\t\t\t\t\thandleSave={handleAddLinekdUser}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{relatedUsers.length ? (\r\n\t\t\t\t\t\trelatedUsers.map((relatedUser, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={7} md={6} lg={3} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userCont}\r\n\t\t\t\t\t\t\t\t\t\tonMouseEnter={() => setShowControls(i)}\r\n\t\t\t\t\t\t\t\t\t\tonMouseLeave={() => setShowControls(null)}\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\t\t\t\t\tuser={relatedUser}\r\n\t\t\t\t\t\t\t\t\t\t\tshowTitle\r\n\t\t\t\t\t\t\t\t\t\t\tshowPhone\r\n\t\t\t\t\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\t\t\t\t\tavatarSize={'50px'}\r\n\t\t\t\t\t\t\t\t\t\t\tsize={12}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<Can\r\n\t\t\t\t\t\t\t\t\t\t\tmodule=\"systems\"\r\n\t\t\t\t\t\t\t\t\t\t\taction=\"changeRelatedUsers\"\r\n\t\t\t\t\t\t\t\t\t\t\tuserList={[...data.relatedUsers.map((u) => u._id), data.owner]}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Fade in={showControls === i || downSm}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.removeUser')}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.removeuser}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={confirmRemove(relatedUser)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ClearRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className={classes.noUsers}>{t('systemsModule.noUsersAssigned')}</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{Boolean(alertDialog) && <AlertDialog alertDialog={alertDialog} open={Boolean(alertDialog)} />}\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t</Collapse>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tlinkedusers: {\r\n\t\twidth: 'auto',\r\n\t\tmargin: '10px',\r\n\t\tborderRadius: '25px',\r\n\t\tbackground: 'rgba(0,0,0,0.1)',\r\n\t\tboxShadow: '0px 0px 5px 2px rgba(0,0,0,0.2)',\r\n\t},\r\n\tcontainer: {\r\n\t\twidth: 'auto',\r\n\t\tpadding: '5px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tborderRadius: '5px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tgridItem: {\r\n\t\tborderRadius: '10px',\r\n\t\tpadding: '5px 10px',\r\n\t\tmargin: '5px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.5)',\r\n\t\t\tboxShadow: '-0px 0px 5px 2px rgba(0,0,0,0.2)',\r\n\t\t},\r\n\t},\r\n\ttitleContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmargin: '0 10px',\r\n\t\tpadding: '5px 5px 10px',\r\n\t},\r\n\taddBtn: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '2px',\r\n\t\tborderRadius: '50px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.2)',\r\n\t\t},\r\n\t},\r\n\tcell: {\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tuserCont: {\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpadding: '5px 10px',\r\n\t\tposition: 'relative',\r\n\t},\r\n\tremoveuser: {\r\n\t\tpadding: '4px',\r\n\t\tmargin: 'auto 4px',\r\n\t\theight: '50%',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.1)',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',\r\n\t\tpadding: '8px',\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t},\r\n\tnoUsers: {\r\n\t\tmargin: '10px',\r\n\t\tpadding: '0px 0 15px',\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '14px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tpadding: '10px 20px',\r\n\t\tborderRadius: '25px',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemControls.js",["1017","1018","1019","1020","1021"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tPaper,\r\n\tuseMediaQuery,\r\n\tTooltip,\r\n\tCollapse,\r\n\tGrid,\r\n} from '@material-ui/core';\r\nimport { UserItem } from '../../user/UserItem';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport TransferWithinAStationRoundedIcon from '@material-ui/icons/TransferWithinAStationRounded';\r\nimport { useTranslation } from 'react-i18next';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport AssignmentRoundedIcon from '@material-ui/icons/AssignmentRounded';\r\nimport DescriptionRoundedIcon from '@material-ui/icons/DescriptionRounded';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { Can } from '../../reuseables/Can';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { addQueryParam } from '../../../api/genericApi';\r\n\r\nexport const SystemControls = ({\r\n\teditName,\r\n\texpanded,\r\n\tshowLinkedUsersToggle,\r\n\ttoggleEditOwner,\r\n\ttoggleAdditionalDetails,\r\n\tsystem\r\n}) => {\r\n\t\r\n\tconst classes = useStyles();\r\n\tconst location = useLocation();\r\n\tconst history = useHistory();\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\r\n\tconst handleReferralClick = type => event => {\r\n\t\thistory.push(type + addQueryParam(location.search, [{ name: 'asset', value: system.asset._id }, { name: 'system', value: [system._id]}]));\r\n    }\r\n\r\n\treturn (\r\n\t\t<Collapse in={(!downSm && !editName) || expanded}>\r\n\t\t\t<Grid container className={classes.actionsContainer}>\r\n\t\t\t\t<Grid item lg={9}>\r\n\t\t\t\t\t<Grid container className={classes.actions}>\r\n\t\t\t\r\n\t\t\t\t\t\t<Grid item lg={2} className={classes.iconItem}>\r\n\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.moreDetails')}>\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\t\t\t\tonClick={toggleAdditionalDetails}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<MoreHorizIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Grid item lg={2} className={classes.iconItem}>\r\n\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.showTasks')}>\r\n\t\t\t\t\t\t\t\t<IconButton className={classes.iconBtn} onClick={handleReferralClick('tasks')}>\r\n\t\t\t\t\t\t\t\t\t<AssignmentRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item lg={2} className={classes.iconItem}>\r\n\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.showFaults')} onClick={handleReferralClick('faults')}>\r\n\t\t\t\t\t\t\t\t<IconButton className={classes.iconBtn}>\r\n\t\t\t\t\t\t\t\t\t<WarningRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item lg={2} className={classes.iconItem}>\r\n\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.showDocuments')}onClick={handleReferralClick('documents')}>\r\n\t\t\t\t\t\t\t\t<IconButton className={classes.iconBtn}>\r\n\t\t\t\t\t\t\t\t\t<DescriptionRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Can module='systems' action='changeOwner' >\r\n\t\t\t\t\t\t<Grid item lg={2} className={classes.iconItem}> \r\n\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.changeOwner')}>\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\t\t\t\tonClick={toggleEditOwner}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<TransferWithinAStationRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t<Grid item lg={2} className={classes.iconItem}>\r\n\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.showUsers')}>\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\t\t\t\tonClick={showLinkedUsersToggle}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<PersonRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item lg={3} className={classes.ownerInfo}>\r\n\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\tuser={system.owner}\r\n\t\t\t\t\t\tavatarSize={40}\r\n\t\t\t\t\t\tshowPhone\r\n\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\tsize={12}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Collapse>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tactionsContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: '5px',\r\n\t\tmargin: 'auto 0',\r\n\t\tjustifyContent: 'space-between',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tflexDirection: 'column-reverse',\r\n\t\t\talignItems: 'center',\r\n\t\t\tmargin: 'auto',\r\n\t\t},\r\n\t},\r\n\tactions: {\r\n        margin: 'auto 0',\r\n        display: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'flex-end',\r\n        height: '100%',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\t\tborderRadius: '50px',\r\n\t\t\tmargin: '10px 0',\r\n\t\t\tpadding: '5px 0',\r\n\t\t},\r\n\t},\r\n\ticonBtn: {\r\n\t\tpadding: '0px',\r\n\t\theight: 'fit-content',\r\n\t\twidth: 'fit-content',\r\n\t\tmargin: '0 20px',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tmargin: '5px 10px',\r\n\t\t},\r\n\t},\r\n\tuserIcon: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '8px',\r\n\t\tborderRadius: '50px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.2)',\r\n\t\t},\r\n\t},\r\n\townerInfo: {\r\n\t\theight: 'auto',\r\n\t\tpadding: '5px 20px 5px 10px',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tmarginTop: '5px',\r\n\t\t\tborderRadius: '50px',\r\n\t\t\twidth: '170px',\r\n\t\t\tpadding: '5px 20px 5px 5px',\r\n\t\t},\r\n    },\r\n    iconItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlock.js",["1022","1023"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { FaultMinified } from './FaultMinified';\r\nimport { Link } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\n\r\nexport const FaultBlock = ({ data }) => {\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div \r\n            className={clsx(classes.faultContainer)}\r\n        >\r\n            <FaultMinified data={data} withLink={true} />\r\n        </div>                               \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({ \r\n   faultContainer: {\r\n    padding: '10px',\r\n    border: '1px solid rgba(255,255,255,0.2)',\r\n    borderRadius: '7px',\r\n    background: 'rgba(0,0,0,0.4)',\r\n    margin : '5px 0'\r\n   }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemName.js",["1024","1025"],"import React, { useState } from 'react';\r\nimport { makeStyles, useMediaQuery, Button, Fade, OutlinedInput, FormControl, InputLabel, ClickAwayListener, IconButton, } from '@material-ui/core';\r\nimport SaveRoundedIcon from '@material-ui/icons/SaveRounded';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { updateSystemName } from '../../../api/systemsApi'\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\r\nimport { green, red } from '@material-ui/core/colors';\r\n\r\nexport const SystemName = ({ systemId, editName, setEditName, setSystemName, title }) => {\r\n\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const [ textValue, setTextValue ] = useState(title);\r\n    const [ editNameHover, setEditNameHover ] = useState(false);\r\n\r\n    const handleChange = event => {\r\n        setTextValue(event.target.value);\r\n    };\r\n\r\n    const handleSave = async () => {\r\n         await updateSystemName(systemId, textValue);\r\n         setSystemName(textValue);\r\n         setEditName(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                editName ?\r\n                <ClickAwayListener onClickAway={() => setEditName(false)}>\r\n                    <div className={classes.editContainer}>\r\n                        <FormControl variant='outlined' className={classes.textInput}>\r\n                            <InputLabel htmlFor='olip' shrink>{t(\"systemsModule.systemName\")}</InputLabel>\r\n                            <OutlinedInput\r\n                                autoFocus\r\n                                notched\r\n                                id='olip' \r\n                                value={ textValue }\r\n                                onChange={handleChange}\r\n                                labelWidth={75}\r\n                                className={classes.input} \r\n                            />\r\n                        </FormControl>\r\n                        <IconButton \r\n                            className={classes.save}\r\n                            onClick={handleSave}\r\n                        >\r\n                            <SaveRoundedIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                        <IconButton \r\n                            className={classes.cancel}\r\n                            onClick={() => setEditName(false)}\r\n                        >\r\n                            <ClearRoundedIcon className={classes.icon} />\r\n                        </IconButton>\r\n                       </div> \r\n                </ClickAwayListener>\r\n                \r\n                : \r\n                <Button \r\n                    className={classes.systemName}\r\n                    onMouseEnter={() => setEditNameHover(true)}\r\n                    onMouseLeave={() => setEditNameHover(false)}\r\n                    onClick={() => { setEditNameHover(false); setEditName(true)}}\r\n                >\r\n                    { title }\r\n                    {\r\n                        editNameHover &&\r\n                        <Fade in={true} timeout={700}>\r\n                            <EditRoundedIcon style={{ \r\n                                margin: '0 10px 0 0',\r\n                                fontSize: '16px'\r\n                            }}/>\r\n                        </Fade>\r\n                        \r\n                    }\r\n                </Button>\r\n            }\r\n        </React.Fragment>                    \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    editContainer: {\r\n        height: 'auto',\r\n        margin: 'auto 0',\r\n        width: '100%',\r\n        dispaly: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    systemName: {\r\n        width: 'auto',\r\n        color: 'white',\r\n        margin: 'auto 20px',\r\n        fontSize: '16px',\r\n        whiteSpace: 'wrap',\r\n        borderRadius: '50px',\r\n        padding: '5px 20px',\r\n        textAlign: 'left'\r\n    },\r\n    textInput: {\r\n        width: '65%',\r\n        margin: '15px 5px 15px 10px',\r\n        '& label.Mui-focused': {\r\n            color: 'white',\r\n        },\r\n        '& label': {\r\n            color: 'white'\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: 'white',\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'rgba(255,255,255,0.7)',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'rgba(255,255,255,0.7)',\r\n              },\r\n        },\r\n        \r\n    },\r\n    input: {\r\n        color: 'white',\r\n        height: '45px',\r\n        borderRadius: '25px',\r\n        padding: '10px',\r\n        '&:focus': {\r\n            border: '2px solid white'\r\n        }\r\n\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        fontSize: '20px',\r\n        padding: '0px',\r\n        '&hover': {\r\n\r\n        }\r\n    },\r\n    save: {\r\n        background: green[800],\r\n        padding: '8px',\r\n        margin: '18px 5px',\r\n        \r\n    },\r\n    cancel: {\r\n        background: red[800],\r\n        padding: '8px',\r\n        margin: '18px 5px',\r\n       \r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBox.js",["1026","1027","1028"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam, removeQueryParam, queryParamsToObject, specialStringPurge} from '../../api/genericApi';\r\nimport { OutlinedInput, FormControl, makeStyles, Grid, ClickAwayListener } from '@material-ui/core'\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport { useQuery } from './customHooks/useQuery';\r\nimport clsx from 'clsx';\r\n\r\nexport const SearchBox = ({ placeholder, filterField, returnValue }) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const [ onFocus, setOnFocus ] = useState(false);\r\n    const [ searchText, setSearchText ] = useState(specialStringPurge(query[filterField]) || '');\r\n    \r\n    useEffect(() => {\r\n        if (Boolean(searchText) && searchText === specialStringPurge(query[filterField])) return;\r\n        const timeOutId = setTimeout(() => handleSearch(searchText), 700);\r\n        return () => clearTimeout(timeOutId);\r\n    }, [searchText])\r\n\r\n    const handleChange = event => {\r\n        setSearchText(event.target.value)\r\n    }\r\n\r\n    const handleSearch = searchText => {\r\n        if (returnValue) {\r\n            returnValue(searchText);\r\n            return;\r\n       }\r\n        if (searchText) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: addQueryParam(location.search, [{ name: filterField, value: searchText}])\r\n            });\r\n            return; \r\n        }\r\n        history.push({\r\n            path: location.pathname,\r\n            search: removeQueryParam(location.search, filterField)\r\n        });\r\n        \r\n    }\r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={() => setOnFocus(false)}>\r\n            <div className={clsx(classes.container , onFocus && classes.focused)} xs={11} sm={9} md={8} lg={6}>\r\n                    <SearchRoundedIcon className={classes.icon}/>\r\n                    <FormControl variant='outlined' className={classes.form}>\r\n                        <OutlinedInput\r\n                            value={ searchText || '' }\r\n                            onChange={handleChange}\r\n                            placeholder={placeholder}\r\n                            className={clsx(classes.searchInput)}\r\n                            onFocus={() => setOnFocus(true)}\r\n                        />\r\n                    </FormControl>\r\n            </div>\r\n        </ClickAwayListener>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        margin: '5px',\r\n        height: '45px',\r\n        maxWidth: '450px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        transition: 'box-shadow 0.2s ease-in',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            transition: 'box-shadow 0.2s ease-in'\r\n        }\r\n\r\n    },\r\n    focused: {\r\n        boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        background: 'rgba(0,0,0,0.1)',\r\n        backdropFilter: 'blur(40px)'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        \r\n    },\r\n    searchInput: {\r\n        height: '34px',\r\n        width: '98.5%',\r\n        margin: '3px 0.75%',\r\n        borderRadius: '5px 25px 25px 5px',\r\n        color: 'white',\r\n        '& input': {\r\n            padding: '12.5px 20px 12.5px 5px',\r\n        },\r\n        '& fieldset': {\r\n            border: '0'\r\n        } \r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 5px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        \r\n    }\r\n}))\r\n\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SortBy.js",["1029","1030"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { makeStyles, ButtonGroup, Button, Menu, MenuItem } from '@material-ui/core'\r\nimport SortRoundedIcon from '@material-ui/icons/SortRounded';\r\nimport ArrowDropUpOutlinedIcon from '@material-ui/icons/ArrowDropUpOutlined';\r\nimport ArrowDropDownOutlinedIcon from '@material-ui/icons/ArrowDropDownOutlined';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam } from '../../api/genericApi';\r\nimport { useQuery } from './customHooks/useQuery';\r\nimport { useTranslation } from 'react-i18next'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\n\r\nexport const SortBy = ({menuOptions, handleSortChange}) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const { t, i18n } = useTranslation();\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ values, setValues ] = useState({\r\n        sortBy: query.sortBy || '',\r\n        sortOrder: query.sortOrder || 'asc' \r\n    })\r\n    const [ anchorEl, setAnchorEl ] = useState(null);\r\n \r\n    useEffect(() => {\r\n        if (!values.sortBy) return;\r\n        history.push({\r\n            path: location.pathname,\r\n            search: addQueryParam(location.search, [{ name: 'sortBy', value: values.sortBy}, {name: 'sortOrder', value: values.sortOrder}])\r\n        })\r\n    }, [values])\r\n\r\n    const handleClick = menuOption => event => {\r\n        setValues({\r\n            ...values, \r\n            sortBy: menuOption\r\n        })\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleChange = () => {\r\n        if (values.sortBy) {\r\n            setValues({\r\n                ...values, \r\n                sortOrder: values.sortOrder === 'asc' ? 'desc' : 'asc'\r\n            })\r\n        }\r\n    }\r\n    \r\n    const getOptionText = (option) => {\r\n        const result = menuOptions.find( mo => option === mo.field);\r\n        if (result) {\r\n            return result.text\r\n        }\r\n        return t(\"sort.sortBy\")\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup \r\n                className={classes.sort}\r\n            >\r\n\r\n                <Button \r\n                    className={classes.sortBy}\r\n                    onClick={event => setAnchorEl(event.currentTarget)}\r\n                    startIcon={<SortRoundedIcon className={classes.icon}/>}\r\n                >\r\n                    {values.sortBy ? getOptionText(values.sortBy) : `${t(\"sort.sortBy\")}`}\r\n                </Button>\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={() => setAnchorEl(null)}\r\n                    classes={{\r\n                        paper : classes.menu\r\n                    }}\r\n                    keepMounted\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                >\r\n                    {\r\n                        menuOptions.map((v,i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    key={i}\r\n                                    onClick={handleClick(v.field)}\r\n                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                >\r\n                                    {v.text}\r\n                                </MenuItem>\r\n                            )\r\n                            \r\n                        })\r\n                    }\r\n                </Menu>\r\n                <Button\r\n                    endIcon={ values.sortOrder === 'asc' ? <ArrowDropUpOutlinedIcon /> : <ArrowDropDownOutlinedIcon />}\r\n                    onClick={handleChange}\r\n                    className={classes.sortOrder}\r\n                >\r\n                    { `${ values.sortOrder === 'asc' ? `${t(\"sort.asc\")}` : `${t(\"sort.desc\")}`}`}\r\n                </Button> \r\n            </ButtonGroup>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    sort: {\r\n        margin: '5px',\r\n        height: '45px',\r\n        \r\n    },\r\n    sortBy: {\r\n        borderRadius: '25px 0 0 25px',\r\n        padding: '0 15px 0 3px',\r\n        color: 'white',\r\n        width: 'auto',\r\n        whiteSpace: 'nowrap',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    sortOrder: {\r\n        borderRadius: '0px 25px 25px 0px',\r\n        padding: '0 10px',\r\n        color: 'white',\r\n        width: 'auto',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    menu: {\r\n        marginTop: '55px',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(10px)',\r\n        color: 'white'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 6px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        \r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetControls.js",["1031"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\AddRelatedUser.js",["1032","1033","1034"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Paper, FormControl, IconButton, useMediaQuery, Fade, Modal, Backdrop,Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { getUserList } from '../../../api/userApi';\r\nimport clsx from 'clsx'\r\n\r\n\r\n\r\nexport const AddRelatedUser = ({ handleClose, handleSave, isOpen, relatedUsers }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ selectedUser, setSelectedUser ] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        getUserList()\r\n        .then(data => {\r\n            let ul = relatedUsers.map(l => l._id);\r\n            setUserList(data.filter(u => ul.indexOf(u._id) === -1 ));\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = event => {\r\n        setSelectedUser(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={isOpen}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xl={3}>\r\n                        <Paper \r\n                            className={classes.paper} \r\n                            style={{ direction: lang.dir }}\r\n                            elevation={6}    \r\n                        >\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {t(\"systemsModule.addRelatedUserTitle\")}\r\n                                </div>\r\n                                <IconButton className={classes.closeBtn} onClick={handleClose}>\r\n                                    <ClearRoundedIcon className={classes.icon}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div className={classes.instructions}>\r\n                                {t(\"systemsModule.chooseUserToAdd\")}\r\n                            </div>\r\n                            <FormControl variant='outlined' className={classes.textInput} >\r\n                                <Select\r\n                                    value={selectedUser}\r\n                                    onChange={handleChange}\r\n                                    className={classes.menu}\r\n                                    MenuProps={{\r\n                                        classes: {\r\n                                            paper: classes.menupaper,\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        userList.map( (user, i) => {\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    className={classes.menuitem}\r\n                                                    value={user._id} \r\n                                                    key={i}\r\n                                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                                >\r\n                                                    {`${user.firstName} ${user.lastName}`}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div className={classes.controls}>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.save)}\r\n                                    onClick={() => handleSave(selectedUser)}\r\n                                    disabled={!selectedUser}\r\n                                >\r\n                                    {t(\"alert.confirm\")}\r\n                                </Button>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.cancel)}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    {t(\"alert.cancel\")}\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    \r\n                </Grid> \r\n                \r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px',\r\n        borderRadius: '10px',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '18px',\r\n        padding: '5px 10px',\r\n        height: 'fit-content'\r\n    },\r\n    closeBtn: {\r\n        fontSize: '20px',\r\n        height: '40px',\r\n        width: '40px'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        borderRadius: '25px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    instructions: {\r\n        width: 'auto',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '12px',\r\n        margin: '0px 10px'\r\n    },\r\n    menu: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(10px)',\r\n        maxHeight: '200px',\r\n        overflowY: 'auto',\r\n    },\r\n    menuitem: {\r\n        color: 'white'\r\n    },\r\n    textInput: {\r\n        margin: '20px 5px',\r\n        width: '300px',\r\n        '& input': {\r\n            color: 'white',\r\n            paddingLeft: '20px',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        }    \r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Notification.js",["1035","1036","1037","1038","1039","1040","1041","1042","1043","1044"],"import {\r\n\tmakeStyles,\r\n    useMediaQuery,\r\n    IconButton,\r\n    Button,\r\n    Avatar\r\n} from '@material-ui/core';\r\nimport AddLocationOutlinedIcon from '@material-ui/icons/AddLocationOutlined';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport CheckCircleOutlineRoundedIcon from '@material-ui/icons/CheckCircleOutlineRounded';\r\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport { getDatediffString, getFullName, updateStateField } from '../../../api/genericApi';\r\nimport { generateNotificationBody, generateNotificationHeader } from '../../../api/notificationsApi';\r\nimport { useHistory } from 'react-router';\r\nimport clsx from 'clsx';\r\n\r\nexport const Notification = ({ data, updateNotificationReadStatus }) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\tconst { t, i18n } = useTranslation();\r\n    const [ notification, setNotification ] = useState(data);\r\n     \r\n    useEffect(() => {\r\n        setNotification(data);\r\n    }, [data])\r\n    \r\n    const GenerateText = () => {\r\n        return (\r\n            <div className={classes.textContainer}>\r\n                <div className={classes.generateNotificationHeader}>\r\n                    {generateNotificationHeader(notification)}\r\n                </div>\r\n                <div className={classes.generateNotificationBody}>\r\n                    {generateNotificationBody(notification)}\r\n                </div>\r\n                <div className={classes.timePassed}>\r\n                    {getDatediffString(notification.createdAt)}\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    const handleClick = async () => {\r\n        await updateNotificationReadStatus(notification._id, true);\r\n        history.push(`/workspace/${notification.actionOn.objectType}/${notification.actionOn.externalId}`)\r\n    }\r\n\r\n    const handleNotificationStatus = event => {\r\n        event.stopPropagation();\r\n        updateNotificationReadStatus(notification._id, !notification.read)\r\n    }\r\n\r\n\treturn (\r\n        <Button \r\n            className={classes.container}\r\n            onClick={handleClick}\r\n        >\r\n            <div className={classes.sideIconContainer}>\r\n                {          \r\n                    <Avatar src={notification.actionBy ? notification.actionBy.avatar : null } alt={'ab'} className={classes.avatar} /> \r\n                }\r\n            </div>\r\n            <div className={clsx(classes.contentContainer, notification.read && classes.read)}>\r\n                <GenerateText />\r\n            </div>\r\n            <div className={classes.readContainer}>\r\n                {\r\n                    notification.read ? \r\n                    null : \r\n                    <FiberManualRecordIcon className={classes.icon} />\r\n                }\r\n            </div>\r\n            <Button \r\n                className={classes.markAsRead}\r\n                onClick={handleNotificationStatus}\r\n            >\r\n                {notification.read ? t(\"notificationsModule.markAsUnread\"): t(\"notificationsModule.markAsRead\")}\r\n            </Button>\r\n        </Button>\r\n\t);\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        height: '110px',\r\n        padding: '0',\r\n        textAlign: 'left',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.6)'\r\n        }\r\n    },\r\n    sideIconContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n        width: '20%'\r\n    },\r\n    contentContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n        width: '70%',\r\n        color: 'white'\r\n    },\r\n    textContainer: {\r\n        fontSize: '14px',\r\n        padding: '10px',\r\n        wordBreak: 'nobreak',\r\n        width: '100%',\r\n        \r\n    },\r\n    readContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n        width: '10%'\r\n    },\r\n    avatar: {\r\n        width: '50px',\r\n        height: '50px'\r\n    },\r\n    icon: {\r\n        color: 'rgba(255,255,255,0.8)',\r\n        fontSize: '13px'\r\n    },\r\n    generateNotificationHeader: {\r\n        fontSize: '14px',\r\n        color: 'rgba(255,255,255,0.7)',\r\n        padding: '0',\r\n        height: '25px'\r\n    },\r\n    generateNotificationBody: {\r\n        padding: '3px',\r\n        lineHeight: '20px'\r\n    },\r\n    timePassed:  {\r\n        fontSize: '12px',\r\n        color: 'rgba(255,255,255,0.6)'\r\n    },\r\n    markAsRead: {\r\n        position: 'absolute',\r\n        top: '7px',\r\n        right: '5px',\r\n        fontSize: '12px',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        padding: 0,\r\n        borderRadius: '50px',\r\n        border: '1px solid transparent',\r\n        padding: '2px 5px',\r\n        '&:hover': {\r\n            color: 'white',\r\n           border: '1px solid rgba(255,255,255,0.6)',\r\n        }\r\n    },\r\n    read: {\r\n        opacity: '0.4'\r\n    }\r\n  \r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UpsertUser.js",["1045","1046","1047","1048","1049","1050"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\UpsertTask.js",["1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskSteps.js",["1062","1063","1064","1065"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, Grid, Collapse, TextField, FormControlLabel, Checkbox, IconButton, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\n\r\n\r\nexport const TaskSteps = ({ data,  isUsingSteps, handleChange, isSequential, toggleIsSequential, addStep, removeStep }) => {\r\n\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const [ isSeq, setIsSeq ] = useState(isSequential);\r\n    const [ steps, setSteps ] = useState(data || [{ order: 1, description: '', isCompleted: false }]);\r\n\r\n    useEffect(() => {\r\n        setSteps(data)\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        setIsSeq(isSequential);\r\n    }, [isSequential])\r\n\r\n    return (\r\n        <Collapse in={isUsingSteps} >\r\n            <Grid container>\r\n                {/* <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox \r\n                                checked={isSeq} \r\n                                onChange={toggleIsSequential}\r\n                                classes={{ root: classes.checkbox, checked: classes.checked}}\r\n                            />\r\n                        }\r\n                        className={classes.isSequential} \r\n                        label={t(\"tasksModule.upsert.isSequential\")}\r\n                    />\r\n                </Grid> */}\r\n                {\r\n                    steps.map((step, i) => \r\n                    <Grid container className={classes.textContainer}>\r\n                        <Grid item xs={10}>\r\n                            <TextField\r\n                                variant={\"outlined\"}\r\n                                label={`${t(`tasksModule.upsert.step`)} ${step.order}`}\r\n                                value={ step.description }\r\n                                onChange={handleChange(i)}\r\n                                className={classes.textField}\r\n                                size={'medium'}\r\n                                multiline={true}\r\n                                helperText={ `${60 - step.description.length} ${t(\"tasksModule.upsert.titleLimit\")}` }\r\n                                inputProps={{\r\n                                    maxLength: 60\r\n                                }}\r\n                                FormHelperTextProps={{\r\n                                    style: { color: 'rgba(255,255,255,0.6)' }\r\n                                }}\r\n                                \r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <IconButton\r\n                                className={classes.iconBtn}\r\n                                onClick={removeStep(step.order)}\r\n                            >\r\n                                <DeleteOutlineRoundedIcon className={classes.icon} />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                    ) \r\n                }\r\n                <Grid item xs={12}>\r\n                    <Button \r\n                        className={classes.addBtn}\r\n                        startIcon={ <AddIcon className={classes.addIcon} />}\r\n                        onClick={addStep}\r\n                    >\r\n                        {t(\"tasksModule.upsert.addStep\")}\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Collapse>\r\n\r\n    )\r\n} \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textContainer: {\r\n        padding: '5px',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    textField: {\r\n        width: '100%',\r\n        '& fieldset': {\r\n            borderRadius: '5px',\r\n        },  \r\n    },\r\n    isSequential: {\r\n        color: 'white',\r\n        padding: '0px 15px 10px'\r\n    },\r\n    checkbox: {\r\n        color: 'rgba(255,255,255,0.2)',\r\n        '&$checked': {\r\n          color: 'rgba(255,255,255,0.8)',\r\n        },\r\n    },\r\n    checked: {},\r\n    addBtn: {\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '16px',\r\n        border: '1px solid rgba(255,255,255,0.6)' ,\r\n        borderRadius: '50px',\r\n        padding: '5px 30px 5px 15px',\r\n        margin: '5px',\r\n        whiteSpace: 'nowrap',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.8)',\r\n            color: 'rgba(0,0,0,0.8)',\r\n\r\n        }   \r\n    },\r\n    iconBtn: {\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '16px',\r\n        border: '1px solid rgba(255,255,255,0.6)' ,\r\n        borderRadius: '50px',\r\n        padding: '10px',\r\n        margin: '0 10px 20px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.8)',\r\n            color: 'rgba(0,0,0,0.8)',\r\n\r\n        }   \r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskView.js",["1066"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TasksList.js",["1067","1068"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskViewControls.js",["1069","1070","1071"],"import {\r\n\tMenuItem,\r\n\tmakeStyles,\r\n\tIconButton,\r\n\tListItemIcon,\r\n\tMenu,\r\n\tFade,\r\n} from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport TransferWithinAStationRoundedIcon from '@material-ui/icons/TransferWithinAStationRounded';\r\nimport AccessAlarmRoundedIcon from '@material-ui/icons/AccessAlarmRounded';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport clsx from 'clsx';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport { Can } from '../../reuseables/Can';\r\n\r\nexport const TaskViewControls = ({\r\n\ttask,\r\n\teditTask,\r\n\tupdateOwner,\r\n\tchangeStatus,\r\n\thandleScheduler,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [expanded, setExpanded] = useState(null);\r\n\tconst [data, setData] = useState(task);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetData(task);\r\n\t}, [task]);\r\n\r\n\tconst openInNewWindow = () => {\r\n\t\twindow.open(`${process.env.REACT_APP_FRONTEND_URL}/workspace/tasks/${task.taskId}`);\r\n\t};\r\n\r\n\tconst handleExpanded = (event) => {\r\n\t\tif (expanded) {\r\n\t\t\tsetExpanded(null);\r\n\t\t}\r\n\t\tsetExpanded(event.currentTarget);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<IconButton className={classes.expandIcon} onClick={handleExpanded}>\r\n\t\t\t\t<MoreVertIcon className={classes.icon} />\r\n\t\t\t</IconButton>\r\n\t\t\t<Menu\r\n\t\t\t\tonClick={() => setExpanded(null)}\r\n\t\t\t\tclassName={classes.container}\r\n\t\t\t\tanchorEl={expanded}\r\n\t\t\t\topen={Boolean(expanded)}\r\n\t\t\t\tonClose={() => setExpanded(null)}\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tpaper: classes.menu,\r\n\t\t\t\t}}\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t}}\r\n\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdirection: lang.code === 'he' ? 'rtl' : 'ltr',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={classes.menuHeader}\r\n\t\t\t\t>\r\n\t\t\t\t\t{t('tasksModule.controls.taskMenu')}\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tstyle={{ display: 'flex', justifyContent: 'flex-end' }}\r\n\t\t\t\t\t\tonClick={() => setExpanded(null)}\r\n\t\t\t\t\t\tclassName={classes.close}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CloseRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t<MenuItem\r\n\t\t\t\t\tstyle={{ direction: lang.code === 'he' ? 'rtl' : 'ltr' }}\r\n\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\tonClick={openInNewWindow}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t<OpenInNewIcon className={classes.icon} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t{t('general.openInNew')}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t\t<Can\r\n\t\t\t\t\tmodule=\"tasks\"\r\n\t\t\t\t\taction=\"update\"\r\n\t\t\t\t\tuserList={[\r\n\t\t\t\t\t\t...data.relatedUsers.map((u) => u._id),\r\n\t\t\t\t\t\tdata.owner._id,\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdirection: lang.code === 'he' ? 'rtl' : 'ltr',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\tonClick={editTask}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<CreateIcon className={classes.icon} />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t{t('tasksModule.controls.editDetails')}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t</Can>\r\n\r\n\t\t\t\t<Can\r\n\t\t\t\t\tmodule=\"tasks\"\r\n\t\t\t\t\taction=\"changeOwner\"\r\n\t\t\t\t\tuserList={[\r\n\t\t\t\t\t\t...data.relatedUsers.map((u) => u._id),\r\n\t\t\t\t\t\tdata.owner._id,\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdirection: lang.code === 'he' ? 'rtl' : 'ltr',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\tonClick={updateOwner}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<TransferWithinAStationRoundedIcon\r\n\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t{t('tasksModule.controls.changeOwner')}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t</Can>\r\n\r\n\t\t\t\t<Can\r\n\t\t\t\t\tmodule=\"tasks\"\r\n\t\t\t\t\taction=\"changeStatus\"\r\n\t\t\t\t\tuserList={[\r\n\t\t\t\t\t\t...data.relatedUsers.map((u) => u._id),\r\n\t\t\t\t\t\tdata.owner._id,\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tshouldRender={!task.isRepeatable}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdirection: lang.code === 'he' ? 'rtl' : 'ltr',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\tonClick={changeStatus}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<DoubleArrowIcon className={classes.icon} />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t{t('tasksModule.controls.changeStatus')}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t</Can>\r\n\t\t\t\t<Can\r\n\t\t\t\t\tmodule=\"tasks\"\r\n\t\t\t\t\taction=\"changeSchedule\"\r\n\t\t\t\t\tuserList={[\r\n\t\t\t\t\t\t...data.relatedUsers.map((u) => u._id),\r\n\t\t\t\t\t\tdata.owner._id,\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tshouldRender={data.isRepeatable}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdirection: lang.code === 'he' ? 'rtl' : 'ltr',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\tonClick={handleScheduler}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<AccessAlarmRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t{t('tasksModule.controls.schedule')}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t</Can>\r\n\t\t\t</Menu>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\texpandIcon: {\r\n\t\tcolor: 'white',\r\n\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.5)',\r\n\t\t},\r\n\t},\r\n\ticonBtn: {\r\n\t\tcolor: 'white',\r\n\t\tmarginRight: '20px',\r\n\t\tborderRadius: '0 25px 25px 0',\r\n\t\t'&:hover': {\r\n\t\t\ttransform: 'scale(1.077)',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',\r\n\t},\r\n\tmenu: {\r\n\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\tcolor: 'white',\r\n\t\tboxShadow: 'rgba(0,0,0,0.4) 0 0 2px 1px',\r\n\t\tborderRadius: '10px',\r\n\t},\r\n\tmenuitem: {\r\n\t\tminWidth: '200px',\r\n\t},\r\n\tmenuHeader: {\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmarginBottom: '10px',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpadding: '5px 10px 5px 20px',\r\n\t\talignItems: 'center',\r\n\t\toutline: 'none',\r\n\t},\r\n\tclose: {\r\n\t\tpadding: '6px',\r\n\t\tmargin: 0,\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TasksControls.js",["1072","1073"],"import {\r\n\tButton,\r\n\tSlide,\r\n\tGrid,\r\n\tmakeStyles,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport BlurOnRoundedIcon from '@material-ui/icons/BlurOnRounded';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { getAsset, getFullAddress } from '../../../api/assetsApi';\r\nimport { removeQueryParam } from '../../../api/genericApi';\r\nimport {\r\n\tgetAssetsSuggestions,\r\n\tgetSystemsByAssetOptions,\r\n} from '../../../api/systemsApi';\r\nimport { getTasksStatusListSuggestions } from '../../../api/tasksApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\n\r\nexport const TasksControls = () => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [reloadedValue, setReloadedValue] = useState(null);\r\n\tconst [collapsed, setCollapsed] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (query.asset) {\r\n\t\t\thandleReloaded(query.asset).then((data) => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetReloadedValue(data);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetReloadedValue({\r\n\t\t\t\tlabel: '',\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\thistory.push({\r\n\t\t\t\tpath: location.pathname,\r\n\t\t\t\tsearch: removeQueryParam(location.search, 'system'),\r\n\t\t\t});\r\n\t\t}\r\n\t}, [location.search]);\r\n\r\n\tconst handleReloaded = async (assetId) => {\r\n\t\tconst res = await getAsset(assetId, false);\r\n\t\tif (res) {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: getFullAddress(res),\r\n\t\t\t\tvalue: res._id,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleCollapse = () => {\r\n\t\tif (collapsed) {\r\n\t\t\tsetCollapsed(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetCollapsed(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{downSm && (\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName={classes.sortandfilter}\r\n\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t<FilterListIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tendIcon={\r\n\t\t\t\t\t\t\t\tcollapsed ? (\r\n\t\t\t\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<ExpandMoreRoundedIcon />\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={toggleCollapse}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{t(\r\n\t\t\t\t\t\t\t\t`tasksModule.${\r\n\t\t\t\t\t\t\t\t\tcollapsed ? 'hide' : 'show'\r\n\t\t\t\t\t\t\t\t}Filters`\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{\r\n\t\t\t\t(!downSm || collapsed) &&\r\n\t\t\t\t<Slide in={true} direction={'up'} timeout={downSm ? 500 : 0}>\r\n\t\t\t\t<Grid container justify=\"center\" className={classes.filtersContainer}>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t{reloadedValue && (\r\n\t\t\t\t\t\t\t<SearchBoxSelect\r\n\t\t\t\t\t\t\t\tsuggestionsFunc={getAssetsSuggestions}\r\n\t\t\t\t\t\t\t\tplaceholder={t('systemsModule.filterByAsset')}\r\n\t\t\t\t\t\t\t\tfilterField={'asset'}\r\n\t\t\t\t\t\t\t\treloadedLabel={reloadedValue.label}\r\n\t\t\t\t\t\t\t\treloadedValue={reloadedValue.value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{query.asset && (\r\n\t\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\t\toptionsFunc={() =>\r\n\t\t\t\t\t\t\t\t\tgetSystemsByAssetOptions(query.asset)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder={t(\r\n\t\t\t\t\t\t\t\t\t'systemsModule.filterBySystemName'\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t\t<BlurOnRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfilterField={'system'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={getTasksStatusListSuggestions}\r\n\t\t\t\t\t\t\tplaceholder={t('tasksModule.filterByStatus')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<DoubleArrowIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'status'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={createUserOptions}\r\n\t\t\t\t\t\t\tplaceholder={t('tasksModule.filterByTaskOwner')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<PersonRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'owner'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Slide>\r\n\t\t\t}\r\n\t\t\t\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tfiltersContainer: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            position: 'absolute',\r\n            bottom: '0',\r\n            background: 'rgba(0,0,0,0.8)',\r\n            backdropFilter: 'blur(22px)',\r\n            zIndex: 3,\r\n            padding: '40px 0 155px',\r\n            borderRadius: '30px 30px 0 0',\r\n            boxShadow: '0px -1px 1px 0px rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n\tgridItem: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'flex-start',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tmarginLeft: '4px',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '6px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tsortandfilter: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'black',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '5px 25px 5px 3px',\r\n        whiteSpace: 'nowrap',\r\n        margin: '10px 0 0',\r\n        position: 'absolute',\r\n        bottom: '100px',\r\n        zIndex: 4,\r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    },\r\n\ttypeGroup: {\r\n\t\tmargin: '5px',\r\n\t\theight: '45px',\r\n\t},\r\n\tmodeBtn: {\r\n\t\tpadding: '0 15px 0 5px',\r\n\t\tcolor: 'white',\r\n\t\twidth: 'auto',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tlistBtn: {\r\n\t\tborderRadius: '25px 0 0 25px',\r\n\t},\r\n\tblocksBtn: {\r\n\t\tborderRadius: '0px 25px 25px 0px',\r\n\t},\r\n\tmodeBtnActive: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\scheduler\\Scheduler.js",["1074"],"import {\r\n\tBackdrop,\r\n\tButton,\r\n\tFade,\r\n\tGrid,\r\n\tmakeStyles,\r\n\tModal,\r\n\tPaper,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { ScheduleItem } from \"./ScheduleItem\";\r\nimport clsx from \"clsx\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\n\r\nexport const Scheduler = ({ scData, handleSave, handleClose }) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { t } = useTranslation();\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst [schedules, setSchedules] = useState([\r\n\t\t{\r\n\t\t\ttenant: auth.user.tenant,\r\n\t\t\tcreatedBy: auth.user._id,\r\n\t\t\tstartDate: \"\",\r\n\t\t\tinterval: \"\",\r\n\t\t},\r\n\t]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSchedules(scData);\r\n\t}, [scData]);\r\n\r\n\tconst updateSchedules = async (data, index) => {\r\n\t\tlet scs = [...schedules];\r\n\t\tscs[index] = data;\r\n\t\tsetSchedules(scs);\r\n\t};\r\n\r\n\tconst removeSchedule = (index) => (event) => {\r\n\t\tlet scs = schedules.filter((s, i) => s._id !== index && index !== i);\r\n\t\tsetSchedules(scs);\r\n\t};\r\n\r\n\tconst handleAddSchedule = () => {\r\n\t\tsetSchedules([\r\n\t\t\t...schedules,\r\n\t\t\t{\r\n\t\t\t\ttenant: auth.user.tenant,\r\n\t\t\t\tcreatedBy: auth.user._id,\r\n\t\t\t\tstartDate: \"\",\r\n\t\t\t\tinterval: \"\",\r\n\t\t\t},\r\n\t\t]);\r\n\t};\r\n\r\n\tconst handleConfirm = async () => {\r\n\t\tawait handleSave(schedules);\r\n\t\thandleClose();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\topen={true}\r\n\t\t\tonClose={handleClose}\r\n\t\t\tcloseAfterTransition\r\n\t\t\tBackdropComponent={Backdrop}\r\n\t\t\tBackdropProps={{\r\n\t\t\t\ttimeout: 500,\r\n\t\t\t}}\r\n\t\t\tclassName={classes.modal}\r\n\t\t>\r\n\t\t\t<Fade in={true}>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tstyle={{ outline: \"0\" }}\r\n\t\t\t\t\tclassName={classes.gridCont}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid item xs={12} sm={9} md={6} lg={6} xl={4}>\r\n\t\t\t\t\t\t<Paper\r\n\t\t\t\t\t\t\televation={6}\r\n\t\t\t\t\t\t\tclassName={classes.paper}\r\n\t\t\t\t\t\t\tstyle={{ direction: lang.dir }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.headerRow}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.title}>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"tasksModule.upsert.scheduleTitle\")}\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.notificationsInstructions}>\r\n\t\t\t\t\t\t\t\t\t\t\t{t(\"tasksModule.upsert.notificationsInstructions\")}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t{schedules.length ? (\r\n\t\t\t\t\t\t\t\t\tschedules.map((sc, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.scheduleContainer}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<ScheduleItem\r\n\t\t\t\t\t\t\t\t\t\t\t\tscData={sc}\r\n\t\t\t\t\t\t\t\t\t\t\t\tupdateSchedules={updateSchedules}\r\n\t\t\t\t\t\t\t\t\t\t\t\tremoveSchedule={removeSchedule}\r\n\t\t\t\t\t\t\t\t\t\t\t\tindex={i}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<div className={classes.noItems}>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"scheduler.noItems\")}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.addBtn}\r\n\t\t\t\t\t\t\t\t\t\tstartIcon={<AddIcon className={classes.addIcon} />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleAddSchedule}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"tasksModule.upsert.addScheduling\")}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.controls}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName={clsx(classes.control, classes.save)}\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleConfirm}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"controls.confirm\")}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName={clsx(classes.control, classes.cancel)}\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleClose}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"controls.cancel\")}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Fade>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmodal: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\toverflowY: \"overlay\",\r\n\t\theight: \"80vh\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\theight: \"81vh\",\r\n\t\t\tborderRadius: \"0\",\r\n\t\t\tborder: \"0\",\r\n\t\t\tpadding: \"10px 5px\",\r\n\t\t\tposition: \"absolute\",\r\n\t\t\ttop: 0,\r\n\t\t},\r\n\t\t\"&:focus\": {\r\n\t\t\toutline: \"none\",\r\n\t\t},\r\n\t},\r\n\theaderRow: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t\twidth: \"100%\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"20px 10px 10px\",\r\n\t\tfontSize: \"24px\",\r\n\t},\r\n\tscheduleContainer: {\r\n\t\tborderRadius: \"10px\",\r\n\t\tpadding: \"5px 0px\",\r\n\t\tmargin: \"0px\",\r\n\t\theight: \"fit-content\",\r\n\t},\r\n\ttextContainer: {\r\n\t\tpadding: \"5px\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tselectInput: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t\theight: \"200px\",\r\n\t\toverflowY: \"auto\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmarginRight: \"7px\",\r\n\t\tmarginLeft: \"-5px\",\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"100%\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(255,255,255,0.1)\",\r\n\t\t},\r\n\t},\r\n\taddBtn: {\r\n\t\tcolor: \"rgba(255,255,255,0.6)\",\r\n\t\tfontSize: \"16px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.6)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"8px 30px 8px 15px\",\r\n\t\tmargin: \"10px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(255,255,255,0.8)\",\r\n\t\t\tcolor: \"rgba(0,0,0,0.8)\",\r\n\t\t},\r\n\t},\r\n\ticonBtn: {\r\n\t\tcolor: \"rgba(255,255,255,0.6)\",\r\n\t\tfontSize: \"16px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.6)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"10px\",\r\n\t\tmargin: \"0 10px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(255,255,255,0.8)\",\r\n\t\t\tcolor: \"rgba(0,0,0,0.8)\",\r\n\t\t},\r\n\t},\r\n\tnotificationsInstructions: {\r\n\t\tcolor: \"rgba(255,255,255,0.6)\",\r\n\t\tfontSize: \"12px\",\r\n\t\tpadding: \"10px 0\",\r\n\t},\r\n\trepeatLabel: {\r\n\t\tcolor: \"white\",\r\n\t},\r\n\ttextField: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\ttextField: {\r\n\t\twidth: \"100%\",\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t},\r\n\t},\r\n\tcontrols: {\r\n\t\tborderTop: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tpadding: \"10px\",\r\n\t\tmarginTop: \"100px\",\r\n\t},\r\n\tcontrol: {\r\n\t\twidth: \"30%\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.5)\",\r\n\t\tfontSize: \"16px\",\r\n\t\tmargin: \"5px\",\r\n\t\tpadding: \"5px 30px\",\r\n\t\tborderRadius: \"30px\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tsave: {\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"black\",\r\n\t\t},\r\n\t\t\"&:disabled\": {\r\n\t\t\tcolor: \"rgba(255,255,255,0.3)\",\r\n\t\t},\r\n\t},\r\n\tcancel: {\r\n\t\t\"&:hover\": {\r\n\t\t\tboxShadow: \"inset rgba(255,255,255,0.3) 0 0 2px 1px\",\r\n\t\t},\r\n\t},\r\n\tnoItems: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tmargin: \"10px\",\r\n\t\tbackground: \"rgba(0,0,0,0.5)\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\scheduler\\ScheduleItem.js",["1075","1076","1077","1078","1079"],"import {\r\n\tFormControl,\r\n\tFormHelperText,\r\n\tGrid,\r\n\tIconButton,\r\n\tInputLabel,\r\n\tmakeStyles,\r\n\tMenuItem,\r\n\tSelect,\r\n\tTextField\r\n} from '@material-ui/core';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getNextIterationDate } from '../../../api/genericApi';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { CustomDatePicker } from '../datepickers/CustomeDatePicker';\r\n\r\n\r\nconst intervals = ['day', 'week', 'month', 'year'];\r\n\r\nexport const ScheduleItem = ({\r\n\tscData,\r\n\tupdateSchedules,\r\n\tindex,\r\n\tremoveSchedule,\r\n\tdateError,\r\n\tintervalError\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { t } = useTranslation();\r\n\tconst [schedule, setSchedule] = useState(scData);\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateSchedules(schedule, index);\r\n\t}, [schedule]);\r\n\r\n\tconst handleChangeStartDate = (date) => {\r\n\t\tsetSchedule({\r\n\t\t\t...schedule,\r\n\t\t\tstartDate: date,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (fieldName, payload) => (event) => {\r\n\t\tsetSchedule({\r\n\t\t\t...schedule,\r\n\t\t\t[fieldName]: payload ? payload : event.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleCalcNextIteration = () => {\r\n\t\treturn getNextIterationDate(\r\n\t\t\tschedule.startDate,\r\n\t\t\tschedule.interval,\r\n\t\t\tlang.dateonly\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid container className={classes.textContainer}>\r\n\t\t\t<Grid container className={classes.gridItem} spacing={1}>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<CustomDatePicker\r\n\t\t\t\t\t\tlabel={t('scheduler.startDate')}\r\n\t\t\t\t\t\tdata={schedule.startDate}\r\n\t\t\t\t\t\thandleChange={handleChangeStartDate}\r\n\t\t\t\t\t\tisError={dateError}\r\n\t\t\t\t\t\thelperText={dateError ? t('errors.isRequired') : null}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<FormControl variant=\"outlined\" className={classes.formControl}>\r\n\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-age-native-simple\">{t('scheduler.repeatEvery')}</InputLabel>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\tvalue={schedule.interval}\r\n\t\t\t\t\t\t\tonChange={handleChange('interval')}\r\n\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\tlabel={t('scheduler.repeatEvery')}\r\n\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terror={Boolean(intervalError)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{intervals.map((interval, i) => {\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\tschedule.intervalNumber > 1 &&\r\n\t\t\t\t\t\t\t\t\tinterval === 'date'\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tvalue={interval}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tdirection: lang.dir,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{schedule.intervalNumber > 1\r\n\t\t\t\t\t\t\t\t\t\t\t? t(`dates.${interval}s`)\r\n\t\t\t\t\t\t\t\t\t\t\t: t(`dates.${interval}`)}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tBoolean(intervalError) &&\r\n\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tcolor: '#f44336',\r\n\t\t\t\t\t\t\t\tmarginRight: '15px',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{t('errors.isRequired')}\r\n\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={2} className={classes.remove}>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\tonClick={removeSchedule(index)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DeleteOutlineRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\t\r\n\ttextContainer: {\r\n\t\tpadding: '5px',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tselectInput: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: 'rgba(0,0,0,0.8)',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\theight: '200px',\r\n\t\toverflowY: 'auto',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmarginRight: '7px',\r\n\t\tmarginLeft: '-5px',\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: 'white',\r\n\t\twidth: '100%',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.1)',\r\n\t\t},\r\n\t},\r\n\taddBtn: {\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tfontSize: '16px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.6)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '5px 30px 5px 15px',\r\n\t\tmargin: '5px 5px 15px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.8)',\r\n\t\t\tcolor: 'rgba(0,0,0,0.8)',\r\n\t\t},\r\n\t},\r\n\ticonBtn: {\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tfontSize: '16px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.6)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '10px',\r\n\t\tmargin: '0',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.8)',\r\n\t\t\tcolor: 'rgba(0,0,0,0.8)',\r\n\t\t},\r\n\t},\r\n\tnotificationsInstructions: {\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tfontSize: '12px',\r\n\t\tpadding: '10px',\r\n\t},\r\n\tlabel: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '0 10px',\r\n\t},\r\n\ttextField: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\ttextField: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\tgridItem: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '5px 10px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tpadding: '5px',\r\n\t\t},\r\n\t},\r\n\tnextIteration: {\r\n\t\tpadding: '10px 20px',\r\n\t\tcolor: 'rgba(255,255,255,0.5)',\r\n\t\tfontSize: '16px',\r\n\t\ttextAlign: 'right',\r\n\t},\r\n\tremove: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end'\r\n\t},\r\n\tdayContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\talignItems: 'center',\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '14px',\r\n\t},\r\n\tday: {\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tborderRadius: '50px',\r\n\t\theight: '30px',\r\n\t\twidth: '30px',\r\n\t\tmargin: '0 3px',\r\n\t\tcursor: 'pointer',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.4)',\r\n\t\t},\r\n\t},\r\n\tdayChosen: {\r\n\t\tbackground: 'white',\r\n\t\tcolor: 'black',\r\n\t},\r\n\tintervalNumber: {\r\n\t\tpaddingRight: '10px',\r\n\t},\r\n\tformControl: {\r\n\t\twidth: '100%'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\datepickers\\CustomeDatePicker.js",["1080"],"import DateFnsUtils from '@date-io/date-fns';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport heLocale from 'date-fns/locale/he';\r\nimport React, {useContext} from 'react';\r\nimport { getLocale } from '../../../api/genericApi';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\n\r\nexport const CustomDatePicker = ({ data, handleChange, label, disablePast, isError, helperText }) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\r\n\treturn (\r\n\t\r\n\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils} locale={getLocale(lang.code)}>\r\n\t\t\t\t<DatePicker\r\n\t\t\t\t\tformat={lang.dateonly}\r\n\t\t\t\t\tlabel={label}\r\n\t\t\t\t\tvalue={data || null}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tinputVariant={'outlined'}\r\n\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\tautoOk={true}\r\n\t\t\t\t\tampm={false}\r\n\t\t\t\t\tdisableToolbar={true}\r\n\t\t\t\t\tvariant={'inline'}\r\n\t\t\t\t\tdisablePast={disablePast}\r\n\t\t\t\t\terror={isError}\r\n\t\t\t\t\thelperText={helperText}\r\n\t\t\t\t/>\r\n\t\t\t</MuiPickersUtilsProvider>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttextField: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px'\r\n\t\t},\r\n\t},\r\n\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\context\\authContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\AuthContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageBoolean.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\RepeatableTasks.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\Calender.js",["1081","1082","1083","1084"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, Grid } from \"@material-ui/core\";\r\nimport { getDaysInMonth, getMonth, getYear, format } from \"date-fns\";\r\nimport { getBrackets, getDateString } from \"../../../api/calenderApi\";\r\nimport { getTasks } from \"../../../api/tasksApi\";\r\nimport { CalenderHeaderRow } from \"./CalenderHeaderRow\";\r\nimport { CalenderRow } from \"./CalenderRow\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { EventsViewer } from \"./EventsViewer\";\r\n\r\nexport const Calender = ({}) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst [current, setCurrent] = useState({\r\n\t\tyear: getYear(new Date()),\r\n\t\tmonth: getMonth(new Date()),\r\n\t});\r\n\tconst [brackets, setBrackets] = useState([]);\r\n\tconst [bracketData, setBracketData] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetTasks({ isRepeatable: true })\r\n\t\t\t.then((rts) => {\r\n\t\t\t\treturn getBrackets(current, rts);\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetBrackets(data);\r\n\t\t\t});\r\n\t}, [current]);\r\n\r\n\tconst handleBracketClick = (bracket) => {\r\n\t\tgetDateString(bracket.date)\r\n\t\tsetBracketData({ ...bracket });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid container className={classes.mainContainer}>\r\n\t\t\t\t<Grid item xs={12} className={classes.moduleContainer}>\r\n\t\t\t\t\t<div className={classes.pageModule}>{t(\"calender.calender\")}</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.tableGrid}>\r\n\t\t\t\t\t<table className={classes.bracketsContainer}>\r\n\t\t\t\t\t\t<thead className={classes.tableHeader}>\r\n\t\t\t\t\t\t\t<CalenderHeaderRow />\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody className={classes.tableBody}>\r\n\t\t\t\t\t\t\t{brackets.chunk(7).map((c, i) => (\r\n\t\t\t\t\t\t\t\t<CalenderRow\r\n\t\t\t\t\t\t\t\t\tbrackets={c}\r\n\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\thandleBracketClick={handleBracketClick}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t{bracketData && (\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\tmd={4}\r\n\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\tclassName={classes.markDataGrid}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<EventsViewer\r\n\t\t\t\t\t\t\tbracketData={bracketData}\r\n\t\t\t\t\t\t\thandleClose={() => setBracketData(null)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\theight: \"calc(100vh - 64px)\",\r\n\t\twidth: \"100%\",\r\n\t\tposition: \"relative\",\r\n\t},\r\n\tmoduleContainer: {\r\n\t\tposition: 'sticky',\r\n\t\ttop: 0,\r\n\t\tzIndex: 2\r\n\t},\r\n\tpageModule: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px 40px\",\r\n\t\tfontSize: \"16px\",\r\n\t\tbackground: \"rgba(0,0,0,0.8)\",\r\n        boxShadow: '0 0px 2px 1px rgba(255,255,255,0.3)',\r\n\t\tmargin: \"0px auto 5px\",\r\n\t\twidth: \"30%\",\r\n\t\ttextAlign: \"center\",\r\n\t\tborderRadius: \"0 0 25px 25px\",\r\n\t\tlineHeight: \"1\", \r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tbackground: \"black\",\r\n\t\t\twidth: \"100vw\",\r\n\t\t\tpadding: \"20px 0\",\r\n\t\t\tborderRadius: 0,\r\n\t\t\tmargin: 0\r\n\t\t}\r\n\t},\r\n\ttableGrid: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center'\r\n\t},\r\n\tbracketsContainer: {\r\n\t\twidth: \"90vw\",\r\n\t\theight: \"80vh\",\r\n\t\tcolor: \"white\",\r\n\t\ttableLayout: \"fixed\",\r\n\t},\r\n\ttableBody: {\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t},\r\n\tmarkDataGrid: {\r\n\t\tposition: \"absolute\",\r\n\t\tzIndex: 3,\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\tbackdropFilter: \"blur(40px)\",\r\n\t\theight: \"100%\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\calenderApi.js",["1085","1086","1087","1088","1089"],"import { addDays, endOfMonth, format, getDate, getDay, getDayOfYear, getDaysInMonth, getMonth, getYear, parseISO, startOfDay, toDate } from \"date-fns\";\r\nimport i18next from \"i18next\";\r\nimport { getTasks } from './tasksApi';\r\n\r\nexport const getBrackets = async (current, repeatableTasks) => {\r\n    const dates = await calculateDates(current);\r\n    return await calculateBrackets(dates, repeatableTasks);  \r\n}\r\n\r\nexport const calculateDates = async (current) => {\r\n    const { month, year } = current;\r\n    let dates = [];\r\n    const currentMonthDate = new Date(year, month, 1);\r\n    const daysInCurrentMonth = getDaysInMonth(currentMonthDate);\r\n    const firstDayOfMonth = getDay(currentMonthDate);\r\n    const lastDayOfMonth = getDay(endOfMonth(currentMonthDate));\r\n    if (firstDayOfMonth !== 0 ) {\r\n        for(let i = firstDayOfMonth; i > 0; i--) {\r\n            dates.push(addDays(currentMonthDate, -i));\r\n        }\r\n    };\r\n    for (let i = 0; i < daysInCurrentMonth; i++) {\r\n        dates.push(addDays(currentMonthDate, i));\r\n    }\r\n    let daysLeft = 42 - dates.length;\r\n    for(let i = 1; i <= daysLeft; i++) {\r\n        dates.push(addDays(endOfMonth(currentMonthDate), i));\r\n    }\r\n    return Promise.resolve(dates)\r\n}\r\n\r\nexport const calculateBrackets = async (dates, repeatableTasks) => {\r\n    let brackets = dates.map((d) => {\r\n        const dParts = getDateParts(d);\r\n        let bracket = { date: d, parts: dParts, data: [] };\r\n        repeatableTasks.forEach(rt => {\r\n            rt.schedule.forEach(rts => {\r\n                const startDate = parseISO(rts.startDate);\r\n                if (startOfDay(startDate) > startOfDay(d)) return;\r\n\r\n                let rtsParts = getDateParts(startDate);\r\n                if (rts.interval === 'day') {\r\n                    bracket.data.push(rt);\r\n                }\r\n                if (rts.interval === 'week') {\r\n                    if (dParts.weekDay == rtsParts.weekDay) {\r\n                        bracket.data.push(rt);\r\n                    }\r\n                }\r\n                if (rts.interval === 'month') {\r\n                    if (dParts.day == rtsParts.day) {\r\n                        bracket.data.push(rt);\r\n                    }\r\n                }\r\n                if (rts.interval === 'year') {\r\n                    if (dParts.yearDay == rtsParts.yearDay) {\r\n                        bracket.data.push(rt);\r\n                    }\r\n                }\r\n            })\r\n        });\r\n        return bracket;\r\n    });\r\n    return Promise.resolve(brackets);\r\n}\r\n\r\nexport const getDateParts = (date) => {\r\n    return {\r\n        day: getDate(date),\r\n        weekDay: getDay(date),\r\n        month: getMonth(date),\r\n        year: getYear(date),\r\n        yearDay: getDayOfYear(date)\r\n    }\r\n}\r\n\r\nexport const getDateString = (date) => {\r\n    date = toDate(new Date(date));\r\n    const dayOfWeek = format(date, 'EEEE').toLowerCase();\r\n    const monthName = format(date, 'LLLL').toLowerCase();\r\n    \r\n    return `${i18next.t('dates.day')} ${i18next.t(`dates.${dayOfWeek}`)}, ${format(date, 'd')} ${i18next.t(`dates.to`)}${i18next.t(`dates.${monthName}`)}, ${format(date, 'yyyy')}`\r\n}","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\CalenderHeaderRow.js",["1090","1091"],"import React from 'react';\r\nimport { makeStyles, Grid, useMediaQuery } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst weekDays = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\r\n\r\nexport const CalenderHeaderRow = ({}) => {\r\n\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const matches = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <tr className={classes.row}>\r\n            {\r\n                weekDays.map((wd, i) => \r\n                    <th className={classes.headerCell}>\r\n                        <div className={classes.dayHeader}>\r\n                            {t(`dates.${wd}${matches ? 'short' : ''}`)}\r\n                        </div>\r\n                    </th>\r\n                )\r\n            }\r\n        </tr>   \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    headerCell: {\r\n        width: '14.28%'\r\n    },\r\n    dayHeader: {\r\n        padding: '15px 10px',\r\n        background: 'rgba(0,0,0,0.6)',\r\n        width: 'auto'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\CalenderRow.js",["1092","1093"],"import React from 'react';\r\nimport { makeStyles, Grid, useMediaQuery } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { EventBracket } from './EventBracket';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nexport const CalenderRow = ({ brackets, handleBracketClick }) => {\r\n\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const matches = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <tr className={classes.row}>\r\n            {\r\n                brackets.map((b, i) =>\r\n                    <td className={classes.bracketData}  onClick={() => handleBracketClick({ tasks: b.data, date: b.date, parts: b.parts})}>\r\n                        <div className={classes.dataContainer}>\r\n                            <div className={classes.dayOfMonth}>\r\n                                {b.parts.day}\r\n                            </div>\r\n                            <div className={classes.eventsContainer}>\r\n                                {   \r\n                                    matches && b.data.length ?  \r\n                                    <FiberManualRecordIcon className={classes.eventsMarker} /> : \r\n                                    b.data.slice(0,2).map((e,i) => \r\n                                        <EventBracket data={e} key={i} />\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                )\r\n            }\r\n        </tr>   \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    row: {\r\n        padding: '10px',\r\n        height: '16.666%'\r\n    },\r\n    dayHeader: {\r\n\r\n    },\r\n    bracketData: {\r\n        padding: '10px',\r\n        verticalAlign: 'top',\r\n        width: '100px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            textAlign: 'center'\r\n        }\r\n    },\r\n    dataContainer: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between'\r\n    },\r\n    dayOfMonth: {\r\n\r\n    },\r\n    eventsMarker: {\r\n       \r\n        fontSize: '12px'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\RolesAndPermissions.js",["1094","1095"],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UpsertRole.js",["1096","1097","1098","1099","1100"],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Permission.js",["1101","1102"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, Grid, Slider } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\n\r\n\r\nexport const Permission = ({ isBoolean, module, text, value, handleValueChange}) => {\r\n\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const [ val, setVal ] = useState(value)  \r\n\r\n    useEffect(() => {\r\n        handleValueChange(module, text, val)\r\n    }, [val])\r\n\r\n    const marks = [\r\n        {\r\n            value: 0,\r\n            label: t(`roles.noPermission`)\r\n        },\r\n        {\r\n            value: 1,\r\n            label: t(`roles.onlyMe`)\r\n        },\r\n        {\r\n            value: 2,\r\n            label: t(`roles.mineAndOthers`)\r\n        }\r\n    ]\r\n\r\n    const marksPoints = marks.map(m => {\r\n        if (isBoolean && m.value === 1) {\r\n            return false;\r\n        }\r\n        return m;\r\n    })\r\n\r\n    const getValColor = (val) => {\r\n        return { 0: 'red', 1: 'yellow', 2: 'green' }[val]\r\n    }\r\n\r\n   function textValue(v){\r\n       return marksPoints[v].label\r\n   }\r\n\r\n   const handleChange = (e,v) => {\r\n       setVal(v)\r\n   }\r\n    \r\n    return (\r\n        <Grid container className={classes.container} justify='center'>\r\n            <Grid item xs={12} className={classes.permText}>\r\n                <div className={classes.permTextLabel}>\r\n                    {t(`roles.${text}`)}\r\n                </div>\r\n                \r\n            </Grid>\r\n            <Grid item xs={11} lg={7} className={classes.gridItem}>\r\n                <div className={classes.sliderContainer}>\r\n                    <Slider\r\n                        track={false}\r\n                        value={val}\r\n                        getAriaValueText={textValue}\r\n                        aria-labelledby=\"discrete-slider-small-steps\"\r\n                        step={isBoolean ? 2 : 1}\r\n                        marks={marksPoints}\r\n                        min={0}\r\n                        max={2}\r\n                        valueLabelDisplay=\"off\"\r\n                        classes={{\r\n                            root: classes.rootSlider,\r\n                            track: classes.track,\r\n                            rail: classes.rail,\r\n                            mark: classes.mark,\r\n                            markLabelActive: classes.markLabelActive,\r\n                            thumb: classes.thumb\r\n                        }}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n            \r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        padding: '10px 0px 20px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        margin: '10px 0',\r\n        borderRadius: '5px',\r\n        [theme.breakpoints.down('sm')] :{\r\n            padding: '0px 0px 30px',\r\n            borderWidth: '0px 0px 1px',\r\n        }\r\n    },\r\n    gridItem: {\r\n       padding: '10px',\r\n       [theme.breakpoints.down('sm')] :{\r\n        padding: '10px 40px',\r\n    }\r\n    },\r\n    permTextLabel: {\r\n        padding: '10px 20px',\r\n\r\n        width: 'auto',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n\r\n    permText: {\r\n        color: 'white',\r\n        display: 'grid',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n       \r\n        paddingBottom: '10px'\r\n    },\r\n    sliderContainer: {\r\n       \r\n    },\r\n    rootSlider: {\r\n        color: 'white'\r\n    },\r\n    mark: {\r\n        color: 'rgba(255,255,255,0.6)',\r\n        height: '20px',\r\n        width: '2px'\r\n    },\r\n    rail: {\r\n        color: 'rgba(255,255,255,0.6)',\r\n        opacity: '1',\r\n\r\n    },\r\n    markLabelActive: { \r\n        color: 'white',\r\n        padding: '5px 20px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '50px' ,\r\n        margin: '10px 0'\r\n    },\r\n    thumb: {\r\n        color: 'white'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\EventBracket.js",["1103","1104","1105","1106"],"import React from \"react\";\r\nimport { makeStyles, Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const EventBracket = ({ data }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\r\n\treturn (\r\n\t\t<div className={classes.eventBracket}>\r\n\t\t\t<div className={classes.taskId}>{data.taskId}</div>\r\n\t\t\t<div className={classes.title}>{data.title}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\teventBracket: {\r\n\t\tbackground: \"#42A5F5\",\r\n\t\tborderRadius: \"5px\",\r\n\t\tmargin: \"5px 0\",\r\n\t\tfontSize: \"11px\",\r\n\t\tdisplay: \"flex\",\r\n\t},\r\n\ttaskId: {\r\n\t\tfontSize: \"11px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\tpadding: \"5px 10px\",\r\n\t\tbackground: \"black\",\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"5px 0px 0 5px\",\r\n\t},\r\n\ttitle: {\r\n\t\tpadding: \"5px\",\r\n\t\tcolor: \"white\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\toverflow: \"hidden\",\r\n\t\ttextOverflow: \"ellipsis\",\r\n\t\tborderRadius: \"0px 5px 5px 0px\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\EventsViewer.js",["1107","1108","1109","1110","1111","1112","1113","1114"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetsList.js",["1115","1116","1117","1118"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetView.js",["1119","1120","1121","1122","1123","1124","1125"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\SystemsGrid.js",["1126","1127"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\FaultsGrid.js",["1128"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\TasksGrid.js",["1129"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\locations\\UpsertLocation.js",["1130","1131","1132","1133"],"C:\\projects\\leev\\leev-fe\\src\\api\\locationsApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\LocationsGrid.js",["1134","1135"],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Residents.js",["1136","1137","1138","1139"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\tableViews\\ResidentsGrid.js",["1140"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\Dashboard.js",["1141","1142","1143"],"C:\\projects\\leev\\leev-fe\\src\\api\\dashboardApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\LastOperations.js",["1144"],"import { Grid, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LanguageContext } from \"../../../../context/LanguageContext\";\r\nimport { StatusTag } from \"../../../reuseables/StatusTag\";\r\nimport { UserItem } from \"../../../user/UserItem\";\r\nimport DoubleArrowIcon from \"@material-ui/icons/DoubleArrow\";\r\nimport TransferWithinAStationRoundedIcon from \"@material-ui/icons/TransferWithinAStationRounded\";\r\nimport GroupAddRoundedIcon from \"@material-ui/icons/GroupAddRounded\";\r\nimport AddCommentRoundedIcon from \"@material-ui/icons/AddCommentRounded\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { getFullName } from \"../../../../api/genericApi\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n// import { FaultView } from './FaultView';\r\n// import { FaultViews } from './FaultViews';\r\n\r\nexport const LastOperations = ({ operations }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst [ops, setOps] = useState(operations);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\r\n\tuseEffect(() => {\r\n\t\tsetOps(operations);\r\n\t}, [operations]);\r\n\r\n\tconst getOperationMade = (op) => {\r\n\t\tif (op.actionType === 'addComment') {\r\n\t\t\tif (!op.payload.comment.text && op.payload.comment.image) {\r\n\t\t\t\treturn `${t(`dashboard.addCommentWithImage`).replace(\"%%itemid%%\", op.itemData.itemId)}`\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn `${t(`dashboard.${op.actionType}`).replace(\"%%itemid%%\", op.itemData.itemId)}`\r\n\t}\r\n\treturn (\r\n\t\t<Grid container justify=\"center\" className={classes.mainContainer}>\r\n\t\t\t<Grid item xs={12} className={classes.gridHeader}>\r\n\t\t\t\t<div className={classes.header}>{t(\"dashboard.lastOperations\")}</div>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} className={classes.gridData}>\r\n\t\t\t\t{ops.length ? (\r\n\t\t\t\t\tops.map((op, i) => (\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={`/workspace/${op.itemData.module}/${op.itemData.itemId}`}\r\n\t\t\t\t\t\t\tstyle={{ textDecoration: \"none\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className={classes.rowContainer} key={i}>\r\n\t\t\t\t\t\t\t\t<div className={classes.typeGrid}>\r\n\t\t\t\t\t\t\t\t\t<OperationType op={op} />\r\n\t\t\t\t\t\t\t\t\t<div className={classes.rowTime}>\r\n\t\t\t\t\t\t\t\t\t\t{format(parseISO(op.createdAt), lang.dateformat)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.top}>\r\n\t\t\t\t\t\t\t\t\t{matches ? (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className={classes.mobileActionby}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{` ${getFullName(op.actionBy)}`}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t{getOperationMade(op)}\r\n\t\t\t\t\t\t\t\t\t\t\t<OperationItem op={op} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.userContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuser={op.actionBy}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tavatarSize={30}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={10}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tshowTitle={matches ? false : true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.operationMade}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{getOperationMade(op)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.operationItem}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<OperationItem op={op} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className={classes.noData}>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc=\"https://img.icons8.com/ios-filled/100/4a90e2/remove-data.png\"\r\n\t\t\t\t\t\t\tclassName={classes.noDataImage}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className={classes.noDataText}>{t(\"dashboard.noData\")}</div>\r\n\t\t\t\t\t\t<div className={classes.noDataSecondary}>\r\n\t\t\t\t\t\t\t{t(\"dashboard.noDataSecondary\")}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst OperationItem = ({ op }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\r\n\tif (op.actionType === \"statusChange\" && op.payload.status) {\r\n\t\treturn matches ? (\r\n\t\t\tt(\r\n\t\t\t\t`${op.itemData.module.substr(\r\n\t\t\t\t\t0,\r\n\t\t\t\t\top.itemData.module.length - 1\r\n\t\t\t\t)}sModule.statuses.${op.payload.status.statusId}`\r\n\t\t\t)\r\n\t\t) : (\r\n\t\t\t<div className={classes.statusContainer}>\r\n\t\t\t\t{\r\n\t\t\t\t\t<StatusTag\r\n\t\t\t\t\t\tstatus={op.payload.status}\r\n\t\t\t\t\t\ttype={op.itemData.module.substr(0, op.itemData.module.length - 1)}\r\n\t\t\t\t\t\tsize={matches ? 10 : 12}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else if (\r\n\t\t[\"ownerChange\"].includes(op.actionType) &&\r\n\t\t(op.payload.owner)\r\n\t) {\r\n\t\treturn matches ? (\r\n\t\t\t<span style={{ fontWidth: '800'}}>\r\n\t\t\t\t{` ${getFullName(op.payload.owner)}`}\r\n\t\t\t</span>\r\n\t\t\t\r\n\t\t) : (\r\n\t\t\t<div className={classes.userContainer}>\r\n\t\t\t\t<UserItem\r\n\t\t\t\t\tuser={op.payload.owner || op.payload.relatedUser}\r\n\t\t\t\t\tshowName\r\n\t\t\t\t\tavatarSize={30}\r\n\t\t\t\t\tsize={10}\r\n\t\t\t\t\tshowPhone\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else if (op.actionType === \"detailsUpdate\" && op.payload) {\r\n\t\treturn null;\r\n\t} else if (op.actionType === \"addComment\" && op.payload.comment.text) {\r\n\t\treturn matches ? (\r\n\t\t\t<div className={classes.commentContainer}>\r\n\t\t\t\t{op.payload.comment.text}\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t<div className={classes.commentContainer}>\r\n\t\t\t\t{op.payload.comment.text}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nconst OperationType = ({ op }) => {\r\n\tconst { t } = useTranslation();\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.typeContainer}>\r\n\t\t\t{op.actionType === \"statusChange\" ? (\r\n\t\t\t\t<DoubleArrowIcon className={classes.typeIcon} />\r\n\t\t\t) : op.actionType === \"ownerChange\" ? (\r\n\t\t\t\t<TransferWithinAStationRoundedIcon className={classes.typeIcon} />\r\n\t\t\t) : op.actionType === \"relatedUserAdded\" ? (\r\n\t\t\t\t<GroupAddRoundedIcon className={classes.typeIcon} />\r\n\t\t\t) : op.actionType === \"addComment\" ? (\r\n\t\t\t\t<AddCommentRoundedIcon className={classes.typeIcon} />\r\n\t\t\t) : op.actionType === \"detailsUpdate\" ? (\r\n\t\t\t\t<EditRoundedIcon className={classes.typeIcon} />\r\n\t\t\t) : op.actionType === \"itemCreated\" ? (\r\n\t\t\t\t<AddIcon className={classes.typeIcon} />\r\n\t\t\t) : null}\r\n\t\t\t{t(`dashboard.actionTypes.${op.actionType}`)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\theight: \"800px\",\r\n\t\tpadding: \"20px 20px\",\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n\t\t\theight: \"80vh\",\r\n            position: 'sticky',\r\n            top: '98px',\r\n            width: '50vw',\r\n\t\t    padding: \"20px 20px\",\r\n\t\t},\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px 0\",\r\n\t\t\theight: \"auto\"\r\n\t\t},\r\n\t},\r\n\tgridHeader: {\r\n\t\tbackground: \"black\",\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\theight: \"60px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: 0,\r\n\t\t\tposition: \"sticky\",\r\n\t\t\ttop: '58px'\r\n\t\t},\r\n\t},\r\n\theader: {\r\n\t\tfontSize: \"18px\",\r\n\t\tpadding: \"20px 20px 0\"\r\n\t},\r\n\tgridData: {\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\tborderRadius: \"0 0 10px 10px\",\r\n\t\theight: \"calc(100% - 60px)\",\r\n\t\toverflow: \"auto\",\r\n\t\t\"&::-webkit-scrollbar\": {\r\n\t\t\twidth: \"0em\",\r\n\t\t},\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\toverflow: \"hidden\",\r\n\t\t},\r\n\t},\r\n\trowContainer: {\r\n\t\tpadding: \"10px 10px 10px\",\r\n\t\tborderBottom: \"1px solid rgba(0,0,0,0.3)\",\r\n\t},\r\n\ttop: {\r\n\t\tdisplay: \"flex\",\r\n\t},\r\n\tuserContainer: {\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"5px 20px 5px 5px\",\r\n\t\theight: 'fit-content',\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"5px 20px 5px 5px\",\r\n\t\t},\r\n\t},\r\n\toperationMade: {\r\n\t\tfontSize: \"13px\",\r\n\t\tcolor: \"white\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\ttextAlign: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tpadding: \"10px\",\r\n\t\twhiteSpace: \"nowrap\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"11px\",\r\n\t\t},\r\n\t},\r\n\toperationItem: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tcommentContainer: {\r\n\t\tfontSize: \"13px\",\r\n\t\tcolor: \"white\",\r\n\t\tbackground: \"rgba(0,0,0,0.7)\",\r\n\t\tpadding: \"7px 20px\",\r\n\t\tborderRadius: \"5px\",\r\n\t\twidth: 'fit-content',\r\n\t\tmargin: '5px'\r\n\t},\r\n\trowTime: {\r\n\t\ttextAlign: \"right\",\r\n\t\tcolor: \"rgba(255,255,255,0.4)\",\r\n\t\tfontSize: \"12px\",\r\n\t},\r\n\ttypeGrid: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tmarginBottom: \"10px\",\r\n\t},\r\n\ttypeContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tfontSize: \"11px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tpadding: \"3px 20px 3px 5px\",\r\n\t},\r\n\ttypeIcon: {\r\n\t\tborderRadius: \"50px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tfontSize: \"14px\",\r\n\t\tpadding: \"3px\",\r\n\t\tmarginRight: \"5px\",\r\n\t},\r\n\ttextContainer: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"13px\",\r\n\t},\r\n\tnoData: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\ttextAlign: \"center\",\r\n\t\tmarginTop: \"35px\",\r\n\t},\r\n\tnoDataText: {\r\n\t\tpadding: \"20px\",\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"22px\",\r\n\t},\r\n\tnoDataSecondary: {\r\n\t\tpadding: \"0px 30px\",\r\n\t\tfontSize: \"14px\",\r\n\t\tcolor: \"rgba(255,255,255,0.5)\",\r\n\t},\r\n\tmobileActionby: {\r\n\t\tfontWeight: '600',\r\n\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\OpenItems.js",["1145","1146","1147","1148"],"import { Grid, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LanguageContext } from \"../../../../context/LanguageContext\";\r\nimport clsx from \"clsx\";\r\n\r\nexport const OpenItems = ({ openFaults, openTasks }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\r\n\treturn (\r\n\t\t<Grid item xl={6} xs={12} className={classes.mainContainer}>\r\n\t\t\t<Grid container justify=\"center\" className={classes.container}>\r\n\t\t\t\t<ItemsCard items={openFaults} module={\"faults\"} />\r\n\t\t\t\t<ItemsCard items={openTasks} module={\"tasks\"} />\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst ItemsCard = ({ items, module }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\r\n\treturn (\r\n\t\t<Grid item xs={6} className={classes.cardContainer}>\r\n\t\t\t<div className={clsx(classes.moduleContainer, classes[module])}>\r\n\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t{t(`dashboard.open${module}`)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.totalContainer}>{items.total}</div>\r\n\t\t\t\t<div className={classes.statusesContainer}>\r\n\t\t\t\t\t{items.byStatus.map((bs, i) => (\r\n\t\t\t\t\t\t<div className={classes.rowContainer}>\r\n\t\t\t\t\t\t\t<div className={classes.stName}>\r\n\t\t\t\t\t\t\t\t{t(`${module}Module.statuses.${bs.statusId}`)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.stCount}>{bs.count}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcardContainer: {\r\n\t\tpadding: '20px 20px',\r\n        height: '360px',\r\n        color: 'white',\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: '20px 10px',\r\n            height: '300px'\r\n\t\t},\r\n\t},\r\n    moduleContainer: {\r\n        height: '100%',\r\n        borderRadius: '10px',\r\n        padding: '20px'\r\n    },\r\n    faults: {\r\n        background: 'linear-gradient(180deg, hsla(0, 70%, 56%, 1) 0%, hsla(0, 70%, 56%, 0) 100%)',\r\n    },\r\n    tasks: {\r\n        background: 'linear-gradient(180deg, hsla(234, 64%, 61%, 1) 0%, hsla(234, 64%, 61%, 0) 100%)', \r\n    },\r\n    headerContainer: {\r\n        fontSize: '20px',\r\n        textAlign: 'center',\r\n        padding: '10px',\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            fontSize: '16px',\r\n\t\t},\r\n    },\r\n    totalContainer: {\r\n        textAlign: 'center',\r\n        fontSize: '36px',\r\n        marginBottom: '20px'\r\n    },\r\n    statusesContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start'\r\n    },\r\n    rowContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        padding: '10px 20px',\r\n        width: '90%',\r\n        fontSize: '14px',\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            fontSize: '12px',\r\n\t\t},\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\AverageTimeToClose.js",["1149","1150","1151","1152","1153"],"import { Grid, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LanguageContext } from \"../../../../context/LanguageContext\";\r\nimport GaugeChart from \"react-gauge-chart\";\r\nimport clsx from \"clsx\";\r\n\r\nexport const AverageTimeToClose = ({ data }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\r\n    const getLabelText = (p) => {\r\n        if ( p < 60 ) {\r\n            return `${p.toFixed(0)} ${t(\"dates.minutes\")}`\r\n        } else if (p < 2880) {\r\n            return `${(p / 60).toFixed(0)} ${t(\"dates.hours\")}`\r\n        } else {\r\n            return `${(p / 1440).toFixed(0)} ${t(\"dates.days\")}`\r\n\r\n        }\r\n    }\r\n\r\n    const getPercentaeMarker = (data) => {\r\n        return data.avg / (data.max + data.min);\r\n    }\r\n\r\n\treturn (\r\n\t\t<Grid item xl={6} xs={12} className={classes.mainContainer}>\r\n\t\t\t<Grid container justify=\"center\" className={classes.container}>\r\n\t\t\t\t<Grid item xs={12} className={classes.gridHeader}>\r\n\t\t\t\t\t<div className={classes.header}>{t(\"dashboard.avgTimeToClose\")}</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.gridData}>\r\n                    {\r\n                        (data.avg) ?\r\n                        <React.Fragment>\r\n                            <div className={classes.gaugeContainer}>\r\n\t\t\t\t\t\t<GaugeChart\r\n\t\t\t\t\t\t\tnrOfLevels={20}\r\n\t\t\t\t\t\t\tcolors={[\"#15F800\", \"#F70000\"]}\r\n\t\t\t\t\t\t\tarcWidth={0.3}\r\n                            percent={getPercentaeMarker(data)}\r\n\t\t\t\t\t\t\tformatTextValue={() => getLabelText(data.avg)}\r\n\t\t\t\t\t\t\tcornerRadius={10}\r\n\t\t\t\t\t\t\tstyle={{ width: 375 }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.labelsContainer}>           \r\n                        <div className={classes.label}>{getLabelText(data.max)}</div> \r\n                        <div className={classes.label}>{getLabelText(data.min)}</div>   \r\n\t\t\t\t\t</div>\r\n                    <div className={classes.gaugeText}>\r\n                        {`* ${t(\"dashboard.gaugeText\")}`}\r\n                    </div>\r\n                        </React.Fragment> :\r\n                        <div className={classes.noData}>\r\n                            <img src=\"https://img.icons8.com/ios-filled/100/4a90e2/remove-data.png\" className={classes.noDataImage}/>\r\n                            <div className={classes.noDataText}>\r\n                                {t(\"dashboard.noData\")}\r\n                            </div>\r\n                            <div className={classes.noDataSecondary}>\r\n                                {t(\"dashboard.noDataSecondary\")}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\t\t\t\t\t\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {},\r\n\tcontainer: {\r\n\t\tpadding: \"20px 20px\",\r\n\t\theight: \"400px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px 0\",\r\n\t\t},\r\n\t},\r\n\tgridHeader: {\r\n\t\tbackground: \"black\",\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\theight: \"60px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: 0,\r\n\t\t},\r\n\t},\r\n\theader: {\r\n\t\tfontSize: \"18px\",\r\n\t\tpadding: \"20px 20px 0\",\r\n\t},\r\n\tgridData: {\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\tborderRadius: \"0 0 10px 10px\",\r\n\t\theight: \"calc(100% - 60px)\",\r\n\t\tdisplay: \"flex\",\r\n        flexDirection: 'column',\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: \"0\",\r\n\t\t},\r\n\t},\r\n\tgaugeContainer: {\r\n\t\twidth: \"fit-content\",\r\n\t},\r\n\tgauge: {\r\n\t\t\r\n\t},\r\n    labelsContainer: {\r\n        display: 'flex',\r\n        color: 'white',\r\n        width: '265px',\r\n        justifyContent: 'space-between',\r\n        padding: '0 55px'\r\n    },\r\n    label: {\r\n        fontSize: '18px'\r\n    },\r\n    gaugeText: {\r\n        textAlign: 'right',\r\n        fontSize: '12px',\r\n        color: 'rgba(255,255,255,0.5)',\r\n        margin: '10px auto 0px 10px'\r\n    },\r\n    noData: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        textAlign: 'center'\r\n    },\r\n    noDataText: {\r\n        padding: '20px',\r\n        color: 'white',\r\n        fontSize: '22px'\r\n    },\r\n    noDataSecondary: {\r\n        padding: '0px 30px',\r\n        fontSize: '14px',\r\n        color: 'rgba(255,255,255,0.5)'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\PendingFaults.js",["1154","1155","1156"],"import { Grid, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LanguageContext } from \"../../../../context/LanguageContext\";\r\nimport GaugeChart from \"react-gauge-chart\";\r\nimport clsx from \"clsx\";\r\nimport { StatusTag } from \"../../../reuseables/StatusTag\";\r\nimport { ItemLink } from \"../../../reuseables/ItemLink\";\r\nimport { differenceInMinutes, parseISO } from \"date-fns\";\r\n\r\nexport const PendingFaults = ({ pendingFaults }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\tconst [pfs, setPfs] = useState(pendingFaults);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetPfs(pendingFaults);\r\n\t}, [pendingFaults]);\r\n\r\n\tconst calculateTimePending = (pf) => {\r\n\t\tlet p = differenceInMinutes(new Date(), parseISO(pf.changeStatusDate));\r\n\t\tif (p < 60) {\r\n\t\t\treturn `${p.toFixed(0)} ${t(\"dates.minutes\")}`;\r\n\t\t} else if (p < 2880) {\r\n\t\t\treturn `${(p / 60).toFixed(0)} ${t(\"dates.hours\")}`;\r\n\t\t} else {\r\n\t\t\treturn `${(p / 1440).toFixed(0)} ${t(\"dates.days\")}`;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid item xl={6} xs={12} className={classes.mainContainer}>\r\n\t\t\t<Grid container justify=\"center\" className={classes.container}>\r\n\t\t\t\t<Grid item xs={12} className={classes.gridHeader}>\r\n\t\t\t\t\t<div className={classes.header}>\r\n\t\t\t\t\t\t{t(\"dashboard.pendingFaults\")}\r\n\t\t\t\t\t\t<div className={classes.statusHeaderContainer}>\r\n\t\t\t\t\t\t\t<StatusTag\r\n\t\t\t\t\t\t\t\tstatus={{ statusId: \"pending\" }}\r\n\t\t\t\t\t\t\t\ttype=\"fault\"\r\n\t\t\t\t\t\t\t\tsize={13}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.gridData}>\r\n\t\t\t\t\t{pfs.length ? (\r\n\t\t\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\tclassName={classes.headersContainer}\r\n\t\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.headerGrid}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"faultsModule.faultId\")}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.headerGrid}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"faultsModule.title\")}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.headerGrid}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"dashboard.timePending\")}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t{pfs.map((pf, i) => (\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\t\tclassName={classes.rowContainer}\r\n\t\t\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.cellData}>\r\n\t\t\t\t\t\t\t\t\t\t\t<ItemLink\r\n\t\t\t\t\t\t\t\t\t\t\t\titemId={pf.faultData.faultId}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmodule={\"faults\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsize={matches ? 13 : 16}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={clsx(classes.cellData)}>\r\n\t\t\t\t\t\t\t\t\t\t\t{pf.faultData.title}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={clsx(classes.cellData)}>\r\n\t\t\t\t\t\t\t\t\t\t\t{calculateTimePending(pf)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className={classes.noData}>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc=\"https://img.icons8.com/ios-filled/100/4a90e2/remove-data.png\"\r\n\t\t\t\t\t\t\t\tclassName={classes.noDataImage}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className={classes.noDataText}>{t(\"dashboard.noData\")}</div>\r\n\t\t\t\t\t\t\t<div className={classes.noDataSecondary}>\r\n\t\t\t\t\t\t\t\t{t(\"dashboard.noDataSecondary\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {},\r\n\tcontainer: {\r\n\t\tpadding: \"20px 20px\",\r\n\t\theight: \"400px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px 0\",\r\n\t\t\theight: \"auto\",\r\n\t\t},\r\n\t},\r\n\tgridHeader: {\r\n\t\tbackground: \"black\",\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\theight: \"60px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: 0,\r\n\t\t},\r\n\t},\r\n\theader: {\r\n\t\tfontSize: \"18px\",\r\n\t\tpadding: \"15px 20px 0\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tgridData: {\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\tborderRadius: \"0 0 10px 10px\",\r\n\t\theight: \"calc(100% - 60px)\",\r\n\t\toverflow: 'auto',\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: \"0\"\r\n\t\t},\r\n\t},\r\n\tstatusHeaderContainer: {\r\n\t\tpadding: \"0 10px\",\r\n\t},\r\n\theadersContainer: {\r\n\t\tbackground: \"rgba(255,255,255,0.2)\",\r\n\t\tborderBottom: \"2px solid rgba(255,255,255,0.2)\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tbackground: \"#575757\",\r\n\t\t\tposition: \"sticky\",\r\n\t\t\ttop: \"60px\"\r\n\t\t},\r\n\t},\r\n\theaderContainer: {\r\n\t\tcolor: \"white\",\r\n\t\ttextAlign: \"center\",\r\n\t\tpadding: \"15px 10px 10px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"13px\",\r\n\t\t},\r\n\t},\r\n\theaderGrid: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center'\r\n\t},\r\n\trowContainer: {\r\n\t\tpadding: \"10px 5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.1)\",\r\n\t},\r\n\tcellGrid: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tcellData: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"fit-content\",\r\n\t\ttextAlign: \"center\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"12px\",\r\n\t\t},\r\n\t},\r\n\tnoData: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\ttextAlign: \"center\",\r\n\t\tmarginTop: \"35px\",\r\n\t},\r\n\tnoDataText: {\r\n\t\tpadding: \"20px\",\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"22px\",\r\n\t},\r\n\tnoDataSecondary: {\r\n\t\tpadding: \"0px 30px\",\r\n\t\tfontSize: \"14px\",\r\n\t\tcolor: \"rgba(255,255,255,0.5)\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\dashboard\\charts\\UpcomingTasks.js",["1157","1158","1159","1160","1161"],"import { Grid, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LanguageContext } from \"../../../../context/LanguageContext\";\r\nimport GaugeChart from \"react-gauge-chart\";\r\nimport clsx from \"clsx\";\r\nimport { StatusTag } from \"../../../reuseables/StatusTag\";\r\nimport { ItemLink } from \"../../../reuseables/ItemLink\";\r\nimport { differenceInMinutes, format, parseISO } from \"date-fns\";\r\n\r\nexport const UpcomingTasks = ({ upcomingTasks }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\r\n\treturn (\r\n\t\t<Grid item xl={6} xs={12} className={classes.mainContainer}>\r\n\t\t\t<Grid container justify=\"center\" className={classes.container}>\r\n\t\t\t\t<Grid item xs={12} className={classes.gridHeader}>\r\n\t\t\t\t\t<div className={classes.header}>{t(\"dashboard.upcomingTasks\")}</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.gridData}>\r\n\t\t\t\t\t{upcomingTasks.length ? (\r\n\t\t\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\tclassName={classes.headersContainer}\r\n\t\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.headerGrid}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"tasksModule.taskId\")}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.headerGrid}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"tasksModule.title\")}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.headerGrid}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.headerContainer}>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"scheduler.nextIteration\")}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t{upcomingTasks.map((ut, i) => (\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\t\tclassName={classes.rowContainer}\r\n\t\t\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.cellData}>\r\n\t\t\t\t\t\t\t\t\t\t\t<ItemLink\r\n\t\t\t\t\t\t\t\t\t\t\t\titemId={ut.data.taskId}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmodule={\"tasks\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsize={matches ? 13 : 16}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={clsx(classes.cellData)}>\r\n\t\t\t\t\t\t\t\t\t\t\t{ut.data.title}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.cellGrid}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={clsx(classes.cellData)}>\r\n\t\t\t\t\t\t\t\t\t\t\t{format(parseISO(ut.date), lang.dateonly)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className={classes.noData}>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc=\"https://img.icons8.com/ios-filled/100/4a90e2/remove-data.png\"\r\n\t\t\t\t\t\t\t\tclassName={classes.noDataImage}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className={classes.noDataText}>{t(\"dashboard.noData\")}</div>\r\n\t\t\t\t\t\t\t<div className={classes.noDataSecondary}>\r\n\t\t\t\t\t\t\t\t{t(\"dashboard.noDataSecondary\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {},\r\n\tcontainer: {\r\n\t\tpadding: \"20px 20px\",\r\n\t\theight: \"400px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tpadding: \"10px 0\",\r\n\t\t\theight: \"auto\",\r\n\t\t},\r\n\t},\r\n\tgridHeader: {\r\n\t\tbackground: \"black\",\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\theight: \"60px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: 0,\r\n\t\t\tposition: \"sticky\",\r\n\t\t\ttop: \"0px\",\r\n\t\t},\r\n\t},\r\n\theader: {\r\n\t\tfontSize: \"18px\",\r\n\t\tpadding: \"20px 20px 0\",\r\n\t},\r\n\tgridData: {\r\n\t\tbackground: \"rgba(0,0,0,0.2)\",\r\n\t\tborderRadius: \"0 0 10px 10px\",\r\n\t\theight: \"calc(100% - 60px)\",\r\n\t\toverflow: 'auto',\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: \"0\",\r\n\t\t},\r\n\t},\r\n\tstatusHeaderContainer: {\r\n\t\tpadding: \"0 10px\",\r\n\t},\r\n\theadersContainer: {\r\n\t\tbackground: \"rgba(255,255,255,0.2)\",\r\n\t\tborderBottom: \"2px solid rgba(255,255,255,0.2)\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n            background: \"#575757\",\r\n\t\t\tposition: \"sticky\",\r\n\t\t\ttop: '60px',\r\n\t\t}\r\n\t},\r\n\theaderContainer: {\r\n\t\tcolor: \"white\",\r\n\t\ttextAlign: \"center\",\r\n\t\tpadding: \"15px 10px 10px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"13px\",\r\n\t\t},\r\n\t},\r\n    headerGrid: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center'\r\n\t},\r\n\trowContainer: {\r\n\t\tpadding: \"10px 5px\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.1)\",\r\n\t},\r\n\tcellGrid: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tcellData: {\r\n\t\tcolor: \"white\",\r\n\t\twidth: \"fit-content\",\r\n\t\ttextAlign: \"center\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: \"12px\",\r\n\t\t},\r\n\t},\r\n\tnoData: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\ttextAlign: \"center\",\r\n        marginTop: '35px'\r\n\t},\r\n\tnoDataText: {\r\n\t\tpadding: \"20px\",\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"22px\",\r\n\t},\r\n\tnoDataSecondary: {\r\n\t\tpadding: \"0px 30px\",\r\n\t\tfontSize: \"14px\",\r\n\t\tcolor: \"rgba(255,255,255,0.5)\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\user\\PasswordRecovery.js",["1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport {\r\n\tContainer,\r\n\tGrid,\r\n\tBox,\r\n\tTypography,\r\n\tFormControl,\r\n\tOutlinedInput,\r\n\tInputAdornment,\r\n\tInputLabel,\r\n\tIconButton,\r\n\tButton,\r\n\tLink,\r\n\tCircularProgress,\r\n\tmakeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff, Error } from \"@material-ui/icons\";\r\nimport colorSplash from \"../../assets/images/grey.jpg\";\r\nimport {\r\n\tattemptToSignin,\r\n\thandleLS,\r\n\tsendRecoveryEmail,\r\n} from \"../../api/userApi\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LanguageContext } from \"../../context/LanguageContext\";\r\nimport { getLocalization } from \"../../api/genericApi\";\r\nimport { ChangeLanguage } from \"../reuseables/ChangeLanguage\";\r\n\r\nexport const PasswordRecovery = () => {\r\n\tconst classes = useStyles();\r\n\tconst loginButton = useRef();\r\n\tconst history = useHistory();\r\n\tconst { t } = useTranslation();\r\n\tconst [userEmail, setUserEmail] = useState(\"\");\r\n\tconst [emailSent, setEmailSent] = useState(false);\r\n\r\n\tconst [errors, setErrors] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetUserEmail(event.target.value);\r\n\t\tif (errors.length) {\r\n\t\t\tsetErrors([]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSubmit = async () => {\r\n\t\tsetIsLoading(true);\r\n\t\tlet isValid = await validateFields();\r\n\t\tif (isValid) {\r\n\t\t\tconst checkUser = await sendRecoveryEmail(userEmail);\r\n\t\t\tif (checkUser.status === 404) {\r\n\t\t\t\tsetErrors([{ field: \"userEmail\", message: t(\"errors.emailNotFound\") }]);\r\n\t\t\t} else {\r\n\t\t\t\tconst { response } = checkUser;\r\n\t\t\t\tif (response.includes(\"OK\")) {\r\n\t\t\t\t\tsetEmailSent(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n\tconst validateFields = async () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet errs = [];\r\n\t\t\tif (!userEmail) {\r\n\t\t\t\terrs.push({ field: \"userEmail\", message: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (errs.length) {\r\n\t\t\t\tsetErrors(errs);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\treject(false);\r\n\t\t\t}\r\n\t\t\tresolve(true);\r\n\t\t});\r\n\t};\r\n\r\n\tconst checkEnter = (e) => {\r\n\t\tif (e.keyCode === 13) {\r\n\t\t\thandleSubmit();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid container alignItems='center' justify=\"center\" className={classes.mainContainer}>\r\n            \r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\tclassName={classes.loginContainer}\r\n\t\t\t\txl={4}\r\n\t\t\t\tlg={4}\r\n\t\t\t\tmd={6}\r\n\t\t\t\tsm={6}\r\n\t\t\t\txs={11}\r\n\t\t\t>\r\n                <ChangeLanguage className={classes.changeLanguage}/>\r\n\t\t\t\t<Box className={classes.bannerContainer} bgcolor=\"primary.main\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc=\"https://leevstore.blob.core.windows.net/images/leev_logo_transparent.png\"\r\n\t\t\t\t\t\tclassName={classes.logo}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t\t{emailSent ? (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.instructions}>\r\n\t\t\t\t\t\t\t<Typography className={classes.headerText}>\r\n\t\t\t\t\t\t\t\t{`${t(\"login.emailSentSuccessfully\")} ${userEmail}`}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.submitContainer}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={() => history.push('/login')}\r\n\t\t\t\t\t\t\t>\t\r\n\t\t\t\t\t\t\t\t\t{t(\"login.backToLogin\")}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.headerContainer}>\r\n\t\t\t\t\t\t\t<Typography className={classes.header}>\r\n\t\t\t\t\t\t\t\t{t(\"login.recoverPassword\")}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.instructions}>\r\n\t\t\t\t\t\t\t<Typography className={classes.headerText}>\r\n\t\t\t\t\t\t\t\t{t(\"login.recoverPasswordText\")}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography className={classes.headerText}>\r\n\t\t\t\t\t\t\t\t{t(\"login.recoveryInstructions\")}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.inputsContainer}>\r\n\t\t\t\t\t\t\t<FormControl variant=\"outlined\" className={classes.textInput} autoComplete={\"off\"}>\r\n\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-input-email\">\r\n\t\t\t\t\t\t\t\t\t{t(\"login.email\")}\r\n\t\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === \"userEmail\").length > 0\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tid=\"outlined-input-email\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tvalue={userEmail}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\tlabelWidth={50}\r\n\t\t\t\t\t\t\t\t\tonKeyDown={checkEnter}\r\n                                    autoComplete={\"off\"}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t{errors.length > 0\r\n\t\t\t\t\t\t\t? errors.map((e, i) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Container\r\n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.errorContainer}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Error fontSize=\"inherit\" color={\"error\"} />\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.error}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"error\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{e.message}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.submitContainer}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t\t\tref={loginButton}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t\t\t\t\t<CircularProgress color={\"secondary\"} size={30} />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\tt(\"login.sendEmail\")\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\tmainContainer: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\tposition: \"fixed\",\r\n\t\tbackgroundImage: `url(${colorSplash})`,\r\n\t\tbackgroundSize: \"cover\",\r\n\t},\r\n\tloginContainer: {\r\n\t\tborderRadius: \"10px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.18)\",\r\n\t\tpadding: \"0\",\r\n\t\tbackground: \"rgba(255, 255, 255, 0.2)\",\r\n\t\tboxShadow: \"0 8px 32px 0 rgb(0 0 0 / 37%)\",\r\n\t\tbackdropFilter: \"blur(8px)\",\r\n\t\t\"-webkit-backdrop-filter\": \"blur( 10px )\",\r\n\t\theight: \"fit-content\"\r\n\t},\r\n\tbannerContainer: {\r\n\t\twidth: \"100%\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\tpadding: \"0\",\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t},\r\n\tbanner: {\r\n\t\tcolor: grey[50],\r\n\t\tfontWeight: 600,\r\n\t\tfontSize: \"24px\",\r\n\t\tposition: \"relative\",\r\n\t\tmargin: \"auto\",\r\n\t\tfontFamily: \"Kaushan\",\r\n\t},\r\n\r\n\theaderContainer: {\r\n\t\twidth: \"100%\",\r\n\t\tdisplay: \"flex\",\r\n\t\tWebkitJustifyContent: \"center\",\r\n\t\tmargin: \"40px 0 0 0\",\r\n\t},\r\n\theaderText: {\r\n\t\ttextAlign: \"center\",\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"12px\",\r\n\t},\r\n\theader: {\r\n\r\n\t\tfontSize: \"24px\",\r\n\t\tfontWeight: \"300\",\r\n\t\theight: \"70%\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\r\n\tinputsContainer: {\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t\tpadding: \"0px 14px 0px\",\r\n\t},\r\n\ttextInput: {\r\n\t\twidth: \"80%\",\r\n\t\t\"& .MuiOutlinedInput-root\": {\r\n\t\t\t\"& input\": {\r\n\t\t\t\tpadding: \"18.5px 28px\",\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tsubmitContainer: {\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t\tpadding: \"14px 14px\",\r\n\t\tmarginBottom: \"40px\",\r\n\t},\r\n\tsubmitButton: {\r\n\t\twidth: \"80%\",\r\n\t\theight: \"50px\",\r\n\t\tmargin: \"auto\",\r\n\t\tposition: \"relative\",\r\n\t\tfontSize: \"16px\",\r\n\t\tborderRadius: \"50px\",\r\n\t},\r\n\tforgotPassContainer: {\r\n\t\twidth: \"100%\",\r\n\t\tpadding: \"0px 64px 60px\",\r\n\t},\r\n\tforgotPass: {\r\n\t\tfontSize: \"14px\",\r\n\t},\r\n\terrorContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"initial\",\r\n\t\twidth: \"75%\",\r\n\t\tpadding: \"0\",\r\n\t\tfontSize: \"18px\",\r\n\t},\r\n\terror: {\r\n\t\tmarginLeft: \"8px\",\r\n\t\tfontSize: \"12px\",\r\n\t},\r\n\tlogo: {\r\n\t\twidth: \"100px\",\r\n\t\theight: \"100px\",\r\n\t},\r\n\tlogoContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\theight: \"fit-content\",\r\n\t},\r\n\tinstructions: {\r\n\t\tmargin: \"20px auto\",\r\n\t\tpadding: \"15px 30px\",\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\twidth: \"fit-content\",\r\n\t\tborderRadius: \"5px\",\r\n        [theme.breakpoints.down('sm')]: {\r\n            borderRadius: \"0px\",\r\n        }\r\n\t},\r\n    changeLanguage: {\r\n        position: 'absolute'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ChangeLanguage.js",["1175"],"import { Button, makeStyles, Menu, MenuItem } from \"@material-ui/core\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { getLocalization } from \"../../api/genericApi\";\r\nimport { LanguageContext } from \"../../context/LanguageContext\";\r\n\r\nconst languages = [\"en\", \"he\"];\r\n\r\nexport const ChangeLanguage = ({ className }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang, setLang } = useContext(LanguageContext);\r\n    const [langMenu, setLangMenu] = useState(false);\r\n\r\n    const changeLanguage = (l) => (event) => {\r\n\t\tsetLang(getLocalization(l))\r\n\t\tsetLangMenu(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={className}>\r\n\t\t\t<Button\r\n\t\t\t\tclassName={classes.changeLanguage}\r\n\t\t\t\tonClick={(e) => setLangMenu(e.target)}\r\n\t\t\t>\r\n\t\t\t\t{lang.code ? lang.code.toUpperCase() : \"\"}\r\n\t\t\t</Button>\r\n\t\t\t<Menu\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tpaper: classes.langMenu,\r\n\t\t\t\t}}\r\n\t\t\t\tkeepMounted\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\thorizontal: \"right\",\r\n\t\t\t\t}}\r\n\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\thorizontal: \"right\",\r\n\t\t\t\t}}\r\n\t\t\t\tanchorEl={langMenu}\r\n\t\t\t\tkeepMounted\r\n\t\t\t\topen={Boolean(langMenu)}\r\n\t\t\t\tonClose={() => setLangMenu(null)}\r\n\t\t\t>\r\n\t\t\t\t{languages.map((l, i) => (\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\tonClick={changeLanguage(l)}\r\n\t\t\t\t\t\tclassName={classes.langItem}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{l.toUpperCase()}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t))}\r\n\t\t\t</Menu>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    langMenu: {\r\n        background: 'transparent',\r\n        backdropFilter: 'blur(10px)',\r\n        \r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n\r\n    },\r\n    changeLanguage: {\r\n        background: 'transparent',\r\n        color: 'white',\r\n        borderRadius: '0',\r\n        height: '70px'\r\n    },\r\n    langItem: {\r\n        color: 'white',\r\n        width: '100%',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.1)'\r\n        }\r\n    },\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\user\\ResetPassword.js",["1176","1177","1178","1179","1180","1181","1182","1183"],"import {\r\n\tBox,\r\n\tButton,\r\n\tCircularProgress,\r\n\tContainer,\r\n\tFormControl,\r\n\tGrid,\r\n\tIconButton,\r\n\tInputAdornment,\r\n\tInputLabel,\r\n\tmakeStyles,\r\n\tOutlinedInput,\r\n\tTypography,\r\n} from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { Error, Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport { changePassword, verifyResetPasswordHandle } from \"../../api/userApi\";\r\nimport colorSplash from \"../../assets/images/grey.jpg\";\r\nimport { LanguageContext } from \"../../context/LanguageContext\";\r\nimport { ChangeLanguage } from \"../reuseables/ChangeLanguage\";\r\n\r\nexport const ResetPassword = () => {\r\n\tconst classes = useStyles();\r\n\tconst loginButton = useRef();\r\n\tconst location = useLocation();\r\n\tconst history = useHistory();\r\n\tconst params = useParams();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst [userId, setUserId] = useState(null);\r\n\tconst [userEmail, setUserEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(null);\r\n\tconst [verifyPassword, setVerifyPassword] = useState(null);\r\n\tconst [showPassword, setShowPassword] = useState(null);\r\n\tconst [pageError, setPageError] = useState(null);\r\n\tconst [success, setSuccess] = useState(false);\r\n    const [ redirectCounter , setRedirectCounter ] = useState(5);\r\n\r\n\tconst [errors, setErrors] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!success) return;\r\n        const arr = Array.from(Array(5).keys())\r\n        let i = 4;\r\n        let interval = setInterval(() => {\r\n            setRedirectCounter(arr[i]);\r\n            if (i === 0) {\r\n                clearInterval(interval);\r\n                history.push('/login')\r\n            }\r\n            i--;\r\n        }, 1000);\r\n\r\n    }, [success]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (params.handle == 0) {\r\n\t\t\tsetPageError(true);\r\n\t\t\thistory.replace(\"/reset/0\");\r\n\t\t}\r\n\t\tverifyResetPasswordHandle(params.handle).then((res) => {\r\n\t\t\tif (res.err) {\r\n\t\t\t\tsetPageError(true);\r\n\t\t\t\thistory.replace(\"/reset/0\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\thistory.replace(`/reset/resetnow`);\r\n\t\t\tsetUserId(res.data);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst handleChange = (field) => (event) => {\r\n\t\tif (field === \"password\") {\r\n\t\t\tsetPassword(event.target.value);\r\n\t\t} else {\r\n\t\t\tsetVerifyPassword(event.target.value);\r\n\t\t}\r\n\t\tsetErrors([]);\r\n\t};\r\n\r\n\tconst handleSubmit = async () => {\r\n\t\tsetIsLoading(true);\r\n\t\tlet isValid = await validateFields();\r\n\t\tif (isValid) {\r\n\t\t\tconst cp = await changePassword(userId, password);\r\n\t\t\tsetSuccess(true);\r\n\t\t}\r\n\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n\tconst validateFields = async () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet errs = [];\r\n\t\t\tif (!password) {\r\n\t\t\t\terrs.push({ field: \"password\", message: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (!verifyPassword) {\r\n\t\t\t\terrs.push({ field: \"verifyPassword\", message: t(\"errors.isRequired\") });\r\n\t\t\t}\r\n\t\t\tif (verifyPassword != password) {\r\n\t\t\t\terrs.push({\r\n\t\t\t\t\tfield: \"verifyPassword\",\r\n\t\t\t\t\tmessage: t(\"errors.passwordsDontMatch\"),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (errs.length) {\r\n\t\t\t\tsetErrors(errs);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\treject(false);\r\n\t\t\t}\r\n\t\t\tresolve(true);\r\n\t\t});\r\n\t};\r\n\r\n\tconst checkEnter = (e) => {\r\n\t\tif (e.keyCode === 13) {\r\n\t\t\thandleSubmit();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClickShowPassword = (which) => (event) => {\r\n\t\tif (which === showPassword) {\r\n\t\t\tsetShowPassword(null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetShowPassword(which);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid\r\n\t\t\tcontainer\r\n\t\t\talignItems=\"center\"\r\n\t\t\tjustify=\"center\"\r\n\t\t\tclassName={classes.mainContainer}\r\n\t\t>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\tclassName={classes.loginContainer}\r\n\t\t\t\txl={4}\r\n\t\t\t\tlg={4}\r\n\t\t\t\tmd={6}\r\n\t\t\t\tsm={6}\r\n\t\t\t\txs={11}\r\n\t\t\t>\r\n\t\t\t\t<ChangeLanguage className={classes.changeLanguage} />\r\n\t\t\t\t<Box className={classes.bannerContainer} bgcolor=\"primary.main\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc=\"https://leevstore.blob.core.windows.net/images/leev_logo_transparent.png\"\r\n\t\t\t\t\t\tclassName={classes.logo}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t\t{pageError ? (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.instructions}>\r\n\t\t\t\t\t\t\t<Typography className={classes.headerText}>\r\n\t\t\t\t\t\t\t\t{`${t(\"login.resetFailed\")} ${userEmail}`}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.submitContainer}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={() => history.push(\"/login\")}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{t(\"login.backToLogin\")}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.headerContainer}>\r\n\t\t\t\t\t\t\t<Typography className={classes.header}>\r\n\t\t\t\t\t\t\t\t{t(\"login.passwordRenewal\")}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.instructions}>\r\n\t\t\t\t\t\t\t<Typography className={classes.headerText}>\r\n\t\t\t\t\t\t\t\t{t(\"login.resetPasswordText\")}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.inputsContainer}>\r\n\t\t\t\t\t\t\t<FormControl variant=\"outlined\" className={classes.textInput}>\r\n\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-input-password\">\r\n\t\t\t\t\t\t\t\t\t{t(\"login.newPassword\")}\r\n\t\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === \"password\").length > 0\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tid=\"outlined-input-password\"\r\n\t\t\t\t\t\t\t\t\ttype={showPassword === \"password\" ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange(\"password\")}\r\n\t\t\t\t\t\t\t\t\tlabelWidth={lang.code === \"en\" ? 120 : 95}\r\n\t\t\t\t\t\t\t\t\tonKeyDown={checkEnter}\r\n\t\t\t\t\t\t\t\t\tonCopy={(e) => e.preventDefault()}\r\n\t\t\t\t\t\t\t\t\tendAdornment={\r\n\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"toggle password visibility\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleClickShowPassword(\"password\")}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={(e) => e.preventDefault()}\r\n\t\t\t\t\t\t\t\t\t\t\t\tedge=\"end\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{showPassword === \"password\" ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Visibility />\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<VisibilityOff />\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.inputsContainer}>\r\n\t\t\t\t\t\t\t<FormControl variant=\"outlined\" className={classes.textInput}>\r\n\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-input-password\">\r\n\t\t\t\t\t\t\t\t\t{t(\"login.verifyPassword\")}\r\n\t\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === \"verifyPassword\").length >\r\n\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tid=\"outlined-input-password\"\r\n\t\t\t\t\t\t\t\t\ttype={showPassword === \"verifyPassword\" ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\t\t\tvalue={verifyPassword}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange(\"verifyPassword\")}\r\n\t\t\t\t\t\t\t\t\tlabelWidth={lang.code === \"en\" ? 130 : 95}\r\n\t\t\t\t\t\t\t\t\tonKeyDown={checkEnter}\r\n\t\t\t\t\t\t\t\t\tonPaste={(e) => e.preventDefault()}\r\n\t\t\t\t\t\t\t\t\tendAdornment={\r\n\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"toggle password visibility\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleClickShowPassword(\"verifyPassword\")}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={(e) => e.preventDefault()}\r\n\t\t\t\t\t\t\t\t\t\t\t\tedge=\"end\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{showPassword === \"verifyPassword\" ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Visibility />\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<VisibilityOff />\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t{errors.length > 0\r\n\t\t\t\t\t\t\t? errors.map((e, i) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Container\r\n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.errorContainer}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Error fontSize=\"inherit\" color={\"error\"} />\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.error}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"error\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{e.message}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t<Container component=\"div\" className={classes.submitContainer}>\r\n\t\t\t\t\t\t\t{success ? (\r\n\t\t\t\t\t\t\t\t<div className={classes.success}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.successMessage}>\r\n\t\t\t\t\t\t\t\t\t\t{t(\"login.passwordChangedSuccessfully\")}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.redirectingIn}>\r\n\t\t\t\t\t\t\t\t\t\t{`${t(\"login.redirectingToLogin\")} ${redirectCounter} ${t(\"dates.seconds\")}...`}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t\t\t\tref={loginButton}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t\t\t\t\t\t<CircularProgress color={\"secondary\"} size={30} />\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\tt(\"login.savePassword\")\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\tposition: \"fixed\",\r\n\t\tbackgroundImage: `url(${colorSplash})`,\r\n\t\tbackgroundSize: \"cover\",\r\n\t},\r\n\tloginContainer: {\r\n\t\tborderRadius: \"10px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.18)\",\r\n\t\tpadding: \"0\",\r\n\t\tbackground: \"rgba(255, 255, 255, 0.2)\",\r\n\t\tboxShadow: \"0 8px 32px 0 rgb(0 0 0 / 37%)\",\r\n\t\tbackdropFilter: \"blur(8px)\",\r\n\t\t\"-webkit-backdrop-filter\": \"blur( 10px )\",\r\n\t\theight: \"fit-content\",\r\n\t},\r\n\tbannerContainer: {\r\n\t\twidth: \"100%\",\r\n\t\tborderRadius: \"10px 10px 0 0\",\r\n\t\tpadding: \"0\",\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t},\r\n\tbanner: {\r\n\t\tcolor: grey[50],\r\n\t\tfontWeight: 600,\r\n\t\tfontSize: \"24px\",\r\n\t\tposition: \"relative\",\r\n\t\tmargin: \"auto\",\r\n\t\tfontFamily: \"Kaushan\",\r\n\t},\r\n\r\n\theaderContainer: {\r\n\t\twidth: \"100%\",\r\n\t\tdisplay: \"flex\",\r\n\t\tWebkitJustifyContent: \"center\",\r\n\t\tmargin: \"40px 0 0 0\",\r\n\t},\r\n\theaderText: {\r\n\t\ttextAlign: \"center\",\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"12px\",\r\n\t},\r\n\theader: {\r\n\t\tfontSize: \"24px\",\r\n\t\tfontWeight: \"300\",\r\n\t\theight: \"70%\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\r\n\tinputsContainer: {\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t\tpadding: \"0px 14px 0px\",\r\n\t},\r\n\ttextInput: {\r\n\t\twidth: \"80%\",\r\n\t\tmargin: \"5px\",\r\n\t\t\"& .MuiOutlinedInput-root\": {\r\n\t\t\t\"& input\": {\r\n\t\t\t\tpadding: \"18.5px 28px\",\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tsubmitContainer: {\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\t\tpadding: \"14px 14px\",\r\n\t\tmarginBottom: \"40px\",\r\n\t},\r\n\tsubmitButton: {\r\n\t\twidth: \"80%\",\r\n\t\theight: \"50px\",\r\n\t\tmargin: \"auto\",\r\n\t\tposition: \"relative\",\r\n\t\tfontSize: \"16px\",\r\n\t\tborderRadius: \"50px\",\r\n\t},\r\n\tforgotPassContainer: {\r\n\t\twidth: \"100%\",\r\n\t\tpadding: \"0px 64px 60px\",\r\n\t},\r\n\tforgotPass: {\r\n\t\tfontSize: \"14px\",\r\n\t},\r\n\terrorContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"initial\",\r\n\t\twidth: \"75%\",\r\n\t\tpadding: \"0\",\r\n\t\tfontSize: \"18px\",\r\n\t},\r\n\terror: {\r\n\t\tmarginLeft: \"8px\",\r\n\t\tfontSize: \"12px\",\r\n\t},\r\n\tlogo: {\r\n\t\twidth: \"100px\",\r\n\t\theight: \"100px\",\r\n\t},\r\n\tlogoContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\theight: \"fit-content\",\r\n\t},\r\n\tinstructions: {\r\n\t\tmargin: \"20px auto\",\r\n\t\tpadding: \"15px 30px\",\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\twidth: \"fit-content\",\r\n\t\tborderRadius: \"5px\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tborderRadius: \"0px\",\r\n\t\t},\r\n\t},\r\n\tchangeLanguage: {\r\n\t\tposition: \"absolute\",\r\n\t},\r\n\tsuccessMessage: {\r\n\t\tcolor: \"white\",\r\n\t\tbackground: \"#01b63A\",\r\n\t\ttextAlign: \"center\",\r\n\t\tpadding: \"10px 30px\",\r\n\t\tborderRadius: \"5px\",\r\n\t\tmargin: \"10px 0\",\r\n\t},\r\n\tredirectingIn: {\r\n\t\tcolor: \"white\",\r\n\t\tbackground: \"rgba(0,0,0,0.5)\",\r\n\t\tpadding: \"5px 10px\",\r\n\t\tfontSize: \"12px\",\r\n\t\ttextAlign: \"center\",\r\n\t\tborderRadius: \"50px\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\clients\\UpsertClient.js",["1184","1185","1186","1187"],"C:\\projects\\leev\\leev-fe\\src\\api\\adminApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\clients\\Clients.js",["1188","1189","1190","1191","1192"],"import { Grid, responsiveFontSizes } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router\";\r\nimport { getTenants } from \"../../../api/adminApi\";\r\nimport { DynamicTable } from \"../../reuseables/DynamicTable\";\r\nimport { ClientControls } from \"./ClientControls\";\r\n\r\nexport const Clients = () => {\r\n\tconst { path } = useRouteMatch();\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [rows, setRows] = useState([]);\r\n\tconst [page, setPage] = useState(0);\r\n\tconst [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetTenants(page, rowsPerPage).then((res) => {\r\n            console.log(responsiveFontSizes)\r\n\t\t\tsetRows(res);\r\n\t\t});\r\n\t}, [page, rowsPerPage]);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    }\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(event.target.value);\r\n        setPage(0);\r\n    }\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Grid item xs={12} xl={11}>\r\n\t\t\t\t<DynamicTable\r\n\t\t\t\t\trows={rows}\r\n\t\t\t\t\trowsPerPage={rowsPerPage}\r\n\t\t\t\t\tpage={page}\r\n\t\t\t\t\thandleChangePage={handleChangePage}\r\n\t\t\t\t\thandleChangeRowsPerPage={handleChangeRowsPerPage}\r\n\t\t\t\t\tcolumns={[\"_id\", \"name\", \"contactName\", \"contactNumber\", \"lang\"]}\r\n\t\t\t\t\tActions={ClientControls}\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\clients\\ClientControls.js",["1193","1194","1195","1196","1197"],"import {\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tMenu,\r\n\tMenuItem,\r\n\tListItemIcon,\r\n} from \"@material-ui/core\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport DoubleArrowIcon from \"@material-ui/icons/DoubleArrow\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\nimport { SnackbarContext } from \"../../../context/SnackbarContext\";\r\nimport { Can } from \"../../reuseables/Can\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { deleteTenant } from \"../../../api/adminApi\";\r\nimport { AlertDialog } from \"../../reuseables/AlertDialog\";\r\nimport { getSuccessMessage } from \"../../../api/genericApi\";\r\nimport { UpsertClient } from './UpsertClient'\r\n\r\nexport const ClientControls = ({\r\n    data\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n    const { setSnackbar } = useContext(SnackbarContext)\r\n\tconst [expanded, setExpanded] = useState(null);\r\n    const [ alertDialog, setAlertDialog ] = useState(null);\r\n    const [ editDetails, setEditDetails ] = useState(false);\r\n\r\n\tconst handleExpanded = (event) => {\r\n\t\tif (expanded) {\r\n\t\t\tsetExpanded(null);\r\n\t\t}\r\n\t\tsetExpanded(event.currentTarget);\r\n\t};\r\n\r\n    const deleteClient = () => {\r\n\t\tsetAlertDialog({\r\n\t\t\thandleConfirm: async () => {\r\n\t\t\t\tconst res = await deleteTenant(data._id);\r\n\t\t\t\tif (res) {\r\n\t\t\t\t\tsetAlertDialog(null);\r\n                    setSnackbar(getSuccessMessage('client', data.name, 'delete'))\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thandleCancel: () => setAlertDialog(null),\r\n\t\t\ttext: `${t(\"clientsModule.deleteConfirmation\")} ${data.name}?`,\r\n\t\t\ttitle: `${t(\"clientsModule.deleteClient\")}`,\r\n\t\t});\r\n\t};\r\n\r\n    const editClient = () => {\r\n        setEditDetails(data._id);\r\n    }\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<IconButton className={classes.expandIcon} onClick={handleExpanded}>\r\n\t\t\t\t<MoreVertIcon className={classes.icon} />\r\n\t\t\t</IconButton>\r\n\t\t\t<Menu\r\n\t\t\t\tonClick={() => setExpanded(null)}\r\n\t\t\t\tclassName={classes.container}\r\n\t\t\t\tanchorEl={expanded}\r\n\t\t\t\topen={Boolean(expanded)}\r\n\t\t\t\tonClose={() => setExpanded(null)}\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tpaper: classes.menu,\r\n\t\t\t\t}}\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\thorizontal: \"left\",\r\n\t\t\t\t}}\r\n\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\thorizontal: \"left\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdirection: lang.code === \"he\" ? \"rtl\" : \"ltr\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={classes.menuHeader}\r\n\t\t\t\t>\r\n\t\t\t\t\t{t(\"clientsModule.clientMenu\")}\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tstyle={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n\t\t\t\t\t\tonClick={() => setExpanded(null)}\r\n\t\t\t\t\t\tclassName={classes.close}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CloseRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t<MenuItem\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdirection: lang.code === \"he\" ? \"rtl\" : \"ltr\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\tonClick={editClient}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t<EditIcon className={classes.icon} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t{t(\"clientsModule.upsert.editClientDetails\")}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t\t<MenuItem\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdirection: lang.code === \"he\" ? \"rtl\" : \"ltr\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\tonClick={deleteClient}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t<DeleteIcon className={classes.icon} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t{t(\"clientsModule.delete\")}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t</Menu>\r\n            {\r\n                Boolean(alertDialog) && \r\n                <AlertDialog alertDialog={alertDialog} />\r\n            }\r\n            {\r\n                Boolean(editDetails) &&\r\n                <UpsertClient tenantId={data._id} handleClose={() => setEditDetails(null)}/>\r\n            }\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: \"flex\",\r\n\t},\r\n\texpandIcon: {\r\n\t\tcolor: \"white\",\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n        padding: '6px',\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.5)\",\r\n\t\t},\r\n\t},\r\n\ticonBtn: {\r\n\t\tcolor: \"white\",\r\n\t\tmarginRight: \"20px\",\r\n\t\tborderRadius: \"0 25px 25px 0\",\r\n        padding: '6px',\r\n\t\t\"&:hover\": {\r\n\t\t\ttransform: \"scale(1.077)\",\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: \"16px\",\r\n\t\tcolor: \"white\",\r\n        margin: 'auto'\r\n\t},\r\n\tmenu: {\r\n\t\tbackground: \"rgba(0,0,0,0.7)\",\r\n\t\tbackdropFilter: \"blur(10px)\",\r\n\t\tcolor: \"white\",\r\n\t\tboxShadow: \"rgba(0,0,0,0.4) 0 0 2px 1px\",\r\n\t\tborderRadius: \"10px\",\r\n\t},\r\n\tmenuitem: {\r\n\t\tminWidth: \"200px\",\r\n\t},\r\n\tmenuHeader: {\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tmarginBottom: \"10px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tpadding: \"5px 10px 5px 20px\",\r\n\t\talignItems: \"center\",\r\n\t\toutline: \"none\",\r\n\t},\r\n\tclose: {\r\n\t\tpadding: \"6px\",\r\n\t\tmargin: 0,\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\DynamicTable.js",["1198","1199","1200","1201","1202","1203"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n\tGrid,\r\n\tTable,\r\n\tTableBody,\r\n\tTableCell,\r\n\tTableContainer,\r\n\tTableFooter,\r\n\tTableHead,\r\n\tTablePagination,\r\n\tTableRow,\r\n\tmakeStyles,\r\n\tPaper,\r\n} from \"@material-ui/core\";\r\nimport TablePaginationActions from \"@material-ui/core/TablePagination/TablePaginationActions\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport clsx from 'clsx'\r\n\r\nexport const DynamicTable = ({ rows, columns, page, rowsPerPage, handleChangePage, handleChangeRowsPerPage, Actions}) => {\r\n\tconst classes = useStyles();\r\n    const { t }= useTranslation();\r\n\r\n\r\n\treturn (\r\n\t\t<TableContainer>\r\n\t\t\t<Table className={classes.table}>\r\n\t\t\t\t<TableHead>\r\n\t\t\t\t\t<TableRow className={clsx(classes.row, classes.headerRow)}>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcolumns.map((rh, ird) => {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\" key={ird} className={classes.headerTh}>\r\n\t\t\t\t\t\t\t\t\t\t{t(`clientsModule.${rh}`)}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{\r\n                                Boolean(Actions) &&\r\n                                <TableCell component=\"td\" scope=\"row\" className={classes.headerTh}>\r\n\t\t\t\t\t\t\t\t\t\t\r\n                                </TableCell>\r\n                            }\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t</TableHead>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{\r\n\t\t\t\t\tBoolean(rows.length) &&\r\n\t\t\t\t\trows.map((row, ir) => (\r\n\t\t\t\t\t\t<TableRow key={ir}>\r\n\t\t\t\t\t\t\t{Object.entries(row).map((rd, rg) => {\r\n\t\t\t\t\t\t\t\tif (columns.includes(rd[0])) {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<TableCell component=\"td\" scope=\"row\" className={classes.dataCell}>\r\n\t\t\t\t\t\t\t\t\t\t\t{rd[1]}\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})}\r\n                            {\r\n                                Boolean(Actions) &&\r\n                                <TableCell component=\"td\" scope=\"row\" className={classes.dataCell}>\r\n\t\t\t\t\t\t\t\t\t\t<Actions data={row} />\r\n                                </TableCell>\r\n                            }\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</TableBody>\r\n\t\t\t\t<TableFooter>\r\n\t\t\t\t\t<TableRow className={classes.paginationRow}>\r\n\t\t\t\t\t\t<TablePagination\r\n\t\t\t\t\t\t\trowsPerPageOptions={[1, 5, 10, 25, { label: \"All\", value: -1 }]}\r\n\t\t\t\t\t\t\tcount={rows.length}\r\n\t\t\t\t\t\t\trowsPerPage={rowsPerPage}\r\n\t\t\t\t\t\t\tpage={page}\r\n\t\t\t\t\t\t\tcount={-1}\r\n\t\t\t\t\t\t\tSelectProps={{\r\n\t\t\t\t\t\t\t\tinputProps: { \"aria-label\": \"rows per page\" }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonChangePage={handleChangePage}\r\n\t\t\t\t\t\t\tonChangeRowsPerPage={handleChangeRowsPerPage}\r\n\t\t\t\t\t\t\tActionsComponent={TablePaginationActions}\r\n                            labelDisplayedRows={({ from, to, count }) => `${t('clientsModule.displaying')} ${t('clientsModule.rows')} ${from} - ${to} `}\r\n                            labelRowsPerPage={t('clientsModule.rowsPerPage')}\r\n                            classes={{\r\n                                root: classes.paginatroRoot\r\n                            }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t</TableFooter>\r\n\t\t\t</Table>\r\n\t\t</TableContainer>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        background: 'transparent',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        margin: '20px 0'\r\n    },\r\n    headerTh: {\r\n        background: 'rgba(0,0,0,0.7)',\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        border: 'none', \r\n    },\r\n    headerRow: {\r\n        borderRadius: '5px'\r\n    },\r\n    dataCell: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        color: 'white',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        textAlign: 'center'\r\n    },\r\n    paginationRow: {\r\n        background: 'rgba(255,255,255,0.2)',\r\n        color: 'white'\r\n    },\r\n    paginatroRoot: {\r\n        border: 'none'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\assets\\icons\\MenuIcon.js",[],"C:\\projects\\leev\\leev-fe\\src\\assets\\icons\\NotificationsIcon.js",[],"C:\\projects\\leev\\leev-fe\\src\\assets\\icons\\CalenderIcon.js",[],"C:\\projects\\leev\\leev-fe\\src\\assets\\icons\\MapIcon.js",[],"C:\\projects\\leev\\leev-fe\\src\\assets\\icons\\AddIcon.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\EnvContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\NoDataFound.js",["1204"],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ReturnToPrevious.js",["1205","1206"],"import { IconButton, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\nimport { useHistory, useLocation } from 'react-router';\r\n\r\nexport const ReturnToPrevios = () => {\r\n\tconst classes = useStyles();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\tconst { t } = useTranslation();\r\n    \r\n\treturn (\r\n      \t<IconButton \r\n            className={classes.button} \r\n            onClick={() => history.goBack()} \r\n        >\r\n            <ArrowBackRoundedIcon className={classes.icon} />\r\n        </IconButton>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        background: 'rgba(0,0,0,0.7)',\r\n        color: 'white',\r\n        padding: '12px',\r\n        margin: '0',\r\n        [theme.breakpoints.down('sm')]: {\r\n            border: '1px solid rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    icon: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',       \r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Messenger.js",["1207","1208","1209","1210","1211"],"import { ClickAwayListener, makeStyles, useMediaQuery, Slide } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { ConversationsContext } from \"../../context/ConversationsContext\";\r\nimport { useSocket } from \"../reuseables/customHooks/useSocket\";\r\nimport { Conversations } from \"./Conversations\";\r\nimport { MainConversation } from \"./MainConversation\";\r\nimport { Topbar } from \"./Topbar\";\r\nimport { NewMessage } from \"./NewMessage\";\r\nimport { countUnreadMessages, createNewConversation } from \"../../api/messengerApi\";\r\nimport { SnackbarContext } from \"../../context/SnackbarContext\";\r\nimport { getServerError } from \"../../api/genericApi\";\r\n\r\nexport const Messenger = ({ toggleMessenger }) => {\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n\tconst { socket } = useSocket();\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { conversations, setConversations } = useContext(ConversationsContext);\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst [ newMessage, setNewMessage ] = useState(false);\r\n\tconst [current, setCurrent] = useState(null);\r\n\r\n    useEffect(() => {\r\n\t\tif (current) {\r\n\t\t\tconst nc = conversations.find(c => c._id === current._id);\r\n        \tsetCurrent({...nc});\r\n\t\t\treturn;\r\n\t\t}      \r\n    }, [conversations]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!current) return;\r\n\t\tlet messageCount = countUnreadMessages(current.messages, auth.user._id);\r\n\t\tif (messageCount > 0) {\r\n\t\t\tconsole.log(('here'))\r\n\t\t\treadAllMessages();\r\n\t\t}\r\n\t}, [current])\r\n\r\n\tconst sendMessage = (value) => {\r\n\t\tsocket.emit(\"send-message\", {\r\n\t\t\ttenant: auth.user.tenant,\r\n\t\t\tpayload: value,\r\n\t\t\tfrom: auth.user._id,\r\n            to: current.participant,\r\n            conversation: current._id\r\n\t\t});\r\n\t};\r\n\r\n\tconst toggleNewMessage = () => {\r\n\t\tif (newMessage) {\r\n\t\t\tsetNewMessage(false);\r\n\t\t\treturn;\r\n\t\t} \r\n\t\tsetNewMessage(true);\r\n\t}\r\n\r\n\r\n\tconst startNewConversation = async (userId) => {\r\n\t\tlet exists = conversations.find(c => c.participant._id === userId);\r\n\t\tif(exists) {\r\n\t\t\tsetCurrent(exists);\r\n\t\t\tsetNewMessage(false);\r\n\t\t\treturn;\r\n\t\t};\r\n\t\tconst { tenant, _id } = auth.user;\r\n\t\tconst res = await createNewConversation(tenant, [_id, userId], 'private');\r\n\t\tif (res.error) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t\treturn;\r\n\t\t};\r\n\t\tlet conv = { ...res, participant: res.participants.filter(p => p._id != auth.user._id )[0]};\r\n\t\tsocket.emit('create-conversation', { conversationId: conv._id });\r\n\t\tsetConversations([conv, ...conversations]);\r\n\t\tsetCurrent(conv);\r\n\t\tsetNewMessage(false);\r\n\t}\r\n\r\n\tconst readAllMessages = () => {\r\n\t\tsocket.emit(\"read-messages\", {conversationId: current._id, sender: current.participant._id });\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ClickAwayListener onClickAway={toggleMessenger}>\r\n\t\t\t<div className={classes.mainContainer}>\r\n\t\t\t<Slide in={downSm ? !Boolean(current) : true} timeout={downSm ? 300 : 0} direction={'left'}>\r\n\t\t\t\t<div className={classes.leftContainer}>\r\n\t\t\t\t\t<div className={classes.topBar}>\r\n\t\t\t\t\t\t<Topbar toggleNewMessage={toggleNewMessage} toggleMessenger={toggleMessenger} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={classes.conversations}>\r\n\t\t\t\t\t\t\t<Conversations setCurrent={setCurrent} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<NewMessage toggleNewMessage={toggleNewMessage} open={newMessage} startNewConversation={startNewConversation} /> \r\n\t\t\t\t</div>\r\n\t\t\t\t</Slide>\r\n\t\t\t\t<Slide in={downSm ? Boolean(current) : true} timeout={downSm ? 300 : 0} direction={'right'}>\r\n\t\t\t\t<div className={classes.rightContainer}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcurrent &&\r\n\t\t\t\t\t\t<MainConversation setCurrent={setCurrent} current={current} sendMessage={sendMessage} readAllMessages={readAllMessages}/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t</Slide>\r\n\t\t\t</div>\r\n\t\t</ClickAwayListener>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\twidth: \"70vw\",\r\n\t\theight: \"70vh\",\r\n\t\tzIndex: 3,\r\n\t\tposition: \"absolute\",\r\n\t\tbackground: \"white\",\r\n\t\ttop: \"70px\",\r\n\t\tright: \"60px\",\r\n\t\tborderRadius: \"20px\",\r\n\t\tbackground: \"rgba(0,0,0,0.5)\",\r\n\t\tbackdropFilter: \"blur(15px)\",\r\n\t\tdisplay: \"flex\",\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tboxShadow: '0 0 10px 3px rgba(0,0,0,0.4)',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\twidth: \"90vw\",\r\n\t\t\theight: \"80vh\",\r\n\t\t},\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\twidth: \"100%\",\r\n\t\t\theight: \"100%\",\r\n\t\t\ttop: \"0\",\r\n\t\t\tright: \"0\",\r\n\t\t\tborderRadius: \"0\",\r\n\t\t\tborder: 'none',\r\n\t\t}\r\n\t},\r\n\tleftContainer: {\r\n\t\twidth: \"30%\",\r\n\t\theight: \"100%\",\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tborderRadius: \"20px 0 0 20px\",\r\n\t\tposition: 'relative',\r\n\t\toverflow: 'hidden',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\twidth: '100%',\r\n\t\t\theight: '100%'\r\n\t\t}\r\n\t},\r\n\ttopBar: {\r\n\t\theight: \"50px\",\r\n\t\twidth: \"100%\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\tconversations: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"calc(100% - 50px)\",\r\n\t},\r\n\trightContainer: {\r\n\t\twidth: \"70%\",\r\n\t\theight: \"100%\",\r\n\t\tborderRadius: \"0 20px 20px 0\",\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\twidth: '100%',\r\n\t\t\theight: '100%',\r\n\t\t\tposition: 'absolute',\r\n\t\t\tborderRadius: \"0\",\r\n\t\t\toverflow: 'hidden'\r\n\t\t}\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Conversations.js",["1212"],"import React, { useContext, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Conversation } from './Conversation'\r\nimport { ConversationsContext } from \"../../context/ConversationsContext\";\r\n\r\nexport const Conversations = ({ setCurrent }) => {\r\n\tconst classes = useStyles();\r\n    const { conversations } = useContext(ConversationsContext);\r\n\r\n\treturn (\r\n\t\t<div className={classes.mainContainer}>\r\n            { \r\n            conversations &&\r\n            conversations.map((c,i) => \r\n                <Conversation \r\n                key={i} \r\n                data={{...c}} \r\n                setCurrent={() => setCurrent(c)} />   \r\n            )}\r\n\r\n        </div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainContainer: {\r\n        height: '100%',\r\n        width: '100%',\r\n        borderRadius: '20px',\r\n        overflow: 'auto'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Conversation.js",["1213"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles, Avatar } from \"@material-ui/core\";\r\nimport { getFullName } from \"../../api/genericApi\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport { LanguageContext } from \"../../context/LanguageContext\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport { isNewMessage } from \"../../api/messengerApi\";\r\n\r\nexport const Conversation = ({ data, setCurrent }) => {\r\n\tconst classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const { auth } = useContext(AuthContext);\r\n    const [ hasNewMessage, setHasNewMessage ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isNewMessage(data, auth.user._id)) {\r\n            setHasNewMessage(true);\r\n            return;\r\n        }\r\n        setHasNewMessage(false);\r\n    }, [data])\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className={classes.mainContainer} onClick={setCurrent} style={{ fontWeight: hasNewMessage ? 'bold' : 'normal' }}>\r\n            <div className={classes.avatarContainer}>\r\n                <Avatar src={data.participant.avatar} alt={'abc'} className={classes.avatar} />\r\n            </div>\r\n            <div className={classes.detailsContainer}>\r\n                <div className={classes.fullName}>\r\n                    { getFullName(data.participant) }\r\n                </div>\r\n                <div className={classes.lastMessage}>\r\n                    {data.messages.length ? data.messages[data.messages.length - 1].data.text : ''}\r\n                </div>\r\n                <div className={classes.lastMessageDate}>\r\n                    {format(parseISO(data.lastMessageAt), lang.timeonly)}\r\n                </div>\r\n                {\r\n                    hasNewMessage &&\r\n                    <FiberManualRecordIcon className={classes.newMessageDot}/>\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainContainer: {\r\n        height: '80px',\r\n        width: '100%',\r\n        display: 'flex',\r\n        cursor: 'pointer',\r\n        position: 'relative'\r\n    },\r\n    avatarContainer: {\r\n        display: 'grid',\r\n        placeItems: 'center',\r\n        width: '80px'\r\n    },\r\n    avatar: {\r\n        height: '50px',\r\n        width: '50px'\r\n    },\r\n    detailsContainer: {\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        width: 'calc(100% - 80px)',\r\n        padding: '10px 0',\r\n        position: 'relative'\r\n    },\r\n    fullName: {\r\n        color: 'rgba(255,255,255,0.8)',\r\n        height: '30px',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    lastMessage: {\r\n        color: 'rgba(255,255,255,0.5)',\r\n        fontSize: '13px',\r\n        maxWidth: '80%',\r\n        display: '-webkit-box',\r\n        '-webkit-line-clamp': 2,\r\n        '-webkit-box-orient': 'vertical',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis'\r\n    },\r\n    lastMessageDate: {\r\n        color: 'rgba(255,255,255,0.5)',\r\n        position: 'absolute',\r\n        top: '10px',\r\n        right: '10px',\r\n        fontSize: '13px',\r\n        padding: '5px'\r\n    },\r\n    newMessageDot: {\r\n        color: '#42A5F5',\r\n        fontSize: '16px',\r\n        position: 'absolute',\r\n        right: '25px',\r\n        top: '35px',\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Topbar.js",["1214"],"import { IconButton, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PlaylistAddOutlinedIcon from '@material-ui/icons/PlaylistAddOutlined';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\n\r\nexport const Topbar = ({ toggleNewMessage, toggleMessenger}) => {\r\n\tconst classes = useStyles();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    const { t } = useTranslation();\r\n\r\n\treturn (\r\n\t\t<div className={classes.mainContainer}>\r\n            <div className={classes.newMessageContainer}>\r\n            <IconButton className={classes.newMessage} onClick={toggleMessenger}>\r\n                <CloseRoundedIcon  className={classes.icon}/>\r\n            </IconButton> \r\n                \r\n            </div>\r\n            <div className={classes.title}>\r\n                {t(\"messenger.messages\")}\r\n            </div> \r\n            <IconButton className={classes.newMessage} onClick={toggleNewMessage}>\r\n                <PlaylistAddOutlinedIcon  className={classes.icon}/>\r\n            </IconButton>\r\n        </div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainContainer: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        color: 'white',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('sm')]: {\r\n            flexDirection: 'row-reverse' \r\n        }\r\n    },\r\n    icon: {\r\n        color: 'rgba(255,255,255,0.8)',\r\n      \r\n    },\r\n    newMessageContainer: {\r\n        padding: '0'\r\n    },\r\n    editChats: {\r\n        fontSize: '14px',\r\n        padding: '0 20px',\r\n        color: 'rgba(255,255,255,0.8)',\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\MainConversation.js",["1215","1216"],"import { IconButton, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { isNewMessage } from \"../../api/messengerApi\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { UserItem } from \"../user/UserItem\";\r\nimport { MessageInput } from \"./MessageInput\";\r\nimport { Messages } from \"./Messages\";\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { EnvContext } from \"../../context/EnvContext\";\r\nimport clsx from 'clsx'\r\n\r\nexport const MainConversation = ({ setCurrent, current, sendMessage, readAllMessages }) => {\r\n\tconst classes = useStyles(); \r\n    const inputContainer = useRef();\r\n    const messagesCotainer = useRef();\r\n    const { auth } = useContext(AuthContext);\r\n    const { env } = useContext(EnvContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n\r\n    useEffect(() => {\r\n        if (isNewMessage(current, auth.user._id)) {\r\n            readAllMessages()\r\n        }\r\n    }, [current.messages])\r\n\r\n    useEffect(() => {\r\n        console.log('this runs')\r\n        if (env.inputFocused) {\r\n            inputContainer.current.style.paddingBottom = '0px';\r\n            messagesCotainer.current.style.height = 'calc(100% - 140px)';\r\n            return;\r\n        } \r\n        inputContainer.current.style.paddingBottom = '30px';\r\n        messagesCotainer.current.style.height = 'calc(100% - 170px)';\r\n    }, [env])\r\n\r\n    const handleClick = (value) => {\r\n        sendMessage(value);\r\n    };\r\n\r\n\treturn (\r\n\t\t<div className={classes.mainContainer}>\r\n            <div className={classes.userBar} >\r\n                <UserItem user={current.participant} avatarSize={50} showName showTitle size={13}/>\r\n                { downSm &&\r\n                    <IconButton className={classes.backButton} onClick={() => setCurrent(null)}>\r\n                        <ArrowBackIosIcon className={classes.icon} />\r\n                    </IconButton>\r\n                }\r\n            </div>\r\n            <div className={classes.messagesContainer} ref={messagesCotainer}>\r\n                {\r\n                    <Messages data={[...current.messages]} />\r\n                }\r\n                \r\n            </div>\r\n            <div className={clsx(classes.inputContainer)} ref={inputContainer} >\r\n                <MessageInput handleClick={handleClick} />\r\n            </div>\r\n        </div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainContainer: {\r\n        height: '100%',\r\n        width: '100%',\r\n    },\r\n    userBar: {\r\n        boxShadow: '0 1px 2px 0px rgba(0,0,0,0.37)',\r\n        padding: '0 20px',\r\n        background: '#222',\r\n        borderRadius: \"0 20px 0 0\",\r\n        height: '90px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('sm')]: {\r\n            borderRadius: \"0\",\r\n        }\r\n    },\r\n    messagesContainer: {\r\n        height: 'calc(100% - 140px)',\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: 'calc(100% - 170px)',\r\n        }\r\n    },\r\n    inputContainer: {\r\n        padding: '0px 5px 0px',\r\n        background: '#222',\r\n        borderRadius: \"0 0 20px 0\",\r\n        height: '50px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingBottom: '30px',\r\n            borderRadius: \"0\",\r\n        }\r\n    },\r\n    inputFocused: {\r\n        paddingBottom: '0px'\r\n    },\r\n    form: {\r\n\t\tcolor: 'black',\r\n        width: '100%',\r\n        margin: '0 5px 0 0px',\r\n\t\tborder: '1px solid rgba(0,0,0,0.2)',\r\n\t\tborderRadius: '42px'\r\n\t},\r\n\ttextInput: {\r\n        padding: '4px 10px',\r\n        borderRadius: '42px',\r\n        color: 'white',\r\n\t\t'& input': {\r\n\t\t\tcolor: 'white',\r\n\t\t\twidth: '80%',\r\n            padding: '4px 10px',\r\n            fontSize: '14px'\r\n\t\t},\r\n\t\t'& label': {\r\n\t\t\tcolor: 'white',\r\n\t\t\tpaddingLeft: '5px',\r\n\t\t},\r\n\t\t'& fieldset': {\r\n\t\t\tborderColor: 'rgba(255,255,255,0.2)',\r\n\t\t\tborderRadius: '42px',\r\n\t\t},\r\n\t},\r\n    postBtn: {\r\n        background: '#42A5F5',\r\n\t\tcolor: 'white',\r\n        padding: '7px',\r\n\t\tmargin: ' 0 5px 1px'\r\n\t},\r\n\ticon: {\r\n        fontSize: '20px',\r\n        color: 'white'\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\context\\SocketContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\ConversationsContext.js",["1217","1218"],"import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { useSocket } from '../components/reuseables/customHooks/useSocket';\r\nimport { AuthContext } from './AuthContext';\r\n\r\nexport const ConversationsContext = createContext();\r\n\r\nexport const ConversationsContextProvider = ({ children}) => {\r\n    const { auth } = useContext(AuthContext);\r\n    const [ conversations, setConversations ] = useState([]);\r\n    const { socket } = useSocket();\r\n\r\n    useEffect(() => {\r\n        if(!socket) return;\r\n        socket.on('userConversations', uc => {\r\n            let ucc = uc.map(c => ({ ...c, participant: c.participants.filter(p => p._id != auth.user._id )[0]}));\r\n            setConversations(ucc)\r\n        });\r\n\r\n        socket.on('receive-message', msg => {\r\n            setConversations(convs => {\r\n                let convIndex = convs.findIndex(c => c._id === msg.conversation);\r\n                let conv = convs[convIndex];\r\n                convs.splice(convIndex, 1)\r\n                conv.messages.push(msg);\r\n                return [conv, ...convs];\r\n            })\r\n        });\r\n\r\n        socket.on('messages-read', conversation => {\r\n            if(conversation) {\r\n                setConversations(convos => {\r\n                    let convoIndex = convos.findIndex(c => c._id === conversation);\r\n                    let messages = convos[convoIndex].messages.map(m => {\r\n                        if (!m.read) {\r\n                            m.read = true;\r\n                        }\r\n                        return m;\r\n                    })\r\n                    convos[convoIndex].messages = messages;\r\n                    return [...convos];\r\n                })\r\n            }\r\n        })\r\n\r\n    }, [socket]);\r\n\r\n    return (\r\n        <ConversationsContext.Provider value={{ conversations, setConversations }}>\r\n            { children }\r\n        </ConversationsContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\useSocket.js",["1219"],"import React, { useContext } from 'react';\r\nimport { SocketContext } from '../../../context/SocketContext';\r\n\r\nexport const useSocket = () => {\r\n    return useContext(SocketContext)\r\n}","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Messages.js",["1220"],"import { makeStyles } from '@material-ui/core';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Message } from './Message';\r\n\r\n\r\nexport const Messages = ({ data }) => {\r\n\r\n    const classes = useStyles();\r\n    const [ messages, setMessages ] = useState(data || []);\r\n    const { t } = useTranslation();\r\n    const ms = useRef();\r\n\r\n    useEffect(() => {\r\n        setMessages([...data]);\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (ms) {\r\n            let len = ms.current.children.length;\r\n            if (!ms.current.children.length) return;\r\n            ms.current.children[len - 1].scrollIntoView({ bahavior: 'smooth'}) \r\n        }    \r\n    }, [ messages ])\r\n\r\n    const loadMessages = () => {\r\n        if (!messages.length) return null;\r\n        const msgs = messages.map((m,i) => { \r\n            return <Message data={{...m}} key={i} />\r\n        });\r\n        return msgs;\r\n    }\r\n\r\n\treturn (\r\n\t\t<div className={classes.messagesContainer} ref={ms} >\r\n            {    \r\n              loadMessages()\r\n            }\r\n        </div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    messagesContainer: {\r\n        padding: '10px 100px',\r\n        height: 'calc(100% - 20px)',\r\n        overflow: 'auto',\r\n        [theme.breakpoints.down('sm')]: {\r\n            padding: '10px 20px',\r\n        }\r\n    },\r\n    topProfile: {\r\n        width: '100%',\r\n        display: 'grid',\r\n        placeItems: 'center'\r\n    },\r\n    avatar: {\r\n        height: '150px',\r\n        width: '150px',\r\n        margin: '10px'\r\n    },\r\n    welcome: {\r\n        color: 'white',\r\n        fontSize: '14px',\r\n        margin: '5px',\r\n        background: 'rgba(0,0,0,0.8)',\r\n        padding: '10px 25px',\r\n        borderRadius: '50px',\r\n    },\r\n    welcomeSub: {\r\n        color: 'rgba(255,255,255,0.7)',\r\n        fontSize: '12px',\r\n        background: 'rgba(0,0,0,0.8)',\r\n        borderRadius: '50px',\r\n        padding: '10px 25px',\r\n        margin: '5px 30px 30px',\r\n        textAlign: 'center'\r\n    },\r\n    '@global': {\r\n\t\t'*::-webkit-scrollbar': {\r\n\t\t\twidth: '0em',\r\n        }\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\Message.js",["1221","1222","1223","1224","1225","1226"],"import { Fade, Grid, Grow, makeStyles, Slide } from \"@material-ui/core\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport { LanguageContext } from \"../../context/LanguageContext\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\r\nimport { AutorenewSharp } from \"@material-ui/icons\";\r\n\r\n\r\n\r\nconst AudioPlayer = ({ blob }) => {\r\n\tconst url = window.URL.createObjectURL( new Blob(blob, {type: 'audio/mp3'}));\r\n\treturn (\r\n\t\t<audio src={url} controls />\r\n\t)\r\n}\r\n\r\nexport const Message = ({ data }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst [message, setMessage] = useState({ ...data });\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMessage((ms) => {\r\n\t\t\tms.read = data.read;\r\n\t\t\treturn { ...data };\r\n\t\t});\r\n\t}, [data]);\r\n\r\n\r\n\treturn (\r\n\t\t<Grid\r\n\t\t\tcontainer\r\n\t\t\tdirection={data.from === auth.user._id ? \"row\" : \"row-reverse\"}\r\n\t\t\tclassName={classes.messageContainer}\r\n\t\t>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={8}\r\n\t\t\t\tclassName={clsx(\r\n\t\t\t\t\tclasses.message,\r\n\t\t\t\t\tmessage.from === auth.user._id\r\n\t\t\t\t\t\t? classes.userMessage\r\n\t\t\t\t\t\t: classes.systemMessage\r\n\t\t\t\t)}\r\n\t\t\t>\r\n\t\t\t\t<div className={classes.messageText}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmessage.data.audio ? \r\n\t\t\t\t\t\t\t<AudioPlayer arrayBuffer={message.data.audio} /> :\r\n\t\t\t\t\t\tmessage.data.text ?\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={classes.text}\r\n\t\t\t\t\t\t\tstyle={{ textAlign: lang.dir === \"rtl\" ? \"right\" : \"left\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{message.data.text}\r\n\t\t\t\t\t\t</div> : \r\n\t\t\t\t\t\tnull\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className={classes.time}>\r\n\t\t\t\t\t\t{message.from === auth.user._id ? (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<DoneAllIcon\r\n\t\t\t\t\t\t\t\t\tclassName={message.read ? classes.read : classes.received}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t{format(parseISO(message.createdAt), lang.timeonly)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmessage: {\r\n\t\tdisplay: \"flex\",\r\n\t\tmargin: \"3px 5px\",\r\n\t},\r\n\tmessageText: {\r\n\t\tcolor: \"white\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tpadding: \"10px 20px\",\r\n\t\tfontSize: \"15px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tminWidth: \"50px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"flex-end\",\r\n\t},\r\n\tuserMessage: {\r\n\t\t\"&>div\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\t},\r\n\t\tjustifyContent: \"flex-start\",\r\n\t},\r\n\tsystemMessage: {\r\n\t\t\"&>div\": {\r\n\t\t\tbackground: \"#42A5F5\",\r\n\t\t},\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n\ttime: {\r\n\t\tfontSize: \"11px\",\r\n\t\tmarginTop: \"5px\",\r\n\t\theight: \"15px\",\r\n\t\tcolor: \"rgba(255,255,255,0.7)\",\r\n\t\tmarginRight: \"auto\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"flex-end\",\r\n\t},\r\n\ttext: {\r\n\t\twidth: \"100%\",\r\n\t},\r\n\treceived: {\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"0 3px\",\r\n\t},\r\n\tread: {\r\n\t\tfontSize: \"16px\",\r\n\t\tpadding: \"0 3px\",\r\n\t\tcolor: \"#42A5F5\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\MessageInput.js",["1227","1228","1229"],"import {\r\n\tFormControl,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tOutlinedInput,\r\n\tuseMediaQuery,\r\n\tSlide,\r\n} from \"@material-ui/core\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport clsx from \"clsx\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { EnvContext } from \"../../context/EnvContext\";\r\nimport { LanguageContext } from \"../../context/LanguageContext\";\r\nimport MicNoneRoundedIcon from \"@material-ui/icons/MicNoneRounded\";\r\nimport { Recorder } from './Recorder';\r\n\r\nexport const MessageInput = ({ handleClick}) => {\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\tconst { env, setEnv } = useContext(EnvContext);\r\n\tconst [value, setValue] = useState(\"\");\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst [recording, setRecording] = useState(false);\r\n\r\n\tconst send = () => {\r\n\t\tif (value) {\r\n\t\t\thandleClick(value);\r\n\t\t\tsetValue(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\tconst submitRecording = (file) => {\r\n\t\thandleClick(file);\r\n\t}\r\n\r\n\tconst toggleInputFocus = () => {\r\n\t\tif (!downSm) return;\r\n\r\n\t\tif (env.inputFocused) {\r\n\t\t\tsetEnv({\r\n\t\t\t\t...env,\r\n\t\t\t\tinputFocused: false, \r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetEnv({\r\n\t\t\t...env,\r\n\t\t\tinputFocused: true,\r\n\t\t});\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<IconButton className={classes.postBtn} onClick={send} disabled={recording}>\r\n\t\t\t\t<SendRoundedIcon\r\n\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\tclasses.icon,\r\n\t\t\t\t\t\tlang.dir === \"rtl\" ? classes.mirror : null\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</IconButton>\r\n\t\t\t<FormControl variant=\"outlined\" className={classes.form}>\r\n\t\t\t\t<OutlinedInput\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={(event) => setValue(event.target.value)}\r\n\t\t\t\t\tclassName={classes.textInput}\r\n\t\t\t\t\tonKeyDown={(e) => (e.key === \"Enter\" ? send() : null)}\r\n\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\tonFocus: toggleInputFocus,\r\n\t\t\t\t\t\tonBlur: toggleInputFocus,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdisabled={recording}\r\n\t\t\t\t/>\r\n\t\t\t</FormControl>\r\n\t\t\t<Recorder recording={recording} setRecording={setRecording} handleRecordedMessage={submitRecording} />\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\theight: \"100%\",\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tuserBar: {\r\n\t\tboxShadow: \"0 1px 2px 0px rgba(0,0,0,0.37)\",\r\n\t\tpadding: \"0 20px\",\r\n\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\tborderRadius: \"0 20px 0 0\",\r\n\t\theight: \"90px\",\r\n\t},\r\n\tmessagesContainer: {\r\n\t\theight: \"calc(100% - 140px)\",\r\n\t},\r\n\tinputContainer: {\r\n\t\tpadding: \"0 20px\",\r\n\t\tbackground: \"rgba(0,0,0,0.6)\",\r\n\t\tborderRadius: \"0 0 20px 0\",\r\n\t\theight: \"50px\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tform: {\r\n\t\tcolor: \"black\",\r\n\t\twidth: \"100%\",\r\n\t\tmargin: \"0 5px 0 0px\",\r\n\t\tborder: \"1px solid rgba(0,0,0,0.2)\",\r\n\t\tborderRadius: \"42px\",\r\n\t},\r\n\ttextInput: {\r\n\t\tpadding: \"4px 10px\",\r\n\t\tborderRadius: \"42px\",\r\n\t\tcolor: \"white\",\r\n\t\t\"& input\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\twidth: \"80%\",\r\n\t\t\tpadding: \"4px 10px\",\r\n\t\t\tfontSize: \"14px\",\r\n\t\t},\r\n\t\t\"& label\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\tpaddingLeft: \"5px\",\r\n\t\t},\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderColor: \"rgba(255,255,255,0.2)\",\r\n\t\t\tborderRadius: \"42px\",\r\n\t\t},\r\n\t},\r\n\tpostBtn: {\r\n\t\tbackground: \"#42A5F5\",\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"7px\",\r\n\t\tmargin: \" 0 5px 1px\",\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: \"20px\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\trecordButton: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"7px\",\r\n\t\tmargin: \" 0 5px 1px\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.5)\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\messages\\NewMessage.js",["1230","1231"],"import { IconButton, makeStyles, OutlinedInput, Slide } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { filterUsers, getUserList } from \"../../api/userApi\";\r\nimport { UserItem } from \"../user/UserItem\";\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport { ClearRounded } from \"@material-ui/icons\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport const NewMessage = ({ toggleNewMessage, open, startNewConversation }) => {\r\n\tconst classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const { auth } = useContext(AuthContext);\r\n    const [ orgUsers, setOrgUsers ] = useState([]);\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ searchValue, setSearchValue ] = useState('');\r\n\r\n    useEffect(() => {\r\n        prepareData();\r\n    }, []);\r\n\r\n    const prepareData = async () => {\r\n        let users = await getUserList();\r\n        if(users.length) {\r\n            users = users.filter(u => u._id !== auth.user._id);\r\n            setUserList(users);\r\n            setOrgUsers(users);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUserList(orgUsers)\r\n        if (!searchValue) {\r\n            return;\r\n        };\r\n        filterUsers(orgUsers, searchValue)\r\n        .then(uc => setUserList(uc))\r\n    }, [searchValue])\r\n\r\n\r\n\treturn (\r\n\t\r\n            <Slide direction={'up'} timeout={300} in={open}>\r\n\t\t\t\t<div className={classes.mainContainer}>\r\n                    <div className={classes.closeBtn}>\r\n                        <IconButton\r\n                            className={classes.iconBtn}\r\n                            onClick={toggleNewMessage}\r\n                        >\r\n                            <ClearRounded className={classes.icon} />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.header}>\r\n                        {t(\"messenger.newMessage\")}\r\n                    </div>\r\n                    <div className={classes.userSearch}>\r\n                        <OutlinedInput\r\n                            value={searchValue}\r\n                            onChange={(event) => setSearchValue(event.target.value)}\r\n                            className={classes.textInput}\r\n                            startAdornment={<SearchRoundedIcon  className={classes.searchIcon} />}\r\n                            placeholder={t('messenger.searchUser')}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.users}>\r\n                        {\r\n                            userList.length &&\r\n                            userList.map((u,i) => \r\n                                <div className={classes.userRow} onClick={() => startNewConversation(u._id)}>\r\n                                    <UserItem user={u} avatarSize={50} size={13} showName showTitle/>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                </Slide>\r\n\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\theight: \"100%\",\r\n\t\twidth: \"100%\",\r\n\t\tposition: \"absolute\",\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(22px)',\r\n\t\ttop: \"0\",\r\n\t\tborderRadius: \"30px 0px 0 0\"\r\n\t},\r\n    header: {\r\n        color: 'rgba(255,255,255,0.8)',\r\n        height: '50px',\r\n        fontSize: '18px',\r\n        display: 'grid',\r\n        placeItems: 'center',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        padding: '0 10px'\r\n    },\r\n    userSearch: {\r\n        height: '70px',\r\n        boxShadow: '0 1px 2px 1px rgba(255,255,255,0.2)',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    users: {\r\n        height: 'calc(100% - 120px)',\r\n        overflow: 'auto'\r\n    },\r\n    userRow: {\r\n        padding: '10px 30px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        cursor: 'pointer'\r\n    },\r\n    textInput: {\r\n\t\tpadding: \"4px 10px\",\r\n        width: '90%',\r\n\t\tcolor: \"white\",\r\n\t\t\"& input\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\tpadding: \"4px 10px\",\r\n\t\t\tfontSize: \"14px\",\r\n\t\t},\r\n\t\t\"& label\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t\tpaddingLeft: \"5px\",\r\n\t\t},\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderColor: \"rgba(255,255,255,0.2)\",\r\n\t\t\tborderRadius: \"8px\",\r\n\t\t},\r\n\t},\r\n    closeBtn: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0\r\n    },\r\n    iconBtn: {\r\n\t\tmargin: \"2px\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"22px\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\messengerApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ModalContainer.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\UpsertContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\LoadingProgress.js",["1232"],{"ruleId":"1233","severity":1,"message":"1234","line":11,"column":1,"nodeType":"1235","messageId":"1236","endLine":18,"endColumn":3},{"ruleId":"1237","severity":1,"message":"1238","line":20,"column":10,"nodeType":"1239","messageId":"1240","endLine":20,"endColumn":20},{"ruleId":"1237","severity":1,"message":"1241","line":25,"column":10,"nodeType":"1239","messageId":"1240","endLine":25,"endColumn":13},{"ruleId":"1242","severity":1,"message":"1243","line":37,"column":5,"nodeType":"1244","endLine":37,"endColumn":7,"suggestions":"1245"},{"ruleId":"1246","replacedBy":"1247"},{"ruleId":"1248","replacedBy":"1249"},{"ruleId":"1237","severity":1,"message":"1250","line":1,"column":10,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":34},{"ruleId":"1237","severity":1,"message":"1251","line":5,"column":10,"nodeType":"1239","messageId":"1240","endLine":5,"endColumn":18},{"ruleId":"1242","severity":1,"message":"1252","line":32,"column":8,"nodeType":"1244","endLine":32,"endColumn":10,"suggestions":"1253"},{"ruleId":"1242","severity":1,"message":"1254","line":34,"column":8,"nodeType":"1244","endLine":34,"endColumn":10,"suggestions":"1255"},{"ruleId":"1237","severity":1,"message":"1256","line":1,"column":10,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1257","line":17,"column":8,"nodeType":"1239","messageId":"1240","endLine":17,"endColumn":16},{"ruleId":"1237","severity":1,"message":"1258","line":18,"column":10,"nodeType":"1239","messageId":"1240","endLine":18,"endColumn":18},{"ruleId":"1259","severity":1,"message":"1260","line":28,"column":27,"nodeType":"1261","messageId":"1236","endLine":28,"endColumn":29},{"ruleId":"1237","severity":1,"message":"1262","line":32,"column":10,"nodeType":"1239","messageId":"1240","endLine":32,"endColumn":11},{"ruleId":"1237","severity":1,"message":"1263","line":3,"column":2,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":6},{"ruleId":"1237","severity":1,"message":"1264","line":9,"column":40,"nodeType":"1239","messageId":"1240","endLine":9,"endColumn":46},{"ruleId":"1237","severity":1,"message":"1265","line":23,"column":8,"nodeType":"1239","messageId":"1240","endLine":23,"endColumn":15},{"ruleId":"1237","severity":1,"message":"1266","line":33,"column":9,"nodeType":"1239","messageId":"1240","endLine":33,"endColumn":18},{"ruleId":"1237","severity":1,"message":"1267","line":44,"column":9,"nodeType":"1239","messageId":"1240","endLine":44,"endColumn":23},{"ruleId":"1237","severity":1,"message":"1268","line":44,"column":25,"nodeType":"1239","messageId":"1240","endLine":44,"endColumn":42},{"ruleId":"1242","severity":1,"message":"1269","line":74,"column":5,"nodeType":"1244","endLine":74,"endColumn":7,"suggestions":"1270"},{"ruleId":"1271","severity":1,"message":"1272","line":78,"column":4,"nodeType":"1239","messageId":"1273","endLine":78,"endColumn":12},{"ruleId":"1242","severity":1,"message":"1274","line":78,"column":15,"nodeType":"1275","endLine":78,"endColumn":38},{"ruleId":"1271","severity":1,"message":"1272","line":83,"column":6,"nodeType":"1239","messageId":"1273","endLine":83,"endColumn":14},{"ruleId":"1242","severity":1,"message":"1276","line":119,"column":5,"nodeType":"1244","endLine":119,"endColumn":19,"suggestions":"1277"},{"ruleId":"1278","severity":1,"message":"1279","line":237,"column":6,"nodeType":"1280","endLine":237,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1281","line":1,"column":29,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":38},{"ruleId":"1237","severity":1,"message":"1263","line":18,"column":5,"nodeType":"1239","messageId":"1240","endLine":18,"endColumn":9},{"ruleId":"1282","severity":1,"message":"1283","line":127,"column":21,"nodeType":"1284","endLine":127,"endColumn":132},{"ruleId":"1237","severity":1,"message":"1256","line":1,"column":10,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1285","line":2,"column":38,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":48},{"ruleId":"1237","severity":1,"message":"1286","line":11,"column":10,"nodeType":"1239","messageId":"1240","endLine":11,"endColumn":24},{"ruleId":"1237","severity":1,"message":"1265","line":1,"column":8,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":15},{"ruleId":"1237","severity":1,"message":"1287","line":1,"column":18,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":29},{"ruleId":"1237","severity":1,"message":"1288","line":1,"column":61,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":74},{"ruleId":"1237","severity":1,"message":"1289","line":2,"column":10,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":28},{"ruleId":"1237","severity":1,"message":"1290","line":2,"column":10,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":21},{"ruleId":"1237","severity":1,"message":"1256","line":1,"column":10,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1291","line":22,"column":8,"nodeType":"1239","messageId":"1240","endLine":22,"endColumn":16},{"ruleId":"1237","severity":1,"message":"1241","line":26,"column":10,"nodeType":"1239","messageId":"1240","endLine":26,"endColumn":13},{"ruleId":"1237","severity":1,"message":"1292","line":27,"column":8,"nodeType":"1239","messageId":"1240","endLine":27,"endColumn":14},{"ruleId":"1242","severity":1,"message":"1293","line":37,"column":5,"nodeType":"1244","endLine":37,"endColumn":7,"suggestions":"1294"},{"ruleId":"1237","severity":1,"message":"1295","line":14,"column":8,"nodeType":"1239","messageId":"1240","endLine":14,"endColumn":15},{"ruleId":"1237","severity":1,"message":"1291","line":15,"column":11,"nodeType":"1239","messageId":"1240","endLine":15,"endColumn":19},{"ruleId":"1237","severity":1,"message":"1296","line":17,"column":19,"nodeType":"1239","messageId":"1240","endLine":17,"endColumn":26},{"ruleId":"1282","severity":1,"message":"1283","line":46,"column":45,"nodeType":"1284","endLine":46,"endColumn":112},{"ruleId":"1237","severity":1,"message":"1297","line":33,"column":9,"nodeType":"1239","messageId":"1240","endLine":33,"endColumn":13},{"ruleId":"1242","severity":1,"message":"1298","line":50,"column":5,"nodeType":"1244","endLine":50,"endColumn":16,"suggestions":"1299"},{"ruleId":"1237","severity":1,"message":"1300","line":76,"column":8,"nodeType":"1239","messageId":"1240","endLine":76,"endColumn":18},{"ruleId":"1237","severity":1,"message":"1301","line":1,"column":28,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":41},{"ruleId":"1237","severity":1,"message":"1302","line":1,"column":43,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":53},{"ruleId":"1237","severity":1,"message":"1303","line":3,"column":10,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":13},{"ruleId":"1242","severity":1,"message":"1304","line":25,"column":5,"nodeType":"1244","endLine":25,"endColumn":22,"suggestions":"1305"},{"ruleId":"1242","severity":1,"message":"1306","line":39,"column":5,"nodeType":"1244","endLine":39,"endColumn":16,"suggestions":"1307"},{"ruleId":"1237","severity":1,"message":"1263","line":1,"column":10,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1308","line":1,"column":40,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":45},{"ruleId":"1237","severity":1,"message":"1309","line":2,"column":17,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":25},{"ruleId":"1237","severity":1,"message":"1281","line":2,"column":27,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":36},{"ruleId":"1237","severity":1,"message":"1310","line":3,"column":41,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":58},{"ruleId":"1237","severity":1,"message":"1311","line":3,"column":60,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":67},{"ruleId":"1237","severity":1,"message":"1312","line":3,"column":79,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":87},{"ruleId":"1237","severity":1,"message":"1313","line":3,"column":89,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":95},{"ruleId":"1237","severity":1,"message":"1314","line":4,"column":19,"nodeType":"1239","messageId":"1240","endLine":4,"endColumn":25},{"ruleId":"1237","severity":1,"message":"1315","line":8,"column":8,"nodeType":"1239","messageId":"1240","endLine":8,"endColumn":16},{"ruleId":"1237","severity":1,"message":"1316","line":9,"column":10,"nodeType":"1239","messageId":"1240","endLine":9,"endColumn":22},{"ruleId":"1317","severity":1,"message":"1318","line":101,"column":18,"nodeType":"1319","messageId":"1320","endLine":101,"endColumn":19,"suggestions":"1321"},{"ruleId":"1237","severity":1,"message":"1322","line":19,"column":10,"nodeType":"1239","messageId":"1240","endLine":19,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1323","line":19,"column":16,"nodeType":"1239","messageId":"1240","endLine":19,"endColumn":23},{"ruleId":"1237","severity":1,"message":"1324","line":20,"column":10,"nodeType":"1239","messageId":"1240","endLine":20,"endColumn":14},{"ruleId":"1242","severity":1,"message":"1325","line":41,"column":5,"nodeType":"1244","endLine":41,"endColumn":16,"suggestions":"1326"},{"ruleId":"1237","severity":1,"message":"1327","line":12,"column":8,"nodeType":"1239","messageId":"1240","endLine":12,"endColumn":18},{"ruleId":"1237","severity":1,"message":"1328","line":1,"column":10,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":16},{"ruleId":"1237","severity":1,"message":"1295","line":33,"column":8,"nodeType":"1239","messageId":"1240","endLine":33,"endColumn":15},{"ruleId":"1237","severity":1,"message":"1291","line":34,"column":8,"nodeType":"1239","messageId":"1240","endLine":34,"endColumn":16},{"ruleId":"1237","severity":1,"message":"1324","line":36,"column":13,"nodeType":"1239","messageId":"1240","endLine":36,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1296","line":36,"column":19,"nodeType":"1239","messageId":"1240","endLine":36,"endColumn":26},{"ruleId":"1282","severity":1,"message":"1283","line":51,"column":33,"nodeType":"1284","endLine":51,"endColumn":54},{"ruleId":"1237","severity":1,"message":"1329","line":1,"column":22,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":30},{"ruleId":"1237","severity":1,"message":"1330","line":2,"column":10,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":15},{"ruleId":"1237","severity":1,"message":"1281","line":3,"column":29,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":38},{"ruleId":"1237","severity":1,"message":"1309","line":3,"column":40,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":48},{"ruleId":"1237","severity":1,"message":"1262","line":30,"column":13,"nodeType":"1239","messageId":"1240","endLine":30,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1331","line":31,"column":13,"nodeType":"1239","messageId":"1240","endLine":31,"endColumn":21},{"ruleId":"1237","severity":1,"message":"1332","line":282,"column":7,"nodeType":"1239","messageId":"1240","endLine":282,"endColumn":16},{"ruleId":"1237","severity":1,"message":"1333","line":8,"column":2,"nodeType":"1239","messageId":"1240","endLine":8,"endColumn":6},{"ruleId":"1237","severity":1,"message":"1334","line":11,"column":2,"nodeType":"1239","messageId":"1240","endLine":11,"endColumn":6},{"ruleId":"1237","severity":1,"message":"1335","line":24,"column":8,"nodeType":"1239","messageId":"1240","endLine":24,"endColumn":33},{"ruleId":"1237","severity":1,"message":"1336","line":27,"column":8,"nodeType":"1239","messageId":"1240","endLine":27,"endColumn":27},{"ruleId":"1237","severity":1,"message":"1337","line":28,"column":8,"nodeType":"1239","messageId":"1240","endLine":28,"endColumn":28},{"ruleId":"1237","severity":1,"message":"1338","line":33,"column":13,"nodeType":"1239","messageId":"1240","endLine":33,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1339","line":35,"column":8,"nodeType":"1239","messageId":"1240","endLine":35,"endColumn":15},{"ruleId":"1340","severity":1,"message":"1341","line":41,"column":49,"nodeType":"1342","messageId":"1236","endLine":41,"endColumn":51},{"ruleId":"1237","severity":1,"message":"1343","line":41,"column":9,"nodeType":"1239","messageId":"1240","endLine":41,"endColumn":23},{"ruleId":"1242","severity":1,"message":"1344","line":72,"column":5,"nodeType":"1244","endLine":72,"endColumn":20,"suggestions":"1345"},{"ruleId":"1237","severity":1,"message":"1333","line":3,"column":2,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":6},{"ruleId":"1237","severity":1,"message":"1338","line":24,"column":13,"nodeType":"1239","messageId":"1240","endLine":24,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1339","line":28,"column":8,"nodeType":"1239","messageId":"1240","endLine":28,"endColumn":15},{"ruleId":"1346","severity":1,"message":"1347","line":125,"column":3,"nodeType":"1348","messageId":"1236","endLine":125,"endColumn":9},{"ruleId":"1237","severity":1,"message":"1349","line":2,"column":2,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":19},{"ruleId":"1237","severity":1,"message":"1334","line":3,"column":2,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":6},{"ruleId":"1237","severity":1,"message":"1308","line":10,"column":2,"nodeType":"1239","messageId":"1240","endLine":10,"endColumn":7},{"ruleId":"1237","severity":1,"message":"1350","line":11,"column":2,"nodeType":"1239","messageId":"1240","endLine":11,"endColumn":10},{"ruleId":"1237","severity":1,"message":"1351","line":14,"column":2,"nodeType":"1239","messageId":"1240","endLine":14,"endColumn":8},{"ruleId":"1237","severity":1,"message":"1263","line":15,"column":2,"nodeType":"1239","messageId":"1240","endLine":15,"endColumn":6},{"ruleId":"1237","severity":1,"message":"1352","line":24,"column":10,"nodeType":"1239","messageId":"1240","endLine":24,"endColumn":30},{"ruleId":"1237","severity":1,"message":"1338","line":42,"column":13,"nodeType":"1239","messageId":"1240","endLine":42,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1339","line":44,"column":8,"nodeType":"1239","messageId":"1240","endLine":44,"endColumn":15},{"ruleId":"1340","severity":1,"message":"1341","line":75,"column":26,"nodeType":"1342","messageId":"1236","endLine":75,"endColumn":28},{"ruleId":"1346","severity":1,"message":"1353","line":285,"column":3,"nodeType":"1348","messageId":"1236","endLine":285,"endColumn":8},{"ruleId":"1346","severity":1,"message":"1354","line":339,"column":3,"nodeType":"1348","messageId":"1236","endLine":339,"endColumn":13},{"ruleId":"1346","severity":1,"message":"1354","line":360,"column":3,"nodeType":"1348","messageId":"1236","endLine":360,"endColumn":13},{"ruleId":"1237","severity":1,"message":"1355","line":2,"column":8,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":12},{"ruleId":"1237","severity":1,"message":"1356","line":17,"column":9,"nodeType":"1239","messageId":"1240","endLine":17,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1357","line":17,"column":19,"nodeType":"1239","messageId":"1240","endLine":17,"endColumn":30},{"ruleId":"1237","severity":1,"message":"1339","line":18,"column":8,"nodeType":"1239","messageId":"1240","endLine":18,"endColumn":15},{"ruleId":"1237","severity":1,"message":"1358","line":20,"column":8,"nodeType":"1239","messageId":"1240","endLine":20,"endColumn":27},{"ruleId":"1237","severity":1,"message":"1359","line":4,"column":8,"nodeType":"1239","messageId":"1240","endLine":4,"endColumn":25},{"ruleId":"1237","severity":1,"message":"1360","line":9,"column":10,"nodeType":"1239","messageId":"1240","endLine":9,"endColumn":29},{"ruleId":"1237","severity":1,"message":"1338","line":38,"column":16,"nodeType":"1239","messageId":"1240","endLine":38,"endColumn":20},{"ruleId":"1237","severity":1,"message":"1338","line":17,"column":20,"nodeType":"1239","messageId":"1240","endLine":17,"endColumn":24},{"ruleId":"1237","severity":1,"message":"1338","line":37,"column":16,"nodeType":"1239","messageId":"1240","endLine":37,"endColumn":20},{"ruleId":"1242","severity":1,"message":"1361","line":60,"column":8,"nodeType":"1244","endLine":60,"endColumn":25,"suggestions":"1362"},{"ruleId":"1237","severity":1,"message":"1338","line":9,"column":13,"nodeType":"1239","messageId":"1240","endLine":9,"endColumn":17},{"ruleId":"1278","severity":1,"message":"1279","line":12,"column":44,"nodeType":"1280","endLine":12,"endColumn":51},{"ruleId":"1346","severity":1,"message":"1363","line":106,"column":9,"nodeType":"1348","messageId":"1236","endLine":106,"endColumn":16},{"ruleId":"1237","severity":1,"message":"1364","line":3,"column":2,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":10},{"ruleId":"1237","severity":1,"message":"1365","line":7,"column":2,"nodeType":"1239","messageId":"1240","endLine":7,"endColumn":7},{"ruleId":"1237","severity":1,"message":"1366","line":14,"column":2,"nodeType":"1239","messageId":"1240","endLine":14,"endColumn":28},{"ruleId":"1237","severity":1,"message":"1367","line":22,"column":10,"nodeType":"1239","messageId":"1240","endLine":22,"endColumn":22},{"ruleId":"1237","severity":1,"message":"1338","line":29,"column":13,"nodeType":"1239","messageId":"1240","endLine":29,"endColumn":17},{"ruleId":"1340","severity":1,"message":"1341","line":143,"column":29,"nodeType":"1342","messageId":"1236","endLine":143,"endColumn":31},{"ruleId":"1340","severity":1,"message":"1341","line":20,"column":40,"nodeType":"1342","messageId":"1236","endLine":20,"endColumn":42},{"ruleId":"1237","severity":1,"message":"1368","line":3,"column":2,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":19},{"ruleId":"1237","severity":1,"message":"1302","line":7,"column":22,"nodeType":"1239","messageId":"1240","endLine":7,"endColumn":32},{"ruleId":"1237","severity":1,"message":"1349","line":7,"column":34,"nodeType":"1239","messageId":"1240","endLine":7,"endColumn":51},{"ruleId":"1237","severity":1,"message":"1369","line":11,"column":10,"nodeType":"1239","messageId":"1240","endLine":11,"endColumn":20},{"ruleId":"1237","severity":1,"message":"1370","line":12,"column":10,"nodeType":"1239","messageId":"1240","endLine":12,"endColumn":27},{"ruleId":"1237","severity":1,"message":"1295","line":30,"column":8,"nodeType":"1239","messageId":"1240","endLine":30,"endColumn":15},{"ruleId":"1282","severity":1,"message":"1283","line":153,"column":9,"nodeType":"1284","endLine":153,"endColumn":70},{"ruleId":"1282","severity":1,"message":"1283","line":177,"column":8,"nodeType":"1284","endLine":184,"endColumn":10},{"ruleId":"1237","severity":1,"message":"1266","line":27,"column":9,"nodeType":"1239","messageId":"1240","endLine":27,"endColumn":18},{"ruleId":"1237","severity":1,"message":"1371","line":27,"column":20,"nodeType":"1239","messageId":"1240","endLine":27,"endColumn":32},{"ruleId":"1242","severity":1,"message":"1372","line":73,"column":5,"nodeType":"1244","endLine":73,"endColumn":20,"suggestions":"1373"},{"ruleId":"1346","severity":1,"message":"1374","line":219,"column":3,"nodeType":"1348","messageId":"1236","endLine":219,"endColumn":15},{"ruleId":"1346","severity":1,"message":"1374","line":231,"column":3,"nodeType":"1348","messageId":"1236","endLine":231,"endColumn":15},{"ruleId":"1237","severity":1,"message":"1302","line":1,"column":22,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":32},{"ruleId":"1237","severity":1,"message":"1349","line":1,"column":34,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":51},{"ruleId":"1237","severity":1,"message":"1375","line":4,"column":2,"nodeType":"1239","messageId":"1240","endLine":4,"endColumn":12},{"ruleId":"1237","severity":1,"message":"1376","line":5,"column":2,"nodeType":"1239","messageId":"1240","endLine":5,"endColumn":9},{"ruleId":"1237","severity":1,"message":"1377","line":15,"column":8,"nodeType":"1239","messageId":"1240","endLine":15,"endColumn":13},{"ruleId":"1237","severity":1,"message":"1378","line":16,"column":10,"nodeType":"1239","messageId":"1240","endLine":16,"endColumn":23},{"ruleId":"1237","severity":1,"message":"1379","line":17,"column":10,"nodeType":"1239","messageId":"1240","endLine":17,"endColumn":24},{"ruleId":"1237","severity":1,"message":"1380","line":18,"column":8,"nodeType":"1239","messageId":"1240","endLine":18,"endColumn":31},{"ruleId":"1237","severity":1,"message":"1381","line":19,"column":8,"nodeType":"1239","messageId":"1240","endLine":19,"endColumn":30},{"ruleId":"1237","severity":1,"message":"1262","line":33,"column":10,"nodeType":"1239","messageId":"1240","endLine":33,"endColumn":11},{"ruleId":"1340","severity":1,"message":"1341","line":75,"column":53,"nodeType":"1342","messageId":"1236","endLine":75,"endColumn":55},{"ruleId":"1340","severity":1,"message":"1341","line":83,"column":54,"nodeType":"1342","messageId":"1236","endLine":83,"endColumn":56},{"ruleId":"1382","severity":1,"message":"1383","line":161,"column":6,"nodeType":"1384","messageId":"1385","endLine":161,"endColumn":13},{"ruleId":"1237","severity":1,"message":"1292","line":41,"column":8,"nodeType":"1239","messageId":"1240","endLine":41,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1338","line":42,"column":13,"nodeType":"1239","messageId":"1240","endLine":42,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1386","line":50,"column":15,"nodeType":"1239","messageId":"1240","endLine":50,"endColumn":22},{"ruleId":"1242","severity":1,"message":"1387","line":65,"column":5,"nodeType":"1244","endLine":65,"endColumn":7,"suggestions":"1388"},{"ruleId":"1242","severity":1,"message":"1389","line":100,"column":5,"nodeType":"1244","endLine":100,"endColumn":36,"suggestions":"1390"},{"ruleId":"1346","severity":1,"message":"1347","line":717,"column":3,"nodeType":"1348","messageId":"1236","endLine":717,"endColumn":9},{"ruleId":"1237","severity":1,"message":"1391","line":3,"column":2,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":9},{"ruleId":"1237","severity":1,"message":"1392","line":10,"column":8,"nodeType":"1239","messageId":"1240","endLine":10,"endColumn":27},{"ruleId":"1237","severity":1,"message":"1393","line":11,"column":8,"nodeType":"1239","messageId":"1240","endLine":11,"endColumn":29},{"ruleId":"1237","severity":1,"message":"1394","line":12,"column":8,"nodeType":"1239","messageId":"1240","endLine":12,"endColumn":26},{"ruleId":"1237","severity":1,"message":"1395","line":22,"column":10,"nodeType":"1239","messageId":"1240","endLine":22,"endColumn":40},{"ruleId":"1237","severity":1,"message":"1396","line":23,"column":8,"nodeType":"1239","messageId":"1240","endLine":23,"endColumn":23},{"ruleId":"1237","severity":1,"message":"1360","line":24,"column":10,"nodeType":"1239","messageId":"1240","endLine":24,"endColumn":29},{"ruleId":"1259","severity":1,"message":"1260","line":28,"column":29,"nodeType":"1261","messageId":"1236","endLine":28,"endColumn":31},{"ruleId":"1242","severity":1,"message":"1361","line":51,"column":5,"nodeType":"1244","endLine":51,"endColumn":22,"suggestions":"1397"},{"ruleId":"1237","severity":1,"message":"1322","line":21,"column":10,"nodeType":"1239","messageId":"1240","endLine":21,"endColumn":14},{"ruleId":"1242","severity":1,"message":"1398","line":38,"column":5,"nodeType":"1244","endLine":38,"endColumn":16,"suggestions":"1399"},{"ruleId":"1242","severity":1,"message":"1400","line":53,"column":5,"nodeType":"1244","endLine":53,"endColumn":15,"suggestions":"1401"},{"ruleId":"1259","severity":1,"message":"1260","line":34,"column":35,"nodeType":"1261","messageId":"1236","endLine":34,"endColumn":37},{"ruleId":"1237","severity":1,"message":"1338","line":40,"column":13,"nodeType":"1239","messageId":"1240","endLine":40,"endColumn":17},{"ruleId":"1242","severity":1,"message":"1402","line":62,"column":5,"nodeType":"1244","endLine":62,"endColumn":22,"suggestions":"1403"},{"ruleId":"1237","severity":1,"message":"1291","line":32,"column":8,"nodeType":"1239","messageId":"1240","endLine":32,"endColumn":16},{"ruleId":"1242","severity":1,"message":"1387","line":54,"column":5,"nodeType":"1244","endLine":54,"endColumn":25,"suggestions":"1404"},{"ruleId":"1237","severity":1,"message":"1302","line":1,"column":16,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":26},{"ruleId":"1237","severity":1,"message":"1405","line":2,"column":8,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":20},{"ruleId":"1237","severity":1,"message":"1327","line":10,"column":8,"nodeType":"1239","messageId":"1240","endLine":10,"endColumn":18},{"ruleId":"1237","severity":1,"message":"1309","line":1,"column":17,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":25},{"ruleId":"1237","severity":1,"message":"1406","line":2,"column":10,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":25},{"ruleId":"1237","severity":1,"message":"1386","line":28,"column":15,"nodeType":"1239","messageId":"1240","endLine":28,"endColumn":22},{"ruleId":"1242","severity":1,"message":"1387","line":55,"column":5,"nodeType":"1244","endLine":55,"endColumn":7,"suggestions":"1407"},{"ruleId":"1282","severity":1,"message":"1283","line":318,"column":7,"nodeType":"1284","endLine":322,"endColumn":9},{"ruleId":"1282","severity":1,"message":"1283","line":331,"column":10,"nodeType":"1284","endLine":331,"endColumn":62},{"ruleId":"1242","severity":1,"message":"1408","line":30,"column":8,"nodeType":"1244","endLine":30,"endColumn":20,"suggestions":"1409"},{"ruleId":"1242","severity":1,"message":"1410","line":45,"column":8,"nodeType":"1244","endLine":45,"endColumn":15,"suggestions":"1411"},{"ruleId":"1242","severity":1,"message":"1412","line":26,"column":8,"nodeType":"1244","endLine":26,"endColumn":10,"suggestions":"1413"},{"ruleId":"1242","severity":1,"message":"1414","line":42,"column":8,"nodeType":"1244","endLine":42,"endColumn":15,"suggestions":"1415"},{"ruleId":"1237","severity":1,"message":"1292","line":15,"column":11,"nodeType":"1239","messageId":"1240","endLine":15,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1338","line":16,"column":16,"nodeType":"1239","messageId":"1240","endLine":16,"endColumn":20},{"ruleId":"1237","severity":1,"message":"1386","line":38,"column":15,"nodeType":"1239","messageId":"1240","endLine":38,"endColumn":22},{"ruleId":"1242","severity":1,"message":"1387","line":106,"column":5,"nodeType":"1244","endLine":106,"endColumn":7,"suggestions":"1416"},{"ruleId":"1346","severity":1,"message":"1417","line":418,"column":11,"nodeType":"1348","messageId":"1236","endLine":418,"endColumn":18},{"ruleId":"1346","severity":1,"message":"1347","line":1097,"column":3,"nodeType":"1348","messageId":"1236","endLine":1097,"endColumn":9},{"ruleId":"1237","severity":1,"message":"1292","line":22,"column":8,"nodeType":"1239","messageId":"1240","endLine":22,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1338","line":25,"column":13,"nodeType":"1239","messageId":"1240","endLine":25,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1265","line":2,"column":8,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":15},{"ruleId":"1237","severity":1,"message":"1338","line":39,"column":13,"nodeType":"1239","messageId":"1240","endLine":39,"endColumn":17},{"ruleId":"1242","severity":1,"message":"1402","line":60,"column":5,"nodeType":"1244","endLine":60,"endColumn":22,"suggestions":"1418"},{"ruleId":"1237","severity":1,"message":"1386","line":44,"column":15,"nodeType":"1239","messageId":"1240","endLine":44,"endColumn":22},{"ruleId":"1242","severity":1,"message":"1387","line":69,"column":5,"nodeType":"1244","endLine":69,"endColumn":7,"suggestions":"1419"},{"ruleId":"1282","severity":1,"message":"1283","line":534,"column":11,"nodeType":"1284","endLine":534,"endColumn":63},{"ruleId":"1346","severity":1,"message":"1347","line":669,"column":3,"nodeType":"1348","messageId":"1236","endLine":669,"endColumn":9},{"ruleId":"1237","severity":1,"message":"1338","line":20,"column":13,"nodeType":"1239","messageId":"1240","endLine":20,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1420","line":3,"column":10,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":20},{"ruleId":"1237","severity":1,"message":"1421","line":51,"column":11,"nodeType":"1239","messageId":"1240","endLine":51,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1292","line":15,"column":11,"nodeType":"1239","messageId":"1240","endLine":15,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1338","line":16,"column":16,"nodeType":"1239","messageId":"1240","endLine":16,"endColumn":20},{"ruleId":"1242","severity":1,"message":"1422","line":28,"column":8,"nodeType":"1244","endLine":28,"endColumn":10,"suggestions":"1423"},{"ruleId":"1237","severity":1,"message":"1338","line":15,"column":16,"nodeType":"1239","messageId":"1240","endLine":15,"endColumn":20},{"ruleId":"1278","severity":1,"message":"1279","line":28,"column":68,"nodeType":"1280","endLine":28,"endColumn":92},{"ruleId":"1237","severity":1,"message":"1301","line":10,"column":2,"nodeType":"1239","messageId":"1240","endLine":10,"endColumn":15},{"ruleId":"1237","severity":1,"message":"1424","line":20,"column":10,"nodeType":"1239","messageId":"1240","endLine":20,"endColumn":20},{"ruleId":"1237","severity":1,"message":"1425","line":20,"column":22,"nodeType":"1239","messageId":"1240","endLine":20,"endColumn":33},{"ruleId":"1282","severity":1,"message":"1283","line":175,"column":10,"nodeType":"1284","endLine":175,"endColumn":57},{"ruleId":"1340","severity":1,"message":"1341","line":186,"column":19,"nodeType":"1342","messageId":"1236","endLine":186,"endColumn":21},{"ruleId":"1282","severity":1,"message":"1283","line":230,"column":10,"nodeType":"1284","endLine":233,"endColumn":12},{"ruleId":"1237","severity":1,"message":"1308","line":2,"column":22,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":27},{"ruleId":"1237","severity":1,"message":"1426","line":15,"column":13,"nodeType":"1239","messageId":"1240","endLine":15,"endColumn":20},{"ruleId":"1237","severity":1,"message":"1427","line":16,"column":13,"nodeType":"1239","messageId":"1240","endLine":16,"endColumn":27},{"ruleId":"1282","severity":1,"message":"1283","line":115,"column":13,"nodeType":"1284","endLine":115,"endColumn":58},{"ruleId":"1237","severity":1,"message":"1292","line":15,"column":11,"nodeType":"1239","messageId":"1240","endLine":15,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1338","line":16,"column":16,"nodeType":"1239","messageId":"1240","endLine":16,"endColumn":20},{"ruleId":"1242","severity":1,"message":"1428","line":25,"column":8,"nodeType":"1244","endLine":25,"endColumn":10,"suggestions":"1429"},{"ruleId":"1237","severity":1,"message":"1379","line":3,"column":10,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":24},{"ruleId":"1242","severity":1,"message":"1430","line":31,"column":8,"nodeType":"1244","endLine":31,"endColumn":10,"suggestions":"1431"},{"ruleId":"1242","severity":1,"message":"1414","line":49,"column":8,"nodeType":"1244","endLine":49,"endColumn":16,"suggestions":"1432"},{"ruleId":"1237","severity":1,"message":"1433","line":2,"column":50,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":68},{"ruleId":"1237","severity":1,"message":"1424","line":3,"column":10,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":20},{"ruleId":"1237","severity":1,"message":"1434","line":5,"column":10,"nodeType":"1239","messageId":"1240","endLine":5,"endColumn":18},{"ruleId":"1237","severity":1,"message":"1291","line":11,"column":11,"nodeType":"1239","messageId":"1240","endLine":11,"endColumn":19},{"ruleId":"1237","severity":1,"message":"1435","line":1,"column":8,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":13},{"ruleId":"1237","severity":1,"message":"1309","line":1,"column":29,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":37},{"ruleId":"1237","severity":1,"message":"1301","line":1,"column":28,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":41},{"ruleId":"1237","severity":1,"message":"1286","line":3,"column":10,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":24},{"ruleId":"1237","severity":1,"message":"1338","line":22,"column":13,"nodeType":"1239","messageId":"1240","endLine":22,"endColumn":17},{"ruleId":"1346","severity":1,"message":"1436","line":213,"column":3,"nodeType":"1348","messageId":"1236","endLine":213,"endColumn":10},{"ruleId":"1237","severity":1,"message":"1285","line":1,"column":17,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":27},{"ruleId":"1237","severity":1,"message":"1281","line":1,"column":29,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":38},{"ruleId":"1237","severity":1,"message":"1309","line":1,"column":40,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":48},{"ruleId":"1237","severity":1,"message":"1437","line":5,"column":2,"nodeType":"1239","messageId":"1240","endLine":5,"endColumn":7},{"ruleId":"1237","severity":1,"message":"1338","line":35,"column":13,"nodeType":"1239","messageId":"1240","endLine":35,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1355","line":4,"column":10,"nodeType":"1239","messageId":"1240","endLine":4,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1396","line":6,"column":8,"nodeType":"1239","messageId":"1240","endLine":6,"endColumn":23},{"ruleId":"1237","severity":1,"message":"1338","line":15,"column":16,"nodeType":"1239","messageId":"1240","endLine":15,"endColumn":20},{"ruleId":"1237","severity":1,"message":"1292","line":16,"column":11,"nodeType":"1239","messageId":"1240","endLine":16,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1438","line":3,"column":43,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":62},{"ruleId":"1237","severity":1,"message":"1256","line":4,"column":50,"nodeType":"1239","messageId":"1240","endLine":4,"endColumn":54},{"ruleId":"1242","severity":1,"message":"1439","line":22,"column":8,"nodeType":"1244","endLine":22,"endColumn":20,"suggestions":"1440"},{"ruleId":"1237","severity":1,"message":"1338","line":19,"column":16,"nodeType":"1239","messageId":"1240","endLine":19,"endColumn":20},{"ruleId":"1242","severity":1,"message":"1400","line":33,"column":8,"nodeType":"1244","endLine":33,"endColumn":16,"suggestions":"1441"},{"ruleId":"1237","severity":1,"message":"1338","line":22,"column":13,"nodeType":"1239","messageId":"1240","endLine":22,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1292","line":15,"column":11,"nodeType":"1239","messageId":"1240","endLine":15,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1338","line":16,"column":16,"nodeType":"1239","messageId":"1240","endLine":16,"endColumn":20},{"ruleId":"1242","severity":1,"message":"1442","line":26,"column":8,"nodeType":"1244","endLine":26,"endColumn":10,"suggestions":"1443"},{"ruleId":"1237","severity":1,"message":"1301","line":3,"column":5,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":18},{"ruleId":"1237","severity":1,"message":"1302","line":4,"column":5,"nodeType":"1239","messageId":"1240","endLine":4,"endColumn":15},{"ruleId":"1237","severity":1,"message":"1444","line":8,"column":8,"nodeType":"1239","messageId":"1240","endLine":8,"endColumn":31},{"ruleId":"1237","severity":1,"message":"1445","line":11,"column":8,"nodeType":"1239","messageId":"1240","endLine":11,"endColumn":24},{"ruleId":"1237","severity":1,"message":"1446","line":12,"column":8,"nodeType":"1239","messageId":"1240","endLine":12,"endColumn":37},{"ruleId":"1237","severity":1,"message":"1447","line":13,"column":8,"nodeType":"1239","messageId":"1240","endLine":13,"endColumn":30},{"ruleId":"1237","severity":1,"message":"1290","line":15,"column":29,"nodeType":"1239","messageId":"1240","endLine":15,"endColumn":40},{"ruleId":"1237","severity":1,"message":"1448","line":15,"column":42,"nodeType":"1239","messageId":"1240","endLine":15,"endColumn":58},{"ruleId":"1237","severity":1,"message":"1338","line":23,"column":13,"nodeType":"1239","messageId":"1240","endLine":23,"endColumn":17},{"ruleId":"1346","severity":1,"message":"1436","line":159,"column":9,"nodeType":"1348","messageId":"1236","endLine":159,"endColumn":16},{"ruleId":"1237","severity":1,"message":"1386","line":40,"column":15,"nodeType":"1239","messageId":"1240","endLine":40,"endColumn":22},{"ruleId":"1242","severity":1,"message":"1387","line":72,"column":5,"nodeType":"1244","endLine":72,"endColumn":21,"suggestions":"1449"},{"ruleId":"1242","severity":1,"message":"1450","line":83,"column":5,"nodeType":"1244","endLine":83,"endColumn":19,"suggestions":"1451"},{"ruleId":"1242","severity":1,"message":"1452","line":91,"column":5,"nodeType":"1244","endLine":91,"endColumn":20,"suggestions":"1453"},{"ruleId":"1454","severity":1,"message":"1455","line":206,"column":15,"nodeType":"1456","messageId":"1457","endLine":206,"endColumn":24},{"ruleId":"1346","severity":1,"message":"1347","line":938,"column":3,"nodeType":"1348","messageId":"1236","endLine":938,"endColumn":9},{"ruleId":"1237","severity":1,"message":"1386","line":50,"column":15,"nodeType":"1239","messageId":"1240","endLine":50,"endColumn":22},{"ruleId":"1242","severity":1,"message":"1458","line":85,"column":5,"nodeType":"1244","endLine":85,"endColumn":27,"suggestions":"1459"},{"ruleId":"1242","severity":1,"message":"1387","line":89,"column":5,"nodeType":"1244","endLine":89,"endColumn":7,"suggestions":"1460"},{"ruleId":"1242","severity":1,"message":"1461","line":112,"column":5,"nodeType":"1244","endLine":112,"endColumn":27,"suggestions":"1462"},{"ruleId":"1340","severity":1,"message":"1341","line":286,"column":63,"nodeType":"1342","messageId":"1236","endLine":286,"endColumn":65},{"ruleId":"1340","severity":1,"message":"1341","line":302,"column":63,"nodeType":"1342","messageId":"1236","endLine":302,"endColumn":65},{"ruleId":"1340","severity":1,"message":"1341","line":665,"column":36,"nodeType":"1342","messageId":"1236","endLine":665,"endColumn":38},{"ruleId":"1340","severity":1,"message":"1341","line":672,"column":36,"nodeType":"1342","messageId":"1236","endLine":672,"endColumn":38},{"ruleId":"1282","severity":1,"message":"1283","line":804,"column":11,"nodeType":"1284","endLine":804,"endColumn":63},{"ruleId":"1346","severity":1,"message":"1347","line":939,"column":3,"nodeType":"1348","messageId":"1236","endLine":939,"endColumn":9},{"ruleId":"1346","severity":1,"message":"1463","line":1048,"column":2,"nodeType":"1348","messageId":"1236","endLine":1048,"endColumn":9},{"ruleId":"1237","severity":1,"message":"1464","line":2,"column":49,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":65},{"ruleId":"1237","severity":1,"message":"1465","line":2,"column":67,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":75},{"ruleId":"1237","severity":1,"message":"1338","line":11,"column":16,"nodeType":"1239","messageId":"1240","endLine":11,"endColumn":20},{"ruleId":"1237","severity":1,"message":"1466","line":12,"column":13,"nodeType":"1239","messageId":"1240","endLine":12,"endColumn":18},{"ruleId":"1242","severity":1,"message":"1387","line":60,"column":5,"nodeType":"1244","endLine":60,"endColumn":7,"suggestions":"1467"},{"ruleId":"1237","severity":1,"message":"1322","line":19,"column":10,"nodeType":"1239","messageId":"1240","endLine":19,"endColumn":14},{"ruleId":"1242","severity":1,"message":"1468","line":40,"column":5,"nodeType":"1244","endLine":40,"endColumn":16,"suggestions":"1469"},{"ruleId":"1237","severity":1,"message":"1263","line":7,"column":2,"nodeType":"1239","messageId":"1240","endLine":7,"endColumn":6},{"ruleId":"1237","severity":1,"message":"1470","line":18,"column":8,"nodeType":"1239","messageId":"1240","endLine":18,"endColumn":12},{"ruleId":"1237","severity":1,"message":"1338","line":31,"column":13,"nodeType":"1239","messageId":"1240","endLine":31,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1338","line":35,"column":13,"nodeType":"1239","messageId":"1240","endLine":35,"endColumn":17},{"ruleId":"1242","severity":1,"message":"1402","line":56,"column":5,"nodeType":"1244","endLine":56,"endColumn":22,"suggestions":"1471"},{"ruleId":"1346","severity":1,"message":"1472","line":263,"column":2,"nodeType":"1348","messageId":"1236","endLine":263,"endColumn":11},{"ruleId":"1237","severity":1,"message":"1473","line":10,"column":2,"nodeType":"1239","messageId":"1240","endLine":10,"endColumn":11},{"ruleId":"1242","severity":1,"message":"1474","line":37,"column":5,"nodeType":"1244","endLine":37,"endColumn":15,"suggestions":"1475"},{"ruleId":"1237","severity":1,"message":"1476","line":53,"column":8,"nodeType":"1239","messageId":"1240","endLine":53,"endColumn":31},{"ruleId":"1477","severity":1,"message":"1478","line":103,"column":10,"nodeType":"1384","messageId":"1479","endLine":103,"endColumn":17},{"ruleId":"1346","severity":1,"message":"1472","line":217,"column":2,"nodeType":"1348","messageId":"1236","endLine":217,"endColumn":11},{"ruleId":"1237","severity":1,"message":"1480","line":4,"column":8,"nodeType":"1239","messageId":"1240","endLine":4,"endColumn":16},{"ruleId":"1237","severity":1,"message":"1481","line":3,"column":10,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":24},{"ruleId":"1237","severity":1,"message":"1314","line":3,"column":45,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":51},{"ruleId":"1259","severity":1,"message":"1260","line":11,"column":26,"nodeType":"1261","messageId":"1236","endLine":11,"endColumn":28},{"ruleId":"1237","severity":1,"message":"1482","line":14,"column":18,"nodeType":"1239","messageId":"1240","endLine":14,"endColumn":28},{"ruleId":"1237","severity":1,"message":"1483","line":3,"column":10,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":18},{"ruleId":"1237","severity":1,"message":"1484","line":16,"column":11,"nodeType":"1239","messageId":"1240","endLine":16,"endColumn":25},{"ruleId":"1340","severity":1,"message":"1341","line":46,"column":40,"nodeType":"1342","messageId":"1236","endLine":46,"endColumn":42},{"ruleId":"1340","severity":1,"message":"1341","line":51,"column":36,"nodeType":"1342","messageId":"1236","endLine":51,"endColumn":38},{"ruleId":"1340","severity":1,"message":"1341","line":56,"column":40,"nodeType":"1342","messageId":"1236","endLine":56,"endColumn":42},{"ruleId":"1237","severity":1,"message":"1256","line":2,"column":22,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":26},{"ruleId":"1259","severity":1,"message":"1260","line":7,"column":35,"nodeType":"1261","messageId":"1236","endLine":7,"endColumn":37},{"ruleId":"1237","severity":1,"message":"1256","line":2,"column":22,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":26},{"ruleId":"1237","severity":1,"message":"1262","line":10,"column":13,"nodeType":"1239","messageId":"1240","endLine":10,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1324","line":18,"column":13,"nodeType":"1239","messageId":"1240","endLine":18,"endColumn":17},{"ruleId":"1242","severity":1,"message":"1325","line":39,"column":5,"nodeType":"1244","endLine":39,"endColumn":16,"suggestions":"1485"},{"ruleId":"1237","severity":1,"message":"1322","line":35,"column":10,"nodeType":"1239","messageId":"1240","endLine":35,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1386","line":38,"column":15,"nodeType":"1239","messageId":"1240","endLine":38,"endColumn":22},{"ruleId":"1242","severity":1,"message":"1486","line":62,"column":5,"nodeType":"1244","endLine":62,"endColumn":7,"suggestions":"1487"},{"ruleId":"1454","severity":1,"message":"1455","line":86,"column":15,"nodeType":"1456","messageId":"1457","endLine":86,"endColumn":24},{"ruleId":"1477","severity":1,"message":"1478","line":223,"column":37,"nodeType":"1384","messageId":"1479","endLine":223,"endColumn":44},{"ruleId":"1242","severity":1,"message":"1488","line":16,"column":8,"nodeType":"1244","endLine":16,"endColumn":13,"suggestions":"1489"},{"ruleId":"1237","severity":1,"message":"1490","line":40,"column":11,"nodeType":"1239","messageId":"1240","endLine":40,"endColumn":22},{"ruleId":"1237","severity":1,"message":"1256","line":2,"column":22,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":26},{"ruleId":"1237","severity":1,"message":"1355","line":4,"column":10,"nodeType":"1239","messageId":"1240","endLine":4,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1262","line":8,"column":10,"nodeType":"1239","messageId":"1240","endLine":8,"endColumn":11},{"ruleId":"1237","severity":1,"message":"1339","line":9,"column":8,"nodeType":"1239","messageId":"1240","endLine":9,"endColumn":15},{"ruleId":"1237","severity":1,"message":"1324","line":13,"column":10,"nodeType":"1239","messageId":"1240","endLine":13,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1266","line":15,"column":9,"nodeType":"1239","messageId":"1240","endLine":15,"endColumn":18},{"ruleId":"1237","severity":1,"message":"1371","line":15,"column":20,"nodeType":"1239","messageId":"1240","endLine":15,"endColumn":32},{"ruleId":"1237","severity":1,"message":"1491","line":18,"column":24,"nodeType":"1239","messageId":"1240","endLine":18,"endColumn":40},{"ruleId":"1242","severity":1,"message":"1492","line":26,"column":5,"nodeType":"1244","endLine":26,"endColumn":11,"suggestions":"1493"},{"ruleId":"1237","severity":1,"message":"1494","line":34,"column":8,"nodeType":"1239","messageId":"1240","endLine":34,"endColumn":20},{"ruleId":"1346","severity":1,"message":"1374","line":116,"column":3,"nodeType":"1348","messageId":"1236","endLine":116,"endColumn":15},{"ruleId":"1346","severity":1,"message":"1374","line":128,"column":3,"nodeType":"1348","messageId":"1236","endLine":128,"endColumn":15},{"ruleId":"1237","severity":1,"message":"1338","line":20,"column":13,"nodeType":"1239","messageId":"1240","endLine":20,"endColumn":17},{"ruleId":"1242","severity":1,"message":"1387","line":28,"column":5,"nodeType":"1244","endLine":28,"endColumn":16,"suggestions":"1495"},{"ruleId":"1340","severity":1,"message":"1341","line":44,"column":54,"nodeType":"1342","messageId":"1236","endLine":44,"endColumn":56},{"ruleId":"1237","severity":1,"message":"1496","line":58,"column":8,"nodeType":"1239","messageId":"1240","endLine":58,"endColumn":19},{"ruleId":"1259","severity":1,"message":"1260","line":32,"column":27,"nodeType":"1261","messageId":"1236","endLine":32,"endColumn":29},{"ruleId":"1237","severity":1,"message":"1497","line":44,"column":9,"nodeType":"1239","messageId":"1240","endLine":44,"endColumn":15},{"ruleId":"1237","severity":1,"message":"1498","line":44,"column":17,"nodeType":"1239","messageId":"1240","endLine":44,"endColumn":26},{"ruleId":"1237","severity":1,"message":"1356","line":45,"column":9,"nodeType":"1239","messageId":"1240","endLine":45,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1357","line":45,"column":19,"nodeType":"1239","messageId":"1240","endLine":45,"endColumn":30},{"ruleId":"1242","severity":1,"message":"1499","line":62,"column":5,"nodeType":"1244","endLine":62,"endColumn":7,"suggestions":"1500"},{"ruleId":"1346","severity":1,"message":"1436","line":236,"column":4,"nodeType":"1348","messageId":"1236","endLine":236,"endColumn":11},{"ruleId":"1242","severity":1,"message":"1501","line":39,"column":5,"nodeType":"1244","endLine":39,"endColumn":7,"suggestions":"1502"},{"ruleId":"1340","severity":1,"message":"1341","line":82,"column":33,"nodeType":"1342","messageId":"1236","endLine":82,"endColumn":35},{"ruleId":"1242","severity":1,"message":"1501","line":40,"column":5,"nodeType":"1244","endLine":40,"endColumn":7,"suggestions":"1503"},{"ruleId":"1242","severity":1,"message":"1501","line":38,"column":5,"nodeType":"1244","endLine":38,"endColumn":7,"suggestions":"1504"},{"ruleId":"1237","severity":1,"message":"1386","line":34,"column":15,"nodeType":"1239","messageId":"1240","endLine":34,"endColumn":22},{"ruleId":"1242","severity":1,"message":"1387","line":47,"column":5,"nodeType":"1244","endLine":47,"endColumn":7,"suggestions":"1505"},{"ruleId":"1346","severity":1,"message":"1417","line":295,"column":9,"nodeType":"1348","messageId":"1236","endLine":295,"endColumn":16},{"ruleId":"1346","severity":1,"message":"1347","line":469,"column":3,"nodeType":"1348","messageId":"1236","endLine":469,"endColumn":9},{"ruleId":"1242","severity":1,"message":"1387","line":36,"column":5,"nodeType":"1244","endLine":36,"endColumn":7,"suggestions":"1506"},{"ruleId":"1340","severity":1,"message":"1341","line":130,"column":35,"nodeType":"1342","messageId":"1236","endLine":130,"endColumn":37},{"ruleId":"1237","severity":1,"message":"1322","line":19,"column":10,"nodeType":"1239","messageId":"1240","endLine":19,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1323","line":19,"column":16,"nodeType":"1239","messageId":"1240","endLine":19,"endColumn":23},{"ruleId":"1237","severity":1,"message":"1324","line":20,"column":10,"nodeType":"1239","messageId":"1240","endLine":20,"endColumn":14},{"ruleId":"1242","severity":1,"message":"1325","line":41,"column":5,"nodeType":"1244","endLine":41,"endColumn":16,"suggestions":"1507"},{"ruleId":"1242","severity":1,"message":"1501","line":39,"column":5,"nodeType":"1244","endLine":39,"endColumn":7,"suggestions":"1508"},{"ruleId":"1237","severity":1,"message":"1509","line":20,"column":10,"nodeType":"1239","messageId":"1240","endLine":20,"endColumn":14},{"ruleId":"1242","severity":1,"message":"1402","line":48,"column":5,"nodeType":"1244","endLine":48,"endColumn":22,"suggestions":"1510"},{"ruleId":"1242","severity":1,"message":"1361","line":56,"column":5,"nodeType":"1244","endLine":56,"endColumn":16,"suggestions":"1511"},{"ruleId":"1282","severity":1,"message":"1283","line":91,"column":7,"nodeType":"1284","endLine":94,"endColumn":9},{"ruleId":"1237","severity":1,"message":"1309","line":2,"column":29,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":37},{"ruleId":"1237","severity":1,"message":"1262","line":9,"column":10,"nodeType":"1239","messageId":"1240","endLine":9,"endColumn":11},{"ruleId":"1237","severity":1,"message":"1324","line":10,"column":10,"nodeType":"1239","messageId":"1240","endLine":10,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1339","line":11,"column":8,"nodeType":"1239","messageId":"1240","endLine":11,"endColumn":15},{"ruleId":"1237","severity":1,"message":"1309","line":2,"column":29,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":37},{"ruleId":"1237","severity":1,"message":"1470","line":6,"column":8,"nodeType":"1239","messageId":"1240","endLine":6,"endColumn":12},{"ruleId":"1237","severity":1,"message":"1324","line":11,"column":10,"nodeType":"1239","messageId":"1240","endLine":11,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1339","line":12,"column":8,"nodeType":"1239","messageId":"1240","endLine":12,"endColumn":15},{"ruleId":"1282","severity":1,"message":"1283","line":59,"column":29,"nodeType":"1284","endLine":59,"endColumn":134},{"ruleId":"1237","severity":1,"message":"1512","line":5,"column":8,"nodeType":"1239","messageId":"1240","endLine":5,"endColumn":18},{"ruleId":"1237","severity":1,"message":"1324","line":14,"column":10,"nodeType":"1239","messageId":"1240","endLine":14,"endColumn":14},{"ruleId":"1282","severity":1,"message":"1283","line":104,"column":8,"nodeType":"1284","endLine":107,"endColumn":10},{"ruleId":"1237","severity":1,"message":"1309","line":2,"column":29,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":37},{"ruleId":"1237","severity":1,"message":"1512","line":5,"column":8,"nodeType":"1239","messageId":"1240","endLine":5,"endColumn":18},{"ruleId":"1237","severity":1,"message":"1513","line":7,"column":10,"nodeType":"1239","messageId":"1240","endLine":7,"endColumn":19},{"ruleId":"1237","severity":1,"message":"1514","line":9,"column":10,"nodeType":"1239","messageId":"1240","endLine":9,"endColumn":29},{"ruleId":"1282","severity":1,"message":"1283","line":79,"column":8,"nodeType":"1284","endLine":82,"endColumn":10},{"ruleId":"1237","severity":1,"message":"1285","line":1,"column":17,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":27},{"ruleId":"1237","severity":1,"message":"1281","line":1,"column":29,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":38},{"ruleId":"1237","severity":1,"message":"1425","line":2,"column":22,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":33},{"ruleId":"1237","severity":1,"message":"1515","line":11,"column":2,"nodeType":"1239","messageId":"1240","endLine":11,"endColumn":16},{"ruleId":"1237","severity":1,"message":"1302","line":13,"column":2,"nodeType":"1239","messageId":"1240","endLine":13,"endColumn":12},{"ruleId":"1237","severity":1,"message":"1355","line":15,"column":2,"nodeType":"1239","messageId":"1240","endLine":15,"endColumn":6},{"ruleId":"1237","severity":1,"message":"1516","line":19,"column":10,"nodeType":"1239","messageId":"1240","endLine":19,"endColumn":20},{"ruleId":"1237","severity":1,"message":"1517","line":19,"column":22,"nodeType":"1239","messageId":"1240","endLine":19,"endColumn":35},{"ruleId":"1237","severity":1,"message":"1518","line":22,"column":2,"nodeType":"1239","messageId":"1240","endLine":22,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1251","line":23,"column":2,"nodeType":"1239","messageId":"1240","endLine":23,"endColumn":10},{"ruleId":"1237","severity":1,"message":"1519","line":27,"column":10,"nodeType":"1239","messageId":"1240","endLine":27,"endColumn":25},{"ruleId":"1237","severity":1,"message":"1520","line":28,"column":10,"nodeType":"1239","messageId":"1240","endLine":28,"endColumn":25},{"ruleId":"1282","severity":1,"message":"1283","line":102,"column":6,"nodeType":"1284","endLine":105,"endColumn":8},{"ruleId":"1278","severity":1,"message":"1279","line":41,"column":5,"nodeType":"1280","endLine":41,"endColumn":16},{"ruleId":"1237","severity":1,"message":"1291","line":28,"column":8,"nodeType":"1239","messageId":"1240","endLine":28,"endColumn":16},{"ruleId":"1237","severity":1,"message":"1521","line":34,"column":20,"nodeType":"1239","messageId":"1240","endLine":34,"endColumn":32},{"ruleId":"1242","severity":1,"message":"1522","line":58,"column":8,"nodeType":"1244","endLine":58,"endColumn":17,"suggestions":"1523"},{"ruleId":"1340","severity":1,"message":"1341","line":61,"column":21,"nodeType":"1342","messageId":"1236","endLine":61,"endColumn":23},{"ruleId":"1242","severity":1,"message":"1524","line":74,"column":5,"nodeType":"1244","endLine":74,"endColumn":7,"suggestions":"1525"},{"ruleId":"1237","severity":1,"message":"1526","line":89,"column":10,"nodeType":"1239","messageId":"1240","endLine":89,"endColumn":12},{"ruleId":"1340","severity":1,"message":"1527","line":105,"column":23,"nodeType":"1342","messageId":"1236","endLine":105,"endColumn":25},{"ruleId":"1282","severity":1,"message":"1283","line":152,"column":6,"nodeType":"1284","endLine":155,"endColumn":8},{"ruleId":"1237","severity":1,"message":"1322","line":23,"column":10,"nodeType":"1239","messageId":"1240","endLine":23,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1386","line":26,"column":15,"nodeType":"1239","messageId":"1240","endLine":26,"endColumn":22},{"ruleId":"1242","severity":1,"message":"1528","line":50,"column":5,"nodeType":"1244","endLine":50,"endColumn":7,"suggestions":"1529"},{"ruleId":"1346","severity":1,"message":"1347","line":508,"column":3,"nodeType":"1348","messageId":"1236","endLine":508,"endColumn":9},{"ruleId":"1237","severity":1,"message":"1530","line":3,"column":10,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":15},{"ruleId":"1237","severity":1,"message":"1531","line":3,"column":17,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":23},{"ruleId":"1237","severity":1,"message":"1509","line":9,"column":10,"nodeType":"1239","messageId":"1240","endLine":9,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1266","line":10,"column":9,"nodeType":"1239","messageId":"1240","endLine":10,"endColumn":18},{"ruleId":"1237","severity":1,"message":"1371","line":10,"column":20,"nodeType":"1239","messageId":"1240","endLine":10,"endColumn":32},{"ruleId":"1237","severity":1,"message":"1532","line":8,"column":8,"nodeType":"1239","messageId":"1240","endLine":8,"endColumn":18},{"ruleId":"1237","severity":1,"message":"1396","line":9,"column":8,"nodeType":"1239","messageId":"1240","endLine":9,"endColumn":23},{"ruleId":"1237","severity":1,"message":"1281","line":10,"column":29,"nodeType":"1239","messageId":"1240","endLine":10,"endColumn":38},{"ruleId":"1237","severity":1,"message":"1533","line":14,"column":10,"nodeType":"1239","messageId":"1240","endLine":14,"endColumn":13},{"ruleId":"1237","severity":1,"message":"1338","line":28,"column":13,"nodeType":"1239","messageId":"1240","endLine":28,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1281","line":1,"column":17,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":26},{"ruleId":"1237","severity":1,"message":"1309","line":1,"column":28,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":36},{"ruleId":"1237","severity":1,"message":"1256","line":3,"column":2,"nodeType":"1239","messageId":"1240","endLine":3,"endColumn":6},{"ruleId":"1237","severity":1,"message":"1437","line":13,"column":2,"nodeType":"1239","messageId":"1240","endLine":13,"endColumn":7},{"ruleId":"1477","severity":1,"message":"1534","line":54,"column":42,"nodeType":"1535","messageId":"1536","endLine":54,"endColumn":44},{"ruleId":"1278","severity":1,"message":"1279","line":79,"column":8,"nodeType":"1280","endLine":79,"endColumn":18},{"ruleId":"1282","severity":1,"message":"1283","line":13,"column":13,"nodeType":"1284","endLine":14,"endColumn":44},{"ruleId":"1237","severity":1,"message":"1291","line":9,"column":11,"nodeType":"1239","messageId":"1240","endLine":9,"endColumn":19},{"ruleId":"1237","severity":1,"message":"1262","line":11,"column":10,"nodeType":"1239","messageId":"1240","endLine":11,"endColumn":11},{"ruleId":"1237","severity":1,"message":"1537","line":12,"column":10,"nodeType":"1239","messageId":"1240","endLine":12,"endColumn":24},{"ruleId":"1242","severity":1,"message":"1538","line":30,"column":8,"nodeType":"1244","endLine":30,"endColumn":23,"suggestions":"1539"},{"ruleId":"1242","severity":1,"message":"1540","line":39,"column":5,"nodeType":"1244","endLine":39,"endColumn":14,"suggestions":"1541"},{"ruleId":"1340","severity":1,"message":"1527","line":73,"column":72,"nodeType":"1342","messageId":"1236","endLine":73,"endColumn":74},{"ruleId":"1346","severity":1,"message":"1354","line":122,"column":3,"nodeType":"1348","messageId":"1236","endLine":122,"endColumn":13},{"ruleId":"1237","severity":1,"message":"1281","line":1,"column":29,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":38},{"ruleId":"1242","severity":1,"message":"1344","line":22,"column":8,"nodeType":"1244","endLine":22,"endColumn":14,"suggestions":"1542"},{"ruleId":"1237","severity":1,"message":"1292","line":9,"column":11,"nodeType":"1239","messageId":"1240","endLine":9,"endColumn":17},{"ruleId":"1237","severity":1,"message":"1309","line":2,"column":48,"nodeType":"1239","messageId":"1240","endLine":2,"endColumn":56},{"ruleId":"1242","severity":1,"message":"1543","line":24,"column":8,"nodeType":"1244","endLine":24,"endColumn":26,"suggestions":"1544"},{"ruleId":"1340","severity":1,"message":"1527","line":15,"column":90,"nodeType":"1342","messageId":"1236","endLine":15,"endColumn":92},{"ruleId":"1242","severity":1,"message":"1344","line":45,"column":8,"nodeType":"1244","endLine":45,"endColumn":16,"suggestions":"1545"},{"ruleId":"1237","severity":1,"message":"1435","line":1,"column":8,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":13},{"ruleId":"1237","severity":1,"message":"1262","line":11,"column":13,"nodeType":"1239","messageId":"1240","endLine":11,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1263","line":1,"column":10,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1333","line":1,"column":22,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":26},{"ruleId":"1237","severity":1,"message":"1308","line":1,"column":40,"nodeType":"1239","messageId":"1240","endLine":1,"endColumn":45},{"ruleId":"1237","severity":1,"message":"1546","line":8,"column":8,"nodeType":"1239","messageId":"1240","endLine":8,"endColumn":16},{"ruleId":"1237","severity":1,"message":"1547","line":10,"column":10,"nodeType":"1239","messageId":"1240","endLine":10,"endColumn":24},{"ruleId":"1237","severity":1,"message":"1262","line":23,"column":10,"nodeType":"1239","messageId":"1240","endLine":23,"endColumn":11},{"ruleId":"1237","severity":1,"message":"1308","line":7,"column":2,"nodeType":"1239","messageId":"1240","endLine":7,"endColumn":7},{"ruleId":"1237","severity":1,"message":"1281","line":11,"column":29,"nodeType":"1239","messageId":"1240","endLine":11,"endColumn":38},{"ruleId":"1237","severity":1,"message":"1548","line":14,"column":8,"nodeType":"1239","messageId":"1240","endLine":14,"endColumn":26},{"ruleId":"1242","severity":1,"message":"1387","line":20,"column":8,"nodeType":"1244","endLine":20,"endColumn":10,"suggestions":"1549"},{"ruleId":"1242","severity":1,"message":"1550","line":38,"column":8,"nodeType":"1244","endLine":38,"endColumn":21,"suggestions":"1551"},{"ruleId":"1282","severity":1,"message":"1283","line":11,"column":11,"nodeType":"1284","endLine":11,"endColumn":117},"no-extend-native","Array prototype is read only, properties should not be added.","CallExpression","unexpected","no-unused-vars","'AlertTitle' is defined but never used.","Identifier","unusedVar","'env' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setEnv'. Either include it or remove the dependency array.","ArrayExpression",["1552"],"no-native-reassign",["1553"],"no-negated-in-lhs",["1554"],"'FiberManualRecordRounded' is defined but never used.","'handleLS' is defined but never used.","React Hook useEffect has a missing dependency: 'setAuth'. Either include it or remove the dependency array.",["1555"],"React Hook useEffect has a missing dependency: 'checkUserAuthentication'. Either include it or remove the dependency array.",["1556"],"'Grid' is defined but never used.","'MuiAlert' is defined but never used.","'Settings' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'t' is assigned a value but never used.","'Fade' is defined but never used.","'useRef' is defined but never used.","'i18next' is defined but never used.","'isLoading' is assigned a value but never used.","'optionalValues' is assigned a value but never used.","'setOptionalValues' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setAuth' and 'vault'. Either include them or remove the dependency array. You can also do a functional update 'setVault(v => ...)' if you only need 'vault' in the 'setVault' call.",["1557"],"no-const-assign","'scenario' is constant.","const","Assignments to the 'scenario' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","React Hook useEffect has missing dependencies: 'auth', 'isLastStep', 'messages', and 'scenario'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["1558"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","'useTranslation' is defined but never used.","'FormControl' is defined but never used.","'OutlinedInput' is defined but never used.","'CancelScheduleSend' is defined but never used.","'getFullName' is defined but never used.","'location' is assigned a value but never used.","'downSm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchNotifications'. Either include it or remove the dependency array.",["1559"],"'history' is assigned a value but never used.","'setLang' is assigned a value but never used.","'edit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth.user.tenant', 'query', and 'setSnackbar'. Either include them or remove the dependency array.",["1560"],"'handleSave' is assigned a value but never used.","'useMediaQuery' is defined but never used.","'IconButton' is defined but never used.","'Map' is defined but never used.","React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["1561"],"React Hook useEffect has a missing dependency: 'location.search'. Either include it or remove the dependency array.",["1562"],"'Slide' is defined but never used.","'useState' is defined but never used.","'eachDayOfInterval' is defined but never used.","'isAfter' is defined but never used.","'parseISO' is defined but never used.","'toDate' is defined but never used.","'format' is defined but never used.","'usLocale' is defined but never used.","'getDateParts' is defined but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["1563","1564"],"'auth' is assigned a value but never used.","'setAuth' is assigned a value but never used.","'lang' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setSnackbar'. Either include it or remove the dependency array.",["1565"],"'dateFormat' is defined but never used.","'Button' is defined but never used.","'Snackbar' is defined but never used.","'Alert' is defined but never used.","'snackbar' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'Grow' is defined but never used.","'Icon' is defined but never used.","'SettingsBackupRestoreIcon' is defined but never used.","'SettingsRoundedIcon' is defined but never used.","'ExitToAppRoundedIcon' is defined but never used.","'i18n' is assigned a value but never used.","'matches' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'calenderActive' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'auth.user._id'. Either include it or remove the dependency array.",["1566"],"no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","'ClickAwayListener' is defined but never used.","'Collapse' is defined but never used.","'Avatar' is defined but never used.","'NotificationsContext' is defined but never used.","Duplicate key 'width'.","Duplicate key 'background'.","'Link' is defined but never used.","'editMode' is assigned a value but never used.","'setEditMode' is assigned a value but never used.","'handleReferralClick' is assigned a value but never used.","'SearchRoundedIcon' is defined but never used.","'FilterByMultiSelect' is defined but never used.","React Hook useEffect has a missing dependency: 'query.asset'. Either include it or remove the dependency array.",["1567"],"Duplicate key 'display'.","'Backdrop' is defined but never used.","'Modal' is defined but never used.","'updateSystemAdditionalData' is defined but never used.","'UpsertSystem' is defined but never used.","'FlyToInterpolator' is defined but never used.","'getMapData' is defined but never used.","'updateQueryParams' is defined but never used.","'setIsLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFaults' needs the current value of 'data'.",["1568"],"Duplicate key 'borderRadius'.","'InfoWindow' is defined but never used.","'InfoBox' is defined but never used.","'house' is defined but never used.","'FaultMinified' is defined but never used.","'getFullAddress' is defined but never used.","'ChevronRightRoundedIcon' is defined but never used.","'ChevronLeftRoundedIcon' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'setMode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'prepareData'. Either include it or remove the dependency array.",["1569"],"React Hook useEffect has a missing dependency: 'auth.user.tenant'. Either include it or remove the dependency array.",["1570"],"'Tooltip' is defined but never used.","'BusinessRoundedIcon' is defined but never used.","'AssignmentRoundedIcon' is defined but never used.","'WarningRoundedIcon' is defined but never used.","'getFaultsStatusListSuggestions' is defined but never used.","'DoubleArrowIcon' is defined but never used.",["1571"],"React Hook useEffect has missing dependencies: 'query' and 'setFaults'. Either include them or remove the dependency array.",["1572"],"React Hook useEffect has missing dependencies: 'history', 'location.pathname', and 'location.search'. Either include them or remove the dependency array.",["1573"],"React Hook useEffect has missing dependencies: 'history', 'location.pathname', and 'query.asset'. Either include them or remove the dependency array.",["1574"],["1575"],"'MoreVertIcon' is defined but never used.","'getMinPermLevel' is defined but never used.",["1576"],"React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.",["1577"],"React Hook useEffect has missing dependencies: 'filterField', 'history', 'location.pathname', and 'location.search'. Either include them or remove the dependency array.",["1578"],"React Hook useEffect has a missing dependency: 'optionsFunc'. Either include it or remove the dependency array. If 'optionsFunc' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1579"],"React Hook useEffect has missing dependencies: 'filterField', 'history', 'location.pathname', 'location.search', and 'query'. Either include them or remove the dependency array.",["1580"],["1581"],"Duplicate key 'classes'.",["1582"],["1583"],"'makeStyles' is defined but never used.","'res' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentStatus' and 'module'. Either include them or remove the dependency array.",["1584"],"'useHistory' is defined but never used.","'useLocation' is defined but never used.","'slideIn' is assigned a value but never used.","'slideDirection' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'followerList'. Either include it or remove the dependency array. If 'setUserList' needs the current value of 'followerList', you can also switch to useReducer instead of useState and read 'followerList' in the reducer.",["1585"],"React Hook useEffect has missing dependencies: 'filterField', 'optionsFunc', and 'query'. Either include them or remove the dependency array. If 'optionsFunc' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1586"],["1587"],"'specialStringPurge' is defined but never used.","'useQuery' is defined but never used.","'React' is defined but never used.","Duplicate key 'padding'.","'Paper' is defined but never used.","'queryParamsToObject' is defined but never used.","React Hook useEffect has missing dependencies: 'filterField', 'handleSearch', and 'query'. Either include them or remove the dependency array.",["1588"],["1589"],"React Hook useEffect has a missing dependency: 'relatedUsers'. Either include it or remove the dependency array.",["1590"],"'AddLocationOutlinedIcon' is defined but never used.","'ClearRoundedIcon' is defined but never used.","'CheckCircleOutlineRoundedIcon' is defined but never used.","'CheckCircleRoundedIcon' is defined but never used.","'updateStateField' is defined but never used.",["1591"],"React Hook useEffect has a missing dependency: 'populateLocations'. Either include it or remove the dependency array.",["1592"],"React Hook useEffect has missing dependencies: 'clearResidentData' and 'populateAssets'. Either include them or remove the dependency array.",["1593"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","React Hook useEffect has missing dependencies: 'details' and 'mode'. Either include them or remove the dependency array. You can also do a functional update 'setDetails(d => ...)' if you only need 'details' in the 'setDetails' call.",["1594"],["1595"],"React Hook useEffect has missing dependencies: 'auth.user._id', 'auth.user.tenant', and 'details'. Either include them or remove the dependency array. You can also do a functional update 'setDetails(d => ...)' if you only need 'details' in the 'setDetails' call.",["1596"],"Duplicate key 'iconBtn'.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'isSeq' is assigned a value but never used.",["1597"],"React Hook useEffect has missing dependencies: 'query', 'repeatable', and 'setSnackbar'. Either include them or remove the dependency array.",["1598"],"'clsx' is defined but never used.",["1599"],"Duplicate key 'textField'.","'TextField' is defined but never used.","React Hook useEffect has missing dependencies: 'index' and 'updateSchedules'. Either include them or remove the dependency array. If 'updateSchedules' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1600"],"'handleCalcNextIteration' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedReturnValue","'heLocale' is defined but never used.","'getDaysInMonth' is defined but never used.","'setCurrent' is assigned a value but never used.","'getTasks' is defined but never used.","'lastDayOfMonth' is assigned a value but never used.",["1601"],"React Hook useEffect has missing dependencies: 'handleClose', 'roleId', and 'setSnackbar'. Either include them or remove the dependency array. If 'handleClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1602"],"React Hook useEffect has missing dependencies: 'handleValueChange', 'module', and 'text'. Either include them or remove the dependency array. If 'handleValueChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1603"],"'getValColor' is assigned a value but never used.","'setDetailsActive' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'bracketData.tasks' and 'detailsActive'. Either include them or remove the dependency array. If 'setTasks' needs the current value of 'bracketData.tasks', you can also switch to useReducer instead of useState and read 'bracketData.tasks' in the reducer.",["1604"],"'handleChange' is assigned a value but never used.",["1605"],"'removeAsset' is assigned a value but never used.","'module' is assigned a value but never used.","'setModule' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'location.pathname', 'params.assetId', 'query.tab', and 'setSnackbar'. Either include them or remove the dependency array.",["1606"],"React Hook useEffect has missing dependencies: 'assetId', 'history', 'location.pathname', 'location.search', and 'setSnackbar'. Either include them or remove the dependency array.",["1607"],["1608"],["1609"],["1610"],["1611"],["1612"],["1613"],"'path' is assigned a value but never used.",["1614"],["1615"],"'GaugeChart' is defined but never used.","'StatusTag' is defined but never used.","'differenceInMinutes' is defined but never used.","'InputAdornment' is defined but never used.","'Visibility' is defined but never used.","'VisibilityOff' is defined but never used.","'attemptToSignin' is defined but never used.","'LanguageContext' is defined but never used.","'getLocalization' is defined but never used.","'setUserEmail' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["1616"],"React Hook useEffect has missing dependencies: 'history' and 'params.handle'. Either include them or remove the dependency array.",["1617"],"'cp' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'tenantId'. Either include it or remove the dependency array.",["1618"],"'Route' is defined but never used.","'Switch' is defined but never used.","'CreateIcon' is defined but never used.","'Can' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'getServerError' is defined but never used.","React Hook useEffect has a missing dependency: 'current'. Either include it or remove the dependency array.",["1619"],"React Hook useEffect has missing dependencies: 'auth.user._id' and 'readAllMessages'. Either include them or remove the dependency array.",["1620"],["1621"],"React Hook useEffect has missing dependencies: 'auth.user._id', 'current', and 'readAllMessages'. Either include them or remove the dependency array. If 'readAllMessages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1622"],["1623"],"'DoneIcon' is defined but never used.","'AutorenewSharp' is defined but never used.","'MicNoneRoundedIcon' is defined but never used.",["1624"],"React Hook useEffect has a missing dependency: 'orgUsers'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setUserList' needs the current value of 'orgUsers'.",["1625"],{"desc":"1626","fix":"1627"},"no-global-assign","no-unsafe-negation",{"desc":"1628","fix":"1629"},{"desc":"1630","fix":"1631"},{"desc":"1632","fix":"1633"},{"desc":"1634","fix":"1635"},{"desc":"1636","fix":"1637"},{"desc":"1638","fix":"1639"},{"desc":"1640","fix":"1641"},{"desc":"1642","fix":"1643"},{"messageId":"1644","fix":"1645","desc":"1646"},{"messageId":"1647","fix":"1648","desc":"1649"},{"desc":"1650","fix":"1651"},{"desc":"1652","fix":"1653"},{"desc":"1654","fix":"1655"},{"desc":"1656","fix":"1657"},{"desc":"1658","fix":"1659"},{"desc":"1660","fix":"1661"},{"desc":"1654","fix":"1662"},{"desc":"1663","fix":"1664"},{"desc":"1665","fix":"1666"},{"desc":"1667","fix":"1668"},{"desc":"1669","fix":"1670"},{"desc":"1658","fix":"1671"},{"desc":"1672","fix":"1673"},{"desc":"1674","fix":"1675"},{"desc":"1676","fix":"1677"},{"desc":"1678","fix":"1679"},{"desc":"1658","fix":"1680"},{"desc":"1667","fix":"1681"},{"desc":"1658","fix":"1682"},{"desc":"1683","fix":"1684"},{"desc":"1685","fix":"1686"},{"desc":"1687","fix":"1688"},{"desc":"1689","fix":"1690"},{"desc":"1691","fix":"1692"},{"desc":"1693","fix":"1694"},{"desc":"1695","fix":"1696"},{"desc":"1697","fix":"1698"},{"desc":"1699","fix":"1700"},{"desc":"1701","fix":"1702"},{"desc":"1703","fix":"1704"},{"desc":"1658","fix":"1705"},{"desc":"1706","fix":"1707"},{"desc":"1658","fix":"1708"},{"desc":"1709","fix":"1710"},{"desc":"1667","fix":"1711"},{"desc":"1712","fix":"1713"},{"desc":"1650","fix":"1714"},{"desc":"1715","fix":"1716"},{"desc":"1717","fix":"1718"},{"desc":"1719","fix":"1720"},{"desc":"1721","fix":"1722"},{"desc":"1723","fix":"1724"},{"desc":"1725","fix":"1726"},{"desc":"1725","fix":"1727"},{"desc":"1725","fix":"1728"},{"desc":"1658","fix":"1729"},{"desc":"1658","fix":"1730"},{"desc":"1650","fix":"1731"},{"desc":"1725","fix":"1732"},{"desc":"1667","fix":"1733"},{"desc":"1734","fix":"1735"},{"desc":"1736","fix":"1737"},{"desc":"1738","fix":"1739"},{"desc":"1740","fix":"1741"},{"desc":"1742","fix":"1743"},{"desc":"1744","fix":"1745"},{"desc":"1746","fix":"1747"},{"desc":"1748","fix":"1749"},{"desc":"1750","fix":"1751"},{"desc":"1658","fix":"1752"},{"desc":"1753","fix":"1754"},"Update the dependencies array to be: [setEnv]",{"range":"1755","text":"1756"},"Update the dependencies array to be: [setAuth]",{"range":"1757","text":"1758"},"Update the dependencies array to be: [checkUserAuthentication]",{"range":"1759","text":"1760"},"Update the dependencies array to be: [setAuth, vault]",{"range":"1761","text":"1762"},"Update the dependencies array to be: [auth, isLastStep, messages, scenario, scenarioStep]",{"range":"1763","text":"1764"},"Update the dependencies array to be: [fetchNotifications]",{"range":"1765","text":"1766"},"Update the dependencies array to be: [auth.user.tenant, isLoading, query, setSnackbar]",{"range":"1767","text":"1768"},"Update the dependencies array to be: [location.search, query]",{"range":"1769","text":"1770"},"Update the dependencies array to be: [isLoading, location.search]",{"range":"1771","text":"1772"},"removeEscape",{"range":"1773","text":"1774"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1775","text":"1776"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [isLoading, setSnackbar]",{"range":"1777","text":"1778"},"Update the dependencies array to be: [auth.user._id, conversations]",{"range":"1779","text":"1780"},"Update the dependencies array to be: [location.search, query.asset]",{"range":"1781","text":"1782"},"Update the dependencies array to be: [data, selectedAsset]",{"range":"1783","text":"1784"},"Update the dependencies array to be: [prepareData]",{"range":"1785","text":"1786"},"Update the dependencies array to be: [auth.user.tenant, details.asset, details.system]",{"range":"1787","text":"1788"},{"range":"1789","text":"1782"},"Update the dependencies array to be: [isLoading, query, setFaults]",{"range":"1790","text":"1791"},"Update the dependencies array to be: [history, location.pathname, location.search, viewType]",{"range":"1792","text":"1793"},"Update the dependencies array to be: [history, location.pathname, location.search, query.asset]",{"range":"1794","text":"1795"},"Update the dependencies array to be: [faultData, faultId, prepareData]",{"range":"1796","text":"1797"},{"range":"1798","text":"1786"},"Update the dependencies array to be: [handleSearch, searchText]",{"range":"1799","text":"1800"},"Update the dependencies array to be: [filterField, history, location.pathname, location.search, value]",{"range":"1801","text":"1802"},"Update the dependencies array to be: [optionsFunc]",{"range":"1803","text":"1804"},"Update the dependencies array to be: [filterField, history, location.pathname, location.search, query, value]",{"range":"1805","text":"1806"},{"range":"1807","text":"1786"},{"range":"1808","text":"1795"},{"range":"1809","text":"1786"},"Update the dependencies array to be: [currentStatus, module]",{"range":"1810","text":"1811"},"Update the dependencies array to be: [followerList]",{"range":"1812","text":"1813"},"Update the dependencies array to be: [filterField, optionsFunc, query]",{"range":"1814","text":"1815"},"Update the dependencies array to be: [filterField, history, location.pathname, location.search, query, values]",{"range":"1816","text":"1817"},"Update the dependencies array to be: [filterField, handleSearch, query, searchText]",{"range":"1818","text":"1819"},"Update the dependencies array to be: [history, location.pathname, location.search, values]",{"range":"1820","text":"1821"},"Update the dependencies array to be: [relatedUsers]",{"range":"1822","text":"1823"},"Update the dependencies array to be: [details.tenant, prepareData]",{"range":"1824","text":"1825"},"Update the dependencies array to be: [details.data, populateLocations]",{"range":"1826","text":"1827"},"Update the dependencies array to be: [clearResidentData, populateAssets, residentOwner]",{"range":"1828","text":"1829"},"Update the dependencies array to be: [details, details.isUsingSteps, mode]",{"range":"1830","text":"1831"},{"range":"1832","text":"1786"},"Update the dependencies array to be: [auth.user._id, auth.user.tenant, details, details.isRepeatable]",{"range":"1833","text":"1834"},{"range":"1835","text":"1786"},"Update the dependencies array to be: [isLoading, query, repeatable, setSnackbar]",{"range":"1836","text":"1837"},{"range":"1838","text":"1795"},"Update the dependencies array to be: [index, schedule, updateSchedules]",{"range":"1839","text":"1840"},{"range":"1841","text":"1778"},"Update the dependencies array to be: [handleClose, roleId, setSnackbar]",{"range":"1842","text":"1843"},"Update the dependencies array to be: [handleValueChange, module, text, val]",{"range":"1844","text":"1845"},"Update the dependencies array to be: [bracketData.tasks, data, detailsActive]",{"range":"1846","text":"1847"},"Update the dependencies array to be: [isLoading, prepareData]",{"range":"1848","text":"1849"},"Update the dependencies array to be: [history, location.pathname, params.assetId, query.tab, setSnackbar]",{"range":"1850","text":"1851"},"Update the dependencies array to be: [assetId, history, location.pathname, location.search, setSnackbar]",{"range":"1852","text":"1853"},{"range":"1854","text":"1853"},{"range":"1855","text":"1853"},{"range":"1856","text":"1786"},{"range":"1857","text":"1786"},{"range":"1858","text":"1778"},{"range":"1859","text":"1853"},{"range":"1860","text":"1795"},"Update the dependencies array to be: [isLoading, query.asset]",{"range":"1861","text":"1862"},"Update the dependencies array to be: [history, success]",{"range":"1863","text":"1864"},"Update the dependencies array to be: [history, params.handle]",{"range":"1865","text":"1866"},"Update the dependencies array to be: [tenantId]",{"range":"1867","text":"1868"},"Update the dependencies array to be: [conversations, current]",{"range":"1869","text":"1870"},"Update the dependencies array to be: [auth.user._id, current, readAllMessages]",{"range":"1871","text":"1872"},"Update the dependencies array to be: [auth.user._id, data]",{"range":"1873","text":"1874"},"Update the dependencies array to be: [auth.user._id, current, current.messages, readAllMessages]",{"range":"1875","text":"1876"},"Update the dependencies array to be: [auth.user._id, socket]",{"range":"1877","text":"1878"},{"range":"1879","text":"1786"},"Update the dependencies array to be: [orgUsers, searchValue]",{"range":"1880","text":"1881"},[1533,1535],"[setEnv]",[1132,1134],"[setAuth]",[1038,1040],"[checkUserAuthentication]",[2381,2383],"[setAuth, vault]",[3587,3601],"[auth, isLastStep, messages, scenario, scenarioStep]",[1740,1742],"[fetchNotifications]",[1812,1823],"[auth.user.tenant, isLoading, query, setSnackbar]",[867,884],"[location.search, query]",[1299,1310],"[isLoading, location.search]",[2612,2613],"",[2612,2612],"\\",[1624,1635],"[isLoading, setSnackbar]",[2518,2533],"[auth.user._id, conversations]",[2076,2093],"[location.search, query.asset]",[2218,2233],"[data, selectedAsset]",[1993,1995],"[prepareData]",[2746,2777],"[auth.user.tenant, details.asset, details.system]",[1924,1941],[1461,1472],"[isLoading, query, setFaults]",[1748,1758],"[history, location.pathname, location.search, viewType]",[2186,2203],"[history, location.pathname, location.search, query.asset]",[2351,2371],"[faultData, faultId, prepareData]",[1649,1651],[1483,1495],"[handleSearch, searchText]",[1942,1949],"[filterField, history, location.pathname, location.search, value]",[1109,1111],"[optionsFunc]",[1584,1591],"[filterField, history, location.pathname, location.search, query, value]",[2651,2653],[2184,2201],[1995,1997],[1205,1207],"[currentStatus, module]",[1095,1097],"[followerList]",[1345,1347],"[filterField, optionsFunc, query]",[1874,1882],"[filterField, history, location.pathname, location.search, query, values]",[1118,1130],"[filterField, handleSearch, query, searchText]",[1451,1459],"[history, location.pathname, location.search, values]",[1108,1110],"[relatedUsers]",[2385,2401],"[details.tenant, prepareData]",[2695,2709],"[details.data, populateLocations]",[2826,2841],"[clearResidentData, populateAssets, residentOwner]",[2486,2508],"[details, details.isUsingSteps, mode]",[2556,2558],[2943,2965],"[auth.user._id, auth.user.tenant, details, details.isRepeatable]",[2684,2686],[1473,1484],"[isLoading, query, repeatable, setSnackbar]",[1973,1990],[968,978],"[index, schedule, updateSchedules]",[1593,1604],[1818,1820],"[handleClose, roleId, setSnackbar]",[458,463],"[handleValueChange, module, text, val]",[1107,1113],"[bracketData.tasks, data, detailsActive]",[1130,1141],"[isLoading, prepareData]",[2494,2496],"[history, location.pathname, params.assetId, query.tab, setSnackbar]",[1479,1481],"[assetId, history, location.pathname, location.search, setSnackbar]",[1457,1459],[1461,1463],[1553,1555],[1405,1407],[1636,1647],[1413,1415],[1784,1801],[1963,1974],"[isLoading, query.asset]",[1981,1990],"[history, success]",[2340,2342],"[history, params.handle]",[1648,1650],"[tenantId]",[1391,1406],"[conversations, current]",[1618,1627],"[auth.user._id, current, readAllMessages]",[915,921],"[auth.user._id, data]",[1042,1060],"[auth.user._id, current, current.messages, readAllMessages]",[1736,1744],"[auth.user._id, socket]",[904,906],[1377,1390],"[orgUsers, searchValue]"]