[{"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\index.js":"1","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\App.js":"2","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\context\\authContext.js":"3","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\themes\\theme.js":"4","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\workspace\\Workspace.js":"5","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\workspace\\ProtectedWorkspace.js":"6","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\routes\\InitialRouter.js":"7","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\user\\Login.js":"8","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\api\\userApi.js":"9","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\controls\\Controls.js":"10","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Navbar.js":"11","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\SideMenu.js":"12","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\AddMenu.js":"13","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Assets.js":"14","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\api\\assetsApi.js":"15","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Asset.js":"16","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\user\\UserItem.js":"17","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetsControls.js":"18","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetControls.js":"19","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SortBy.js":"20","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\context\\FiltersContext.js":"21","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\context\\AuthContext.js":"22","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\api\\genericApi.js":"23","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\useQuery.js":"24","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBox.js":"25","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterBySelect.js":"26","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterByMultiSelect.js":"27","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\context\\LanguageContext.js":"28","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\i18n.js":"29","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\Systems.js":"30","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsControls.js":"31","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBoxSelect.js":"32","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\api\\systemsApi.js":"33","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\System.js":"34","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemName.js":"35","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\AddLinkedUser.js":"36","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsHeader.js":"37","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemControls.js":"38","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemLinkedUsers.js":"39","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\Faults.js":"40","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultsControls.js":"41","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\api\\faultsApi.js":"42","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultListView.js":"43","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultMinified.js":"44","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\StatusTag.js":"45","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultLink.js":"46","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultView.js":"47","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\Carousel.js":"48","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViewControls.js":"49","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UserList.js":"50","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CommentSection.js":"51","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViews.js":"52","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CreateContainer.js":"53","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemAdditionalDetails.js":"54","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\UpsertSystem.js":"55","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\UpsertFault.js":"56","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateOwner.js":"57","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\UpsertAsset.js":"58","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AddFollower.js":"59","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AlertDialog.js":"60","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateStatus.js":"61","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlockView.js":"62","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\context\\FaultsContext.js":"63","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlock.js":"64"},{"size":569,"mtime":1612721733308,"results":"65","hashOfConfig":"66"},{"size":1652,"mtime":1612719602814,"results":"67","hashOfConfig":"66"},{"size":457,"mtime":1612222036105,"results":"68","hashOfConfig":"66"},{"size":1950,"mtime":1613848139347,"results":"69","hashOfConfig":"66"},{"size":3003,"mtime":1614888158002,"results":"70","hashOfConfig":"66"},{"size":1383,"mtime":1612140660414,"results":"71","hashOfConfig":"66"},{"size":1448,"mtime":1612592795916,"results":"72","hashOfConfig":"66"},{"size":9718,"mtime":1612221364508,"results":"73","hashOfConfig":"66"},{"size":2557,"mtime":1613880846308,"results":"74","hashOfConfig":"66"},{"size":2205,"mtime":1613751347158,"results":"75","hashOfConfig":"66"},{"size":5208,"mtime":1612765399602,"results":"76","hashOfConfig":"66"},{"size":7538,"mtime":1615146699014,"results":"77","hashOfConfig":"66"},{"size":5596,"mtime":1614270702226,"results":"78","hashOfConfig":"66"},{"size":3607,"mtime":1614379036632,"results":"79","hashOfConfig":"66"},{"size":3969,"mtime":1614315679260,"results":"80","hashOfConfig":"66"},{"size":13344,"mtime":1615146717032,"results":"81","hashOfConfig":"66"},{"size":3402,"mtime":1614988750445,"results":"82","hashOfConfig":"66"},{"size":4604,"mtime":1613282044486,"results":"83","hashOfConfig":"66"},{"size":1910,"mtime":1614315481710,"results":"84","hashOfConfig":"66"},{"size":5216,"mtime":1613281720174,"results":"85","hashOfConfig":"66"},{"size":474,"mtime":1612077675310,"results":"86","hashOfConfig":"66"},{"size":457,"mtime":1612222036105,"results":"87","hashOfConfig":"66"},{"size":4292,"mtime":1615237164551,"results":"88","hashOfConfig":"66"},{"size":164,"mtime":1612245702093,"results":"89","hashOfConfig":"66"},{"size":3685,"mtime":1613353209720,"results":"90","hashOfConfig":"66"},{"size":6779,"mtime":1613345281720,"results":"91","hashOfConfig":"66"},{"size":8804,"mtime":1613409439913,"results":"92","hashOfConfig":"66"},{"size":665,"mtime":1614613193876,"results":"93","hashOfConfig":"66"},{"size":744,"mtime":1612722345758,"results":"94","hashOfConfig":"66"},{"size":3675,"mtime":1614317324634,"results":"95","hashOfConfig":"66"},{"size":5612,"mtime":1614317588999,"results":"96","hashOfConfig":"66"},{"size":8368,"mtime":1615239696007,"results":"97","hashOfConfig":"66"},{"size":4358,"mtime":1614058502945,"results":"98","hashOfConfig":"66"},{"size":8884,"mtime":1614466039201,"results":"99","hashOfConfig":"66"},{"size":5213,"mtime":1612941646899,"results":"100","hashOfConfig":"66"},{"size":7625,"mtime":1614378488896,"results":"101","hashOfConfig":"66"},{"size":2790,"mtime":1613954845212,"results":"102","hashOfConfig":"66"},{"size":5511,"mtime":1615146761919,"results":"103","hashOfConfig":"66"},{"size":8059,"mtime":1615147028522,"results":"104","hashOfConfig":"66"},{"size":1110,"mtime":1613589946595,"results":"105","hashOfConfig":"66"},{"size":8231,"mtime":1615161515144,"results":"106","hashOfConfig":"66"},{"size":6416,"mtime":1615235699581,"results":"107","hashOfConfig":"66"},{"size":4175,"mtime":1614911977710,"results":"108","hashOfConfig":"66"},{"size":3216,"mtime":1614989067878,"results":"109","hashOfConfig":"66"},{"size":2271,"mtime":1614656603795,"results":"110","hashOfConfig":"66"},{"size":531,"mtime":1614989032934,"results":"111","hashOfConfig":"66"},{"size":14194,"mtime":1615239863415,"results":"112","hashOfConfig":"66"},{"size":7651,"mtime":1614357220658,"results":"113","hashOfConfig":"66"},{"size":2614,"mtime":1614497502109,"results":"114","hashOfConfig":"66"},{"size":5990,"mtime":1615146823243,"results":"115","hashOfConfig":"66"},{"size":12461,"mtime":1614913286083,"results":"116","hashOfConfig":"66"},{"size":3723,"mtime":1615237237897,"results":"117","hashOfConfig":"66"},{"size":2854,"mtime":1615235829374,"results":"118","hashOfConfig":"66"},{"size":16098,"mtime":1614052542930,"results":"119","hashOfConfig":"66"},{"size":52456,"mtime":1615146814885,"results":"120","hashOfConfig":"66"},{"size":34015,"mtime":1615235893608,"results":"121","hashOfConfig":"66"},{"size":7768,"mtime":1614498214002,"results":"122","hashOfConfig":"66"},{"size":22202,"mtime":1614404220010,"results":"123","hashOfConfig":"66"},{"size":7733,"mtime":1614383562616,"results":"124","hashOfConfig":"66"},{"size":3226,"mtime":1614380845240,"results":"125","hashOfConfig":"66"},{"size":7863,"mtime":1614498193221,"results":"126","hashOfConfig":"66"},{"size":3303,"mtime":1615138557777,"results":"127","hashOfConfig":"66"},{"size":383,"mtime":1614886227677,"results":"128","hashOfConfig":"66"},{"size":940,"mtime":1615145318433,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"2s6085",{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"132"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"132"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"132"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"132"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"132"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"132"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"132"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"132"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"132"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"132"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"132"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"132"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"132"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"132"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"132"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"132"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"132"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"132"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"132"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"132"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"132"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"132"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"132"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"132"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"132"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"132"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"132"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"132"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"132"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"132"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"132"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"132"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"132"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"132"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"132"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"132"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"132"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\index.js",[],["296","297"],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\App.js",[],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\context\\authContext.js",["298"],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\themes\\theme.js",[],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\workspace\\Workspace.js",["299","300","301"],"import React, { useState } from 'react'\r\nimport { Controls } from '../controls/Controls'\r\nimport { makeStyles, Grid, useMediaQuery } from '@material-ui/core'\r\nimport { Assets } from '../datapages/assets/Assets'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { Systems } from '../datapages/systems/Systems'\r\nimport greyJpg from '../../assets/images/grey.jpg'\r\nimport { Faults } from '../datapages/faults/Faults'\r\nimport { FaultsContextProvider } from '../../context/FaultsContext'\r\n\r\n\r\nexport const Workspace = ({}) => {\r\n\r\n    const classes = useStyles();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <FaultsContextProvider>\r\n                <Grid container \r\n                    className={classes.mainContainer} \r\n                    justify='center' \r\n                    alignItems='flex-start'\r\n                    \r\n                >\r\n                    <Controls />\r\n                    <Grid item xs={12} md={12} lg={11} xl={9} className={classes.mainData} >\r\n                        <Switch>\r\n                            <Route path={'/workspace/assets'}>\r\n                                <Assets />\r\n                            </Route>\r\n                            <Route path={'/workspace/systems'}>\r\n                                <Systems />\r\n                            </Route>\r\n                            <Route path={'/workspace/faults'}>\r\n                                <Faults />\r\n                            </Route>\r\n                        </Switch>\r\n                    </Grid>\r\n                </Grid>\r\n            </FaultsContextProvider>  \r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    mainContainer: {\r\n        height: '100%',\r\n        background: `url(${greyJpg})`,\r\n        zIndex: 2,\r\n        backgroundRepeat: 'no-reaper',\r\n        backgroundSize: 'cover',\r\n        \r\n        overflowY: 'auto',\r\n        [theme.breakpoints.down('sm')]: { \r\n            '&::-webkit-scrollbar': { \r\n                display:  'none'\r\n            } \r\n        }   \r\n    },\r\n    \r\n    mainData: {\r\n        minHeight: '90vh',\r\n        background: \"rgba(0,0,0,0.4)\",\r\n        backdropFilter: \"blur(22px)\",\r\n        marginTop: '10px',\r\n        border: \"1px solid rgba(255,255,255,0.2)\",\r\n        borderRadius: '5px',\r\n        boxShadow: \"rgba(0,0,0,0.4) 0px 0px 3px 2px\",\r\n        padding: \"0 10px\",\r\n        [theme.breakpoints.down('sm')]: {\r\n            border: 'none',\r\n            borderRadius: 0,\r\n            margin: 0,\r\n            padding: 0\r\n        }\r\n       \r\n       \r\n    },\r\n    '@global': {\r\n        '*::-webkit-scrollbar': {\r\n          width: '0.4em'\r\n        },\r\n        '*::-webkit-scrollbar-track': {\r\n          '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)'\r\n        },\r\n        '*::-webkit-scrollbar-thumb': {\r\n          backgroundColor: 'rgba(0,0,0,.4)',\r\n          borderRadius: '50px'\r\n       \r\n        }\r\n      }\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\workspace\\ProtectedWorkspace.js",["302"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../../context/authContext';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authenticate, handleLS } from '../../api/userApi';\r\n\r\nexport const ProtectedWorkspace = ({ children, isAuthenticated,...rest}) => {\r\n    \r\n    const { auth, setAuth } = useContext(AuthContext);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    const checkUserAuthentication = async () => {\r\n        let token = await handleLS('wb_token', 'get');\r\n        if (!token) {\r\n            setIsLoading(false);\r\n            return;\r\n        };\r\n        let res = await authenticate(token);\r\n        if (res.auth) {\r\n           setAuth({\r\n                isAuth: res.auth,\r\n                user: res.user,\r\n                token: res.token.token,\r\n                refreshToken: res.token.refreshToken\r\n            });\r\n              \r\n        }\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n    useEffect(() => {\r\n        checkUserAuthentication();\r\n    }, []);\r\n\r\n    return (\r\n        <Route {...rest}\r\n          render={() => isLoading ? \r\n            'loading' : \r\n            auth.isAuth\r\n            ? children\r\n            :   <Redirect\r\n                    to={{\r\n                    pathname: \"/login\"\r\n                }}/>\r\n            }      \r\n        />\r\n      );\r\n}\r\n","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\routes\\InitialRouter.js",["303"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authenticate, handleLS } from '../../api/userApi';\r\n\r\nexport const InitialRouter = ({...rest}) => {\r\n    \r\n    const { auth, setAuth } = useContext(AuthContext);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    const checkUserAuthentication = async () => {\r\n        let token = await handleLS('wb_token', 'get');\r\n        if (!token) {\r\n            setIsLoading(false);\r\n            return;\r\n        };\r\n        let res = await authenticate(token);\r\n        \r\n        if (res.auth) {\r\n           setAuth({\r\n                isAuth: res.auth,\r\n                user: res.user,\r\n                token: res.token.token,\r\n                refreshToken: res.token.refreshToken\r\n            });\r\n              \r\n        }\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n    useEffect(() => {\r\n        checkUserAuthentication();\r\n    }, []);\r\n\r\n    return (\r\n        <Route {...rest}\r\n          render={() => isLoading ? \r\n            'loading' : \r\n            auth.isAuth\r\n            ? <Redirect\r\n                to={{\r\n                    pathname: \"/workspace\"\r\n            }}/> \r\n            :   <Redirect\r\n                    to={{\r\n                    pathname: \"/login\"\r\n                }}/>\r\n            }      \r\n        />\r\n      );\r\n}\r\n","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\user\\Login.js",[],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\api\\userApi.js",[],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\controls\\Controls.js",[],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Navbar.js",[],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\SideMenu.js",["304"],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\AddMenu.js",["305"],"import React from 'react'\r\nimport { makeStyles, List, ListItem, ListItemIcon, ListItemText, Grow, ClickAwayListener, useMediaQuery } from '@material-ui/core'\r\nimport AddLocationOutlinedIcon from '@material-ui/icons/AddLocationOutlined';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport QueueIcon from '@material-ui/icons/Queue';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport NoteAddOutlinedIcon from '@material-ui/icons/NoteAddOutlined';\r\nimport BlurOnRoundedIcon from '@material-ui/icons/BlurOnRounded';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport const AddMenu = ({toggleAddMenu, toggleAdd}) => {\r\n\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const matches = useMediaQuery(theme => theme.breakpoints.up('sm'));\r\n\r\n    const closeMenu = () => {\r\n        if (matches) {\r\n            toggleAddMenu()\r\n        }\r\n    }  \r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={closeMenu}>\r\n            <Grow in={true}>\r\n                <div className={classes.addMenuContainer}>\r\n                    <List className= { classes.list}>\r\n                        <ListItem \r\n                            button={true} \r\n                            className={classes.listItem}\r\n                            onClick={toggleAdd('asset')}\r\n                        >\r\n                            <ListItemIcon className={classes.listItemIcon}>\r\n                                <AddLocationOutlinedIcon  className={classes.icon}/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t(\"createMenu.addAsset\")} className={classes.listItemText} disableTypography={true}/>\r\n                        </ListItem>\r\n                        <ListItem \r\n                            button={true} \r\n                            className={classes.listItem}\r\n                            onClick={toggleAdd('system')}\r\n                        >\r\n                            <ListItemIcon className={classes.listItemIcon}>\r\n                                <BlurOnRoundedIcon  className={classes.icon}/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t(\"createMenu.addSystem\")} className={classes.listItemText} disableTypography={true}/>\r\n                        </ListItem>\r\n                        <ListItem button={true} className={classes.listItem}>\r\n                            <ListItemIcon className={classes.listItemIcon}>\r\n                                <GroupAddIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t(\"createMenu.createUser\")} className={classes.listItemText} disableTypography={true}/>\r\n                        </ListItem>\r\n                        <ListItem button={true} className={classes.listItem}>\r\n                            <ListItemIcon className={classes.listItemIcon}>\r\n                                <PostAddIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t(\"createMenu.createTask\")} className={classes.listItemText} disableTypography={true}/>\r\n                        </ListItem>\r\n                        <ListItem \r\n                            button={true} \r\n                            className={classes.listItem}\r\n                            onClick={toggleAdd('fault')}\r\n                        >\r\n                            <ListItemIcon className={classes.listItemIcon}>\r\n                                <QueueIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t(\"createMenu.createFault\")} className={classes.listItemText} disableTypography={true}/>\r\n                        </ListItem>\r\n                        <ListItem button={true} className={classes.listItem}>\r\n                            <ListItemIcon className={classes.listItemIcon}>\r\n                                <NoteAddOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t(\"createMenu.addDocument\")} className={classes.listItemText} disableTypography={true}/>\r\n                        </ListItem>\r\n                    </List>  \r\n                </div>\r\n            </Grow>\r\n        </ClickAwayListener>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    addMenuContainer: {\r\n        zIndex: 2,\r\n        width: '240px',\r\n        background: theme.palette.primary.main,\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        backdropFilter: 'blur(10px)',\r\n        boxShadow: 'rgba(0,0,0,0.25) 0px 0px 6px 3px',\r\n        position: 'absolute',\r\n        top: '80px',\r\n        right: '2%',\r\n        borderRadius: '10px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            maxHeight: '70vh',\r\n            overflow: 'scroll'\r\n        }\r\n\r\n    },\r\n    list: {\r\n        width: '90%',\r\n        margin: '0px auto'\r\n    },\r\n    listItem: {\r\n        color: 'theme.palette.primary.main',\r\n        margin: '7px auto',\r\n        borderRadius: '10px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        transition: 'background box-shadow 0.3s ease-in-out',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.6)',\r\n            transition: 'background box-shadow 0.2s ease-in-out',\r\n            boxShadow: '0 8px 32px 0 rgb(0 0 0 / 80%)',\r\n        }\r\n    }, \r\n    listItemIcon: {\r\n        color: 'white'\r\n    },\r\n    listItemText: {     \r\n        fontSize: '14px',\r\n        color: 'white'\r\n        \r\n    },\r\n    bottomList: {\r\n        padding: '10px 0'\r\n    }\r\n\r\n}));","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Assets.js",["306","307","308"],"import React, { useEffect, useState } from 'react'\r\nimport { Grid, LinearProgress, makeStyles } from '@material-ui/core'\r\nimport { getAssets, removeAsset,getFullAddress, applyFilters } from '../../../api/assetsApi'\r\nimport { Asset } from './Asset'\r\nimport { AssetsControls } from './AssetsControls'\r\nimport { AlertDialog } from '../../reuseables/AlertDialog'\r\nimport { queryParamsToObject } from '../../../api/genericApi';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport const Assets = () => {\r\n\r\n    const location = useLocation();\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const [ assets, setAssets ] = useState([]);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n    const [ alertDialog , setAlertDialog ] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if(!isLoading) return;\r\n        getAssets()\r\n        .then(res => {\r\n            if (res) {\r\n                return applyFilters(queryParamsToObject(location.search), res.data)   \r\n            }\r\n        })\r\n        .then(data => {\r\n            if (data) {\r\n                setAssets(data)\r\n            }\r\n        }) \r\n        .catch(e => {\r\n            console.log(e.message)\r\n        })\r\n        .finally(() => setIsLoading(false))\r\n        \r\n    }, [isLoading])\r\n\r\n    useEffect(()=> {\r\n        setIsLoading(true)\r\n    }, [location.search])\r\n\r\n    const removeAsset = (assetId, data) => {\r\n        setAlertDialog({\r\n            handleConfirm: async () => {\r\n                const res = await removeAsset(assetId);\r\n                if (res) {\r\n                    setAlertDialog(null)\r\n                    setIsLoading(true);\r\n                } else {\r\n                    console.log(res)\r\n                }\r\n            },\r\n            handleCancel: () => setAlertDialog(null),\r\n            text: `${t(\"assetsModule.deleteConfirmation\")} ${getFullAddress(data)}?`,\r\n            title: `${t(\"assetsModule.deleteAsset\")}`\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid container >\r\n                <Grid item xs={12}>\r\n                    <div className={classes.pageModule}>\r\n                        {t(\"assetsModule.assets\")}\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} md={12} >\r\n                    <AssetsControls />\r\n                </Grid>\r\n                <Grid container justify='center'>\r\n                    {\r\n                        isLoading ?\r\n                        <LinearProgress /> :\r\n                        assets.map((v,i) => \r\n                            <Asset \r\n                                assetData={v} \r\n                                key={i} \r\n                                order={i}\r\n                                removeAsset={removeAsset}\r\n                                \r\n                            />\r\n                        )    \r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n            {\r\n                Boolean(alertDialog) &&\r\n                <AlertDialog \r\n                    open={Boolean(alertDialog)}\r\n                    alertDialog={alertDialog}\r\n                />\r\n            }\r\n            \r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageModule: {\r\n        color: 'white',\r\n        padding: '10px 40px',\r\n        fontSize: '18px',\r\n        background: 'rgba(0,0,0,0.6)',\r\n        margin: '0px auto 5px',\r\n        width: '30%',\r\n        textAlign: 'center',\r\n        borderRadius: '0 0 25px 25px',\r\n        lineHeight: '1'\r\n    }\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\api\\assetsApi.js",["309"],"import axios from 'axios';\r\nimport { specialStringPurge } from './genericApi'\r\nimport i18next from 'i18next'\r\n\r\nexport const getAsset = async (assetId, plain) => {\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/assets/getAsset`, { assetId, plain });\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n    } catch (e){\r\n        return e.response;\r\n    } \r\n};\r\n\r\nexport const getAssets = async () => {\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/assets/getAssets`);\r\n        if (res.status === 200) {\r\n            return res;\r\n        }\r\n    } catch (e){\r\n        return e.response;\r\n    } \r\n};\r\n\r\nexport const removeAsset = async (assetId) => {\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/assets/removeAsset`, { assetId });\r\n        if (res.status === 200) {\r\n            return res;\r\n        }\r\n    } catch (e){\r\n        return e.response;\r\n    } \r\n}\r\n\r\nexport const getFullAddress = (data) => {\r\n    let unit = data.type === 'apartment' ? data.addInfo.unit || '' : '';\r\n    return `${data.address.street} ${data.address.streetNumber}${data.address.entrance || ''}, ${data.address.city}${Boolean(unit) ? `, ${i18next.t(\"assetsModule.unit\")} ${unit}` : ''}`\r\n}\r\n\r\n\r\nexport const updateAsset = async (details) => {\r\n    const { _id, owner, address, addInfo, type } = details;\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/assets/updateAsset`, { assetId: _id, owner, address, addInfo, type });\r\n        if (res.status === 200) {\r\n            return res;\r\n        }\r\n    } catch (e) {\r\n        console.log(e.message);\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const applyFilters = (filters, assets) => {\r\n    return new Promise((resolve, reject) => {\r\n        if (!filters) resolve(assets);\r\n        if (filters.sortBy) {\r\n            if (['city', 'street'].indexOf(filters.sortBy) !== -1) {\r\n                 assets = assets.sort((a,b) => {\r\n                     return (\r\n                         filters.sortOrder === 'asc' \r\n                         ?   a['address'][filters.sortBy] > b['address'][filters.sortBy] ? 1 : -1\r\n                         :   a['address'][filters.sortBy] < b['address'][filters.sortBy] ? 1 : -1\r\n                     )      \r\n                 })\r\n            } else if (filters.sortBy === 'owner') {\r\n                assets = assets.sort((a,b) => {\r\n                    let aName = `${a.owner.firstName} ${a.owner.lastName}`\r\n                    let bName = `${b.owner.firstName} ${b.owner.lastName}`\r\n                    return (\r\n                        filters.sortOrder === 'asc' \r\n                        ?   aName > bName ? 1 : -1\r\n                        :   aName < bName ? 1 : -1\r\n                    )      \r\n                })\r\n            }\r\n\r\n        }\r\n        if(filters.searchText){\r\n            assets = assets.filter(asset => {\r\n                return createAssetAddress(asset.address)\r\n                        .includes(specialStringPurge(filters.searchText))\r\n                          \r\n            })\r\n        }\r\n        if (filters.owner) {\r\n            assets = assets.filter(asset => {\r\n                if (filters.owner instanceof Array) {\r\n                    return filters.owner.indexOf(asset.owner._id) !== -1\r\n                }\r\n                return  asset.owner._id == filters.owner\r\n            })\r\n        }\r\n        resolve(assets);\r\n    });\r\n   \r\n\r\n}\r\n\r\nexport const createAssetAddress = (address) => {\r\n    if (!address) return '';\r\n    return `${address.street} ${address.streetNumber} ${address.city}`;\r\n}\r\n\r\nexport const createNewAsset = async (details) => {\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/assets/createAsset`, { ...details  });\r\n        if (res) {\r\n            return res.data;\r\n        }\r\n    } catch(e) {\r\n        console.log(e);\r\n        return e.message;\r\n    }\r\n}","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Asset.js",["310","311","312","313","314","315"],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\user\\UserItem.js",["316","317"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext'\r\nimport { makeStyles, Avatar, Typography, Button } from '@material-ui/core'\r\nimport { getUserDataById } from '../../api/userApi';\r\n\r\n\r\nexport const UserItem = ({ user, showPhone, showTitle, showName, avatarSize, size }) => {\r\n\r\n    const { auth } = useContext(AuthContext)\r\n    const [ userData, setUserData ] = useState(user)\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        if (!user._id) {\r\n            getUserDataById(user)\r\n            .then(data => {\r\n                setUserData(data)\r\n                setIsLoading(false)\r\n            })\r\n        } else {\r\n            setUserData(user);\r\n            setIsLoading(false)\r\n        } \r\n    }, [user])\r\n\r\n\r\n    return (\r\n        \r\n            isLoading \r\n            ? null \r\n            : \r\n            <div \r\n                className={classes.btnContainer}\r\n            >          \r\n                <React.Fragment>\r\n                    <Avatar className={classes.avatar} alt={'abc'} src={userData.avatar} style={{ height: avatarSize || '60px', width: avatarSize || '60px' }}/>\r\n                    <div className={classes.dataContainer}>\r\n                        {\r\n                            showName &&\r\n                            <Typography className={classes.fullname} style={{ fontSize: `${size * 1.2}px` || '16px' }}>\r\n                                {`${userData.firstName} ${userData.lastName}`}\r\n                            </Typography>\r\n                        } \r\n                        {\r\n                            showTitle &&\r\n                            <Typography className={classes.title} style={{ fontSize: `${size * 1.1}px` || '18px' }}>\r\n                                {userData.title || 'עובד כללי'}\r\n                            </Typography>\r\n                        }\r\n                        {\r\n                            showPhone &&\r\n                            <Typography className={classes.phoneNumber} style={{ fontSize: `${size * 1}px` || '14px' }}>\r\n                                {userData.phoneNumber || '054-652-9994'}\r\n                            </Typography>\r\n                        }\r\n                    </div>\r\n                </React.Fragment>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    btnContainer: {\r\n        width: 'fit-content',\r\n        height: 'inherit',\r\n        borderRadius: 'inherit',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n            background: 'transparent' \r\n        }\r\n    },\r\n    dataContainer: {\r\n        marginLeft: '15px',\r\n        width: '90%',\r\n        textAlign: 'left',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center'\r\n    },\r\n    fullname: {\r\n        width: 'fit-content',\r\n        color: 'lightgrey',\r\n        lineHeight: 1,\r\n        textOverflow: 'ellipsis',\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n\r\n    },\r\n    phoneNumber: {\r\n        color: 'white',\r\n        width: 'auto',\r\n        whiteSpace: 'nowrap'\r\n\r\n    },\r\n    avatar: {\r\n        boxShadow: '0 1px 5px 5px rgb(0 0 0 / 20%)'\r\n    }\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetsControls.js",["318","319","320"],"import React, { useState } from 'react'\r\nimport { Grid, makeStyles,  useMediaQuery, Collapse, Button } from '@material-ui/core'\r\nimport { SortBy } from '../../reuseables/SortBy'\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport { SearchBox } from '../../reuseables/SearchBox';\r\nimport { FilterBySelect } from '../../reuseables/FilterBySelect';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport { getUserList } from '../../../api/userApi';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport { useTranslation } from 'react-i18next';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport { ClearRounded } from '@material-ui/icons';\r\n\r\n\r\nconst sortOptions = [\r\n    {\r\n        text: 'כתובת',\r\n        field: 'street'\r\n    },\r\n    {\r\n        text: 'עיר',\r\n        field: 'city'\r\n    },\r\n    {\r\n        text: 'מנהל בניין',\r\n        field: 'owner'\r\n    },\r\n    {\r\n        text: 'כמות משימות פתוחות',\r\n        field: 'openTasksCount'\r\n    },\r\n    {\r\n        text: 'כמות תקלות פתוחות',\r\n        field: 'openFaultsCount'\r\n    },\r\n    \r\n]\r\n\r\nexport const AssetsControls = ({ components }) => {\r\n    \r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const [ collapsed, setCollapsed ] = useState(!downSm ? true : false);\r\n    \r\n\r\n    const createUserOptions = () => {\r\n        return getUserList()\r\n        .then(data => {\r\n            let userList = [];\r\n            data.forEach(user => {\r\n                userList.push({label: `${user.firstName} ${user.lastName}`, value: user._id })\r\n            });\r\n            return userList;\r\n        })\r\n    }\r\n\r\n    const toggleCollapse = () => {\r\n        if (collapsed) {\r\n            setCollapsed(false);\r\n            return;\r\n        }\r\n        setCollapsed(true)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                downSm &&\r\n                <Grid container justify='center'>\r\n                    <Grid item xs={11} className={classes.gridItem}>\r\n                        <Button\r\n                        className={classes.sortandfilter}\r\n                        startIcon={<FilterListIcon className={classes.icon} />}\r\n                        endIcon={collapsed ? <ClearRounded /> : <ExpandMoreRoundedIcon />}\r\n                        onClick={toggleCollapse}\r\n                    >\r\n                        {t(`faultsModule.${ collapsed ? 'hide' : 'show'}Filters`)}\r\n                    </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                    \r\n            }\r\n            <Collapse in={collapsed}>\r\n                <Grid container justify='center' >\r\n                    <Grid item xs={11} sm={9} md={7} lg={5} xl={4} className={classes.gridItem}>\r\n                        <SearchBox \r\n                            placeholder={t(\"assetsModule.filterByCityOrAddress\")}\r\n                            filterField={'searchText'}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={11} className={classes.gridItem}>         \r\n                        <FilterBySelect \r\n                            optionsFunc={createUserOptions}\r\n                            placeholder={t(\"assetsModule.filterByAssetOwner\")}\r\n                            filterIcon={<PersonRoundedIcon className={classes.icon }/>}\r\n                            filterField={'owner'}\r\n                        \r\n                        />\r\n                    \r\n                        <SortBy \r\n                            menuOptions={sortOptions}\r\n                        />   \r\n                    </Grid>  \r\n                </Grid>\r\n            </Collapse>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(them => ({\r\n    gridItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        marginLeft: '4px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    sortandfilter: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'rgba(0,0,0,0.7)',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '5px 25px 5px 3px',\r\n        whiteSpace: 'nowrap',\r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    }\r\n}))\r\n","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetControls.js",["321","322"],"import React from 'react'\r\nimport { makeStyles, Fade, IconButton, Tooltip } from '@material-ui/core'\r\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\nimport TransferWithinAStationRoundedIcon from '@material-ui/icons/TransferWithinAStationRounded';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nexport const AssetControls = ({removeAsset, toggleEditMode}) => {\r\n    \r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    \r\n    return (\r\n        <Fade in={true} timeout={500}>\r\n            <div className={ classes.container}>               \r\n                <Tooltip title={t(\"assetsModule.editAddress\")}>\r\n                    <IconButton \r\n                        className={classes.iconbutton}\r\n                        onClick={toggleEditMode('address')}\r\n                    >\r\n                        <EditRoundedIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title={t(\"assetsModule.deleteAsset\")}>\r\n                    <IconButton \r\n                        className={classes.iconbutton}\r\n                        onClick={removeAsset}    \r\n                    >\r\n                        <DeleteOutlineRoundedIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </div>\r\n        </Fade>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: '55%',\r\n        \r\n    },\r\n    iconbutton: {\r\n        margin: '7px 5px',\r\n        boxShadow: 'rgba(0,0,0,0.2) 0px 0px 3px 3px ',\r\n        background: theme.palette.primary.main,\r\n        color: 'white',\r\n        padding: '8px'\r\n       \r\n    },\r\n    icon: {\r\n        fontSize: '20px'\r\n    }\r\n}));\r\n","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SortBy.js",["323","324"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { makeStyles, ButtonGroup, Button, Menu, MenuItem } from '@material-ui/core'\r\nimport SortRoundedIcon from '@material-ui/icons/SortRounded';\r\nimport ArrowDropUpOutlinedIcon from '@material-ui/icons/ArrowDropUpOutlined';\r\nimport ArrowDropDownOutlinedIcon from '@material-ui/icons/ArrowDropDownOutlined';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam } from '../../api/genericApi';\r\nimport { useQuery } from './customHooks/useQuery';\r\nimport { useTranslation } from 'react-i18next'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\n\r\nexport const SortBy = ({menuOptions, handleSortChange}) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const { t, i18n } = useTranslation();\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ values, setValues ] = useState({\r\n        sortBy: query.sortBy || '',\r\n        sortOrder: query.sortOrder || 'asc' \r\n    })\r\n    const [ anchorEl, setAnchorEl ] = useState(null);\r\n \r\n    useEffect(() => {\r\n        if (!values.sortBy) return;\r\n        history.push({\r\n            path: location.pathname,\r\n            search: addQueryParam(location.search, [{ name: 'sortBy', value: values.sortBy}, {name: 'sortOrder', value: values.sortOrder}])\r\n        })\r\n    }, [values])\r\n\r\n    const handleClick = menuOption => event => {\r\n        setValues({\r\n            ...values, \r\n            sortBy: menuOption\r\n        })\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleChange = () => {\r\n        if (values.sortBy) {\r\n            setValues({\r\n                ...values, \r\n                sortOrder: values.sortOrder === 'asc' ? 'desc' : 'asc'\r\n            })\r\n        }\r\n    }\r\n    \r\n    const getOptionText = (option) => {\r\n        const result = menuOptions.find( mo => option === mo.field);\r\n        if (result) {\r\n            return result.text\r\n        }\r\n        return t(\"sort.sortBy\")\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup \r\n                className={classes.sort}\r\n            >\r\n\r\n                <Button \r\n                    className={classes.sortBy}\r\n                    onClick={event => setAnchorEl(event.currentTarget)}\r\n                    startIcon={<SortRoundedIcon className={classes.icon}/>}\r\n                >\r\n                    {values.sortBy ? getOptionText(values.sortBy) : `${t(\"sort.sortBy\")}`}\r\n                </Button>\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={() => setAnchorEl(null)}\r\n                    classes={{\r\n                        paper : classes.menu\r\n                    }}\r\n                    keepMounted\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                >\r\n                    {\r\n                        menuOptions.map((v,i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    key={i}\r\n                                    onClick={handleClick(v.field)}\r\n                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                >\r\n                                    {v.text}\r\n                                </MenuItem>\r\n                            )\r\n                            \r\n                        })\r\n                    }\r\n                </Menu>\r\n                <Button\r\n                    endIcon={ values.sortOrder === 'asc' ? <ArrowDropUpOutlinedIcon /> : <ArrowDropDownOutlinedIcon />}\r\n                    onClick={handleChange}\r\n                    className={classes.sortOrder}\r\n                >\r\n                    { `${ values.sortOrder === 'asc' ? `${t(\"sort.asc\")}` : `${t(\"sort.desc\")}`}`}\r\n                </Button> \r\n            </ButtonGroup>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    sort: {\r\n        margin: '5px',\r\n        height: '45px',\r\n        \r\n    },\r\n    sortBy: {\r\n        borderRadius: '25px 0 0 25px',\r\n        padding: '0 15px 0 3px',\r\n        color: 'white',\r\n        width: 'auto',\r\n        whiteSpace: 'nowrap',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    sortOrder: {\r\n        borderRadius: '0px 25px 25px 0px',\r\n        padding: 0,\r\n        color: 'white',\r\n       width: '100px',\r\n       border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    menu: {\r\n        marginTop: '55px',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(10px)',\r\n        color: 'white'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 6px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        \r\n    }\r\n}));\r\n","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\context\\FiltersContext.js",["325"],"import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const FiltersContext = createContext();\r\n\r\nexport const FiltersContextProvider = (props) => {\r\n    const [ filters, setFilters ] = useState({\r\n        sortBy: null,\r\n        sortOrder: 'asc',\r\n        activeFilters: []\r\n    });\r\n\r\n    return (\r\n        <FiltersContext.Provider value={{ filters, setFilters }}>\r\n            { props.children }\r\n        </FiltersContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\context\\AuthContext.js",[],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\api\\genericApi.js",["326"],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\useQuery.js",[],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBox.js",["327","328","329"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam, removeQueryParam, queryParamsToObject, specialStringPurge} from '../../api/genericApi';\r\nimport { OutlinedInput, FormControl, makeStyles, Grid, ClickAwayListener } from '@material-ui/core'\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport { useQuery } from './customHooks/useQuery';\r\nimport clsx from 'clsx';\r\n\r\nexport const SearchBox = ({ placeholder, filterField }) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const [ onFocus, setOnFocus ] = useState(false);\r\n    const [ searchText, setSearchText ] = useState(specialStringPurge(query[filterField]) || '');\r\n    \r\n    useEffect(() => {\r\n        if (Boolean(searchText) && searchText === specialStringPurge(query[filterField])) return;\r\n        const timeOutId = setTimeout(() => handleSearch(searchText), 700);\r\n        return () => clearTimeout(timeOutId);\r\n    }, [searchText])\r\n\r\n    const handleChange = event => {\r\n        setSearchText(event.target.value)\r\n    }\r\n\r\n    const handleSearch = searchText => {\r\n        if (searchText) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: addQueryParam(location.search, [{ name: filterField, value: searchText}])\r\n            });\r\n            return; \r\n        }\r\n        history.push({\r\n            path: location.pathname,\r\n            search: removeQueryParam(location.search, filterField)\r\n        });\r\n        \r\n    }\r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={() => setOnFocus(false)}>\r\n            <div className={clsx(classes.container , onFocus && classes.focused)} xs={11} sm={9} md={8} lg={6}>\r\n                    <SearchRoundedIcon className={classes.icon}/>\r\n                    <FormControl variant='outlined' className={classes.form}>\r\n                        <OutlinedInput\r\n                            value={ searchText || '' }\r\n                            onChange={handleChange}\r\n                            placeholder={placeholder}\r\n                            className={clsx(classes.searchInput)}\r\n                            onFocus={() => setOnFocus(true)}\r\n                        />\r\n                    </FormControl>\r\n            </div>\r\n        </ClickAwayListener>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        margin: '5px',\r\n        height: '45px',\r\n        maxWidth: '450px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        transition: 'box-shadow 0.2s ease-in',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            transition: 'box-shadow 0.2s ease-in'\r\n        }\r\n\r\n    },\r\n    focused: {\r\n        boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        background: 'rgba(0,0,0,0.1)',\r\n        backdropFilter: 'blur(40px)'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        \r\n    },\r\n    searchInput: {\r\n        height: '34px',\r\n        width: '98.5%',\r\n        margin: '3px 0.75%',\r\n        borderRadius: '5px 25px 25px 5px',\r\n        color: 'white',\r\n        '& input': {\r\n            padding: '12.5px 14px',\r\n        },\r\n        '& fieldset': {\r\n            border: '0'\r\n        } \r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 5px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        \r\n    }\r\n}))\r\n\r\n","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterBySelect.js",["330","331","332"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { makeStyles, Button, Menu, MenuItem, IconButton } from '@material-ui/core'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam, specialStringPurge, removeQueryParam } from '../../api/genericApi';\r\nimport { useQuery } from './customHooks/useQuery';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\nexport const FilterBySelect = ({ filterField, placeholder, filterIcon, optionsFunc }) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ menuOptions, setMenuOptions] = useState([]);\r\n    const [ anchorEl, setAnchorEl ] = useState(null);\r\n    const [ value, setValue ] = useState(query[filterField] || '')\r\n\r\n    useEffect(() => {\r\n        optionsFunc()\r\n        .then(data => {\r\n            setMenuOptions(data)\r\n        }) \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: addQueryParam(location.search, [{ name: filterField, value }])\r\n            });\r\n            return;\r\n        }\r\n        if(query[filterField]) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: removeQueryParam(location.search, filterField)\r\n            });\r\n        }     \r\n    }, [value])\r\n\r\n    const createTag = val => {\r\n        let data = menuOptions.find(op => val === op.value);\r\n        if (!data) return;\r\n        return (\r\n            <div className={classes.tag}>\r\n                <label className={classes.tagLabel}>\r\n                    { data.label }\r\n                </label>\r\n                <IconButton \r\n                    className={classes.removeBtn}\r\n                    onClick={removeChoice(data.value)}\r\n                >\r\n                    <CloseRoundedIcon className={classes.tagRemove}/>\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const removeChoice = value => event => {\r\n        event.stopPropagation();\r\n        setValue('')\r\n    }\r\n\r\n    const handleClick = val => event => {\r\n        setValue(val);\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                Boolean(menuOptions.length) &&\r\n                    <div item className={classes.select}>\r\n                        <Button \r\n                            className={classes.filterBy}\r\n                            onClick={event => setAnchorEl(event.currentTarget)}\r\n                            startIcon={filterIcon}\r\n                        >\r\n                            { value ? createTag(value) : <label style={{ padding: '0 15px', cursor: 'pointer' }}>{placeholder}</label>}\r\n                        </Button>\r\n                        <Menu\r\n                            anchorEl={anchorEl}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={() => setAnchorEl(null)}\r\n                            classes={{\r\n                                paper : classes.menu\r\n                            }}\r\n                            keepMounted\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                        >\r\n                            {\r\n                                menuOptions.map((v,i) => {\r\n                                    return (\r\n                                        <MenuItem\r\n                                            key={i}\r\n                                            onClick={handleClick(v.value)}\r\n                                            className={classes.menuitem}\r\n                                            style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                        >\r\n                                            {v.label}\r\n                                        </MenuItem>\r\n                                    )\r\n                                    \r\n                                })\r\n                            }\r\n                        </Menu>\r\n                    </div>\r\n            }          \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    select: {\r\n        margin: '5px',\r\n        height: '45px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    filterBy: {\r\n        textTransform: 'none',\r\n        color: 'white',\r\n        padding: '0 4px',\r\n        height: '45px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        whiteSpace: 'nowrap',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            \r\n        }\r\n    },\r\n    menu: {\r\n        marginTop: '55px',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(10px)',\r\n        color: 'white'\r\n    },\r\n    menuitem: {\r\n        minWidth: '200px'\r\n    },\r\n    container: {\r\n        height: '45px',\r\n        border: '1px solid rgba(0,0,0,0.25)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            \r\n        }\r\n    },\r\n    focused: {\r\n        border: `2px solid ${theme.palette.primary.main}`\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        \r\n    },\r\n    searchInput: {\r\n        height: '34px',\r\n        width: '98.5%',\r\n        margin: '3px 0.75%',\r\n        borderRadius: '5px 25px 25px 5px',\r\n        color: 'white',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '& fieldset': {\r\n            border: '0'\r\n        } \r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 5px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    tag: {\r\n        padding: '5px 10px',\r\n        borderRadius: '50px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    tagLabel: {\r\n        padding: '0 5px'\r\n    },\r\n    removeBtn: {\r\n        padding: '4px',\r\n        color: 'white'\r\n    },\r\n    tagRemove: {\r\n        fontSize: '16px'\r\n    }\r\n}));\r\n","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterByMultiSelect.js",["333","334","335","336","337","338","339","340"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { makeStyles, Grid, ClickAwayListener, FormControl, OutlinedInput, Button, Menu, MenuItem, IconButton } from '@material-ui/core'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam, specialStringPurge, removeQueryParam } from '../../api/genericApi';\r\nimport { useQuery } from './customHooks/useQuery';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport clsx from 'clsx';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\nexport const FilterByMultiSelect = ({ filterField, placeholder, filterIcon, optionsFunc }) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ menuOptions, setMenuOptions] = useState([]);\r\n    const [ orgMenuOptions, setOrgMenuOptions ] = useState([])\r\n    const [ anchorEl, setAnchorEl ] = useState(null);\r\n    const [ values, setValues ] = useState( query[filterField] || [])\r\n\r\n    useEffect(() => {\r\n        optionsFunc()\r\n        .then(data => {\r\n            setOrgMenuOptions(data);\r\n            if (query[filterField]) {\r\n                data = data.filter(op => query[filterField].indexOf(op.value) === -1 )\r\n            }\r\n            setMenuOptions(data);\r\n            \r\n        }) \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (values.length) {\r\n            \r\n            history.push({\r\n                path: location.pathname,\r\n                search: addQueryParam(location.search, [{ name: filterField, value: values }])\r\n            });\r\n            return;\r\n        }\r\n        if (query[filterField] && !values.length) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: removeQueryParam(location.search, filterField)\r\n            });\r\n        }\r\n        \r\n    }, [values])\r\n\r\n    useEffect(() => {\r\n        if(!menuOptions.length) {\r\n            setAnchorEl(null)\r\n        }\r\n    }, [menuOptions])\r\n\r\n    const createTag = (val, key) => {\r\n        let data = orgMenuOptions.find(op => val === op.value);\r\n        if (!data) return;\r\n        return (\r\n            <div className={classes.tag} key={key}>\r\n                <label className={classes.tagLabel}>\r\n                    { data.label }\r\n                </label>\r\n                <IconButton \r\n                    className={classes.removeBtn}\r\n                    onClick={removeChoice(data.value)}\r\n                >\r\n                    <CloseRoundedIcon className={classes.tagRemove}/>\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const removeChoice = value => event => {\r\n        event.stopPropagation();\r\n        getMenuOptions(value)\r\n        .then(data => {\r\n            setValues(values => values.filter(val => val !== value ));\r\n            if (!menuOptions.length) {\r\n                setAnchorEl(null)\r\n            }\r\n            setMenuOptions(data)\r\n        });  \r\n    }\r\n\r\n    const handleClick = val => event => {\r\n        setValues([...values, val]);\r\n        setMenuOptions(menuOptions => menuOptions.filter( op => op.value !== val));\r\n    }\r\n\r\n    const getMenuOptions = (value) => {\r\n        return new Promise((resolve, reject) => {\r\n            let mop = menuOptions;\r\n            mop.push(orgMenuOptions.find( op => op.value === value));\r\n            resolve(mop);\r\n        }) \r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                Boolean(orgMenuOptions.length) &&\r\n                <div className={classes.select}>\r\n                        <Button \r\n                            className={classes.filterBy}\r\n                            onClick={event => setAnchorEl(event.currentTarget)}\r\n                            startIcon={filterIcon}\r\n                        >\r\n                            { \r\n                                values.length \r\n                                ?   \r\n                                    <div className={classes.selectedContainer}>\r\n                                        {\r\n                                             values.map((val, i ) => createTag(val, i)) \r\n                                        }\r\n                                    </div>\r\n                               \r\n                                :   <label style={{ \r\n                                        padding: '5px 0px 5px 20px', \r\n                                        cursor: 'pointer' \r\n                                    }}>\r\n                                        {placeholder}\r\n                                    </label>\r\n                            }\r\n                        </Button>\r\n                        <Menu\r\n                            anchorEl={anchorEl}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={() => setAnchorEl(null)}\r\n                            classes={{\r\n                                paper : classes.menu\r\n                            }}\r\n                            keepMounted\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                        >\r\n                            {\r\n                                menuOptions.map((v,i) => {\r\n                                    return (\r\n                                        <MenuItem\r\n                                            key={i}\r\n                                            onClick={handleClick(v.value)}\r\n                                            className={classes.menuitem}\r\n                                            style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                        >\r\n                                            {v.label}\r\n                                        </MenuItem>\r\n                                    )\r\n                                    \r\n                                })\r\n                            }\r\n                        </Menu>\r\n               </div>\r\n            }          \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    select: {\r\n        margin: '5px',\r\n        height: 'auto',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    filterBy: {\r\n        textTransform: 'none',\r\n        color: 'white',\r\n        padding: '0 5px',\r\n        minHeight: '45px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '25px',\r\n        \r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        }\r\n    },\r\n    selectedContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        whiteSpace: 'nowrap',\r\n        flexWrap: 'wrap',\r\n        width: 'fit-content',\r\n        maxWidth: '400px'\r\n    },\r\n    menu: {\r\n        marginTop: '55px',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(10px)',\r\n        color: 'white'\r\n    },\r\n    menuitem: {\r\n        minWidth: '200px'\r\n    },\r\n    container: {\r\n        height: '45px',\r\n        border: '1px solid rgba(0,0,0,0.25)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            \r\n        }\r\n    },\r\n    focused: {\r\n        boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        background: 'rgba(0,0,0,0.1)',\r\n        backdropFilter: 'blur(40px)'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        \r\n    },\r\n    searchInput: {\r\n        height: '34px',\r\n        width: '98.5%',\r\n        margin: '3px 0.75%',\r\n        borderRadius: '5px 25px 25px 5px',\r\n        color: 'white',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '& fieldset': {\r\n            border: '0'\r\n        } \r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 5px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    tag: {\r\n        padding: '5px 10px',\r\n        borderRadius: '50px',\r\n        boxShadow: 'rgba(0,0,0,0.25) 0px 0px 3px 1px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        margin: '3px'\r\n    },\r\n    tagLabel: {\r\n        padding: '0 5px'\r\n    },\r\n    removeBtn: {\r\n        padding: '4px',\r\n        color: 'white'\r\n    },\r\n    tagRemove: {\r\n        fontSize: '16px'\r\n    }\r\n}));\r\n","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\context\\LanguageContext.js",[],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\i18n.js",["341"],"import i18n from 'i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next }from 'react-i18next';\r\nimport en from './lacales/en/translation.json';\r\nimport he from './lacales/he/translation.json';\r\n\r\nconst resources = {\r\n    en: {\r\n        translation: en\r\n    },\r\n    he: {\r\n        translation: he\r\n    }\r\n}\r\n\r\ni18n\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init({\r\n        resources,\r\n        fallbackLng: 'he',\r\n        detection: {\r\n            order: ['queryString', 'cookie'],\r\n            cache: ['cookie']\r\n        },\r\n        interpolation: {\r\n            escapeValue: false\r\n        }\r\n    });\r\n\r\nexport default i18n;\r\n    ","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\Systems.js",["342","343","344","345","346","347"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Grid, LinearProgress, makeStyles, Paper, useMediaQuery } from '@material-ui/core';\r\nimport { SystemsControls } from './SystemsControls';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { useLocation } from 'react-router';\r\nimport { queryParamsToObject } from '../../../api/genericApi';\r\nimport { getSystemsByAsset } from '../../../api/systemsApi';\r\nimport { applyFilters } from '../../../api/systemsApi';\r\nimport { System } from './System';\r\nimport { SystemsHeader } from './SystemsHeader';\r\nimport { UpsertSystem } from './UpsertSystem';\r\n\r\nexport const Systems = () => {\r\n\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ systems, setSystems ] = useState([]);\r\n    const [ isLoading, setIsLoading ] = useState(false);\r\n \r\n\r\n    useEffect(() => {\r\n        if (!isLoading) return;    \r\n        let queryParams = queryParamsToObject(location.search);\r\n        if (!queryParams.asset) {\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        \r\n\r\n        getSystemsByAsset(queryParams.asset)\r\n        .then(data => {\r\n            return applyFilters(queryParams, data);\r\n        })\r\n        .then(data => {\r\n            setSystems(data);     \r\n        })\r\n        .finally(() => {\r\n            setIsLoading(false);\r\n        });\r\n    }, [isLoading])\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n    }, [location.search])\r\n\r\n\r\n    return(\r\n        <div>\r\n            <Grid container justify='center'>\r\n                <Grid item xs={12}>\r\n                    <div className={classes.pageModule}>\r\n                        {t(\"assetsModule.systems\")}\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <SystemsControls />\r\n                </Grid>\r\n                <Grid container justify='center' >\r\n                    {\r\n                        !query.asset \r\n                        ?   <div \r\n                                className={classes.initMessage}>\r\n                                {t(\"systemsModule.initMessage\")}\r\n                            </div>\r\n                        :   isLoading \r\n                            ?   <LinearProgress />\r\n                            :   \r\n                            <React.Fragment>\r\n                                <SystemsHeader />\r\n                                {\r\n                                    systems.map((system, i) => \r\n                                        <System systemData={system} key={i} />\r\n                                    )\r\n                                }\r\n                            </React.Fragment>\r\n                            \r\n                    }   \r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    initMessage: {\r\n        color: 'white',\r\n        padding: '10px 40px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '50px',\r\n        width: 'fit-content',\r\n        margin: '5px auto',\r\n        textAlign: 'center',\r\n        fontSize: '16px'\r\n    },\r\n    pageModule: {\r\n        color: 'white',\r\n        padding: '10px 40px',\r\n        fontSize: '18px',\r\n        background: 'rgba(0,0,0,0.6)',\r\n        margin: '0px auto 5px',\r\n        width: '30%',\r\n        textAlign: 'center',\r\n        borderRadius: '0 0 25px 25px',\r\n        lineHeight: '1'\r\n    }\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsControls.js",["348","349"],"import React, { useState, useEffect } from 'react'\r\nimport { Grid, makeStyles, useMediaQuery, Button, Collapse } from '@material-ui/core'\r\nimport { SortBy } from '../../reuseables/SortBy'\r\nimport { SearchBox } from '../../reuseables/SearchBox';\r\nimport { FilterBySelect } from '../../reuseables/FilterBySelect';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\nimport { getAssetsSuggestions } from '../../../api/systemsApi';\r\nimport { getFullAddress, getAsset } from '../../../api/assetsApi';\r\nimport { useLocation } from 'react-router';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport { ClearRounded } from '@material-ui/icons';\r\n\r\nconst sortOptions = [\r\n    {\r\n        text: 'שם מערכת',\r\n        field: 'systemName'\r\n    },\r\n    {\r\n        text: 'מנהל מערכת',\r\n        field: 'owner'\r\n    },\r\n    {\r\n        text: 'כמות תקלות פתוחות',\r\n        field: 'openFaultsCount'\r\n    },\r\n    \r\n]\r\n\r\nexport const SystemsControls = () => {\r\n    \r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const [ reloadedValue, setReloadedValue ] = useState(null);\r\n    const [ collapsed, setCollapsed ] = useState(!downSm ? true : false);\r\n    \r\n    useEffect(() => {\r\n        if (query.asset) {\r\n            handleReloaded(query.asset)\r\n            .then(data => {\r\n                if (data) {\r\n                    setReloadedValue(data);\r\n                } else {\r\n                    \r\n                }\r\n            })\r\n        } else {\r\n            setReloadedValue({\r\n                label: '',\r\n                value: null\r\n            });\r\n        }\r\n    }, [location.search])\r\n\r\n    const handleReloaded = async (assetId) => {\r\n        const res = await getAsset(assetId, false);\r\n        if (res) {\r\n            return {\r\n                label: getFullAddress(res),\r\n                value: res._id\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const toggleCollapse = () => {\r\n        if (collapsed) {\r\n            setCollapsed(false);\r\n            return;\r\n        }\r\n        setCollapsed(true)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                downSm &&\r\n                <Grid container justify='center'>\r\n                    <Grid item xs={11} className={classes.gridItem}>\r\n                        <Button\r\n                        className={classes.sortandfilter}\r\n                        startIcon={<FilterListIcon className={classes.icon} />}\r\n                        endIcon={collapsed ? <ClearRounded /> : <ExpandMoreRoundedIcon />}\r\n                        onClick={toggleCollapse}\r\n                    >\r\n                        {t(`faultsModule.${ collapsed ? 'hide' : 'show'}Filters`)}\r\n                    </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                    \r\n            }\r\n            <Collapse in={collapsed}>\r\n                <Grid container justify='center' >\r\n                    <Grid item xs={12} className={classes.gridItem}>\r\n\r\n                        {\r\n                            reloadedValue &&\r\n                            <SearchBoxSelect\r\n                                suggestionsFunc={getAssetsSuggestions}\r\n                                placeholder={t(\"systemsModule.filterByAsset\")}\r\n                                filterField={'asset'}\r\n                                reloadedLabel={reloadedValue.label}\r\n                                reloadedValue={reloadedValue.value}\r\n                            />\r\n                        }  \r\n                        <SearchBox \r\n                                placeholder={t(\"systemsModule.filterBySystemName\")}\r\n                                filterField={'name'}\r\n                            />\r\n                        </Grid>\r\n                    <Grid xs={11} className={classes.gridItem}>\r\n                        <FilterBySelect \r\n                            optionsFunc={createUserOptions}\r\n                            placeholder={t(\"systemsModule.filterBySystemOwner\")}\r\n                            filterIcon={<PersonRoundedIcon className={classes.icon }/>}\r\n                            filterField={'owner'}\r\n                        />\r\n                        <SortBy \r\n                            menuOptions={sortOptions}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n            </Collapse>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(them => ({\r\n    gridItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        marginLeft: '4px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    sortandfilter: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'rgba(0,0,0,0.7)',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '5px 25px 5px 3px',\r\n        whiteSpace: 'nowrap',\r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    }\r\n}))\r\n","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBoxSelect.js",["350","351","352","353","354"],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\api\\systemsApi.js",["355"],"import axios from 'axios';\r\nimport { getAssets, getFullAddress } from './assetsApi'\r\n\r\nexport const createNewSystem = async (details) => {\r\n    const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/systems/createSystem`, { ...details });\r\n    if (res.data) {\r\n        return res.data;\r\n    }\r\n    return [];\r\n}\r\n\r\nexport const getAssetsSuggestions = async (searchText) => {\r\n    const res = await getAssets();\r\n    let result = [];\r\n    if (!searchText) { \r\n        res.data.forEach(asset => {\r\n            result.push({ \r\n                text: getFullAddress(asset),\r\n                value: asset._id\r\n            })\r\n        });\r\n        return result;\r\n    };\r\n    let filtered =  res.data.filter(asset => {\r\n        return getFullAddress(asset).indexOf(searchText) !== -1\r\n    });\r\n    filtered.forEach(asset => {\r\n        result.push({ \r\n            label: getFullAddress(asset),\r\n            value: asset._id\r\n        })\r\n    });\r\n    return result;\r\n}\r\n\r\nexport const getSystemsByAsset = async (assetId) => {\r\n    \r\n    const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/systems/getSystems`, { assetId });\r\n    if (res.data) {\r\n        return res.data;\r\n    }\r\n    return [];\r\n}\r\n\r\nexport const applyFilters = (filters, systems) => {\r\n    return new Promise((resolve, reject) => {\r\n        if (!filters) resolve(systems);\r\n        if (filters.sortBy) {\r\n            if (filters.sortBy === 'systemName') {\r\n                 systems = systems.sort((a,b) => {\r\n                     \r\n                     return (\r\n                         filters.sortOrder === 'asc' \r\n                         ?   a.name > b.name ? 1 : -1\r\n                         :   a.name < b.name ? 1 : -1\r\n                     )      \r\n                 })\r\n            } else if (filters.sortBy === 'owner') {\r\n                systems = systems.sort((a,b) => {\r\n                    let aName = `${a.owner.firstName} ${a.owner.lastName}`\r\n                    let bName = `${b.owner.firstName} ${b.owner.lastName}`\r\n                    return (\r\n                        filters.sortOrder === 'asc' \r\n                        ?   aName > bName ? 1 : -1\r\n                        :   aName < bName ? 1 : -1\r\n                    )      \r\n                })\r\n            }\r\n\r\n        }\r\n        if(filters.name){\r\n           systems = systems.filter(system => {\r\n               return system.name.indexOf(filters.name) !== -1\r\n           })\r\n        }\r\n        if (filters.owner) {\r\n            systems = systems.filter(system => {\r\n                if (filters.owner instanceof Array) {\r\n                    return filters.owner.indexOf(system.owner._id) !== -1\r\n                }\r\n                return  system.owner._id == filters.owner\r\n            })\r\n        }\r\n        resolve(systems);\r\n    });\r\n   \r\n\r\n}\r\n\r\n\r\nexport const updateSystemOwner = async (systemId, owner) => {\r\n    const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/systems/updateSystemOwner`, { systemId, owner });\r\n    if (res.data) {\r\n        return res.data;\r\n    }\r\n    return [];\r\n}\r\n\r\nexport const updateSystemName = async (systemId, name) => {\r\n    const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/systems/updateSystemName`, { systemId, name });\r\n    if (res.data) {\r\n        return res.data;\r\n    }\r\n    return [];\r\n}\r\n\r\nexport const removeSystemUser = async (systemId, userId) => {\r\n    const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/systems/removeUser`, { systemId, userId });\r\n    if (res.data) {\r\n        return res.data;\r\n    }\r\n    return [];\r\n}\r\n\r\nexport const addUser = async (systemId, userId) => {\r\n    const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/systems/addUser`, { systemId, userId });\r\n    if (res.data) {\r\n        return res.data;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const updateSystemAdditionalData = async (systemData) => {\r\n    const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/systems/updateSystemData`, { systemData });\r\n    if (res.data) {\r\n        return res.data;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const createSystemMenuOptions = (systems) => {\r\n    return new Promise((resolve, reject) => {\r\n        let options = [];\r\n        systems.forEach(s => {\r\n            options.push({ text: s.name, value: s._id})\r\n        });\r\n        resolve(options);\r\n    })\r\n}","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\System.js",["356","357","358"],"import React, { useState, useEffect} from 'react';\r\nimport { Backdrop, Grid, IconButton, makeStyles, Modal, Paper, useMediaQuery } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { updateSystemOwner, updateSystemAdditionalData } from '../../../api/systemsApi';\r\nimport { SystemName } from './SystemName';\r\nimport { SystemLinkedUsers } from './SystemLinkedUsers';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport ExpandLessRoundedIcon from '@material-ui/icons/ExpandLessRounded';\r\nimport { SystemControls } from './SystemControls';\r\nimport { SystemAdditionalDetails } from './SystemAdditionalDetails';\r\nimport { UpsertSystem } from './UpsertSystem';\r\nimport { UpdateOwner } from '../../reuseables/UpdateOwner';\r\n\r\nexport const System = ({ systemData }) => {\r\n\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const [ data, setData ] = useState(systemData);\r\n    const [ editOwner, setEditOwner ] = useState(false)\r\n    const [ editName, setEditName ] = useState(false)\r\n    const [ expanded, setExpanded ] = useState(false);\r\n    const [ editDetails, setEditDetails ] = useState(null);\r\n    const [ showAdditionalDetails, setShowAdditionalDetails ] = useState(false)\r\n    const [ showLinkedUsers, setShowLinkedUsers ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!expanded) {\r\n            setShowAdditionalDetails(null);\r\n        }\r\n    }, [expanded])\r\n\r\n    const toggleEditOwner = () => {\r\n        if (editOwner) {\r\n            setEditOwner(false);\r\n            return;\r\n        }\r\n        setShowLinkedUsers(false);\r\n        setEditOwner(true);\r\n       \r\n    }\r\n\r\n    const updateOwner = async (owner) => {\r\n        const res = await updateSystemOwner(data._id, owner);\r\n        if (res) {\r\n            setData(res);\r\n            setEditOwner(false);\r\n        }\r\n    }\r\n\r\n    const updateSystemData = systemData => {\r\n        updateSystemAdditionalData(systemData)\r\n        .then(res => {\r\n            if (res) {\r\n                console.log(res)\r\n                setData(res)\r\n            }\r\n        })\r\n        .finally(() => {\r\n            setEditDetails(null);\r\n        })\r\n    }\r\n\r\n    const setSystemName = name => {\r\n        setData({\r\n            ...data,\r\n            name\r\n        });\r\n    }\r\n\r\n    const showAdditionalDetailsToggle = () => {\r\n        if (!showAdditionalDetails) {\r\n            setShowAdditionalDetails(true);\r\n            return;\r\n        }\r\n        setShowAdditionalDetails(false)\r\n    }\r\n\r\n    const showLinkedUsersToggle = () => {\r\n        if (!showLinkedUsers) {\r\n            setEditOwner(false);\r\n            setShowLinkedUsers(true);\r\n            return;\r\n        }\r\n        setShowLinkedUsers(false)\r\n    }\r\n\r\n    const handleExpand = () => {\r\n        if (expanded) {\r\n            setShowLinkedUsers(false);\r\n            setEditOwner(false);\r\n            setEditDetails(null);\r\n            setExpanded(false);\r\n            return;\r\n        } \r\n        setExpanded(true)\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={ 12 } sm={7} md={8} lg={11} xl={11}>\r\n            <Paper elevation={9} className={classes.paper}>\r\n                <div className={classes.mainRow}>\r\n                    <div \r\n                        className={classes.semiMainRow} \r\n                        onClick={handleExpand}\r\n                        style={{ borderBottom: expanded ? '1px solid rgba(255,255,255,0.2)' : 'none' }}    \r\n                    >\r\n                        <SystemName \r\n                            systemId={data._id}\r\n                            editName={editName}\r\n                            setEditName={setEditName}\r\n                            setSystemName={setSystemName} \r\n                            title={data.name}\r\n                        />\r\n                        {\r\n                            (downSm && !editName) ? \r\n                            <IconButton \r\n                                className={classes.expandIcon}\r\n                                onClick={handleExpand}\r\n                            > \r\n                                {\r\n                                    !expanded ?\r\n                                    <ExpandMoreRoundedIcon className={classes.userIcon}/> :\r\n                                    <ExpandLessRoundedIcon className={classes.userIcon}/>\r\n                                }    \r\n                            </IconButton> : null\r\n                        }\r\n                    </div>\r\n                    <SystemControls \r\n                        editName={editName} \r\n                        expanded={expanded} \r\n                        owner={data.owner}\r\n                        showLinkedUsersToggle={showLinkedUsersToggle}\r\n                        toggleEditOwner={toggleEditOwner}\r\n                        toggleAdditionalDetails={showAdditionalDetailsToggle}\r\n\r\n                    />\r\n                </div> \r\n                <SystemLinkedUsers\r\n                    isOpen={showLinkedUsers}  \r\n                    userList={ data.linkedUsers }  \r\n                    setData={ setData } \r\n                    systemId={ data._id }     \r\n\r\n                />\r\n                <UpdateOwner \r\n                    isOpen={editOwner}\r\n                    currentOwner={data.owner}\r\n                    handleSave={updateOwner}\r\n                    handleClose={toggleEditOwner}\r\n                    title={t(\"systemsModule.updateSystemOwnerTitle\")}\r\n                    instructions={t(\"systemsModule.chooseManagerToUpdate\")}\r\n                />\r\n                <SystemAdditionalDetails \r\n                    data={data.data}\r\n                    isOpen={showAdditionalDetails}\r\n                    systemId={data._id}\r\n                    toggleEdit={() => setEditDetails(data._id)}\r\n                />\r\n                {   \r\n                    Boolean(editDetails) &&\r\n                    <UpsertSystem \r\n                        handleClose={() => setEditDetails(null)}\r\n                        systemId={editDetails}\r\n                        handleUpdate={updateSystemData}\r\n                        data={data.data}\r\n                    />\r\n                }\r\n            \r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    \r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '5px',\r\n        margin: '4px 5px'\r\n    },\r\n    mainRow: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        widht: 'auto',\r\n        [theme.breakpoints.down('md')] : {\r\n            flexDirection: 'column',\r\n        }\r\n    },\r\n    semiMainRow: {\r\n        display: 'flex',\r\n        width: 'auto',\r\n        justifyContent: 'space-between'\r\n    },\r\n    actionsContainer: {\r\n        display: 'flex',\r\n        width: 'fit-content',\r\n        padding: '5px',\r\n        margin: 'auto 0',\r\n        justifyContent: 'space-between',\r\n        [theme.breakpoints.down('md')] : {\r\n            flexDirection: 'column-reverse',\r\n            alignItems: 'center',\r\n            margin: 'auto',\r\n        }\r\n    },\r\n    actions: {\r\n        margin: 'auto 10px',\r\n        [theme.breakpoints.down('md')] : {\r\n            background: 'rgba(0,0,0,0.4)',\r\n            borderRadius: '50px',\r\n            margin: '10px 0',\r\n            padding: '5px 10px'\r\n        }\r\n    },\r\n    systemName: {\r\n        color: 'white',\r\n        margin: 'auto 20px',\r\n        fontSize: '18px',\r\n        whiteSpace: 'wrap',\r\n        borderRadius: '50px',\r\n        padding: '5px 20px'\r\n    },\r\n    iconBtn: {\r\n        padding: '0px',\r\n        height: 'fit-content',\r\n        width: 'fit-content',\r\n        margin: '0 20px',\r\n        [theme.breakpoints.down('md')]: {\r\n            margin: '5px 10px'\r\n        }\r\n        \r\n    },\r\n    userIcon: {\r\n        fontSize: '20px',\r\n        color: 'white',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '8px',\r\n        borderRadius: '50px',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.2)'\r\n        }\r\n        \r\n    },\r\n    ownerInfo: {\r\n        height: 'auto', \r\n        width: '150px',\r\n        padding: '5px 20px 5px 10px',\r\n        display: 'grid',\r\n        placeItems: 'center',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.8)'\r\n        },\r\n        [theme.breakpoints.down('md')]: {\r\n            marginTop: '5px',\r\n            borderRadius: '50px',\r\n            width: '170px',\r\n            padding: '5px 20px 5px 5px',\r\n        }\r\n    },\r\n    editOwner: {\r\n        width: 'auto',\r\n        height: '200px',\r\n        margin: '20px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '5px'\r\n    }\r\n    \r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemName.js",["359","360"],"import React, { useState } from 'react';\r\nimport { makeStyles, useMediaQuery, Button, Fade, OutlinedInput, FormControl, InputLabel, ClickAwayListener, IconButton, } from '@material-ui/core';\r\nimport SaveRoundedIcon from '@material-ui/icons/SaveRounded';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { updateSystemName } from '../../../api/systemsApi'\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\r\nimport { green, red } from '@material-ui/core/colors';\r\n\r\nexport const SystemName = ({ systemId, editName, setEditName, setSystemName, title }) => {\r\n\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const [ textValue, setTextValue ] = useState(title);\r\n    const [ editNameHover, setEditNameHover ] = useState(false);\r\n\r\n    const handleChange = event => {\r\n        setTextValue(event.target.value);\r\n    };\r\n\r\n    const handleSave = async () => {\r\n         await updateSystemName(systemId, textValue);\r\n         setSystemName(textValue);\r\n         setEditName(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                editName ?\r\n                <ClickAwayListener onClickAway={() => setEditName(false)}>\r\n                    <div className={classes.editContainer}>\r\n                        <FormControl variant='outlined' className={classes.textInput}>\r\n                            <InputLabel htmlFor='olip' shrink>{t(\"systemsModule.systemName\")}</InputLabel>\r\n                            <OutlinedInput\r\n                                autoFocus\r\n                                notched\r\n                                id='olip' \r\n                                value={ textValue }\r\n                                onChange={handleChange}\r\n                                labelWidth={75}\r\n                                className={classes.input} \r\n                            />\r\n                        </FormControl>\r\n                        <IconButton \r\n                            className={classes.save}\r\n                            onClick={handleSave}\r\n                        >\r\n                            <SaveRoundedIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                        <IconButton \r\n                            className={classes.cancel}\r\n                            onClick={() => setEditName(false)}\r\n                        >\r\n                            <ClearRoundedIcon className={classes.icon} />\r\n                        </IconButton>\r\n                       </div> \r\n                </ClickAwayListener>\r\n                \r\n                : \r\n                <Button \r\n                    className={classes.systemName}\r\n                    onMouseEnter={() => setEditNameHover(true)}\r\n                    onMouseLeave={() => setEditNameHover(false)}\r\n                    onClick={() => { setEditNameHover(false); setEditName(true)}}\r\n                >\r\n                    { title }\r\n                    {\r\n                        editNameHover &&\r\n                        <Fade in={true} timeout={700}>\r\n                            <EditRoundedIcon style={{ \r\n                                margin: '0 10px 0 0',\r\n                                fontSize: '16px'\r\n                            }}/>\r\n                        </Fade>\r\n                        \r\n                    }\r\n                </Button>\r\n            }\r\n        </React.Fragment>                    \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    editContainer: {\r\n        height: 'auto',\r\n        margin: 'auto 0',\r\n        width: '100%',\r\n        dispaly: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    systemName: {\r\n        width: 'auto',\r\n        color: 'white',\r\n        margin: 'auto 20px',\r\n        fontSize: '16px',\r\n        whiteSpace: 'wrap',\r\n        borderRadius: '50px',\r\n        padding: '5px 20px',\r\n        textAlign: 'left'\r\n    },\r\n    textInput: {\r\n        width: '65%',\r\n        margin: '15px 5px 15px 10px',\r\n        '& label.Mui-focused': {\r\n            color: 'white',\r\n        },\r\n        '& label': {\r\n            color: 'white'\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: 'white',\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'rgba(255,255,255,0.7)',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'rgba(255,255,255,0.7)',\r\n              },\r\n        },\r\n        \r\n    },\r\n    input: {\r\n        color: 'white',\r\n        height: '45px',\r\n        borderRadius: '25px',\r\n        padding: '10px',\r\n        '&:focus': {\r\n            border: '2px solid white'\r\n        }\r\n\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        fontSize: '20px',\r\n        padding: '0px',\r\n        '&hover': {\r\n\r\n        }\r\n    },\r\n    save: {\r\n        background: green[800],\r\n        padding: '8px',\r\n        margin: '18px 5px',\r\n        \r\n    },\r\n    cancel: {\r\n        background: red[800],\r\n        padding: '8px',\r\n        margin: '18px 5px',\r\n       \r\n    }\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\AddLinkedUser.js",["361","362","363"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Paper, FormControl, IconButton, useMediaQuery, Fade, Modal, Backdrop,Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { getUserList } from '../../../api/userApi';\r\nimport clsx from 'clsx'\r\n\r\n\r\n\r\nexport const AddLinkedUser = ({ handleClose, handleSave, isOpen, linkedUsers }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ selectedUser, setSelectedUser ] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        getUserList()\r\n        .then(data => {\r\n            let ul = linkedUsers.map(l => l._id);\r\n            setUserList(data.filter(u => ul.indexOf(u._id) === -1 ));\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = event => {\r\n        setSelectedUser(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={isOpen}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xl={3}>\r\n                        <Paper \r\n                            className={classes.paper} \r\n                            style={{ direction: lang.dir }}\r\n                            elevation={6}    \r\n                        >\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {t(\"systemsModule.addRelatedUserTitle\")}\r\n                                </div>\r\n                                <IconButton className={classes.closeBtn} onClick={handleClose}>\r\n                                    <ClearRoundedIcon className={classes.icon}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div className={classes.instructions}>\r\n                                {t(\"systemsModule.chooseUserToAdd\")}\r\n                            </div>\r\n                            <FormControl variant='outlined' className={classes.textInput} >\r\n                                <Select\r\n                                    value={selectedUser}\r\n                                    onChange={handleChange}\r\n                                    className={classes.menu}\r\n                                    MenuProps={{\r\n                                        classes: {\r\n                                            paper: classes.menupaper,\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        userList.map( (user, i) => {\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    className={classes.menuitem}\r\n                                                    value={user._id} \r\n                                                    key={i}\r\n                                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                                >\r\n                                                    {`${user.firstName} ${user.lastName}`}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div className={classes.controls}>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.save)}\r\n                                    onClick={() => handleSave(selectedUser)}\r\n                                    disabled={!selectedUser}\r\n                                >\r\n                                    {t(\"alert.confirm\")}\r\n                                </Button>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.cancel)}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    {t(\"alert.cancel\")}\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    \r\n                </Grid> \r\n                \r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px',\r\n        borderRadius: '10px',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '18px',\r\n        padding: '5px 10px',\r\n        height: 'fit-content'\r\n    },\r\n    closeBtn: {\r\n        fontSize: '20px',\r\n        height: '40px',\r\n        width: '40px'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        borderRadius: '25px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    instructions: {\r\n        width: 'auto',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '12px',\r\n        margin: '0px 10px'\r\n    },\r\n    menu: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(10px)',\r\n\r\n    },\r\n    menuitem: {\r\n        color: 'white'\r\n    },\r\n    textInput: {\r\n        margin: '20px 5px',\r\n        width: '300px',\r\n        '& input': {\r\n            color: 'white',\r\n            paddingLeft: '20px',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        }    \r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsHeader.js",["364"],"import React from 'react';\r\nimport { Grid, makeStyles, Paper, useMediaQuery } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport const SystemsHeader = () => {\r\n\r\n    const classes = useStyles();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n\r\n    return (\r\n        <Grid item xs={ 12 } sm={7} md={8} lg={11} xl={11}>\r\n            <Paper elevation={9} className={classes.headerPaper}>\r\n                <div className={classes.systemName}>\r\n                    {t(\"systemsModule.systemName\")}\r\n                </div>\r\n                {\r\n                    !downSm &&\r\n                    <div className={classes.actionsContainer}>\r\n                        <div className={classes.iconHeader}>\r\n                            {t(\"systemsModule.moreDetails\")}\r\n                        </div>\r\n                        <div className={classes.iconHeader}>\r\n                            {t(\"systemsModule.tasks\")}\r\n                        </div>\r\n                        <div className={classes.iconHeader}>\r\n                            {t(\"systemsModule.faults\")}\r\n                        </div>\r\n                        <div className={classes.iconHeader}>\r\n                            {t(\"systemsModule.documents\")}\r\n                        </div>\r\n                        <div className={classes.iconHeader}>\r\n                            {t(\"systemsModule.changeManager\")}\r\n                        </div>\r\n                        <div className={classes.iconHeader}>\r\n                            {t(\"systemsModule.users\")}\r\n                        </div>      \r\n                        <div className={classes.ownerHeader}>\r\n                            {t(\"systemsModule.ownerHeader\")}\r\n                        </div>\r\n                    </div>\r\n                } \r\n            </Paper>\r\n        </Grid>                          \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    headerPaper: {\r\n        height: '45px',\r\n        background: 'rgba(0,0,0,0.7)',\r\n        margin: '5px',\r\n        borderRadius: '5px',\r\n        color: 'white',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        fontSize: '12px'\r\n    },\r\n    systemName: {\r\n        margin: 'auto 20px',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    actionsContainer: {\r\n        display: 'flex',\r\n        fontSize: '12px',\r\n        width: '668px',\r\n        justifyContent: 'flex-end'\r\n \r\n    },\r\n    iconHeader: {\r\n        width: '78px',\r\n        textAlign: 'center',\r\n        margin: 'auto'\r\n    },\r\n    ownerHeader: {\r\n        width: '190px',\r\n        textAlign: 'center',\r\n        margin: 'auto',\r\n        [theme.breakpoints.down('md')]: {\r\n            margin: 'auto 0'\r\n        }\r\n    }\r\n\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemControls.js",["365","366","367","368"],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemLinkedUsers.js",["369","370"],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\Faults.js",["371","372","373","374","375","376","377","378"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, Grid, LinearProgress, useMediaQuery } from '@material-ui/core';\r\nimport { Route, useHistory, useLocation, useRouteMatch, Switch } from 'react-router';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { FaultViews } from './FaultViews'\r\nimport { FaultView } from './FaultView';\r\n\r\n\r\n\r\nexport const Faults = () => {\r\n\r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const classes = useStyles();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n\r\n\r\n    const { path, url } = useRouteMatch();\r\n\r\n\r\n    return (\r\n        <Grid container justify='center'>\r\n            <Switch>\r\n                <Route exact path={path}>\r\n                    <FaultViews />        \r\n                </Route>\r\n                <Route path={`${path}/:faultId`}>\r\n                    <FaultView />\r\n                </Route>\r\n            </Switch>\r\n        </Grid>\r\n        \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultsControls.js",["379","380","381"],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\api\\faultsApi.js",["382","383","384"],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultListView.js",["385","386","387","388","389"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { makeStyles, Grid, useMediaQuery, List, ListItem, LinearProgress } from '@material-ui/core';\r\nimport { FaultMinified } from './FaultMinified';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { addQueryParam } from '../../../api/genericApi';\r\nimport { FaultView } from './FaultView';\r\nimport { FaultsContext } from '../../../context/FaultsContext';\r\n\r\nexport const FaultListView = ({ faults }) => {\r\n    \r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const classes = useStyles();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    const { setFaults } = useContext(FaultsContext);\r\n    const [ faultView, setFaultView ] = useState(null);\r\n    const [ faultsData, setFaultsData ] = useState([]);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setFaultsData(faults);\r\n        setIsLoading(false);\r\n    }, [faults])\r\n\r\n    // const updateMinifiedStatus = (faultId, status) => {\r\n    //     setIsLoading(true);\r\n    //     let faultIndex = faultsData.findIndex(f => f._id === faultId);\r\n    //     if (!faultIndex && faultIndex != 0) return;\r\n    //     let lf = faultsData;\r\n    //     lf[faultIndex].status = status;\r\n    //     setFaults(lf);\r\n    //     setIsLoading(false);\r\n    // }\r\n\r\n    \r\n    const updateFaultState = (faultId, field, data) => {\r\n        setIsLoading(true);\r\n        let faultIndex = faultsData.findIndex(f => f._id === faultId);\r\n        if (!faultIndex && faultIndex != 0) return;\r\n        let lf = faultsData;\r\n        lf[faultIndex][field] = data;\r\n        setFaults(lf);\r\n        setIsLoading(false);\r\n    }\r\n \r\n    return (\r\n        <Grid container className={classes.main} justify='flex-start'>\r\n            <Grid item xs={12} md={5} lg={3} xl={3} className={classes.faultList}>\r\n                <List className={classes.list}>\r\n                {   \r\n                    isLoading ? \r\n                    null\r\n                    :\r\n                    faultsData.map((f,i) => \r\n                        <ListItem \r\n                            button \r\n                            className={classes.item}\r\n                            onClick={() => setFaultView(f)}\r\n                        >  \r\n                            <FaultMinified \r\n                                data={f}\r\n                                key={i}\r\n                            />\r\n                        </ListItem>\r\n                        \r\n                    )\r\n                }\r\n                </List>\r\n            </Grid>\r\n            {\r\n                !downSm &&\r\n                Boolean(faultView) &&\r\n                <Grid item md={7} lg={9} xl={9} className={classes.faultPresenter}>\r\n                    <FaultView \r\n                        fid={faultView.faultId}\r\n                        updateFaultState={updateFaultState}\r\n                        faultData={faultView}\r\n                    />\r\n                </Grid>\r\n            }\r\n            \r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    main: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        height: '70vh',\r\n        [theme.breakpoints.down('sm')]: {\r\n            border: '0',\r\n            height: 'auto'\r\n        }\r\n    },\r\n    faultList: {\r\n        borderRight: '1px solid rgba(255,255,255,0.2)',\r\n        height: '100%',\r\n        overflowY: 'scroll',\r\n        '&::-webkit-scrollbar': {\r\n            display: 'none'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            border: '0',\r\n            overflowY: 'unset',\r\n        }\r\n    },\r\n    list: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        padding: 0,\r\n        overflowY: 'unset'\r\n    },\r\n    item: {\r\n        height:'200px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '10px 0'\r\n        }\r\n    },\r\n    faultPresenter: {\r\n        background: 'rgba(0,0,0,0.1)',\r\n        height: '100%'\r\n    }\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultMinified.js",["390","391","392","393"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, Button, useMediaQuery, Grid } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { StatusTag } from '../../reuseables/StatusTag';\r\nimport { FaultLink } from './FaultLink';\r\nimport { UserItem } from '../../user/UserItem';\r\nimport { getFullAddress } from '../../../api/assetsApi';\r\n\r\nexport const FaultMinified = ({ data }) => {\r\n    \r\n    const classes = useStyles();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ minifiedData, setMinifiedData ] = useState(data);\r\n\r\n    useEffect(() => {\r\n        setMinifiedData(data);\r\n    }, [data])\r\n\r\n    return (\r\n        <Grid container className={classes.container} alignItems='flex-start'>\r\n            <Grid container justify='space-between' alignItems='center' className={classes.topRow}>\r\n                <Grid item xs={12} >\r\n                    <div className={classes.asset}>\r\n                        { getFullAddress(minifiedData.asset, true)}\r\n                    </div>    \r\n                </Grid>\r\n                \r\n            </Grid>\r\n            <Grid xs={12} item className={classes.title}>\r\n                { minifiedData.title }\r\n            </Grid> \r\n            <Grid container justify='space-between' alignItems='center' className={classes.bottomRow}>\r\n                <Grid item xs={5} className={classes.userData}>\r\n                    <UserItem size={13} avatarSize={40} user={minifiedData.owner}/>\r\n                    <FaultLink faultId={minifiedData.faultId} size={14} />\r\n                </Grid>\r\n                <Grid item xs={7} className={classes.status} >\r\n                    <StatusTag status={minifiedData.status} type={'fault'}/>\r\n                </Grid>  \r\n            </Grid>   \r\n        </Grid>\r\n            \r\n\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative'\r\n    },\r\n    title: {\r\n        color: \"white\",\r\n        fontSize: \"16px\",\r\n        padding: '15px 5px',\r\n        display: \"-webkit-box\",\r\n        WebkitLineClamp: \"2\",\r\n        WebkitBoxOrient: \"vertical\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n        height: '60px'       \r\n    },\r\n    topRow: {\r\n        padding: '5px',\r\n        maxHeight: '60px'\r\n    },\r\n    userData: {\r\n        padding: '5px 0px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start'\r\n    },\r\n    bottomRow: {\r\n        height: '50px',\r\n    },\r\n    asset: {\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        background: 'rgba(0,0,0,0.4)',\r\n        padding: '5px 15px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        boxShadow: 'rgba(0,0,0,0.3) 1px 1px 5px 2px',\r\n        width: 'fit-content',\r\n        textAlign: 'center'\r\n    },\r\n    faultLink: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        margin: '3px 0'\r\n    },\r\n    status: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    link: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    }\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\StatusTag.js",["394","395"],"\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport CheckCircleOutlineRoundedIcon from '@material-ui/icons/CheckCircleOutlineRounded';\r\nimport HourglassEmptyRoundedIcon from '@material-ui/icons/HourglassEmptyRounded';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport clsx from 'clsx';\r\nimport { green, red, yellow } from '@material-ui/core/colors';\r\n\r\nexport const StatusTag = ({status, type, size}) => {\r\n\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    \r\n    return (\r\n        <div \r\n            className={clsx(classes.statusTag,classes[status.statusId])}\r\n            style={{ fontSize: size || '14px'}}    \r\n        >\r\n            {\r\n                status.statusId  === 'ready' ? \r\n                <PlayCircleOutlineIcon className={classes.icon}/> :\r\n                status.statusId  === 'inProgress' ? \r\n                <CachedIcon className={classes.icon} /> :\r\n                status.statusId  === 'pending' ?\r\n                <HourglassEmptyRoundedIcon className={classes.icon}className={classes.icon} /> : \r\n                status.statusId  === 'closed' ?\r\n                <CheckCircleOutlineRoundedIcon className={classes.icon} /> : null\r\n            }\r\n            <div className={classes.title}>\r\n                {t(`faultsModule.statuses.${status.statusId}`)}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    statusTag: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'fit-content',\r\n        padding: '0 10px',\r\n        borderRadius: '25px',\r\n        whiteSpace: 'nowrap'\r\n\r\n    },\r\n    title: {\r\n        padding: '7px 10px 7px 0px'\r\n    },\r\n    ready: {\r\n        background: 'rgba(255,255,255,0.4)',\r\n        color: 'black'\r\n    },\r\n    inProgress: {\r\n        background: yellow[500],\r\n        color: 'black',\r\n        \r\n    },\r\n    pending: {\r\n        background: red[600],\r\n        color: 'white'\r\n    },\r\n    closed: {\r\n        background: green[800],\r\n        color: 'white'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        padding: '0 5px'\r\n    }\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultLink.js",["396"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport const FaultLink = ({ faultId, size }) => {\r\n\r\n    return (\r\n        <Link\r\n            to={`/workspace/faults/${faultId}`}\r\n            style={{ textDecoration: 'none' }}\r\n        >\r\n           <span style={{\r\n               color: 'white',\r\n               fontSize: `${size}px`,\r\n               whiteSpace: 'nowrap'\r\n           }}>\r\n             {faultId}\r\n           </span>\r\n        </Link>\r\n    )\r\n}","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultView.js",["397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412"],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\Carousel.js",["413","414","415","416"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { makeStyles, Slide, Paper, IconButton, Backdrop, Modal } from '@material-ui/core'\r\nimport ChevronLeftRoundedIcon from '@material-ui/icons/ChevronLeftRounded';\r\nimport ChevronRightRoundedIcon from '@material-ui/icons/ChevronRightRounded';\r\nimport clsx from 'clsx';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport ZoomInRoundedIcon from '@material-ui/icons/ZoomInRounded';\r\nimport ZoomOutRoundedIcon from '@material-ui/icons/ZoomOutRounded';\r\nimport ZoomOutMapRoundedIcon from '@material-ui/icons/ZoomOutMapRounded';\r\n\r\nexport const Carousel = ({ images, isOpen, size }) => {\r\n    \r\n    const classes = useStyles();\r\n    const [ slideIn, setSlideIn ] = useState(isOpen);\r\n    const [ slideDirection, setSlideDirection ] = useState('left');\r\n    const [ index, setIndex ] = useState(0);\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ photoViewMode, setPhotoViewMode ] = useState(false);\r\n    const [ picSize, setPicSize ] = useState(size)\r\n\r\n    useEffect(() => {\r\n        if (photoViewMode) {\r\n            setPicSize(800)\r\n        }\r\n    }, [photoViewMode])\r\n\r\n    const handleClick = dir => event => {\r\n        setSlideDirection(dir);\r\n        setSlideIn(false);\r\n \r\n        setTimeout(() => {\r\n            setIndex((index - (dir === 'left' ? 1 : -1) + images.length) % images.length);\r\n            setSlideIn(true);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZoom = up => {\r\n        if (up) {\r\n            if (picSize === 1300) return;\r\n            setPicSize(picSize + 100)\r\n        } else {\r\n            if (picSize === 300) return;\r\n            setPicSize(picSize - 100)\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setPicSize(300);\r\n        setPhotoViewMode(false);\r\n    }\r\n\r\n    return (\r\n        <CarouselWrapper\r\n            isModal={photoViewMode}\r\n            wrapper={ children => \r\n                <Modal\r\n                    open={true}\r\n                    onClose={handleClose}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                        timeout: 500\r\n                    }}\r\n                    className={classes.modal}\r\n                >\r\n                    <div className={classes.content} >\r\n                        <CarouselControls \r\n                            handleZoom={handleZoom} \r\n                            picSize={picSize} \r\n                            handleClose={handleClose}\r\n                        />\r\n                        {children}\r\n                    </div>\r\n                    \r\n                </Modal>\r\n            }\r\n        >\r\n            <div \r\n                className={classes.container}\r\n                style={{ cursor: photoViewMode ? 'default' : 'pointer'}}\r\n            >\r\n                <IconButton\r\n                    className={clsx(classes.arrow, classes.arrowLeft)}\r\n                    onClick={handleClick('left')}\r\n                    style={{ left: lang.drection === 'rtl' ? '97%' : '3%' }}\r\n                >\r\n                    <ChevronLeftRoundedIcon className={classes.icon}/>\r\n                </IconButton>\r\n                <CarouselSlide image={images[index]} size={picSize} setPhotoViewMode={setPhotoViewMode}/>\r\n                <IconButton\r\n                    className={clsx(classes.arrow, classes.arrowRight)}\r\n                    onClick={handleClick('right')}\r\n                    style={{ right: lang.drection === 'rtl' ? '97%' : '3%' }}\r\n                >\r\n                    <ChevronRightRoundedIcon className={classes.icon}/>\r\n                </IconButton>\r\n            </div>\r\n        </CarouselWrapper>\r\n        \r\n    )\r\n}\r\n\r\nconst CarouselSlide = ({image, size, setPhotoViewMode}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper \r\n            className={classes.paper} \r\n            elevation={0} \r\n            style={{ height: `${size}px`}}\r\n            onClick={() => setPhotoViewMode(true)}\r\n        >\r\n            <img src={image} className={classes.image} />\r\n        </Paper>   \r\n    )\r\n}\r\n\r\nconst CarouselControls = ({handleZoom, picSize, handleClose}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.controls}>\r\n            <div className={classes.close}>\r\n                <IconButton\r\n                    className={classes.iconBtn}\r\n                    onClick={handleClose}\r\n                >\r\n                    <ClearRounded className={classes.icon} />\r\n                </IconButton>\r\n            </div>\r\n            \r\n            <div className={classes.zoomControl}>\r\n                <IconButton \r\n                    className={classes.iconBtn} \r\n                    onClick={() => handleZoom(true)} \r\n                    disabled={picSize === 1300}\r\n                >\r\n                    <ZoomInRoundedIcon className={classes.icon} />\r\n                </IconButton>\r\n                <IconButton \r\n                    className={classes.iconBtn} \r\n                    onClick={() => handleZoom(false)}\r\n                    disabled={picSize === 300}\r\n                >\r\n                    <ZoomOutRoundedIcon className={classes.icon} />\r\n                </IconButton>\r\n                <IconButton className={classes.iconBtn} >\r\n                    <ZoomOutMapRoundedIcon className={classes.icon} />\r\n                </IconButton>\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nconst CarouselWrapper = ({isModal, wrapper, children }) =>\r\n    isModal ? wrapper(children) : children\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        position: 'relative',\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        padding: '10px 5px',\r\n        borderRadius: '10px',\r\n        outline: 'none'\r\n    },\r\n    content: {\r\n        height: '100%', \r\n        width: '100%', \r\n        outline: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        padding: 0,\r\n        margin: 0,\r\n        width: '100%',\r\n        direction: 'ltr',\r\n        background: 'transparent',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        userSelect: 'none'\r\n    },\r\n    image: {\r\n        maxHeight: '90%',\r\n        maxWidth: '90%',\r\n        borderRadius: '5px',\r\n        objectFit: 'cover',\r\n        userSelect: 'none'\r\n    },\r\n    arrow: {\r\n        position: 'absolute',\r\n        background: 'rgba(0,0,0,0.6)',\r\n        color: 'white',\r\n        zIndex: 1,\r\n        padding: '5px',\r\n\r\n    },\r\n    arrowLeft: {\r\n        top: '50%',\r\n        transform: 'translateY(-50%)'\r\n    },\r\n    arrowRight: {\r\n        top: '50%',\r\n        transform: 'translateY(-50%)'\r\n    },\r\n    icon: {\r\n        fontSize: '32px',\r\n    },\r\n    iconBtn: {\r\n        background: 'rgba(255,255,255,0.6)',\r\n        color: 'black',\r\n        padding: '8px',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.8)',\r\n            color: 'white',\r\n        }\r\n\r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        position: 'absolute',\r\n        top: 0,\r\n        width: '90%',\r\n        padding: '2% 5%',\r\n        zIndex: 1\r\n    },\r\n    zoomControl: {\r\n        width: '170px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    }\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViewControls.js",["417","418","419"],"import React from 'react';\r\nimport { makeStyles, Grid, IconButton, Tooltip } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport TransferWithinAStationRoundedIcon from '@material-ui/icons/TransferWithinAStationRounded';\r\nimport GroupAddRoundedIcon from '@material-ui/icons/GroupAddRounded';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\n\r\n\r\nexport const FaultViewControls = ({ id, faultId, editFault, updateOwner, changeStatus }) => {\r\n\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const openInNewWindow = () => {\r\n        window.open(`http://localhost:3000/workspace/faults/${faultId}`)\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.container}> \r\n            <Tooltip title={t(\"faultsModule.controls.openInNew\")}>\r\n                <IconButton\r\n                    className={classes.iconBtn}\r\n                    onClick={openInNewWindow}\r\n                >\r\n                    <OpenInNewIcon className={classes.icon}/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title={t(\"faultsModule.controls.editDetails\")}>\r\n                <IconButton\r\n                    className={classes.iconBtn}\r\n                    onClick={editFault}\r\n                >\r\n                    <CreateIcon className={classes.icon}/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title={t(\"faultsModule.controls.changeOwner\")}>\r\n                <IconButton\r\n                    className={classes.iconBtn}\r\n                    onClick={updateOwner}\r\n                >\r\n                    <TransferWithinAStationRoundedIcon className={classes.icon}/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title={t(\"faultsModule.controls.changeStatus\")}>\r\n                <IconButton\r\n                    className={classes.iconBtn}\r\n                    onClick={changeStatus}\r\n                >\r\n                    <DoubleArrowIcon className={classes.icon}/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex'\r\n    },\r\n    iconBtn: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        borderRadius: '50px',\r\n        color: 'white',\r\n        margin: '0 5px',\r\n        padding: '10px',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.7)'\r\n        }\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n    }\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UserList.js",["420","421","422","423"],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CommentSection.js",["424","425","426","427","428"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { makeStyles, useMediaQuery, Avatar, FormControl, OutlinedInput, Grid, ClickAwayListener, IconButton, Button } from '@material-ui/core';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport SaveRoundedIcon from '@material-ui/icons/SaveRounded';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { useTranslation } from 'react-i18next';\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\nimport clsx from 'clsx'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { getDatediffString } from '../../api/genericApi';\r\nimport _ from 'lodash'\r\nimport { green, red } from '@material-ui/core/colors';\r\n\r\n\r\n\r\nexport const CommentSection = ({ parent, saveComment, updateComment }) => {\r\n    \r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const classes = useStyles();\r\n    const { t, i18n }= useTranslation();\r\n    const { lang } = useContext(LanguageContext);\r\n    const { auth } = useContext(AuthContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const [ commentList, setCommentList ] = useState(parent.comments || []);\r\n    const [ parentId, setParentId ] = useState(parent._id)\r\n    const [ text, setText ] = useState('');\r\n    const [ textFocused, setTextFocused ] = useState(false);\r\n    const [ editComment, setEditComment ] = useState(null);\r\n    const [ numOfComments, setNumOfComments ] = useState(3); \r\n    \r\n    useEffect(() => {\r\n        setCommentList(parent.comments);\r\n        setParentId(parent._id);\r\n    }, [parent])\r\n\r\n\r\n    const handleChange = event => {\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleSendComment = event => {\r\n        event.stopPropagation();\r\n        saveComment(parentId, auth.user._id, text)\r\n        .then(data => {\r\n            setCommentList(data.comments)\r\n        })\r\n        .finally(() => {\r\n            setText('');\r\n            setTextFocused(false);\r\n        })\r\n        \r\n    }\r\n\r\n    const handleEditChange = event => {\r\n        setEditComment({\r\n            ...editComment,\r\n            text: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleUpdateComment = async () => {\r\n        const res = await updateComment(parentId, editComment._id, editComment.text);\r\n        setCommentList(res.comments);\r\n        setEditComment(null);\r\n    }\r\n\r\n    return (\r\n        <Grid container >\r\n            <Grid item xs={12} >\r\n                <div className={classes.title}>\r\n                    {t(\"comments.title\")}\r\n                </div>\r\n            </Grid>\r\n            {\r\n                numOfComments < commentList.length &&\r\n                <Grid item xs={12}>\r\n                    <Button\r\n                        className={classes.showMore}\r\n                        onClick={() => setNumOfComments(numOfComments + 3)}\r\n                    >\r\n                        {t(\"comments.showMore\")}\r\n                    </Button>\r\n                </Grid>\r\n                \r\n            }\r\n            {\r\n                _.takeRight(commentList, numOfComments).map((c,i) => \r\n                    <Grid item xs={10} className={clsx(classes.comment)} key={i}>\r\n                        <div className={classes.commentContainer}>\r\n                            <Avatar className={classes.avatar} alt={'abc'} src={c.user.avatar} style={{ height: '50px', width: '50px' }}/>\r\n                            <div className={classes.data}>\r\n                                <div className={classes.commenter}>\r\n                                    {`${c.user.firstName} ${c.user.lastName}`}\r\n                                </div>\r\n                                {\r\n                                    (Boolean(editComment) && editComment._id === c._id) ? \r\n                                    <div className={classes.editContainer}>\r\n                                        <FormControl variant='outlined' className={classes.form}>\r\n                                            <OutlinedInput\r\n                                                value={ editComment.text || '' }\r\n                                                onChange={handleEditChange}\r\n                                                placeholder={t(\"comments.add\")}\r\n                                                className={clsx(classes.textInput, textFocused ? classes.focused : null)}\r\n                                                onFocus={() => setTextFocused(true)}\r\n                                                multiline\r\n                                                classes={{\r\n                                                    inputMultiline: classes.multiLine\r\n                                                }}\r\n                                            />\r\n                                            \r\n                                        </FormControl>\r\n                                        <IconButton \r\n                                            className={classes.save}\r\n                                            onClick={handleUpdateComment}\r\n                                        >\r\n                                            <SaveRoundedIcon className={classes.icon}/>\r\n                                        </IconButton>\r\n                                        <IconButton \r\n                                            className={classes.cancel}\r\n                                            onClick={() => setEditComment(null)}\r\n                                        >\r\n                                            <ClearRoundedIcon className={classes.icon} />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                    :\r\n                                    <div className={classes.commentText}>\r\n                                        {`${c.text}`}\r\n                                    </div>\r\n                                }\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.commentFooter}>\r\n                            {/* <div className={classes.footerField}> \r\n                                <Button className={classes.footerBtn}> \r\n                                    {t(\"comments.reply\")}\r\n                                </Button>\r\n                            </div> */}\r\n                            {\r\n                                c.user._id == auth.user._id &&\r\n                                <div className={classes.footerField}>\r\n                                    {/* {` · `} */}\r\n                                    <Button \r\n                                        className={classes.footerBtn}\r\n                                        onClick={() => setEditComment(c)}\r\n                                    >\r\n                                        {t(\"comments.edit\")}\r\n                                    </Button>\r\n                                </div>\r\n                                 \r\n                            }\r\n                            <div className={classes.footerField}>\r\n                            {` · `}\r\n                            <div className={ classes.timePassed}>\r\n                                {`${getDatediffString(c.createdAt)}`}    \r\n                            </div>\r\n                            \r\n                            </div>\r\n                                      \r\n                        </div>\r\n                    </Grid>\r\n                )\r\n                \r\n            }\r\n            \r\n           \r\n            <ClickAwayListener onClickAway={() => setTextFocused(false)}> \r\n                <Grid item xs={12} sm={12} md={8} lg={6} xl={6} className={classes.addComment}>\r\n                    <FormControl variant='outlined' className={classes.form}>\r\n                        <OutlinedInput\r\n                            value={ text || '' }\r\n                            onChange={handleChange}\r\n                            placeholder={t(\"comments.add\")}\r\n                            className={clsx(classes.textInput, textFocused ? classes.focused : null)}\r\n                            onFocus={() => setTextFocused(true)}\r\n                            multiline\r\n                            classes={{\r\n                                inputMultiline: classes.multiLine\r\n                            }}\r\n                        />\r\n                        \r\n                    </FormControl>\r\n                    <IconButton \r\n                        className={classes.postBtn}\r\n                        onClick={handleSendComment}\r\n                    >\r\n                        <SendRoundedIcon className={clsx(classes.icon, lang.dir === 'rtl' ? classes.mirror : null)}/>\r\n                    </IconButton> \r\n                </Grid>\r\n            </ClickAwayListener>\r\n        </Grid>\r\n    \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '20px',\r\n        padding: '20px 30px 10px',\r\n        marginBottom: '10px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)'\r\n    },\r\n    addComment: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '10px',\r\n        width: 'fit-content'\r\n    },\r\n    avatar: {\r\n        margin: '0 10px'\r\n    },\r\n    form: {\r\n        color: 'white',\r\n        width: '100%'\r\n\r\n    },\r\n    textInput: {\r\n        padding: '15px 10px',\r\n        borderRadius: '42px',\r\n        '& input': {\r\n            color: 'white',\r\n            width: '80%'\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        },\r\n           \r\n    },\r\n    focused: {\r\n        boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        background: 'rgba(0,0,0,0.4)'\r\n    },\r\n    postBtn: {\r\n        color: 'white',\r\n        padding: '7px',\r\n        left: '-40px',\r\n        marginBottom: '1px',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.4)',\r\n        }\r\n    },\r\n    icon: {\r\n        fontSize: '20px'\r\n    },\r\n    mirror: {\r\n        transform: 'scaleX(-1)'\r\n    },\r\n    comment: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: '5px 0'\r\n    },\r\n    commentContainer: {\r\n        width: 'fit-content',\r\n        display: 'flex',\r\n        padding: '10px 30px 10px 0px',\r\n        margin: '0px 10px',\r\n        background: 'rgba(0,0,0,0.4)',\r\n        borderRadius: '35px',\r\n        \r\n    },\r\n    commenter: {\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '13px',\r\n        padding: '5px'\r\n    },\r\n    commentText: {\r\n        color: 'white'\r\n    },\r\n    commentFooter: {\r\n        display: 'flex',\r\n        marginLeft: '40px',\r\n        height: '20px'\r\n    },\r\n    footerField: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        fontSize: '11px',\r\n        color: 'rgba(255,255,255,0.4)',\r\n    },\r\n    footerBtn: {\r\n        fontSize: '12px',\r\n        padding: '1px 2px',\r\n        margin: '0px 2px',\r\n        minWidth: '0',\r\n        width: 'fit-content',\r\n        color: 'rgba(255,255,255,0.4)',\r\n        borderRadius: '50px',\r\n        '&:hover': {\r\n            color: 'white',\r\n            textDecoration: 'underline',\r\n            boxShadow: 'none',\r\n            background: 'transparent'\r\n        }\r\n    },\r\n    timePassed: {\r\n        fontSize: '12px',\r\n        padding: '0px 2px',\r\n        margin: '0 2px',\r\n        minWidth: '0',\r\n        width: 'fit-content',\r\n        color: 'rgba(255,255,255,0.4)',\r\n    },\r\n    multiLine: {\r\n        padding: '0px 20px'\r\n    },\r\n    showMore: {\r\n        margin: '5px 30px',\r\n        color: 'white',\r\n        fontSize: '16px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            boxShadow: 'none',\r\n            background: 'inherit',\r\n            textDecoration: 'underline'\r\n        }\r\n    },\r\n    save: {\r\n        background: green[800],\r\n        padding: '8px',\r\n        margin: '18px 5px',\r\n        \r\n    },\r\n    cancel: {\r\n        background: red[800],\r\n        padding: '8px',\r\n        margin: '18px 5px',\r\n       \r\n    },\r\n    editContainer: {\r\n        height: 'auto',\r\n        margin: 'auto 0',\r\n        width: '100%',\r\n        dispaly: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViews.js",["429","430","431","432","433","434","435","436","437"],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CreateContainer.js",["438","439","440","441","442","443","444","445","446"],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemAdditionalDetails.js",["447","448","449","450"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Collapse, Tooltip, IconButton, useMediaQuery, LinearProgress } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { format } from 'date-fns'\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\r\nimport { UpsertSystem } from './UpsertSystem';\r\n\r\nexport const SystemAdditionalDetails = ({ data, isOpen, systemId, toggleEdit }) => {\r\n\r\n    const classes = useStyles();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ systemData, setSystemData ] = useState(null);\r\n    const { t, i18n } = useTranslation(); \r\n    const [ isLoading, setIsLoading ] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        setSystemData(data);\r\n        setIsLoading(false);\r\n    }, [data])\r\n\r\n    return (\r\n      \r\n            isLoading ?\r\n            <LinearProgress />\r\n            :\r\n            <Collapse in={isOpen} >\r\n                <div className={classes.container}>\r\n                    <Grid container justify={'center'} className={classes.grid} spacing={2}>\r\n                        <Grid container className={classes.gridItem}>\r\n                            <Grid item xs={12} className={classes.headerRow}>\r\n                                <div className={classes.title}>\r\n                                    {t(\"systemsModule.additionalDetails\")}\r\n                                </div>\r\n                                <IconButton \r\n                                    className={classes.iconBtn}\r\n                                    onClick={toggleEdit}\r\n                                >\r\n                                    <EditRoundedIcon className={classes.icon}/>\r\n                                </IconButton>\r\n                            </Grid>\r\n                            <Grid item md={6} lg={3} xl={4} className={classes.fieldContainer}>\r\n                                <div className={classes.label}>\r\n                                    {t(\"systemsModule.location\")}\r\n                                </div>\r\n                                <div className={classes.fieldData}>\r\n                                    {systemData.general.location || t(\"general.noData\")}\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={3} xl={4} className={classes.fieldContainer}>\r\n                                <div className={classes.label}>\r\n                                    {t(\"systemsModule.manufacturingYear\")}\r\n                                </div>\r\n                                <div className={classes.fieldData}>\r\n                                    {systemData.general.manufacturingYear || t(\"general.noData\")}\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={3} xl={4} className={classes.fieldContainer}>\r\n                                <div className={classes.label}>\r\n                                    {t(\"systemsModule.SID\")}\r\n                                </div>\r\n                                <div className={classes.fieldData}>\r\n                                    {systemData.general.SID || t(\"general.noData\")}\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={3} xl={4} className={classes.fieldContainer}>\r\n                                <div className={classes.label}>\r\n                                    {t(\"systemsModule.warrantyDetails.issuer\")}\r\n                                </div>\r\n                                <div className={classes.fieldData}>\r\n                                    {t(`systemsModule.warrantyDetails.${systemData.warranty.issuer || 'nowarranty'}`)}\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={3} xl={4} className={classes.fieldContainer}>\r\n                                <div className={classes.label}>\r\n                                    {t(\"systemsModule.warrantyDetails.expiryDate\")}\r\n                                </div>\r\n                                <div className={classes.fieldData}>\r\n                                    {systemData.warranty.expiryDate ? format(new Date(systemData.warranty.expiryDate), lang.dateformat) : t(\"systemsModule.warrantyDetails.nowarranty\")}\r\n                                </div>\r\n                            </Grid>\r\n                            \r\n                        </Grid>\r\n                        <Grid item xs={12} lg={4} xl={4} className={classes.gridItem}>\r\n                            <div className={classes.card}>\r\n                                <div className={classes.cardTitle}>\r\n                                    {t(\"systemsModule.manufacturer\")}\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.manufacturerDetails.name\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.manufacturer.name || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.manufacturerDetails.contactName\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.manufacturer.contactName || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.manufacturerDetails.email\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.manufacturer.email || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.manufacturerDetails.phoneNumber\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.manufacturer.phoneNumber || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.manufacturerDetails.extension\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.manufacturer.extension || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} lg={4} xl={4} className={classes.gridItem}>\r\n                        <div className={classes.card}>\r\n                                <div className={classes.cardTitle}>\r\n                                    {t(\"systemsModule.supplier\")}\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.supplierDetails.name\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.supplier.name || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.supplierDetails.contactName\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.supplier.contactName || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.supplierDetails.email\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.supplier.email || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.supplierDetails.phoneNumber\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.supplier.phoneNumber || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.supplierDetails.extension\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.supplier.extension || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} lg={4} xl={4} className={classes.gridItem}>\r\n                            <div className={classes.card}>\r\n                                <div className={classes.cardTitle}>\r\n                                    {t(\"systemsModule.insurance\")}\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.insuranceDetails.name\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.insurance.name || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.insuranceDetails.contactName\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.insurance.contactName || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.insuranceDetails.email\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.insurance.email || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.insuranceDetails.phoneNumber\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.insurance.phoneNumber || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.insuranceDetails.extension\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.insurance.extension || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Collapse>\r\n      \r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'rgba(0,0,0,0.4)',\r\n        borderRadius: '5px',\r\n        margin: '10px',\r\n        padding: '10px'\r\n    },\r\n    grid: {\r\n        padding: '10px',\r\n    },\r\n    gridItem: {\r\n        display: 'flex',\r\n        margin: '10px 0'\r\n    },\r\n    fieldContainer: {\r\n        padding: '10px',\r\n        margin : '15px 0', \r\n        height: '60px',\r\n    },\r\n    label: {\r\n        padding: '5px 10px',\r\n        borderRadius: '5px 5px 0px 0',\r\n        background: 'rgba(0,0,0,0.3)',\r\n        color: 'white',\r\n        width: 'fit-content',\r\n        fontSize: '13px'\r\n    },\r\n    fieldData: {\r\n        padding: '15px 20px',\r\n        width: '200px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '0 5px 5px 5px',\r\n        color: 'white'\r\n    },\r\n    card: {\r\n        margin: '10px 0px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '5px',\r\n        padding: '10px',\r\n        width: '100%'\r\n    },\r\n    cardTitle: {\r\n        color: 'white',\r\n        fontSize: '20px',\r\n        padding: '10px',\r\n        background: 'rgba(0,0,0,0.3)',\r\n        borderRadius: '5px',\r\n        \r\n    },\r\n    cardRow: {\r\n        padding: '10px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        color: 'white',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)'\r\n    },\r\n    rowLabel: {\r\n        padding: '3px 0',\r\n        fontSize: '14px',\r\n        color: 'rgba(255,255,255,0.6)'\r\n    },\r\n    rowData: {\r\n        fontSize: '16px'\r\n    },\r\n    headerRow: {\r\n        color: 'white',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '0px 10px 10px 10px',\r\n        fontSize: '20px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)'\r\n    },\r\n    iconBtn: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.3)'\r\n        }\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        fontSize: '20px'\r\n    },\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\UpsertSystem.js",["451","452","453","454","455","456","457","458"],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\UpsertFault.js",["459","460","461","462","463","464","465","466","467","468","469","470","471","472","473"],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateOwner.js",["474","475","476"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Paper, FormControl, IconButton, useMediaQuery, Fade, Modal, Backdrop,Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { getUserList } from '../../api/userApi';\r\nimport clsx from 'clsx'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\n\r\n\r\nexport const UpdateOwner = ({ handleClose, handleSave, isOpen, currentOwner, title, instructions }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ selectedUser, setSelectedUser ] = useState('')\r\n    \r\n    useEffect(() => {\r\n        getUserList()\r\n        .then(data => {\r\n            if (currentOwner) {\r\n                setSelectedUser(currentOwner._id)\r\n            }\r\n            setUserList(data.filter(u => u._id !== currentOwner._id ));\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = event => {\r\n        setSelectedUser(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={isOpen}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xs={11} sm={7} md={5} lg={3} xl={3}>\r\n                        <Paper \r\n                            className={classes.paper} \r\n                            style={{ direction: lang.dir }}\r\n                            elevation={6}    \r\n                        >\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {title}\r\n                                </div>\r\n                                <IconButton className={classes.closeBtn} onClick={handleClose}>\r\n                                    <ClearRoundedIcon className={classes.icon}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div className={classes.instructions}>\r\n                                {instructions}\r\n                            </div>\r\n                            <FormControl variant='outlined' className={classes.textInput} >\r\n                                <Select\r\n                                    value={selectedUser}\r\n                                    onChange={handleChange}\r\n                                    className={classes.menu}\r\n                                    MenuProps={{\r\n                                        classes: {\r\n                                            paper: classes.menupaper\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        userList.map( (user, i) => {\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    className={classes.menuitem}\r\n                                                    value={user._id} \r\n                                                    key={i}\r\n                                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                                >\r\n                                                    {`${user.firstName} ${user.lastName}`}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div className={classes.controls}>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.save)}\r\n                                    onClick={() => handleSave(selectedUser)}\r\n                                    disabled={!selectedUser}\r\n                                >\r\n                                    {t(\"alert.confirm\")}\r\n                                </Button>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.cancel)}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    {t(\"alert.cancel\")}\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    \r\n                </Grid> \r\n                \r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px',\r\n        borderRadius: '10px',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '18px',\r\n        padding: '5px 10px',\r\n        height: 'fit-content'\r\n    },\r\n    closeBtn: {\r\n        fontSize: '20px',\r\n        height: '40px',\r\n        width: '40px'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        borderRadius: '25px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    instructions: {\r\n        width: 'auto',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '12px',\r\n        margin: '0px 10px'\r\n    },\r\n    menu: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(10px)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        marginTop: '55px',\r\n        marginRight: '7px'\r\n\r\n    },\r\n    menuitem: {\r\n        color: 'white'\r\n    },\r\n    textInput: {\r\n        margin: '20px 5px',\r\n        width: '300px',\r\n        '& input': {\r\n            color: 'white',\r\n            paddingLeft: '20px',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        }    \r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\UpsertAsset.js",["477","478","479","480"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { makeStyles, useMediaQuery, Paper, Grid, Fade, IconButton, Button, TextField, Select, MenuItem, FormHelperText, LinearProgress, Modal, Backdrop } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport clsx from 'clsx'\r\nimport { getAsset } from '../../../api/assetsApi';\r\n\r\n\r\n\r\n\r\nexport const UpsertAsset = ({ handleClose, handleSave, assetId, handleUpdate }) => {\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const { auth } = useContext(AuthContext);\r\n    const [ mode, setMode ] = useState(handleUpdate ? 'update' : 'create')\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ errors, setErrors ] = useState([]);\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ addInfoContext, setAddInfoContext ] = useState(null)\r\n    const [ isLoading, setIsLoading ] = useState(true)\r\n    const [ details, setDetails ] = useState({\r\n        tenant: auth.user.tenant,\r\n        address: {\r\n            country: '',\r\n            province: '',\r\n            city: '',\r\n            street: '',\r\n            streetNumber: '',\r\n            entrance: '',\r\n            zipcode: '',\r\n        },\r\n        owner: '',\r\n        type: '',\r\n        addInfo: null,\r\n        createdBy: auth.user._id \r\n    });\r\n\r\n    useEffect(() => {\r\n        createUserOptions()\r\n        .then(data => {\r\n            setUserList(data);\r\n            return Promise.resolve(assetId)\r\n        })\r\n        .then(res => {\r\n            if (!res) {\r\n                setIsLoading(false);\r\n                return;\r\n            }\r\n            getAsset(res, true)\r\n            .then(data => {\r\n                setDetails(data);\r\n                setIsLoading(false)\r\n            }) \r\n        })\r\n        \r\n    },[])\r\n\r\n \r\n\r\n    const validateFields = () => {\r\n        return new Promise((resolve,reject) => {\r\n            let errList = [];\r\n            Object.entries({...details.address,owner: details.owner, type: details.type}).forEach((entry) => {\r\n                if (['province', 'entrance'].indexOf(entry[0]) !== -1 ) return;\r\n                if (!entry[1]) {\r\n                    errList.push({ field: entry[0], text: t(\"errors.isRequired\")})\r\n                }\r\n            });\r\n            \r\n            if (errList.length) {\r\n                setErrors(errList);\r\n                resolve(false);\r\n            };\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    const handleConfirm = () => {\r\n        validateFields()\r\n        .then(res => {\r\n            if (!res) return\r\n            if ( mode === 'create') {\r\n                handleSave(details);\r\n            } else {\r\n                console.log(details)\r\n                handleUpdate(details)\r\n            }\r\n            \r\n        })      \r\n    }\r\n\r\n    const handleChange = data => event => {\r\n        if (data.type) {\r\n            setDetails({...details, [data.type]: {\r\n                ...details[data.type],\r\n                [data.field]: event.target.value\r\n            }});\r\n        } else if (data.field === 'type') {\r\n            setDetails({\r\n                ...details, \r\n                type: event.target.value,\r\n                addInfo: event.target.value === 'apartment' \r\n                ? { floor: '', unit: ''} \r\n                : { floors: '', units: ''}\r\n            });\r\n            setAddInfoContext(event.target.value);\r\n        } else {\r\n            setDetails({...details, [data.field]: event.target.value}) \r\n        };\r\n        if (errors.length) {\r\n            setErrors(errors.filter(err => err.field !== data.field))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        isLoading ? \r\n        <LinearProgress /> :\r\n        <Modal\r\n            open={true}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={true}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xs={12} sm={10} md={8} lg={8} xl={6} className={classes.gridCont}>\r\n                        <Paper\r\n                            elevation={6}\r\n                            className={classes.paper}\r\n                            style={{ direction: lang.dir }}\r\n                        >\r\n                            <Grid container>\r\n                                <Grid item xs={12} className={classes.headerRow}>\r\n                                    <div className={classes.title}>\r\n                                        {mode === 'create' ? t(\"assetsModule.createAsset\") : t(\"assetsModule.editAsset\")}\r\n                                    </div>\r\n                                    <div className={classes.close}>\r\n                                        <IconButton\r\n                                            className={classes.iconBtn}\r\n                                            onClick={handleClose}\r\n                                        >\r\n                                            <ClearRounded className={classes.icon}/>\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} className={classes.section}>\r\n                                    <Grid item xs={12}>\r\n                                        <div className={classes.sectionTitle}>\r\n                                            {t(\"assetsModule.addressDetails\")}\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} className={classes.fields}>\r\n                                        <Grid container justify='flex-start'>\r\n                                            {\r\n                                                Object.keys(details.address).map((f,i) =>\r\n                                                <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.textContainer} key={i}>\r\n                                                    <TextField\r\n                                                        variant={\"outlined\"}\r\n                                                        label={t(`assetsModule.${f}`)}\r\n                                                        error={ errors.filter(e => e.field === `${f}`).length > 0 }\r\n                                                        value={ details.address[f] }\r\n                                                        onChange={handleChange({type: 'address', field: `${f}`})}\r\n                                                        className={classes.textField}\r\n                                                        size={'medium'}\r\n                                                        helperText={ errors.filter(e => e.field === `${f}`).length > 0 ? t(\"errors.isRequired\"): null }\r\n                                                    />\r\n                                                </Grid>\r\n                                                )\r\n                                                \r\n                                            }\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                \r\n                                </Grid>\r\n                                <Grid item xs={12} sm={5} className={classes.section}>\r\n                                    <Grid item xs={12}>\r\n                                        <div className={classes.sectionTitle}>\r\n                                            {t(\"assetsModule.assetType\")}\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} className={classes.fields}>\r\n                                        <Grid container justify='flex-start'>\r\n                                            <Grid item xs={12} className={classes.textContainer}>\r\n                                                <Select\r\n                                                    variant={\"outlined\"}\r\n                                                    error={ errors.filter(e => e.field === `type`).length > 0 }\r\n                                                    value={ details.type }\r\n                                                    onChange={handleChange({type: '', field: `type`})}\r\n                                                    className={classes.selectInput}\r\n                                                    MenuProps={{\r\n                                                        classes: {\r\n                                                            paper: classes.menupaper,\r\n                                    \r\n                                                        },\r\n                                                        anchorOrigin: {\r\n                                                            vertical: \"bottom\",\r\n                                                            horizontal: \"center\",\r\n                                                        },\r\n                                                        transformOrigin: {\r\n                                                            vertical: \"top\",\r\n                                                            horizontal: \"center\",\r\n                                                        },\r\n                                                        getContentAnchorEl: null,\r\n                                                        disablePortal: true\r\n                                                    }}\r\n                                    \r\n                                                >\r\n                                                    <MenuItem \r\n                                                        value={'building'}\r\n                                                        style={{ direction: lang.dir }}\r\n                                                        className={classes.menuitem}\r\n                                                    >\r\n                                                        {t(\"assetsModule.building\")}\r\n                                                    </MenuItem>\r\n                                                    <MenuItem \r\n                                                        value={'apartment'}\r\n                                                        style={{ direction: lang.dir }}\r\n                                                        className={classes.menuitem}\r\n                                                    >\r\n                                                        {t(\"assetsModule.apartment\")}\r\n                                                    </MenuItem>\r\n                                                </Select>\r\n                                                {\r\n                                                    errors.filter(e => e.field === `type`).length > 0 &&\r\n                                                    <FormHelperText style={{ color: '#f44336', marginRight: '15px'}}>{t(\"errors.isRequired\")}</FormHelperText>\r\n                                                }\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={5}  className={classes.section}>\r\n                                    <Grid item xs={12}>\r\n                                        <div className={classes.sectionTitle}>\r\n                                            {t(\"assetsModule.owner\")}\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} className={classes.fields}>\r\n                                        <Grid item xs={12} className={classes.textContainer}>\r\n                                                <Select\r\n                                                    variant={\"outlined\"}\r\n                                                    error={ errors.filter(e => e.field === `owner`).length > 0 }\r\n                                                    value={ details.owner }\r\n                                                    onChange={handleChange({type: '', field: `owner`})}\r\n                                                    className={classes.selectInput}\r\n                                                    MenuProps={{\r\n                                                        classes: {\r\n                                                            paper: classes.menupaper,\r\n                                                \r\n                                                        },\r\n                                                        anchorOrigin: {\r\n                                                            vertical: \"bottom\",\r\n                                                            horizontal: \"center\",\r\n                                                        },\r\n                                                        transformOrigin: {\r\n                                                            vertical: \"top\",\r\n                                                            horizontal: \"center\",\r\n                                                        },\r\n                                                        getContentAnchorEl: null,\r\n                                                        disablePortal: true\r\n                                                    }}\r\n                                                \r\n                                                >\r\n                                                    {\r\n                                                        userList.map((user, i) => \r\n                                                            <MenuItem \r\n                                                                key={i}\r\n                                                                value={user.value}\r\n                                                                style={{ direction: lang.dir }}\r\n                                                                className={classes.menuitem}\r\n                                                            >\r\n                                                                {user.label}\r\n                                                            </MenuItem>\r\n                                                        )\r\n                                                    }\r\n                                                </Select>\r\n                                                {\r\n                                                    errors.filter(e => e.field === `type`).length > 0 &&\r\n                                                    <FormHelperText style={{ color: '#f44336', marginRight: '15px'}}>{t(\"errors.isRequired\")}</FormHelperText>\r\n                                                }\r\n                                                \r\n                                            </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {\r\n                                    (Boolean(addInfoContext) || mode === 'update') &&\r\n                                    <Grid item xs={12} md={6} className={classes.section}>\r\n                                        <Grid item xl={12}>\r\n                                            <div className={classes.sectionTitle}>\r\n                                                {t(\"assetsModule.additionalDetails\")}\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item xl={12} className={classes.fields}>\r\n                                            <Grid container justify='flex-start'>\r\n                                                {\r\n                                                    Object.keys(details.addInfo).map((f,i) => \r\n                                                        <Grid item xs={12} sm={6} className={classes.textContainer} key={i}>\r\n                                                            <TextField\r\n                                                                variant={\"outlined\"}\r\n                                                                label={t(`assetsModule.${f}`)}\r\n                                                                error={ errors.filter(e => e.field === `${f}`).length > 0 }\r\n                                                                value={ details.addInfo[f] }\r\n                                                                onChange={handleChange({type: 'addInfo', field: `${f}`})}\r\n                                                                className={classes.textField}\r\n                                                                size={'medium'}\r\n                                                                InputProps={{\r\n                                                                    classes: {\r\n                                                                        root: classes.rootInput\r\n                                                                    }\r\n                                                                }}\r\n                                                            />\r\n                                                        </Grid>\r\n                                                    ) \r\n                                                }\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                }\r\n                                <Grid item xs={12} className={classes.controls}>\r\n                                    <Button\r\n                                        className={clsx(classes.control, classes.save)}\r\n                                        onClick={handleConfirm}\r\n                                    >\r\n                                        {t(\"controls.confirm\")}\r\n                                    </Button>\r\n                                    <Button\r\n                                        className={clsx(classes.control, classes.cancel)}\r\n                                        onClick={handleClose}\r\n                                    >\r\n                                        {t(\"controls.cancel\")}\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    gridCont: {\r\n        height: 'fit-content'\r\n    },\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '10px',\r\n        padding: '10px 20px',\r\n        overflowY: 'overlay',\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: '81vh',\r\n            borderRadius: '0',\r\n            border: '0'\r\n        },\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    headerRow: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: '100%',      \r\n        borderBottom: '1px solid rgba(255,255,255,0.2)'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        padding: '20px 10px 10px',\r\n        fontSize: '20px',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    iconBtn: {\r\n\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        fontSize: '20px'\r\n    },\r\n    section: {\r\n        margin: '10px 5px',\r\n        \r\n    },\r\n    sectionTitle: {\r\n        color: 'white',\r\n        fontSize: '16px',\r\n        padding: '10px 20px',\r\n        width: 'fit-content',\r\n        borderRadius: '10px 10px 0 0',\r\n        background: 'rgba(0,0,0,0.4)',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    fields: {\r\n        padding: '10px 20px',\r\n        borderRadius: '0px 10px 10px 10px',\r\n        background: 'rgba(0,0,0,0.4)',\r\n    },\r\n    textContainer: {\r\n        padding: '5px',\r\n    },\r\n    textField: {\r\n        width: '100%',\r\n        '& fieldset': {\r\n            borderRadius: '5px',\r\n        },  \r\n    },\r\n    selectInput: {\r\n        width: '100%',\r\n        '& fieldset': {\r\n            borderRadius: '5px',\r\n        }   \r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.6)',\r\n        backdropFilter: 'blur(10px)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        marginRight: '7px',\r\n        marginLeft: '-5px',\r\n        \r\n\r\n    },\r\n    menuitem: {\r\n        color: 'white',\r\n        '&:hover':{\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    controls: {\r\n        borderTop: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px 0',\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n       \r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white',\r\n       \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        '&:hover': { \r\n            boxShadow: 'inset rgba(255,255,255,0.3) 0 0 2px 1px'\r\n        }\r\n    }\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AddFollower.js",["481","482","483"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Paper, FormControl, IconButton, useMediaQuery, Fade, Modal, Backdrop,Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { getUserList } from '../../api/userApi';\r\nimport clsx from 'clsx'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\n\r\n\r\nexport const AddFollower = ({ handleClose, handleSave, isOpen, followerList, title, instructions }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ selectedUser, setSelectedUser ] = useState('')\r\n    \r\n    useEffect(() => {\r\n        getUserList()\r\n        .then(data => {  \r\n            setUserList(data.filter(u => Boolean(!followerList.find(f => f._id === u._id))));\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = event => {\r\n        setSelectedUser(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={isOpen}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xs={10} sm={7} md={5} lg={3} xl={3}>\r\n                        <Paper \r\n                            className={classes.paper} \r\n                            style={{ direction: lang.dir }}\r\n                            elevation={6}    \r\n                        >\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {title}\r\n                                </div>\r\n                                <IconButton className={classes.closeBtn} onClick={handleClose}>\r\n                                    <ClearRoundedIcon className={classes.icon}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div className={classes.instructions}>\r\n                                {instructions}\r\n                            </div>\r\n                            <FormControl variant='outlined' className={classes.textInput} >\r\n                                <Select\r\n                                    value={selectedUser}\r\n                                    onChange={handleChange}\r\n                                    className={classes.menu}\r\n                                    MenuProps={{\r\n                                        classes: {\r\n                                            paper: classes.menupaper,\r\n                                           \r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        userList.map( (user, i) => {\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    className={classes.menuitem}\r\n                                                    value={user._id} \r\n                                                    key={i}\r\n                                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                                >\r\n                                                    {`${user.firstName} ${user.lastName}`}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div className={classes.controls}>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.save)}\r\n                                    onClick={handleSave(selectedUser)}\r\n                                    disabled={!selectedUser}\r\n                                >\r\n                                    {t(\"alert.confirm\")}\r\n                                </Button>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.cancel)}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    {t(\"alert.cancel\")}\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    \r\n                </Grid> \r\n                \r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px',\r\n        borderRadius: '10px',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '18px',\r\n        padding: '5px 10px',\r\n        height: 'fit-content'\r\n    },\r\n    closeBtn: {\r\n        fontSize: '20px',\r\n        height: '40px',\r\n        width: '40px'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        borderRadius: '25px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    instructions: {\r\n        width: 'auto',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '12px',\r\n        margin: '0px 10px'\r\n    },\r\n    menu: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(10px)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        marginTop: '55px',\r\n        marginRight: '7px'\r\n\r\n    },\r\n    menuitem: {\r\n        color: 'white'\r\n    },\r\n    textInput: {\r\n        margin: '20px 5px',\r\n        width: '300px',\r\n        '& input': {\r\n            color: 'white',\r\n            paddingLeft: '20px',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        }    \r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AlertDialog.js",["484"],"import React, { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { useTranslation } from 'react-i18next';\r\nimport clsx from 'clsx';\r\n\r\nexport const AlertDialog = ({ alertDialog , open }) => {\r\n\r\n        const classes = useStyles();\r\n        const { lang } = useContext(LanguageContext);\r\n        const { t, i18n } = useTranslation();\r\n  return (\r\n    <Dialog\r\n        open={true}\r\n        onClose={alertDialog.handleCancel}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        style={{ direction: lang.dir}}\r\n        classes={{\r\n            root: classes.root, \r\n            paper: classes.paper,\r\n            container: classes.container\r\n        }}\r\n        BackdropProps={{\r\n            timeout: 500,\r\n            classes: {\r\n                root: classes.root\r\n            }\r\n        }}\r\n    >\r\n    <DialogTitle id=\"alert-dialog-title\" style={{ direction: lang.dir}} className={classes.title}>\r\n        {alertDialog.title}\r\n    </DialogTitle>\r\n    <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\" style={{ direction: lang.dir}} className={classes.text}>\r\n        { alertDialog.text }\r\n        </DialogContentText>\r\n    </DialogContent>\r\n    <DialogActions className={classes.controls}>\r\n        <Button\r\n            className={clsx(classes.control, classes.save)}\r\n            onClick={alertDialog.handleConfirm}\r\n        >\r\n            { alertDialog.confirmText || t(\"alert.confirm\") }\r\n        </Button>\r\n        <Button\r\n            className={clsx(classes.control, classes.cancel)}\r\n            onClick={alertDialog.handleCancel}\r\n        >\r\n            { alertDialog.cancelText || t(\"alert.cancel\") }\r\n        </Button>\r\n    </DialogActions>\r\n    </Dialog>\r\n\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: 'rgba(0,0,0,0.4)'\r\n    },\r\n    container: {\r\n        backdropFilter: 'blur(10px)',\r\n    },\r\n    paper: {\r\n        width: 'auto',\r\n        padding: '5px',\r\n        background: 'rgba(0,0,0,0.4)',\r\n        borderRadius: '10px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        color: 'white'\r\n    },\r\n    text: {\r\n        color: 'white'\r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateStatus.js",["485","486","487"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Paper, FormControl, IconButton, useMediaQuery, Fade, Modal, Backdrop,Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport clsx from 'clsx'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { getStatusList } from '../../api/genericApi';\r\n\r\n\r\n\r\nexport const UpdateStatus = ({ handleClose, handleSave, isOpen, currentStatus, title, instructions, module }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ statusList, setStatusList ] = useState([]);\r\n    const [ selectedStatus, setSelectedStatus ] = useState('')\r\n    \r\n    useEffect(() => {\r\n        getStatusList('faults')\r\n        .then(data => {\r\n            console.log(data)\r\n            if (currentStatus) {\r\n                setSelectedStatus(currentStatus._id)\r\n            }\r\n            setStatusList(data.filter(s => s._id !== currentStatus._id ));\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = event => {\r\n        setSelectedStatus(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={isOpen}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xs={11} sm={7} md={5} lg={3} xl={3}>\r\n                        <Paper \r\n                            className={classes.paper} \r\n                            style={{ direction: lang.dir }}\r\n                            elevation={6}    \r\n                        >\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {title}\r\n                                </div>\r\n                                <IconButton className={classes.closeBtn} onClick={handleClose}>\r\n                                    <ClearRoundedIcon className={classes.icon}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div className={classes.instructions}>\r\n                                {instructions}\r\n                            </div>\r\n                            <FormControl variant='outlined' className={classes.textInput} >\r\n                                <Select\r\n                                    value={selectedStatus}\r\n                                    onChange={handleChange}\r\n                                    className={classes.menu}\r\n                                    MenuProps={{\r\n                                        classes: {\r\n                                            paper: classes.menupaper\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        statusList.map( (status, i) => {\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    className={classes.menuitem}\r\n                                                    value={status._id} \r\n                                                    key={i}\r\n                                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                                >\r\n                                                    {t(`${module}Module.statuses.${status.statusId}`)}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div className={classes.controls}>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.save)}\r\n                                    onClick={() => handleSave(selectedStatus)}\r\n                                    disabled={!selectedStatus}\r\n                                >\r\n                                    {t(\"alert.confirm\")}\r\n                                </Button>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.cancel)}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    {t(\"alert.cancel\")}\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    \r\n                </Grid> \r\n                \r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px',\r\n        borderRadius: '10px',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '18px',\r\n        padding: '5px 10px',\r\n        height: 'fit-content'\r\n    },\r\n    closeBtn: {\r\n        fontSize: '20px',\r\n        height: '40px',\r\n        width: '40px'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        borderRadius: '25px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    instructions: {\r\n        width: 'auto',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '12px',\r\n        margin: '0px 10px'\r\n    },\r\n    menu: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(10px)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        marginTop: '55px',\r\n        marginRight: '7px'\r\n\r\n    },\r\n    menuitem: {\r\n        color: 'white'\r\n    },\r\n    textInput: {\r\n        margin: '20px 5px',\r\n        width: '300px',\r\n        '& input': {\r\n            color: 'white',\r\n            paddingLeft: '20px',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        }    \r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlockView.js",["488","489","490","491","492","493","494","495","496","497","498","499"],"C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\context\\FaultsContext.js",["500"],"import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const FaultsContext = createContext();\r\n\r\nexport const FaultsContextProvider = (props) => {\r\n    const [ faults, setFaults ] = useState([]);\r\n\r\n    return (\r\n        <FaultsContext.Provider value={{ faults, setFaults }}>\r\n            { props.children }\r\n        </FaultsContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\Niv Mimran\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlock.js",["501"],{"ruleId":"502","replacedBy":"503"},{"ruleId":"504","replacedBy":"505"},{"ruleId":"506","severity":1,"message":"507","line":1,"column":42,"nodeType":"508","messageId":"509","endLine":1,"endColumn":51},{"ruleId":"506","severity":1,"message":"510","line":1,"column":17,"nodeType":"508","messageId":"509","endLine":1,"endColumn":25},{"ruleId":"511","severity":1,"message":"512","line":12,"column":27,"nodeType":"513","messageId":"514","endLine":12,"endColumn":29},{"ruleId":"506","severity":1,"message":"515","line":15,"column":11,"nodeType":"508","messageId":"509","endLine":15,"endColumn":17},{"ruleId":"516","severity":1,"message":"517","line":33,"column":8,"nodeType":"518","endLine":33,"endColumn":10,"suggestions":"519"},{"ruleId":"516","severity":1,"message":"517","line":34,"column":8,"nodeType":"518","endLine":34,"endColumn":10,"suggestions":"520"},{"ruleId":"506","severity":1,"message":"521","line":19,"column":16,"nodeType":"508","messageId":"509","endLine":19,"endColumn":20},{"ruleId":"506","severity":1,"message":"521","line":14,"column":16,"nodeType":"508","messageId":"509","endLine":14,"endColumn":20},{"ruleId":"506","severity":1,"message":"522","line":3,"column":21,"nodeType":"508","messageId":"509","endLine":3,"endColumn":32},{"ruleId":"506","severity":1,"message":"521","line":15,"column":16,"nodeType":"508","messageId":"509","endLine":15,"endColumn":20},{"ruleId":"516","severity":1,"message":"523","line":38,"column":8,"nodeType":"518","endLine":38,"endColumn":19,"suggestions":"524"},{"ruleId":"525","severity":1,"message":"526","line":95,"column":41,"nodeType":"527","messageId":"514","endLine":95,"endColumn":43},{"ruleId":"506","severity":1,"message":"507","line":1,"column":17,"nodeType":"508","messageId":"509","endLine":1,"endColumn":26},{"ruleId":"506","severity":1,"message":"528","line":2,"column":108,"nodeType":"508","messageId":"509","endLine":2,"endColumn":116},{"ruleId":"506","severity":1,"message":"529","line":2,"column":118,"nodeType":"508","messageId":"509","endLine":2,"endColumn":123},{"ruleId":"506","severity":1,"message":"530","line":17,"column":10,"nodeType":"508","messageId":"509","endLine":17,"endColumn":21},{"ruleId":"506","severity":1,"message":"521","line":25,"column":16,"nodeType":"508","messageId":"509","endLine":25,"endColumn":20},{"ruleId":"531","severity":1,"message":"532","line":207,"column":9,"nodeType":"533","messageId":"514","endLine":207,"endColumn":19},{"ruleId":"506","severity":1,"message":"534","line":3,"column":42,"nodeType":"508","messageId":"509","endLine":3,"endColumn":48},{"ruleId":"506","severity":1,"message":"535","line":9,"column":13,"nodeType":"508","messageId":"509","endLine":9,"endColumn":17},{"ruleId":"506","severity":1,"message":"536","line":4,"column":8,"nodeType":"508","messageId":"509","endLine":4,"endColumn":25},{"ruleId":"506","severity":1,"message":"537","line":9,"column":10,"nodeType":"508","messageId":"509","endLine":9,"endColumn":29},{"ruleId":"506","severity":1,"message":"521","line":43,"column":16,"nodeType":"508","messageId":"509","endLine":43,"endColumn":20},{"ruleId":"506","severity":1,"message":"538","line":5,"column":8,"nodeType":"508","messageId":"509","endLine":5,"endColumn":41},{"ruleId":"506","severity":1,"message":"521","line":12,"column":16,"nodeType":"508","messageId":"509","endLine":12,"endColumn":20},{"ruleId":"506","severity":1,"message":"521","line":19,"column":16,"nodeType":"508","messageId":"509","endLine":19,"endColumn":20},{"ruleId":"516","severity":1,"message":"539","line":33,"column":8,"nodeType":"518","endLine":33,"endColumn":16,"suggestions":"540"},{"ruleId":"506","severity":1,"message":"507","line":1,"column":42,"nodeType":"508","messageId":"509","endLine":1,"endColumn":51},{"ruleId":"541","severity":1,"message":"542","line":71,"column":28,"nodeType":"543","messageId":"544","endLine":71,"endColumn":29,"suggestions":"545"},{"ruleId":"506","severity":1,"message":"546","line":3,"column":43,"nodeType":"508","messageId":"509","endLine":3,"endColumn":62},{"ruleId":"506","severity":1,"message":"547","line":4,"column":50,"nodeType":"508","messageId":"509","endLine":4,"endColumn":54},{"ruleId":"516","severity":1,"message":"548","line":22,"column":8,"nodeType":"518","endLine":22,"endColumn":20,"suggestions":"549"},{"ruleId":"506","severity":1,"message":"550","line":4,"column":25,"nodeType":"508","messageId":"509","endLine":4,"endColumn":43},{"ruleId":"516","severity":1,"message":"551","line":25,"column":8,"nodeType":"518","endLine":25,"endColumn":10,"suggestions":"552"},{"ruleId":"516","severity":1,"message":"553","line":41,"column":8,"nodeType":"518","endLine":41,"endColumn":15,"suggestions":"554"},{"ruleId":"506","severity":1,"message":"547","line":2,"column":22,"nodeType":"508","messageId":"509","endLine":2,"endColumn":26},{"ruleId":"506","severity":1,"message":"555","line":2,"column":28,"nodeType":"508","messageId":"509","endLine":2,"endColumn":45},{"ruleId":"506","severity":1,"message":"556","line":2,"column":47,"nodeType":"508","messageId":"509","endLine":2,"endColumn":58},{"ruleId":"506","severity":1,"message":"557","line":2,"column":60,"nodeType":"508","messageId":"509","endLine":2,"endColumn":73},{"ruleId":"506","severity":1,"message":"550","line":4,"column":25,"nodeType":"508","messageId":"509","endLine":4,"endColumn":43},{"ruleId":"506","severity":1,"message":"558","line":7,"column":8,"nodeType":"508","messageId":"509","endLine":7,"endColumn":12},{"ruleId":"516","severity":1,"message":"559","line":32,"column":8,"nodeType":"518","endLine":32,"endColumn":10,"suggestions":"560"},{"ruleId":"516","severity":1,"message":"553","line":50,"column":8,"nodeType":"518","endLine":50,"endColumn":16,"suggestions":"561"},{"ruleId":"506","severity":1,"message":"562","line":2,"column":8,"nodeType":"508","messageId":"509","endLine":2,"endColumn":15},{"ruleId":"506","severity":1,"message":"534","line":2,"column":10,"nodeType":"508","messageId":"509","endLine":2,"endColumn":16},{"ruleId":"506","severity":1,"message":"563","line":2,"column":52,"nodeType":"508","messageId":"509","endLine":2,"endColumn":57},{"ruleId":"506","severity":1,"message":"564","line":12,"column":10,"nodeType":"508","messageId":"509","endLine":12,"endColumn":22},{"ruleId":"506","severity":1,"message":"515","line":19,"column":11,"nodeType":"508","messageId":"509","endLine":19,"endColumn":17},{"ruleId":"506","severity":1,"message":"521","line":20,"column":16,"nodeType":"508","messageId":"509","endLine":20,"endColumn":20},{"ruleId":"516","severity":1,"message":"523","line":44,"column":8,"nodeType":"518","endLine":44,"endColumn":19,"suggestions":"565"},{"ruleId":"506","severity":1,"message":"521","line":37,"column":16,"nodeType":"508","messageId":"509","endLine":37,"endColumn":20},{"ruleId":"516","severity":1,"message":"566","line":60,"column":8,"nodeType":"518","endLine":60,"endColumn":25,"suggestions":"567"},{"ruleId":"506","severity":1,"message":"546","line":3,"column":43,"nodeType":"508","messageId":"509","endLine":3,"endColumn":62},{"ruleId":"506","severity":1,"message":"550","line":3,"column":64,"nodeType":"508","messageId":"509","endLine":3,"endColumn":82},{"ruleId":"506","severity":1,"message":"547","line":4,"column":50,"nodeType":"508","messageId":"509","endLine":4,"endColumn":54},{"ruleId":"516","severity":1,"message":"568","line":30,"column":8,"nodeType":"518","endLine":30,"endColumn":20,"suggestions":"569"},{"ruleId":"516","severity":1,"message":"570","line":45,"column":8,"nodeType":"518","endLine":45,"endColumn":15,"suggestions":"571"},{"ruleId":"525","severity":1,"message":"526","line":81,"column":42,"nodeType":"527","messageId":"514","endLine":81,"endColumn":44},{"ruleId":"506","severity":1,"message":"528","line":2,"column":10,"nodeType":"508","messageId":"509","endLine":2,"endColumn":18},{"ruleId":"506","severity":1,"message":"529","line":2,"column":50,"nodeType":"508","messageId":"509","endLine":2,"endColumn":55},{"ruleId":"506","severity":1,"message":"521","line":17,"column":16,"nodeType":"508","messageId":"509","endLine":17,"endColumn":20},{"ruleId":"506","severity":1,"message":"521","line":15,"column":16,"nodeType":"508","messageId":"509","endLine":15,"endColumn":20},{"ruleId":"506","severity":1,"message":"515","line":16,"column":11,"nodeType":"508","messageId":"509","endLine":16,"endColumn":17},{"ruleId":"506","severity":1,"message":"515","line":15,"column":11,"nodeType":"508","messageId":"509","endLine":15,"endColumn":17},{"ruleId":"506","severity":1,"message":"521","line":16,"column":16,"nodeType":"508","messageId":"509","endLine":16,"endColumn":20},{"ruleId":"516","severity":1,"message":"572","line":26,"column":8,"nodeType":"518","endLine":26,"endColumn":10,"suggestions":"573"},{"ruleId":"506","severity":1,"message":"521","line":9,"column":16,"nodeType":"508","messageId":"509","endLine":9,"endColumn":20},{"ruleId":"506","severity":1,"message":"507","line":1,"column":17,"nodeType":"508","messageId":"509","endLine":1,"endColumn":26},{"ruleId":"506","severity":1,"message":"510","line":1,"column":28,"nodeType":"508","messageId":"509","endLine":1,"endColumn":36},{"ruleId":"506","severity":1,"message":"563","line":2,"column":34,"nodeType":"508","messageId":"509","endLine":2,"endColumn":39},{"ruleId":"506","severity":1,"message":"521","line":16,"column":16,"nodeType":"508","messageId":"509","endLine":16,"endColumn":20},{"ruleId":"506","severity":1,"message":"521","line":20,"column":16,"nodeType":"508","messageId":"509","endLine":20,"endColumn":20},{"ruleId":"531","severity":1,"message":"574","line":212,"column":9,"nodeType":"533","messageId":"514","endLine":212,"endColumn":16},{"ruleId":"506","severity":1,"message":"507","line":1,"column":17,"nodeType":"508","messageId":"509","endLine":1,"endColumn":26},{"ruleId":"506","severity":1,"message":"510","line":1,"column":28,"nodeType":"508","messageId":"509","endLine":1,"endColumn":36},{"ruleId":"506","severity":1,"message":"575","line":2,"column":28,"nodeType":"508","messageId":"509","endLine":2,"endColumn":42},{"ruleId":"506","severity":1,"message":"576","line":13,"column":11,"nodeType":"508","messageId":"509","endLine":13,"endColumn":18},{"ruleId":"506","severity":1,"message":"577","line":15,"column":11,"nodeType":"508","messageId":"509","endLine":15,"endColumn":16},{"ruleId":"506","severity":1,"message":"578","line":16,"column":11,"nodeType":"508","messageId":"509","endLine":16,"endColumn":18},{"ruleId":"506","severity":1,"message":"515","line":17,"column":11,"nodeType":"508","messageId":"509","endLine":17,"endColumn":17},{"ruleId":"506","severity":1,"message":"579","line":20,"column":19,"nodeType":"508","messageId":"509","endLine":20,"endColumn":22},{"ruleId":"506","severity":1,"message":"580","line":5,"column":10,"nodeType":"508","messageId":"509","endLine":5,"endColumn":16},{"ruleId":"506","severity":1,"message":"521","line":32,"column":16,"nodeType":"508","messageId":"509","endLine":32,"endColumn":20},{"ruleId":"516","severity":1,"message":"581","line":54,"column":8,"nodeType":"518","endLine":54,"endColumn":25,"suggestions":"582"},{"ruleId":"506","severity":1,"message":"583","line":1,"column":10,"nodeType":"508","messageId":"509","endLine":1,"endColumn":21},{"ruleId":"506","severity":1,"message":"584","line":5,"column":10,"nodeType":"508","messageId":"509","endLine":5,"endColumn":21},{"ruleId":"506","severity":1,"message":"585","line":6,"column":10,"nodeType":"508","messageId":"509","endLine":6,"endColumn":27},{"ruleId":"506","severity":1,"message":"575","line":2,"column":59,"nodeType":"508","messageId":"509","endLine":2,"endColumn":73},{"ruleId":"506","severity":1,"message":"586","line":6,"column":10,"nodeType":"508","messageId":"509","endLine":6,"endColumn":23},{"ruleId":"506","severity":1,"message":"576","line":12,"column":11,"nodeType":"508","messageId":"509","endLine":12,"endColumn":18},{"ruleId":"506","severity":1,"message":"577","line":14,"column":11,"nodeType":"508","messageId":"509","endLine":14,"endColumn":16},{"ruleId":"525","severity":1,"message":"587","line":41,"column":39,"nodeType":"527","messageId":"514","endLine":41,"endColumn":41},{"ruleId":"506","severity":1,"message":"534","line":2,"column":22,"nodeType":"508","messageId":"509","endLine":2,"endColumn":28},{"ruleId":"506","severity":1,"message":"515","line":12,"column":11,"nodeType":"508","messageId":"509","endLine":12,"endColumn":17},{"ruleId":"506","severity":1,"message":"588","line":13,"column":13,"nodeType":"508","messageId":"509","endLine":13,"endColumn":14},{"ruleId":"506","severity":1,"message":"521","line":13,"column":16,"nodeType":"508","messageId":"509","endLine":13,"endColumn":20},{"ruleId":"506","severity":1,"message":"521","line":15,"column":16,"nodeType":"508","messageId":"509","endLine":15,"endColumn":20},{"ruleId":"589","severity":1,"message":"590","line":28,"column":68,"nodeType":"591","endLine":28,"endColumn":92},{"ruleId":"506","severity":1,"message":"592","line":3,"column":10,"nodeType":"508","messageId":"509","endLine":3,"endColumn":20},{"ruleId":"506","severity":1,"message":"593","line":2,"column":43,"nodeType":"508","messageId":"509","endLine":2,"endColumn":47},{"ruleId":"506","severity":1,"message":"594","line":2,"column":49,"nodeType":"508","messageId":"509","endLine":2,"endColumn":57},{"ruleId":"506","severity":1,"message":"595","line":2,"column":59,"nodeType":"508","messageId":"509","endLine":2,"endColumn":69},{"ruleId":"506","severity":1,"message":"596","line":2,"column":71,"nodeType":"508","messageId":"509","endLine":2,"endColumn":78},{"ruleId":"506","severity":1,"message":"528","line":2,"column":96,"nodeType":"508","messageId":"509","endLine":2,"endColumn":104},{"ruleId":"506","severity":1,"message":"529","line":2,"column":106,"nodeType":"508","messageId":"509","endLine":2,"endColumn":111},{"ruleId":"506","severity":1,"message":"597","line":8,"column":10,"nodeType":"508","messageId":"509","endLine":8,"endColumn":30},{"ruleId":"506","severity":1,"message":"583","line":8,"column":32,"nodeType":"508","messageId":"509","endLine":8,"endColumn":43},{"ruleId":"506","severity":1,"message":"598","line":12,"column":10,"nodeType":"508","messageId":"509","endLine":12,"endColumn":22},{"ruleId":"506","severity":1,"message":"599","line":20,"column":10,"nodeType":"508","messageId":"509","endLine":20,"endColumn":36},{"ruleId":"506","severity":1,"message":"577","line":32,"column":11,"nodeType":"508","messageId":"509","endLine":32,"endColumn":16},{"ruleId":"506","severity":1,"message":"521","line":33,"column":16,"nodeType":"508","messageId":"509","endLine":33,"endColumn":20},{"ruleId":"506","severity":1,"message":"535","line":36,"column":13,"nodeType":"508","messageId":"509","endLine":36,"endColumn":17},{"ruleId":"506","severity":1,"message":"600","line":45,"column":13,"nodeType":"508","messageId":"509","endLine":45,"endColumn":21},{"ruleId":"506","severity":1,"message":"601","line":45,"column":23,"nodeType":"508","messageId":"509","endLine":45,"endColumn":34},{"ruleId":"516","severity":1,"message":"602","line":63,"column":8,"nodeType":"518","endLine":63,"endColumn":28,"suggestions":"603"},{"ruleId":"506","severity":1,"message":"604","line":2,"column":22,"nodeType":"508","messageId":"509","endLine":2,"endColumn":27},{"ruleId":"506","severity":1,"message":"605","line":15,"column":13,"nodeType":"508","messageId":"509","endLine":15,"endColumn":20},{"ruleId":"506","severity":1,"message":"606","line":16,"column":13,"nodeType":"508","messageId":"509","endLine":16,"endColumn":27},{"ruleId":"607","severity":1,"message":"608","line":115,"column":13,"nodeType":"609","endLine":115,"endColumn":58},{"ruleId":"506","severity":1,"message":"547","line":2,"column":22,"nodeType":"508","messageId":"509","endLine":2,"endColumn":26},{"ruleId":"506","severity":1,"message":"610","line":7,"column":8,"nodeType":"508","messageId":"509","endLine":7,"endColumn":27},{"ruleId":"506","severity":1,"message":"521","line":14,"column":16,"nodeType":"508","messageId":"509","endLine":14,"endColumn":20},{"ruleId":"506","severity":1,"message":"576","line":15,"column":11,"nodeType":"508","messageId":"509","endLine":15,"endColumn":18},{"ruleId":"506","severity":1,"message":"611","line":16,"column":11,"nodeType":"508","messageId":"509","endLine":16,"endColumn":19},{"ruleId":"506","severity":1,"message":"521","line":19,"column":16,"nodeType":"508","messageId":"509","endLine":19,"endColumn":20},{"ruleId":"506","severity":1,"message":"612","line":40,"column":23,"nodeType":"508","messageId":"509","endLine":40,"endColumn":26},{"ruleId":"506","severity":1,"message":"576","line":19,"column":11,"nodeType":"508","messageId":"509","endLine":19,"endColumn":18},{"ruleId":"506","severity":1,"message":"611","line":20,"column":11,"nodeType":"508","messageId":"509","endLine":20,"endColumn":19},{"ruleId":"506","severity":1,"message":"521","line":22,"column":16,"nodeType":"508","messageId":"509","endLine":22,"endColumn":20},{"ruleId":"506","severity":1,"message":"515","line":25,"column":11,"nodeType":"508","messageId":"509","endLine":25,"endColumn":17},{"ruleId":"525","severity":1,"message":"526","line":142,"column":44,"nodeType":"527","messageId":"514","endLine":142,"endColumn":46},{"ruleId":"506","severity":1,"message":"586","line":7,"column":10,"nodeType":"508","messageId":"509","endLine":7,"endColumn":23},{"ruleId":"506","severity":1,"message":"613","line":7,"column":25,"nodeType":"508","messageId":"509","endLine":7,"endColumn":41},{"ruleId":"506","severity":1,"message":"614","line":9,"column":10,"nodeType":"508","messageId":"509","endLine":9,"endColumn":22},{"ruleId":"506","severity":1,"message":"615","line":9,"column":35,"nodeType":"508","messageId":"509","endLine":9,"endColumn":55},{"ruleId":"506","severity":1,"message":"616","line":9,"column":57,"nodeType":"508","messageId":"509","endLine":9,"endColumn":74},{"ruleId":"506","severity":1,"message":"515","line":22,"column":11,"nodeType":"508","messageId":"509","endLine":22,"endColumn":17},{"ruleId":"506","severity":1,"message":"521","line":23,"column":16,"nodeType":"508","messageId":"509","endLine":23,"endColumn":20},{"ruleId":"516","severity":1,"message":"617","line":40,"column":8,"nodeType":"518","endLine":40,"endColumn":19,"suggestions":"618"},{"ruleId":"516","severity":1,"message":"539","line":51,"column":8,"nodeType":"518","endLine":51,"endColumn":18,"suggestions":"619"},{"ruleId":"506","severity":1,"message":"510","line":1,"column":17,"nodeType":"508","messageId":"509","endLine":1,"endColumn":25},{"ruleId":"506","severity":1,"message":"507","line":1,"column":39,"nodeType":"508","messageId":"509","endLine":1,"endColumn":48},{"ruleId":"506","severity":1,"message":"529","line":2,"column":37,"nodeType":"508","messageId":"509","endLine":2,"endColumn":42},{"ruleId":"506","severity":1,"message":"528","line":2,"column":44,"nodeType":"508","messageId":"509","endLine":2,"endColumn":52},{"ruleId":"506","severity":1,"message":"578","line":20,"column":11,"nodeType":"508","messageId":"509","endLine":20,"endColumn":18},{"ruleId":"506","severity":1,"message":"620","line":21,"column":13,"nodeType":"508","messageId":"509","endLine":21,"endColumn":17},{"ruleId":"506","severity":1,"message":"515","line":22,"column":11,"nodeType":"508","messageId":"509","endLine":22,"endColumn":17},{"ruleId":"506","severity":1,"message":"588","line":23,"column":13,"nodeType":"508","messageId":"509","endLine":23,"endColumn":14},{"ruleId":"506","severity":1,"message":"521","line":23,"column":16,"nodeType":"508","messageId":"509","endLine":23,"endColumn":20},{"ruleId":"506","severity":1,"message":"596","line":2,"column":38,"nodeType":"508","messageId":"509","endLine":2,"endColumn":45},{"ruleId":"506","severity":1,"message":"564","line":7,"column":10,"nodeType":"508","messageId":"509","endLine":7,"endColumn":22},{"ruleId":"506","severity":1,"message":"515","line":12,"column":11,"nodeType":"508","messageId":"509","endLine":12,"endColumn":17},{"ruleId":"506","severity":1,"message":"521","line":15,"column":16,"nodeType":"508","messageId":"509","endLine":15,"endColumn":20},{"ruleId":"506","severity":1,"message":"621","line":3,"column":127,"nodeType":"508","messageId":"509","endLine":3,"endColumn":132},{"ruleId":"506","severity":1,"message":"622","line":8,"column":10,"nodeType":"508","messageId":"509","endLine":8,"endColumn":18},{"ruleId":"506","severity":1,"message":"535","line":22,"column":13,"nodeType":"508","messageId":"509","endLine":22,"endColumn":17},{"ruleId":"506","severity":1,"message":"515","line":23,"column":11,"nodeType":"508","messageId":"509","endLine":23,"endColumn":17},{"ruleId":"506","severity":1,"message":"521","line":24,"column":16,"nodeType":"508","messageId":"509","endLine":24,"endColumn":20},{"ruleId":"506","severity":1,"message":"623","line":25,"column":19,"nodeType":"508","messageId":"509","endLine":25,"endColumn":26},{"ruleId":"531","severity":1,"message":"624","line":396,"column":53,"nodeType":"533","messageId":"514","endLine":396,"endColumn":60},{"ruleId":"531","severity":1,"message":"625","line":908,"column":9,"nodeType":"533","messageId":"514","endLine":908,"endColumn":15},{"ruleId":"506","severity":1,"message":"626","line":1,"column":8,"nodeType":"508","messageId":"509","endLine":1,"endColumn":16},{"ruleId":"506","severity":1,"message":"621","line":3,"column":127,"nodeType":"508","messageId":"509","endLine":3,"endColumn":132},{"ruleId":"506","severity":1,"message":"627","line":3,"column":142,"nodeType":"508","messageId":"509","endLine":3,"endColumn":152},{"ruleId":"506","severity":1,"message":"628","line":3,"column":154,"nodeType":"508","messageId":"509","endLine":3,"endColumn":170},{"ruleId":"506","severity":1,"message":"629","line":3,"column":172,"nodeType":"508","messageId":"509","endLine":3,"endColumn":177},{"ruleId":"506","severity":1,"message":"630","line":4,"column":10,"nodeType":"508","messageId":"509","endLine":4,"endColumn":20},{"ruleId":"506","severity":1,"message":"631","line":4,"column":22,"nodeType":"508","messageId":"509","endLine":4,"endColumn":45},{"ruleId":"506","severity":1,"message":"632","line":5,"column":8,"nodeType":"508","messageId":"509","endLine":5,"endColumn":20},{"ruleId":"506","severity":1,"message":"622","line":8,"column":10,"nodeType":"508","messageId":"509","endLine":8,"endColumn":18},{"ruleId":"506","severity":1,"message":"515","line":25,"column":11,"nodeType":"508","messageId":"509","endLine":25,"endColumn":17},{"ruleId":"506","severity":1,"message":"521","line":26,"column":16,"nodeType":"508","messageId":"509","endLine":26,"endColumn":20},{"ruleId":"506","severity":1,"message":"623","line":27,"column":19,"nodeType":"508","messageId":"509","endLine":27,"endColumn":26},{"ruleId":"516","severity":1,"message":"633","line":74,"column":8,"nodeType":"518","endLine":74,"endColumn":10,"suggestions":"634"},{"ruleId":"607","severity":1,"message":"608","line":454,"column":73,"nodeType":"609","endLine":454,"endColumn":125},{"ruleId":"531","severity":1,"message":"625","line":645,"column":9,"nodeType":"533","messageId":"514","endLine":645,"endColumn":15},{"ruleId":"506","severity":1,"message":"515","line":15,"column":11,"nodeType":"508","messageId":"509","endLine":15,"endColumn":17},{"ruleId":"506","severity":1,"message":"521","line":16,"column":16,"nodeType":"508","messageId":"509","endLine":16,"endColumn":20},{"ruleId":"516","severity":1,"message":"635","line":28,"column":8,"nodeType":"518","endLine":28,"endColumn":10,"suggestions":"636"},{"ruleId":"506","severity":1,"message":"623","line":18,"column":19,"nodeType":"508","messageId":"509","endLine":18,"endColumn":26},{"ruleId":"506","severity":1,"message":"515","line":19,"column":11,"nodeType":"508","messageId":"509","endLine":19,"endColumn":17},{"ruleId":"506","severity":1,"message":"521","line":20,"column":16,"nodeType":"508","messageId":"509","endLine":20,"endColumn":20},{"ruleId":"516","severity":1,"message":"637","line":60,"column":7,"nodeType":"518","endLine":60,"endColumn":9,"suggestions":"638"},{"ruleId":"506","severity":1,"message":"515","line":15,"column":11,"nodeType":"508","messageId":"509","endLine":15,"endColumn":17},{"ruleId":"506","severity":1,"message":"521","line":16,"column":16,"nodeType":"508","messageId":"509","endLine":16,"endColumn":20},{"ruleId":"516","severity":1,"message":"639","line":25,"column":8,"nodeType":"518","endLine":25,"endColumn":10,"suggestions":"640"},{"ruleId":"506","severity":1,"message":"521","line":17,"column":20,"nodeType":"508","messageId":"509","endLine":17,"endColumn":24},{"ruleId":"506","severity":1,"message":"515","line":15,"column":11,"nodeType":"508","messageId":"509","endLine":15,"endColumn":17},{"ruleId":"506","severity":1,"message":"521","line":16,"column":16,"nodeType":"508","messageId":"509","endLine":16,"endColumn":20},{"ruleId":"516","severity":1,"message":"641","line":29,"column":8,"nodeType":"518","endLine":29,"endColumn":10,"suggestions":"642"},{"ruleId":"506","severity":1,"message":"594","line":2,"column":49,"nodeType":"508","messageId":"509","endLine":2,"endColumn":57},{"ruleId":"506","severity":1,"message":"643","line":3,"column":10,"nodeType":"508","messageId":"509","endLine":3,"endColumn":23},{"ruleId":"506","severity":1,"message":"644","line":6,"column":10,"nodeType":"508","messageId":"509","endLine":6,"endColumn":19},{"ruleId":"506","severity":1,"message":"645","line":10,"column":10,"nodeType":"508","messageId":"509","endLine":10,"endColumn":14},{"ruleId":"506","severity":1,"message":"576","line":15,"column":11,"nodeType":"508","messageId":"509","endLine":15,"endColumn":18},{"ruleId":"506","severity":1,"message":"577","line":17,"column":11,"nodeType":"508","messageId":"509","endLine":17,"endColumn":16},{"ruleId":"506","severity":1,"message":"515","line":19,"column":11,"nodeType":"508","messageId":"509","endLine":19,"endColumn":17},{"ruleId":"506","severity":1,"message":"588","line":20,"column":13,"nodeType":"508","messageId":"509","endLine":20,"endColumn":14},{"ruleId":"506","severity":1,"message":"521","line":20,"column":16,"nodeType":"508","messageId":"509","endLine":20,"endColumn":20},{"ruleId":"506","severity":1,"message":"646","line":21,"column":13,"nodeType":"508","messageId":"509","endLine":21,"endColumn":22},{"ruleId":"506","severity":1,"message":"647","line":21,"column":24,"nodeType":"508","messageId":"509","endLine":21,"endColumn":36},{"ruleId":"506","severity":1,"message":"648","line":67,"column":7,"nodeType":"508","messageId":"509","endLine":67,"endColumn":16},{"ruleId":"506","severity":1,"message":"507","line":1,"column":42,"nodeType":"508","messageId":"509","endLine":1,"endColumn":51},{"ruleId":"506","severity":1,"message":"649","line":6,"column":8,"nodeType":"508","messageId":"509","endLine":6,"endColumn":23},"no-native-reassign",["650"],"no-negated-in-lhs",["651"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'downSm' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkUserAuthentication'. Either include it or remove the dependency array.","ArrayExpression",["652"],["653"],"'i18n' is assigned a value but never used.","'removeAsset' is defined but never used.","React Hook useEffect has a missing dependency: 'location.search'. Either include it or remove the dependency array.",["654"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Backdrop' is defined but never used.","'Modal' is defined but never used.","'UpdateOwner' is defined but never used.","no-dupe-keys","Duplicate key 'background'.","ObjectExpression","'Button' is defined but never used.","'auth' is assigned a value but never used.","'SearchRoundedIcon' is defined but never used.","'FilterByMultiSelect' is defined but never used.","'TransferWithinAStationRoundedIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'location.pathname', and 'location.search'. Either include them or remove the dependency array.",["655"],"no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["656","657"],"'queryParamsToObject' is defined but never used.","'Grid' is defined but never used.","React Hook useEffect has missing dependencies: 'filterField', 'handleSearch', and 'query'. Either include them or remove the dependency array.",["658"],"'specialStringPurge' is defined but never used.","React Hook useEffect has a missing dependency: 'optionsFunc'. Either include it or remove the dependency array. If 'optionsFunc' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["659"],"React Hook useEffect has missing dependencies: 'filterField', 'history', 'location.pathname', 'location.search', and 'query'. Either include them or remove the dependency array.",["660"],"'ClickAwayListener' is defined but never used.","'FormControl' is defined but never used.","'OutlinedInput' is defined but never used.","'clsx' is defined but never used.","React Hook useEffect has missing dependencies: 'filterField', 'optionsFunc', and 'query'. Either include them or remove the dependency array. If 'optionsFunc' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["661"],["662"],"'Backend' is defined but never used.","'Paper' is defined but never used.","'UpsertSystem' is defined but never used.",["663"],"React Hook useEffect has a missing dependency: 'query.asset'. Either include it or remove the dependency array.",["664"],"React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.",["665"],"React Hook useEffect has missing dependencies: 'filterField', 'history', 'location.pathname', and 'location.search'. Either include them or remove the dependency array.",["666"],"React Hook useEffect has a missing dependency: 'linkedUsers'. Either include it or remove the dependency array.",["667"],"Duplicate key 'padding'.","'LinearProgress' is defined but never used.","'history' is assigned a value but never used.","'query' is assigned a value but never used.","'classes' is assigned a value but never used.","'url' is assigned a value but never used.","'SortBy' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'location.pathname', and 'query.asset'. Either include them or remove the dependency array.",["668"],"'ImageSearch' is defined but never used.","'getFullName' is defined but never used.","'getSystemsByAsset' is defined but never used.","'addQueryParam' is defined but never used.","Expected '!==' and instead saw '!='.","'t' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'makeStyles' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'CheckBoxOutlineBlank' is defined but never used.","'ClearRounded' is defined but never used.","'updateSystemAdditionalData' is defined but never used.","'notExist' is assigned a value but never used.","'setNotExist' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fid' and 'history'. Either include them or remove the dependency array.",["669"],"'Slide' is defined but never used.","'slideIn' is assigned a value but never used.","'slideDirection' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'GroupAddRoundedIcon' is defined but never used.","'location' is assigned a value but never used.","'res' is assigned a value but never used.","'removeQueryParam' is defined but never used.","'applyFilters' is defined but never used.","'getFaultsQueryParams' is defined but never used.","'getMinifiedFaults' is defined but never used.","React Hook useEffect has missing dependencies: 'query' and 'setFaults'. Either include them or remove the dependency array.",["670"],["671"],"'lang' is assigned a value but never used.","'Input' is defined but never used.","'CheckBox' is defined but never used.","'setMode' is assigned a value but never used.","Duplicate key 'classes'.","Duplicate key 'margin'.","'heLocale' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Radio' is defined but never used.","'DatePicker' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'DateFnsUtils' is defined but never used.","React Hook useEffect has a missing dependency: 'faultId'. Either include it or remove the dependency array.",["672"],"React Hook useEffect has a missing dependency: 'currentOwner'. Either include it or remove the dependency array.",["673"],"React Hook useEffect has a missing dependency: 'assetId'. Either include it or remove the dependency array.",["674"],"React Hook useEffect has a missing dependency: 'followerList'. Either include it or remove the dependency array. If 'setUserList' needs the current value of 'followerList', you can also switch to useReducer instead of useState and read 'followerList' in the reducer.",["675"],"React Hook useEffect has a missing dependency: 'currentStatus'. Either include it or remove the dependency array.",["676"],"'FaultMinified' is defined but never used.","'FaultView' is defined but never used.","'Link' is defined but never used.","'faultView' is assigned a value but never used.","'setFaultView' is assigned a value but never used.","'ItemTypes' is assigned a value but never used.","'DoubleArrowIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"677","fix":"678"},{"desc":"677","fix":"679"},{"desc":"680","fix":"681"},{"desc":"682","fix":"683"},{"messageId":"684","fix":"685","desc":"686"},{"messageId":"687","fix":"688","desc":"689"},{"desc":"690","fix":"691"},{"desc":"692","fix":"693"},{"desc":"694","fix":"695"},{"desc":"696","fix":"697"},{"desc":"698","fix":"699"},{"desc":"680","fix":"700"},{"desc":"701","fix":"702"},{"desc":"703","fix":"704"},{"desc":"705","fix":"706"},{"desc":"707","fix":"708"},{"desc":"709","fix":"710"},{"desc":"711","fix":"712"},{"desc":"713","fix":"714"},{"desc":"715","fix":"716"},{"desc":"717","fix":"718"},{"desc":"719","fix":"720"},{"desc":"721","fix":"722"},{"desc":"723","fix":"724"},{"desc":"725","fix":"726"},"Update the dependencies array to be: [checkUserAuthentication]",{"range":"727","text":"728"},{"range":"729","text":"728"},"Update the dependencies array to be: [isLoading, location.search]",{"range":"730","text":"731"},"Update the dependencies array to be: [history, location.pathname, location.search, values]",{"range":"732","text":"733"},"removeEscape",{"range":"734","text":"735"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"736","text":"737"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [filterField, handleSearch, query, searchText]",{"range":"738","text":"739"},"Update the dependencies array to be: [optionsFunc]",{"range":"740","text":"741"},"Update the dependencies array to be: [filterField, history, location.pathname, location.search, query, value]",{"range":"742","text":"743"},"Update the dependencies array to be: [filterField, optionsFunc, query]",{"range":"744","text":"745"},"Update the dependencies array to be: [filterField, history, location.pathname, location.search, query, values]",{"range":"746","text":"747"},{"range":"748","text":"731"},"Update the dependencies array to be: [location.search, query.asset]",{"range":"749","text":"750"},"Update the dependencies array to be: [handleSearch, searchText]",{"range":"751","text":"752"},"Update the dependencies array to be: [filterField, history, location.pathname, location.search, value]",{"range":"753","text":"754"},"Update the dependencies array to be: [linkedUsers]",{"range":"755","text":"756"},"Update the dependencies array to be: [history, location.pathname, location.search, query.asset]",{"range":"757","text":"758"},"Update the dependencies array to be: [faultData, faultId, fid, history]",{"range":"759","text":"760"},"Update the dependencies array to be: [isLoading, query, setFaults]",{"range":"761","text":"762"},"Update the dependencies array to be: [history, location.pathname, location.search, viewType]",{"range":"763","text":"764"},"Update the dependencies array to be: [faultId]",{"range":"765","text":"766"},"Update the dependencies array to be: [currentOwner]",{"range":"767","text":"768"},"Update the dependencies array to be: [assetId]",{"range":"769","text":"770"},"Update the dependencies array to be: [followerList]",{"range":"771","text":"772"},"Update the dependencies array to be: [currentStatus]",{"range":"773","text":"774"},[1060,1062],"[checkUserAuthentication]",[1038,1040],[1323,1334],"[isLoading, location.search]",[1451,1459],"[history, location.pathname, location.search, values]",[2165,2166],"",[2165,2165],"\\",[1105,1117],"[filterField, handleSearch, query, searchText]",[1096,1098],"[optionsFunc]",[1571,1578],"[filterField, history, location.pathname, location.search, query, value]",[1442,1444],"[filterField, optionsFunc, query]",[1971,1979],"[filterField, history, location.pathname, location.search, query, values]",[1597,1608],[2096,2113],"[location.search, query.asset]",[1527,1539],"[handleSearch, searchText]",[1986,1993],"[filterField, history, location.pathname, location.search, value]",[1105,1107],"[linkedUsers]",[2378,2395],"[history, location.pathname, location.search, query.asset]",[2940,2960],"[faultData, faultId, fid, history]",[1634,1645],"[isLoading, query, setFaults]",[1948,1958],"[history, location.pathname, location.search, viewType]",[2979,2981],"[faultId]",[1167,1169],"[currentOwner]",[2137,2139],"[assetId]",[1092,1094],"[followerList]",[1238,1240],"[currentStatus]"]