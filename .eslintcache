[{"C:\\projects\\leev\\leev-fe\\src\\index.js":"1","C:\\projects\\leev\\leev-fe\\src\\App.js":"2","C:\\projects\\leev\\leev-fe\\src\\i18n.js":"3","C:\\projects\\leev\\leev-fe\\src\\context\\LanguageContext.js":"4","C:\\projects\\leev\\leev-fe\\src\\context\\FiltersContext.js":"5","C:\\projects\\leev\\leev-fe\\src\\context\\SnackbarContext.js":"6","C:\\projects\\leev\\leev-fe\\src\\themes\\theme.js":"7","C:\\projects\\leev\\leev-fe\\src\\components\\workspace\\ProtectedWorkspace.js":"8","C:\\projects\\leev\\leev-fe\\src\\components\\routes\\InitialRouter.js":"9","C:\\projects\\leev\\leev-fe\\src\\components\\workspace\\Workspace.js":"10","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Chatbot.js":"11","C:\\projects\\leev\\leev-fe\\src\\components\\user\\Login.js":"12","C:\\projects\\leev\\leev-fe\\src\\context\\FaultsContext.js":"13","C:\\projects\\leev\\leev-fe\\src\\context\\NotificationsContext.js":"14","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Messages.js":"15","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageInput.js":"16","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Scenrio.js":"17","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageImage.js":"18","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageSelector.js":"19","C:\\projects\\leev\\leev-fe\\src\\api\\userApi.js":"20","C:\\projects\\leev\\leev-fe\\src\\api\\assetsApi.js":"21","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\Controls.js":"22","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Settings.js":"23","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Assets.js":"24","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\Tasks.js":"25","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\Documents.js":"26","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\Faults.js":"27","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MapView.js":"28","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\Systems.js":"29","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Message.js":"30","C:\\projects\\leev\\leev-fe\\src\\api\\chatbotApi.js":"31","C:\\projects\\leev\\leev-fe\\src\\api\\genericApi.js":"32","C:\\projects\\leev\\leev-fe\\src\\api\\notificationsApi.js":"33","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Users.js":"34","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UserProfile.js":"35","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\SettingsMenu.js":"36","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CreateContainer.js":"37","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\AddMenu.js":"38","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Navbar.js":"39","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Notifications.js":"40","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\SideMenu.js":"41","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Asset.js":"42","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetsControls.js":"43","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AlertDialog.js":"44","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsControls.js":"45","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsHeader.js":"46","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\System.js":"47","C:\\projects\\leev\\leev-fe\\src\\api\\systemsApi.js":"48","C:\\projects\\leev\\leev-fe\\src\\api\\mapApi.js":"49","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\Mapbox.js":"50","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MarkerData.js":"51","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\Map.js":"52","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\UpsertDocument.js":"53","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MapControls.js":"54","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViews.js":"55","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\DocumentsControls.js":"56","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultView.js":"57","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\Document.js":"58","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\useQuery.js":"59","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\Can.js":"60","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\UpsertAsset.js":"61","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBoxSelect.js":"62","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterBySelect.js":"63","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateOwner.js":"64","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\UpsertSystem.js":"65","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemAdditionalDetails.js":"66","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskMinified.js":"67","C:\\projects\\leev\\leev-fe\\src\\api\\documentsApi.js":"68","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultsControls.js":"69","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\UpsertFault.js":"70","C:\\projects\\leev\\leev-fe\\src\\components\\user\\UserItem.js":"71","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ItemLink.js":"72","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\DocumentControls.js":"73","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViewControls.js":"74","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultLink.js":"75","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UserList.js":"76","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateStatus.js":"77","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\StatusTag.js":"78","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CommentSection.js":"79","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\Carousel.js":"80","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AddRelatedUser.js":"81","C:\\projects\\leev\\leev-fe\\src\\api\\faultsApi.js":"82","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterByMultiSelect.js":"83","C:\\projects\\leev\\leev-fe\\src\\api\\tasksApi.js":"84","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlockView.js":"85","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultListView.js":"86","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\usePermissions.js":"87","C:\\projects\\leev\\leev-fe\\src\\api\\permissionsApi.js":"88","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\TimeActive.js":"89","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultMinified.js":"90","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemRelatedUsers.js":"91","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemControls.js":"92","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlock.js":"93","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemName.js":"94","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBox.js":"95","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SortBy.js":"96","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetControls.js":"97","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\AddRelatedUser.js":"98","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Notification.js":"99","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UpsertUser.js":"100","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\UpsertTask.js":"101","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskSteps.js":"102","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskView.js":"103","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TasksList.js":"104","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskViewControls.js":"105","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TasksControls.js":"106","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\scheduler\\Scheduler.js":"107","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\scheduler\\ScheduleItem.js":"108","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\datepickers\\CustomeDatePicker.js":"109","C:\\projects\\leev\\leev-fe\\src\\context\\authContext.js":"110","C:\\projects\\leev\\leev-fe\\src\\context\\AuthContext.js":"111","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageBoolean.js":"112","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\RepeatableTasks.js":"113","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\Calender.js":"114","C:\\projects\\leev\\leev-fe\\src\\api\\calenderApi.js":"115","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\CalenderHeaderRow.js":"116","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\CalenderRow.js":"117"},{"size":785,"mtime":1621060516233,"results":"118","hashOfConfig":"119"},{"size":1797,"mtime":1621205687434,"results":"120","hashOfConfig":"119"},{"size":699,"mtime":1619827455315,"results":"121","hashOfConfig":"119"},{"size":990,"mtime":1621205199811,"results":"122","hashOfConfig":"119"},{"size":463,"mtime":1619827455314,"results":"123","hashOfConfig":"119"},{"size":390,"mtime":1619827455315,"results":"124","hashOfConfig":"119"},{"size":2180,"mtime":1621205565804,"results":"125","hashOfConfig":"119"},{"size":1515,"mtime":1620606805126,"results":"126","hashOfConfig":"119"},{"size":1448,"mtime":1619827455312,"results":"127","hashOfConfig":"119"},{"size":3763,"mtime":1621191757386,"results":"128","hashOfConfig":"119"},{"size":9321,"mtime":1620792420906,"results":"129","hashOfConfig":"119"},{"size":10632,"mtime":1621228787655,"results":"130","hashOfConfig":"119"},{"size":372,"mtime":1619827455314,"results":"131","hashOfConfig":"119"},{"size":428,"mtime":1619827455314,"results":"132","hashOfConfig":"119"},{"size":2568,"mtime":1620781982367,"results":"133","hashOfConfig":"119"},{"size":2200,"mtime":1620599160972,"results":"134","hashOfConfig":"119"},{"size":5416,"mtime":1621228820143,"results":"135","hashOfConfig":"119"},{"size":3427,"mtime":1619928487361,"results":"136","hashOfConfig":"119"},{"size":3530,"mtime":1619921146212,"results":"137","hashOfConfig":"119"},{"size":5506,"mtime":1621228819106,"results":"138","hashOfConfig":"119"},{"size":5556,"mtime":1620149144029,"results":"139","hashOfConfig":"119"},{"size":3495,"mtime":1620509520279,"results":"140","hashOfConfig":"119"},{"size":4735,"mtime":1619827455288,"results":"141","hashOfConfig":"119"},{"size":3847,"mtime":1621228811366,"results":"142","hashOfConfig":"119"},{"size":691,"mtime":1620493570053,"results":"143","hashOfConfig":"119"},{"size":3773,"mtime":1621228810299,"results":"144","hashOfConfig":"119"},{"size":669,"mtime":1619827455296,"results":"145","hashOfConfig":"119"},{"size":2611,"mtime":1621223937339,"results":"146","hashOfConfig":"119"},{"size":3496,"mtime":1621228806902,"results":"147","hashOfConfig":"119"},{"size":1496,"mtime":1620783042284,"results":"148","hashOfConfig":"119"},{"size":898,"mtime":1619993090833,"results":"149","hashOfConfig":"119"},{"size":6265,"mtime":1621228816133,"results":"150","hashOfConfig":"119"},{"size":2463,"mtime":1621228817970,"results":"151","hashOfConfig":"119"},{"size":7424,"mtime":1621228812517,"results":"152","hashOfConfig":"119"},{"size":4637,"mtime":1621211690680,"results":"153","hashOfConfig":"119"},{"size":3342,"mtime":1619827455288,"results":"154","hashOfConfig":"119"},{"size":4631,"mtime":1621228796854,"results":"155","hashOfConfig":"119"},{"size":6037,"mtime":1620573983896,"results":"156","hashOfConfig":"119"},{"size":6126,"mtime":1620509553626,"results":"157","hashOfConfig":"119"},{"size":4351,"mtime":1621034433914,"results":"158","hashOfConfig":"119"},{"size":8299,"mtime":1621191750672,"results":"159","hashOfConfig":"119"},{"size":14512,"mtime":1621192209932,"results":"160","hashOfConfig":"119"},{"size":4604,"mtime":1619827455291,"results":"161","hashOfConfig":"119"},{"size":3226,"mtime":1619827455305,"results":"162","hashOfConfig":"119"},{"size":5612,"mtime":1619827455301,"results":"163","hashOfConfig":"119"},{"size":3344,"mtime":1619827455301,"results":"164","hashOfConfig":"119"},{"size":6980,"mtime":1621228806235,"results":"165","hashOfConfig":"119"},{"size":7608,"mtime":1619827455201,"results":"166","hashOfConfig":"119"},{"size":1074,"mtime":1621228816911,"results":"167","hashOfConfig":"119"},{"size":5472,"mtime":1621228805448,"results":"168","hashOfConfig":"119"},{"size":8838,"mtime":1619827455298,"results":"169","hashOfConfig":"119"},{"size":5489,"mtime":1621228804740,"results":"170","hashOfConfig":"119"},{"size":23625,"mtime":1619827455293,"results":"171","hashOfConfig":"119"},{"size":5371,"mtime":1619827455297,"results":"172","hashOfConfig":"119"},{"size":3391,"mtime":1619827455295,"results":"173","hashOfConfig":"119"},{"size":5952,"mtime":1619827455293,"results":"174","hashOfConfig":"119"},{"size":11978,"mtime":1621180555014,"results":"175","hashOfConfig":"119"},{"size":6162,"mtime":1621180404140,"results":"176","hashOfConfig":"119"},{"size":164,"mtime":1619827455309,"results":"177","hashOfConfig":"119"},{"size":517,"mtime":1620493358077,"results":"178","hashOfConfig":"119"},{"size":22289,"mtime":1621228809492,"results":"179","hashOfConfig":"119"},{"size":8035,"mtime":1621211508912,"results":"180","hashOfConfig":"119"},{"size":6908,"mtime":1621211598818,"results":"181","hashOfConfig":"119"},{"size":7840,"mtime":1619827455308,"results":"182","hashOfConfig":"119"},{"size":52431,"mtime":1621228803701,"results":"183","hashOfConfig":"119"},{"size":16098,"mtime":1619827455299,"results":"184","hashOfConfig":"119"},{"size":5436,"mtime":1620507322621,"results":"185","hashOfConfig":"119"},{"size":4328,"mtime":1621228822251,"results":"186","hashOfConfig":"119"},{"size":6541,"mtime":1619827455296,"results":"187","hashOfConfig":"119"},{"size":33878,"mtime":1621228807511,"results":"188","hashOfConfig":"119"},{"size":3292,"mtime":1619827455312,"results":"189","hashOfConfig":"119"},{"size":398,"mtime":1619827455307,"results":"190","hashOfConfig":"119"},{"size":3869,"mtime":1621179297899,"results":"191","hashOfConfig":"119"},{"size":2665,"mtime":1621228726170,"results":"192","hashOfConfig":"119"},{"size":531,"mtime":1619827455294,"results":"193","hashOfConfig":"119"},{"size":4999,"mtime":1621228792092,"results":"194","hashOfConfig":"119"},{"size":7900,"mtime":1621228795530,"results":"195","hashOfConfig":"119"},{"size":2282,"mtime":1619827455308,"results":"196","hashOfConfig":"119"},{"size":9161,"mtime":1619827455306,"results":"197","hashOfConfig":"119"},{"size":7651,"mtime":1619827455305,"results":"198","hashOfConfig":"119"},{"size":7792,"mtime":1619827455304,"results":"199","hashOfConfig":"119"},{"size":8674,"mtime":1619992230845,"results":"200","hashOfConfig":"119"},{"size":8723,"mtime":1621211386867,"results":"201","hashOfConfig":"119"},{"size":8171,"mtime":1621056128825,"results":"202","hashOfConfig":"119"},{"size":2648,"mtime":1619827455294,"results":"203","hashOfConfig":"119"},{"size":3651,"mtime":1619827455294,"results":"204","hashOfConfig":"119"},{"size":694,"mtime":1619827455309,"results":"205","hashOfConfig":"119"},{"size":1087,"mtime":1619827455201,"results":"206","hashOfConfig":"119"},{"size":1011,"mtime":1619827455308,"results":"207","hashOfConfig":"119"},{"size":2598,"mtime":1619827455294,"results":"208","hashOfConfig":"119"},{"size":6428,"mtime":1619827455300,"results":"209","hashOfConfig":"119"},{"size":5458,"mtime":1621192851861,"results":"210","hashOfConfig":"119"},{"size":940,"mtime":1619827455293,"results":"211","hashOfConfig":"119"},{"size":5213,"mtime":1619827455300,"results":"212","hashOfConfig":"119"},{"size":3806,"mtime":1621211496662,"results":"213","hashOfConfig":"119"},{"size":5224,"mtime":1621209954782,"results":"214","hashOfConfig":"119"},{"size":1659,"mtime":1619827455290,"results":"215","hashOfConfig":"119"},{"size":7683,"mtime":1619827455299,"results":"216","hashOfConfig":"119"},{"size":5232,"mtime":1621006829713,"results":"217","hashOfConfig":"119"},{"size":19288,"mtime":1621228820767,"results":"218","hashOfConfig":"119"},{"size":41415,"mtime":1621228797943,"results":"219","hashOfConfig":"119"},{"size":4909,"mtime":1619827455302,"results":"220","hashOfConfig":"119"},{"size":15632,"mtime":1621228801422,"results":"221","hashOfConfig":"119"},{"size":2111,"mtime":1620507367334,"results":"222","hashOfConfig":"119"},{"size":5844,"mtime":1621228799049,"results":"223","hashOfConfig":"119"},{"size":5386,"mtime":1619827455303,"results":"224","hashOfConfig":"119"},{"size":7672,"mtime":1621228789953,"results":"225","hashOfConfig":"119"},{"size":5699,"mtime":1621228794649,"results":"226","hashOfConfig":"119"},{"size":1234,"mtime":1621223037992,"results":"227","hashOfConfig":"119"},{"size":457,"mtime":1619828447544,"results":"228","hashOfConfig":"119"},{"size":457,"mtime":1619828447544,"results":"229","hashOfConfig":"119"},{"size":1625,"mtime":1619984310424,"results":"230","hashOfConfig":"119"},{"size":700,"mtime":1620426895691,"results":"231","hashOfConfig":"119"},{"size":2029,"mtime":1621210462645,"results":"232","hashOfConfig":"119"},{"size":2700,"mtime":1621058571627,"results":"233","hashOfConfig":"119"},{"size":1084,"mtime":1621062087694,"results":"234","hashOfConfig":"119"},{"size":1145,"mtime":1621062373122,"results":"235","hashOfConfig":"119"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"239"},"1ryrvlx",{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"239"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"239"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"239"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"239"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"239"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"239"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"239"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"239"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"239"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"239"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"239"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"239"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"239"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"239"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"239"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"239"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"239"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"239"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"239"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"239"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"239"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"239"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"358","messages":"359","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"239"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"239"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"366","messages":"367","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"239"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"239"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"239"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"239"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"239"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"239"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"239"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"239"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"239"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"239"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"402","messages":"403","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"239"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"239"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"239"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"239"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"428","messages":"429","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"430","messages":"431","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"239"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"239"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"239"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"239"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"239"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"239"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"239"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"239"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"239"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"239"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"239"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"239"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"239"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"239"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"239"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"239"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"239"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"239"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"239"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"495","messages":"496","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"497","messages":"498","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"239"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"502","messages":"503","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"239"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"507","messages":"508","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"239"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"512","messages":"513","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"514","messages":"515","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"239"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"239"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"239"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"239"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"239"},"C:\\projects\\leev\\leev-fe\\src\\index.js",["537"],"import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { AuthContextProvider } from './context/AuthContext'\r\nimport './i18n';\r\nimport { LanguageContextProvider } from './context/LanguageContext';\r\n\r\nObject.defineProperty(Array.prototype, \"chunk\", {\r\n\tvalue: function (chunkSize) {\r\n\t\tvar R = [];\r\n\t\tfor (var i = 0; i < this.length; i += chunkSize)\r\n\t\t\tR.push(this.slice(i, i + chunkSize));\r\n\t\treturn R;\r\n\t},\r\n});\r\n\r\nReactDOM.render(\r\n    <LanguageContextProvider>\r\n      <AuthContextProvider>\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <App />\r\n        </Suspense>   \r\n      </AuthContextProvider>\r\n    </LanguageContextProvider>\r\n      \r\n ,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n",["538","539"],"C:\\projects\\leev\\leev-fe\\src\\App.js",[],"C:\\projects\\leev\\leev-fe\\src\\i18n.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\LanguageContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\FiltersContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\SnackbarContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\themes\\theme.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\workspace\\ProtectedWorkspace.js",["540"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authenticate, handleLS } from '../../api/userApi';\r\n\r\nexport const ProtectedWorkspace = ({ children, isAuthenticated,...rest}) => {\r\n    \r\n    const { auth, setAuth } = useContext(AuthContext);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const checkUserAuthentication = async () => {\r\n            let token = await handleLS('wb_token', 'get');\r\n            if (!token) {\r\n                setIsLoading(false);\r\n                return;\r\n            };\r\n            let res = await authenticate(token);\r\n            if (res.auth) {\r\n               setAuth({\r\n                    isAuth: res.auth,\r\n                    user: res.user,\r\n                    token: res.token.token,\r\n                    refreshToken: res.token.refreshToken\r\n                });\r\n                  \r\n            }\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        checkUserAuthentication();\r\n    }, []);\r\n\r\n    return (\r\n        <Route {...rest}\r\n          render={({ location }) => isLoading ? \r\n            'loading' : \r\n            auth.isAuth\r\n            ? children\r\n            :   <Redirect\r\n                    to={{\r\n                    pathname: \"/login\",\r\n                    state: { from: location }\r\n                }}/>\r\n            }      \r\n        />\r\n      );\r\n}\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\routes\\InitialRouter.js",["541"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authenticate, handleLS } from '../../api/userApi';\r\n\r\nexport const InitialRouter = ({...rest}) => {\r\n    \r\n    const { auth, setAuth } = useContext(AuthContext);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    const checkUserAuthentication = async () => {\r\n        let token = await handleLS('wb_token', 'get');\r\n        if (!token) {\r\n            setIsLoading(false);\r\n            return;\r\n        };\r\n        let res = await authenticate(token);\r\n        \r\n        if (res.auth) {\r\n           setAuth({\r\n                isAuth: res.auth,\r\n                user: res.user,\r\n                token: res.token.token,\r\n                refreshToken: res.token.refreshToken\r\n            });\r\n              \r\n        }\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n    useEffect(() => {\r\n        checkUserAuthentication();\r\n    }, []);\r\n\r\n    return (\r\n        <Route {...rest}\r\n          render={() => isLoading ? \r\n            'loading' : \r\n            auth.isAuth\r\n            ? <Redirect\r\n                to={{\r\n                    pathname: \"/workspace\"\r\n            }}/> \r\n            :   <Redirect\r\n                    to={{\r\n                    pathname: \"/login\"\r\n                }}/>\r\n            }      \r\n        />\r\n      );\r\n}\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\workspace\\Workspace.js",["542","543","544"],"import { Grid, makeStyles, Snackbar } from '@material-ui/core';\r\nimport React, { useContext } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport greyJpg from '../../assets/images/grey.jpg';\r\nimport { FaultsContextProvider } from '../../context/FaultsContext';\r\nimport { Controls } from '../controls/Controls';\r\nimport { Assets } from '../datapages/assets/Assets';\r\nimport { Documents } from '../datapages/documents/Documents';\r\nimport { Faults } from '../datapages/faults/Faults';\r\nimport { Systems } from '../datapages/systems/Systems';\r\nimport { Tasks } from '../datapages/tasks/Tasks';\r\nimport { NotificationsContextProvider } from '../../context/NotificationsContext';\r\nimport { MapView } from '../datapages/map/MapView';\r\nimport { SnackbarContext } from '../../context/SnackbarContext';\r\nimport { useTranslation } from 'react-i18next';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Settings } from '../controls/settings/Settings';\r\nimport { RepeatableTasks } from '../datapages/tasks/RepeatableTasks';\r\nimport { Calender } from '../datapages/calender/Calender';\r\n\r\nexport const Workspace = ({}) => {\r\n\tconst classes = useStyles();\r\n\tconst { snackbar, setSnackbar } = useContext(SnackbarContext);\r\n\tconst { t } = useTranslation();\r\n\t\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<FaultsContextProvider>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\tclassName={classes.mainContainer}\r\n\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\talignItems=\"flex-start\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<NotificationsContextProvider>\r\n\t\t\t\t\t\t<Controls />\r\n\t\t\t\t\t</NotificationsContextProvider>\r\n\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tmd={12}\r\n\t\t\t\t\t\tlg={12}\r\n\t\t\t\t\t\txl={12}\r\n\t\t\t\t\t\tclassName={classes.mainData}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route path={'/workspace/assets'}>\r\n\t\t\t\t\t\t\t\t<Assets />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path={'/workspace/systems'}>\r\n\t\t\t\t\t\t\t\t<Systems />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path={'/workspace/faults'}>\r\n\t\t\t\t\t\t\t\t<Faults />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path={'/workspace/tasks'}>\r\n\t\t\t\t\t\t\t\t<Tasks />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path={'/workspace/repeatableTasks'}>\r\n\t\t\t\t\t\t\t\t<RepeatableTasks />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path={'/workspace/documents'}>\r\n\t\t\t\t\t\t\t\t<Documents />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path={'/workspace/map'}>\r\n\t\t\t\t\t\t\t\t<MapView />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path={'/workspace/calender'}>\r\n\t\t\t\t\t\t\t\t<Calender />\r\n\t\t\t\t\t\t\t</Route>\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{Boolean(snackbar) && (\r\n\t\t\t\t\t<Snackbar\r\n\t\t\t\t\t\topen={Boolean(snackbar)}\r\n\t\t\t\t\t\tautoHideDuration={6000}\r\n\t\t\t\t\t\tonClose={() => setSnackbar(null)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MuiAlert\r\n\t\t\t\t\t\t\tonClose={() => setSnackbar(null)}\r\n\t\t\t\t\t\t\tseverity={snackbar.severity}\r\n\t\t\t\t\t\t\televation={9} \r\n\t\t\t\t\t\t\tvariant={\"filled\"}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{snackbar.text}\r\n\t\t\t\t\t\t</MuiAlert>\r\n\t\t\t\t\t</Snackbar>\r\n\t\t\t\t)}\r\n\t\t\t</FaultsContextProvider>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\theight: '100vh',\r\n\t\tbackground: `url(${greyJpg})`,\r\n\t\tzIndex: 2,\r\n\t\tbackgroundRepeat: 'no-reaper',\r\n\t\tbackgroundSize: 'cover',\r\n\t\toverflowY: 'overlay',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\t'&::-webkit-scrollbar': {\r\n\t\t\t\tdisplay: 'none',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\r\n\tmainData: {\r\n\t\tminHeight: 'calc(100vh - 64px)',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tbackdropFilter: 'blur(22px)',\r\n\t\tboxShadow: 'rgba(0,0,0,0.4) 0px 0px 3px 2px',\r\n\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tborder: 'none',\r\n\t\t\tborderRadius: 0,\r\n\t\t\tmargin: 0,\r\n\t\t\tpadding: 0,\r\n\t\t},\r\n\t},\r\n\t'@global': {\r\n\t\t'*::-webkit-scrollbar': {\r\n\t\t\twidth: '0.4em',\r\n\t\t},\r\n\t\t'*::-webkit-scrollbar-track': {\r\n\t\t\t'-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n\t\t},\r\n\t\t'*::-webkit-scrollbar-thumb': {\r\n\t\t\tbackgroundColor: 'rgba(0,0,0,.4)',\r\n\t\t\tborderRadius: '50px',\r\n\t\t},\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Chatbot.js",["545","546","547","548","549","550","551"],"import { Grid, makeStyles } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useParams } from 'react-router';\r\nimport { getAssetExternal, getFullAddress } from '../../api/assetsApi';\r\nimport { authenticate, handleLS } from '../../api/userApi';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { MessageImage } from './MessageImage';\r\nimport { MessageInput } from './MessageInput';\r\nimport { Messages } from './Messages';\r\nimport { MessageSelector } from './MessageSelector';\r\nimport { MessageBoolean } from './MessageBoolean';\r\nimport * as scenarios from './Scenrio';\r\n\r\nexport const Chatbot = () => {\r\n\r\n    const classes = useStyles();\r\n    const { auth, setAuth } = useContext(AuthContext);\r\n    const { t } = useTranslation();\r\n    const params = useParams();\r\n    const [ scenario, setScenario ] = useState(scenarios.openFault);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n    const [ scenarioStep, setScenarioStep ] = useState(null);\r\n    const [ messages, setMessages ] = useState([]);\r\n    const [ mainAsset, setMainAsset ] = useState(null);\r\n    const [ inputValue, setInputValue ] = useState({ text: '', value: '', type: '' });\r\n    const [ optionalValues, setOptionalValues ] = useState([]);\r\n    const [ vault, setVault ] = useState({});\r\n    const [ showInput, setShowInput ] = useState(null);\r\n    // const messageContainer = useRef();\r\n\r\n    useEffect(() => {\r\n        const checkUserAuthentication = async () => {\r\n            let token = await handleLS('wb_token', 'get');\r\n            if (!token) {\r\n                setIsLoading(false);\r\n                return;\r\n            };\r\n            let res = await authenticate(token);\r\n            if (res.auth) {\r\n               setAuth({\r\n                    isAuth: res.auth,\r\n                    user: res.user,\r\n                    token: res.token.token,\r\n                    refreshToken: res.token.refreshToken\r\n                });\r\n                setVault({\r\n                    ...vault,\r\n                    user: res.user\r\n                })\r\n            }\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        checkUserAuthentication();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!params.assetId) {\r\n            scenario = scenarios.assetNotFound;\r\n        }\r\n        getAssetExternal(params.assetId)\r\n        .then(data => {\r\n            if (!data.asset || !data.systems) { \r\n                scenario = scenarios.assetNotFound;\r\n            }\r\n            setMainAsset(data.asset);\r\n            setOptionalValues([...data.systems.map((s,i) => ({ name: s.name, value: s._id }))]);\r\n            return updateScenarioState(data.asset._id, 'asset')\r\n            \r\n           \r\n        })\r\n        .then(() => {\r\n            setScenarioStep(scenario.questions[0]);\r\n        });\r\n    }, [params])\r\n\r\n\r\n    useEffect(() => {\r\n        if (!scenarioStep) return;\r\n        setTimeout(async () => {\r\n            setMessages([...messages, { text: scenarioStep.text, isUser: false, type: 'string' } ]);\r\n            if (!scenarioStep.actionRequired) { \r\n                if (isLastStep()) {\r\n                    let sc = await scenarios.getNextScenario(scenario, auth);\r\n                    setScenario(sc);\r\n                    setScenarioStep(null);\r\n                    setScenarioStep(sc.questions[0]);\r\n                    return;\r\n                } \r\n                setScenarioStep(scenario.questions[scenarioStep.order + 1]);\r\n            } else {\r\n                setShowInput(scenarioStep.inputType)\r\n            }\r\n        }, 1000);    \r\n    }, [scenarioStep])\r\n\r\n\r\n    const handleInputChange = async inputVal => {\r\n        if (!inputVal.value && inputVal.type === 'image') {\r\n            setShowInput(null)\r\n            setMessages([...messages, { text: inputVal.text, isUser: true, type: inputVal.type } ]);\r\n            await handleSubmit();\r\n        }\r\n        if (inputVal.type === 'boolean') {\r\n            setShowInput(null)\r\n            await updateScenarioState(inputVal.value, scenarioStep.inputField);\r\n            setMessages([...messages, { text: inputVal.text, isUser: true, type: inputVal.type } ])\r\n            setInputValue({ text: '', value: '', type: '' });\r\n            await handleSubmit();\r\n            return;\r\n        }\r\n        setInputValue(inputVal);\r\n    }\r\n\r\n\r\n    const handleSendInput = async () => {\r\n        setShowInput(null)\r\n        await updateScenarioState(inputValue.value, scenarioStep.inputField);\r\n        setMessages([...messages, { text: inputValue.text, isUser: true, type: inputValue.type } ]);\r\n        await handleSubmit();\r\n       \r\n    }\r\n\r\n\r\n    const nextStep = async () => {\r\n        setInputValue({ text: '', value: '', type: '' });\r\n        if (isLastStep()) {\r\n            let sc = await scenarios.getNextScenario(scenario, auth);\r\n            setScenario(sc);\r\n            setScenarioStep(null);\r\n            setScenarioStep(sc.questions[0]);\r\n            return;\r\n        }\r\n        setScenarioStep(null);\r\n        setScenarioStep(scenario.questions[scenarioStep.order + 1])\r\n    }\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        if (!scenarioStep.submit) {\r\n            nextStep();\r\n            return;\r\n        } \r\n        let res = await scenario.submit(vault);\r\n        if (res) {\r\n            setVault({\r\n                ...vault, \r\n                ...res\r\n            }); \r\n            nextStep();\r\n        }\r\n        \r\n    }\r\n\r\n    const updateScenarioState = (data, field) => {\r\n        return new Promise((resolve, reject) => {\r\n            setScenario(prev => {\r\n                prev.submitInput(data, field);\r\n                return prev;\r\n            });\r\n            resolve();\r\n        })\r\n    }\r\n\r\n    const isLastStep = () => {\r\n        return scenarioStep.order + 1 === scenario.questions.length;\r\n    }\r\n\r\n\r\n\treturn (\r\n\t\t<div className={classes.gridContainer} >\r\n            <div className={classes.addressContainer}>\r\n                <div className={classes.title}>\r\n                    {t(\"chatbot.title\")}\r\n                </div>\r\n                <div className={classes.address}>\r\n                    {mainAsset && getFullAddress(mainAsset)}\r\n                </div>\r\n            </div>\r\n            <Messages data={messages} />\r\n            <Grid container className={classes.inputContainer} alignItems='center'>\r\n                {\r\n                    showInput === 'string' ? \r\n                    <MessageInput \r\n                        handleInputChange={handleInputChange}\r\n                        handleSendInput={handleSendInput}\r\n                        value={inputValue.value}\r\n                    /> : \r\n                    showInput === 'select' ? \r\n                    <MessageSelector\r\n                        value={inputValue.value}\r\n                        options={optionalValues}\r\n                        handleInputChange={handleInputChange}\r\n                        handleSendInput={handleSendInput}\r\n                    /> : \r\n                    showInput === 'image' ? \r\n                    <MessageImage \r\n                        value={inputValue.value || []}\r\n                        handleInputChange={handleInputChange}\r\n                        handleSendInput={handleSendInput}\r\n                    /> : \r\n                    showInput === 'boolean' ?\r\n                    <MessageBoolean \r\n                        handleInputChange={handleInputChange}\r\n                    /> : null\r\n                   \r\n                }\r\n                \r\n            </Grid>\r\n        </div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    gridContainer: {\r\n        height: '100%',\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        backgroundRepeat: 'repeat'\r\n\t\t\r\n    },\r\n    addressContainer: {\r\n        width: '100%',\r\n        height: '40px',\r\n        background: 'rgba(0,0,0,0.9)',\r\n        backdropFilter: 'blur(5px)',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '15px'\r\n    },\r\n    // messagesContainer: {\r\n    //     height: 'calc(100% - 120px)',\r\n    //     width: '100%',\r\n    //     padding: '10px 0',\r\n    //     overflowY: 'scroll',\r\n    //     display: 'flex',\r\n    //     flexDirection: 'column',\r\n    //     justifyContent: 'flex-end',\r\n    //     background: 'rgba(0,0,0,0.1)',\r\n    //     backdropFilter: 'blur(2px)'\r\n        \r\n    // },\r\n    messagesContainer: {\r\n        height: 'calc(100% - 120px)',\r\n        width: '100%',\r\n        background: 'rgba(0,0,0,0.1)',\r\n    },\r\n    inputContainer: {\r\n        background: 'rgba(0,0,0,0.9)',\r\n        backdropFilter: 'blur(5px)',\r\n        width: '100%',\r\n        height: '50px',\r\n        padding: '4px 0',\r\n        borderTop: '1px solid rgba(255,255,255,0.2)'\r\n    },\r\n    topProfile: {\r\n        width: '100%',\r\n        display: 'grid',\r\n        placeItems: 'center'\r\n    },\r\n    avatar: {\r\n        height: '150px',\r\n        width: '150px',\r\n        margin: '10px'\r\n    },\r\n    '@global': {\r\n\t\t'*::-webkit-scrollbar': {\r\n\t\t\twidth: '0em',\r\n        }\r\n    },\r\n    title: {\r\n        color: 'rgba(255,255,255,0.8)',\r\n        fontSize: '14px'\r\n    },\r\n    address: {\r\n        color: 'white',\r\n        fontSize: '20px'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\user\\Login.js",["552"],"C:\\projects\\leev\\leev-fe\\src\\context\\FaultsContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\NotificationsContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Messages.js",["553","554"],"import { Grid, makeStyles, Avatar, Fade } from '@material-ui/core';\r\nimport React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { Message } from './Message';\r\nimport logo from '../../assets/logo/leev_logo.png';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nexport const Messages = ({ data }) => {\r\n\r\n    const classes = useStyles();\r\n    const [ messages, setMessages ] = useState(data || []);\r\n    const { t } = useTranslation();\r\n    const ms = useRef();\r\n\r\n    useEffect(() => {\r\n        setMessages(data);\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (ms) {\r\n            // ms.current.scrollTop = ms.current.scrollHeight - ms.current.clientHeight;\r\n            let len = ms.current.children.length;\r\n            ms.current.children[len - 1].scrollIntoView({ bahavior: 'smooth'}) \r\n        }    \r\n    }, [ messages ])\r\n\r\n\treturn (\r\n\t\t<div className={classes.messagesContainer} ref={ms} >\r\n            <Fade in={Boolean(data.length)}>\r\n            <div className={classes.topProfile}>\r\n                <Avatar src={logo} className={classes.avatar}/>\r\n                <div className={classes.welcome}>\r\n                    {t(\"chatbot.welcome\")}\r\n                </div>\r\n                <div className={classes.welcomeSub}>\r\n                    {t(\"chatbot.welcomeSub\")}\r\n                </div>\r\n            </div>\r\n            </Fade>\r\n           \r\n            {\r\n                messages.length ?\r\n                messages.map((m,i) => \r\n                    <Message data={m} key={i} />\r\n                ):\r\n                null\r\n            }\r\n        </div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    messagesContainer: {\r\n        padding: '10px 0',\r\n        height: 'calc(100% - 120px)',\r\n        overflowY: 'overlay',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    topProfile: {\r\n        width: '100%',\r\n        display: 'grid',\r\n        placeItems: 'center'\r\n    },\r\n    avatar: {\r\n        height: '150px',\r\n        width: '150px',\r\n        margin: '10px'\r\n    },\r\n    welcome: {\r\n        color: 'white',\r\n        fontSize: '14px',\r\n        margin: '5px',\r\n        background: 'rgba(0,0,0,0.8)',\r\n        padding: '10px 25px',\r\n        borderRadius: '50px',\r\n    },\r\n    welcomeSub: {\r\n        color: 'rgba(255,255,255,0.7)',\r\n        fontSize: '12px',\r\n        background: 'rgba(0,0,0,0.8)',\r\n        borderRadius: '50px',\r\n        padding: '10px 25px',\r\n        margin: '5px 0 30px'\r\n    },\r\n    '@global': {\r\n\t\t'*::-webkit-scrollbar': {\r\n\t\t\twidth: '0em',\r\n        }\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageInput.js",["555"],"import { FormControl, Grid, IconButton, makeStyles, OutlinedInput } from '@material-ui/core';\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\nimport clsx from 'clsx';\r\nimport React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\nexport const MessageInput = ({ value, handleInputChange, handleSendInput, placeholder}) => {\r\n\tconst classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n\r\n    const handleChange = event => {\r\n        let val = event.target.value;\r\n        handleInputChange({ text: val, value: val, type: 'string'});\r\n    }\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} className={classes.addComment}>\r\n\t\t\t<FormControl variant=\"outlined\" className={classes.form}>\r\n\t\t\t\t<OutlinedInput\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\tclassName={clsx(classes.textInput)}\r\n\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\tinputMultiline: classes.multiLine,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</FormControl>\r\n\t\t\t<IconButton className={classes.postBtn} onClick={handleSendInput}>\r\n\t\t\t\t<SendRoundedIcon className={clsx(classes.icon, lang.dir === 'rtl' ? classes.mirror : null)} />\r\n\t\t\t</IconButton>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\t\r\n\taddComment: {\r\n\t\tdisplay: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: 'fit-content',\r\n        padding: '0 5px'\r\n\t},\r\n\tform: {\r\n\t\tcolor: 'white',\r\n        width: '100%',\r\n        margin: '0 5px 0 0px'\r\n\t},\r\n\ttextInput: {\r\n        padding: '4px 10px',\r\n        borderRadius: '42px',\r\n        background: 'rgba(255,255,255,0.1)',\r\n\t\t'& input': {\r\n\t\t\tcolor: 'white',\r\n\t\t\twidth: '80%',\r\n            padding: '7px 10px',\r\n            fontSize: '14px'\r\n\t\t},\r\n\t\t'& label': {\r\n\t\t\tcolor: 'white',\r\n\t\t\tpaddingLeft: '5px',\r\n\t\t},\r\n\t\t'& fieldset': {\r\n\t\t\tborderColor: 'rgba(255,255,255,0.2)',\r\n\t\t\tborderRadius: '42px',\r\n\t\t},\r\n\t},\r\n\tpostBtn: {\r\n        background: '#42A5F5',\r\n\t\tcolor: 'white',\r\n        padding: '7px',\r\n\t\tmargin: ' 0 5px 1px'\r\n\t},\r\n\ticon: {\r\n        fontSize: '20px',\r\n        color: 'white'\r\n\t},\r\n\tmirror: {\r\n\t\ttransform: 'scaleX(-1)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Scenrio.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageImage.js",["556","557","558"],"import { Button, FormControl, Grid, IconButton, makeStyles, OutlinedInput } from '@material-ui/core';\r\nimport { CancelScheduleSend } from '@material-ui/icons';\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\nimport clsx from 'clsx';\r\nimport React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\nexport const MessageImage = ({ value, handleInputChange, handleSendInput, placeholder}) => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const { lang } = useContext(LanguageContext);\r\n\r\n    const handleFileUpload = event => {\r\n        let val = event.target.files;\r\n        handleInputChange({ text: `${val.length} ${t(\"chatbot.imagesSelected\")} ` , value: val, type: 'image'});\r\n    }\r\n\r\n    const handleNoImages = () => {\r\n        handleInputChange({ text: `${t(\"chatbot.noImages\")}` , value: null, type: 'image'});\r\n    }\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} className={classes.addComment}>\r\n\t\t\t<Button\r\n                component={'label'}\r\n                variant={'contained'}\r\n                className={clsx(classes.uploadBtn, value.length ? classes.imagesUploaded : classes.noImages)}\r\n            >\r\n                { value.length ? `${value.length} ${t(\"chatbot.imagesSelected\")}` : t(\"chatbot.uploadImages\")}\r\n                <input \r\n                    accepts='image/*'\r\n                    type='file'\r\n                    multiple\r\n                    onChange={handleFileUpload}\r\n                    hidden  \r\n                />\r\n            </Button>\r\n            {\r\n                !value.length ? \r\n                <Button\r\n                className={clsx(classes.noImagesBtn, classes.noImages)}\r\n                variant={'contained'}\r\n                onClick={handleNoImages}\r\n            >\r\n                {t(\"chatbot.noImages\")}\r\n            </Button> : \r\n\t\t\t<IconButton className={classes.postBtn} onClick={handleSendInput}>\r\n\t\t\t\t<SendRoundedIcon className={clsx(classes.icon, lang.dir === 'rtl' ? classes.mirror : null)} />\r\n\t\t\t</IconButton>\r\n            }\r\n            \r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\taddComment: {\r\n\t\tdisplay: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: 'fit-content',\r\n        padding: '0 5px'\r\n\t},\r\n    uploadBtn: {\r\n        padding: '6px 10px',\r\n        borderRadius: '42px',\r\n        background: 'rgba(255,255,255,0.1)',\r\n        color: 'white',\r\n        width: '100%',\r\n        margin: '0 5px 0 0px',\r\n        '&:hover': {\r\n            boxShadow: 'inset white 0 0 2px 1px',\r\n            background: 'rgba(0,0,0,0.3)'\r\n        }\r\n    },\r\n    noImagesBtn: {\r\n        padding: '6px 10px',\r\n        borderRadius: '42px',\r\n        background: 'rgba(255,255,255,0.1)',\r\n        color: 'white',\r\n        margin: '0 5px 0 0px',\r\n        '&:hover': {\r\n            boxShadow: 'inset white 0 0 2px 1px',\r\n            background: 'rgba(0,0,0,0.3)'\r\n        }\r\n    },\r\n    imagesUploaded: {\r\n        width: '100%',\r\n    },\r\n    noImages: {\r\n        width: '50%'\r\n    },\r\n    postBtn: {\r\n        background: '#3399ff',\r\n\t\tcolor: 'white',\r\n        padding: '7px',\r\n\t\tmargin: ' 0 5px 1px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n        fontSize: '20px',\r\n        color: 'white'\r\n\t},\r\n\tmirror: {\r\n\t\ttransform: 'scaleX(-1)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageSelector.js",[],"C:\\projects\\leev\\leev-fe\\src\\api\\userApi.js",["559"],"C:\\projects\\leev\\leev-fe\\src\\api\\assetsApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\Controls.js",["560","561"],"import { Grid, makeStyles } from '@material-ui/core';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { getNotifications } from '../../api/notificationsApi';\r\nimport { NotificationsContext } from '../../context/NotificationsContext';\r\nimport { CreateContainer } from '../reuseables/CreateContainer';\r\nimport { AddMenu } from './navbar/AddMenu';\r\nimport { Navbar } from './navbar/Navbar';\r\nimport { Notifications } from './navbar/Notifications';\r\nimport { SideMenu } from './navbar/SideMenu';\r\nimport { Settings } from './settings/Settings';\r\n\r\nexport const Controls = () => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst { notifications, setNotifications } = useContext(NotificationsContext);\r\n\tconst [ menuOpen, setMenuOpen ] = useState(false);\r\n\tconst [ addMenuOpen, setAddMenuOpen ] = useState(false);\r\n\tconst [ create, setCreate ] = useState(null);\r\n\tconst [ notificationsList, setNotificationsList ] = useState(false);\r\n\tconst [ settings, setSettings ] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchNotifications(0);\r\n\t}, []);\r\n\r\n\tconst fetchNotifications = async (notificationPage) => {\r\n\t\tconst data = await getNotifications(notificationPage);\r\n\t\tif (data) {\r\n\t\t\tsetNotifications(notificationPage ? [...notifications, ...data] : data);\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleMenu = () => {\r\n\t\tif (menuOpen) {\r\n\t\t\tsetMenuOpen(false);\r\n\t\t} else {\r\n\t\t\tif (addMenuOpen) {\r\n\t\t\t\tsetAddMenuOpen(false);\r\n\t\t\t}\r\n\t\t\tsetMenuOpen(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleAddMenu = () => {\r\n\t\tif (addMenuOpen) {\r\n\t\t\tsetAddMenuOpen(false);\r\n\t\t} else {\r\n\t\t\tif (menuOpen) {\r\n\t\t\t\tsetMenuOpen(false);\r\n\t\t\t}\r\n\t\t\tsetAddMenuOpen(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleMapView = () => {\r\n\t\thistory.push('/workspace/map?lat=32.063603&lng=34.785933');\r\n\t};\r\n\r\n\tconst toggleCalenderView = () => {\r\n\t\thistory.push('/workspace/calender');\r\n\t}\r\n\r\n\tconst openCreate = (itemType) => (event) => {\r\n\t\ttoggleAddMenu();\r\n\t\tsetCreate(itemType);\r\n\t};\r\n\r\n\tconst toggleNotifications = () => {\r\n\t\tif (notificationsList) {\r\n\t\t\tsetNotificationsList(false);\r\n\t\t} else {\r\n\t\t\tsetNotificationsList(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleSettings = () => {\r\n\t\tif (settings) {\r\n\t\t\tsetSettings(false);\r\n\t\t} else {\r\n\t\t\tsetSettings(true);\r\n\t\t}\r\n\t}; \r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid container className={classes.controlsContainer} justify=\"center\">\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Navbar\r\n\t\t\t\t\t\ttoggleMenu={toggleMenu}\r\n\t\t\t\t\t\tmenuOpen={menuOpen}\r\n\t\t\t\t\t\ttoggleAddMenu={toggleAddMenu}\r\n\t\t\t\t\t\ttoggleNotifications={toggleNotifications}\r\n\t\t\t\t\t\ttoggleMapView={toggleMapView}\r\n\t\t\t\t\t\ttoggleCalenderView={toggleCalenderView}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t{menuOpen && <SideMenu toggleMenu={toggleMenu} toggleSettings={toggleSettings} menuOpen={menuOpen}/>}\r\n\t\t\t{addMenuOpen && <AddMenu toggleAddMenu={toggleAddMenu} toggleAdd={openCreate} addMenuOpen={addMenuOpen} />}\r\n\t\t\t{notificationsList && (\r\n\t\t\t\t<Notifications\r\n\t\t\t\t\topen={notificationsList}\r\n\t\t\t\t\ttoggleNotifications={toggleNotifications}\r\n\t\t\t\t\tfetchNotifications={fetchNotifications}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{Boolean(create) && <CreateContainer isOpen={true} handleClose={() => setCreate(null)} itemType={create} />}\r\n\t\t\t{Boolean(settings) && <Settings handleClose={() => setSettings(false)} open={settings} />}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontrolsContainer: {\r\n\t\tzIndex: 2,\r\n\t\theight: '64px',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Settings.js",["562","563","564","565"],"import { Backdrop, Fade, Grid, Icon, IconButton, makeStyles, Modal, Paper } from '@material-ui/core';\r\nimport React, { useState, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { SettingsMenu } from './SettingsMenu';\r\nimport { UserProfile } from './UserProfile';\r\nimport { Users } from './Users';\r\n\r\nexport const Settings = ({ open, handleClose}) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n    const location = useLocation();\r\n    const { t } = useTranslation();\r\n    const { lang, setLang } = useContext(LanguageContext);\r\n    const [ active, setActive ] = useState('profile');\r\n\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\topen={open}\r\n\t\t\tonClose={handleClose}\r\n\t\t\tcloseAfterTransition\r\n\t\t\tBackdropComponent={Backdrop}\r\n\t\t\tBackdropProps={{\r\n\t\t\t\ttimeout: 500,\r\n\t\t\t}}\r\n\t\t\tclassName={classes.modal}\r\n\t\t>\r\n\t\t\t<Fade in={open}>\r\n\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\" style={{ outline: '0' }}>\r\n\t\t\t\t\t<Grid item xs={12} sm={12} md={12} lg={10} xl={6} className={classes.gridCont}>\r\n\t\t\t\t\t\t<Paper elevation={6} className={classes.paper} style={{ direction: lang.dir }}>\r\n                            <Grid container className={classes.mainGrid}>\r\n                                <Grid item xs={12} className={classes.headerRow}>\r\n                                    <div className={classes.title}>\r\n                                        {t(\"settings.title\")}\r\n                                    </div>\r\n                                    <IconButton\r\n                                        className={classes.closeBtn}\r\n                                        onClick={handleClose}\r\n                                    >\r\n                                        <Icon classes={{root: classes.iconRoot}}>\r\n                                            <img src=\"https://img.icons8.com/ios-filled/36/4a90e2/cancel.png\"/>\r\n                                        </Icon>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                <Grid container className={classes.dataGrid}>\r\n                                    <Grid item xl={3} lg={3} md={3} sm={2} xs={12}>\r\n                                        <SettingsMenu\r\n                                            active={active} \r\n                                            setActive={setActive}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xl={9} lg={9} md={9} sm={10} xs={12} className={classes.dataContainer}>\r\n                                        {\r\n                                            active === 'profile' &&\r\n                                            <UserProfile />\r\n                                        }\r\n                                        {\r\n                                            active === 'users' &&\r\n                                            <Users />\r\n                                        }\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Fade>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmodal: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n        backdropFilter: 'blur(10px)',\r\n\t},\r\n\tgridCont: {\r\n\t\theight: 'fit-content',\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tborderRadius: '10px',\r\n        overflowY: 'overlay',\r\n        height: '80vh',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: '81vh',\r\n\t\t\ttop: 0,\r\n\t\t\tborderRadius: '0',\r\n\t\t\tborder: '0',\r\n\t\t\tpadding: '10px 5px',\r\n\t\t},\r\n\t\t'&:focus': {\r\n\t\t\toutline: 'none',\r\n\t\t},\r\n    },\r\n    mainGrid: {\r\n        height: '100%',\r\n        width: '100%'\r\n    },\r\n    dataGrid: {\r\n        height: '90%'\r\n    },\r\n    dataContainer: {\r\n        height: '100%',\r\n        width: '100%'\r\n    },\r\n    headerRow: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '10px 20px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        height: '10%',\r\n        [theme.breakpoints.down('xs')]: {\r\n            padding: '0 5px'\r\n        }\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '22px',\r\n        padding: '0 20px',\r\n    },\r\n    iconRoot: {\r\n\t\ttextAlign: 'center',\r\n\t\twidth: '50px',\r\n\t\theight: '35px',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center'\r\n    },\r\n    closeBtn: {\r\n        padding: '6px'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Assets.js",["566","567"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\Tasks.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\Documents.js",["568"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\Faults.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MapView.js",["569","570","571","572"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\Systems.js",["573","574"],"C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\Message.js",["575","576","577","578","579","580"],"import { Fade, Grid, Grow, makeStyles, Slide,  } from '@material-ui/core';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport const Message = ({ data }) => {\r\n\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n\r\n\treturn (\r\n        <Grow in={Boolean(data)} timeout={500}>\r\n            <Grid container direction={ data.isUser ? 'row' : 'row-reverse'} className={classes.messageContainer} >\r\n                <Grid item xs={8} className={clsx(classes.message, data.isUser ? classes.userMessage : classes.systemMessage)}>\r\n                    <div className={classes.messageText}>\r\n                        {\r\n                            data.text\r\n                        }\r\n                    </div>\r\n                </Grid>\r\n        </Grid>\r\n        </Grow>\r\n\t\t\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    message: {\r\n        display: 'flex',\r\n        margin: '3px 5px',\r\n    },\r\n    messageText: {\r\n        color: 'white',\r\n        borderRadius: '100px',\r\n        padding: '10px 20px',\r\n        fontSize: '13px',\r\n        width: 'fit-content',\r\n        minWidth: '50px'\r\n    },\r\n    userMessage: {     \r\n        '&>div': {\r\n            background: 'grey',\r\n        },\r\n        justifyContent: 'flex-start'\r\n    },\r\n    systemMessage: {\r\n        '&>div': {\r\n            background: '#42A5F5',\r\n        },      \r\n        justifyContent: 'flex-end'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\chatbotApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\api\\genericApi.js",["581","582"],"C:\\projects\\leev\\leev-fe\\src\\api\\notificationsApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\Users.js",["583","584","585","586"],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UserProfile.js",["587"],"import { Avatar, Button, Grid, IconButton, makeStyles, Tooltip } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { format, parseISO } from 'date-fns';\r\nimport dateFormat from 'dateformat';\r\nimport React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getFullName } from '../../../api/genericApi';\r\nimport { uploadAvatar } from '../../../api/userApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\n\r\nconst userData = ['email', 'phoneNumber', 'birthDate', 'employedBy', 'status'];\r\nexport const UserProfile = () => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { auth, setAuth } = useContext(AuthContext);\r\n\tconst { lang } = useContext(LanguageContext);\r\n\r\n\tconst handleFileUpload = (event) => {\r\n\t\tuploadAvatar(event.target.files[0]).then((res) => {\r\n\t\t\tif (res.avatar) {\r\n\t\t\t\tsetAuth({\r\n\t\t\t\t\t...auth,\r\n\t\t\t\t\tuser: { ...auth.user, avatar: res.avatar },\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid container className={classes.container}>\r\n\t\t\t<Grid item xs={12} className={classes.avatarContainer}>\r\n\t\t\t\t<div className={classes.avDiv}>\r\n\t\t\t\t\t<Avatar src={auth.user.avatar} className={classes.avatar} />\r\n\t\t\t\t\t<Tooltip title={t('users.uploadAvatar')}>\r\n\t\t\t\t\t\t<IconButton component={'label'} variant={'contained'} className={classes.uploadAvatar}>\r\n\t\t\t\t\t\t\t<AddIcon className={classes.addIcon} />\r\n\t\t\t\t\t\t\t<input accepts=\"image/*\" type=\"file\" onChange={handleFileUpload} hidden />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} className={classes.nameContainer}>\r\n\t\t\t\t<div className={classes.name}>{getFullName(auth.user)}</div>\r\n\t\t\t\t<div className={classes.role}>{auth.user.role.roleName}</div>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} className={classes.controls}>\r\n\t\t\t\t<Button startIcon={<EditIcon className={classes.editIcon} />} className={classes.editBtn}>\r\n\t\t\t\t\t{t('settings.editUserDetails')}\r\n\t\t\t\t</Button>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid container className={classes.userData}>\r\n\t\t\t\t{userData.map((ud, i) => {\r\n\t\t\t\t\tlet val =\r\n\t\t\t\t\t\tud === 'birthDate'\r\n\t\t\t\t\t\t\t? format(parseISO(auth.user.birthDate), lang.dateonly)\r\n\t\t\t\t\t\t\t: ud === 'status'\r\n\t\t\t\t\t\t\t? auth.user.isActive\r\n\t\t\t\t\t\t\t\t? t('users.active')\r\n\t\t\t\t\t\t\t\t: t('users.inactive')\r\n\t\t\t\t\t\t\t: auth.user[ud];\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Grid item xs={12} xl={6} className={classes.dataRow}>\r\n\t\t\t\t\t\t\t<div className={classes.dataLabel}>{t(`users.${ud}`)}</div>\r\n\t\t\t\t\t\t\t<div className={classes.dataValue}>{val}</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</Grid>\r\n\t\t\t\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n        width: '100%',\r\n        borderLeft: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tcontrols: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t},\r\n\tavatarContainer: {\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t\tpadding: '40px 0 10px',\r\n\t\theight: 'fit-content',\r\n\t\twidth: 'fit-content',\r\n\t},\r\n\tavatar: {\r\n\t\theight: '150px',\r\n\t\twidth: '150px',\r\n\t\tposition: 'relative',\r\n\t},\r\n\tnameContainer: {\r\n\t\theight: 'fit-content',\r\n\t\twidth: 'fit-content',\r\n\t\tpadding: '10px 0',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t},\r\n\tname: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '24px',\r\n\t},\r\n\trole: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t\tpadding: '5px 0',\r\n\t},\r\n\tuserData: {\r\n\t\tpadding: '20px 10px 10px',\r\n\t},\r\n\tdataRow: {\r\n\t\tpadding: '10px 20px',\r\n\t},\r\n\tdataLabel: {\r\n\t\tcolor: 'white',\r\n\t\twidth: 'fit-content',\r\n\t\tpadding: '5px 20px',\r\n\t\tbackground: 'rgba(0,0,0,0.8)',\r\n\t\tborderRadius: '5px 5px 0 0',\r\n\t\tfontSize: '14px',\r\n\t},\r\n\tdataValue: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '15px 20px',\r\n\t\tbackground: 'rgba(255,255,255,0.1)',\r\n\t\tborderRadius: '0px 5px 5px 5px',\r\n\t\tfontSize: '16px',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t},\r\n\teditBtn: {\r\n\t\tpadding: '3px 25px 3px 15px',\r\n\t\tborder: '1px solid black',\r\n\t\tbackground: 'black',\r\n\t\tcolor: 'rgba(255,255,255,0.5)',\r\n\t\tborderRadius: '50px',\r\n\t\tmargin: '0 30px',\r\n\t\t'&:hover': {\r\n\t\t\tborder: '1px solid white',\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t},\r\n\teditIcon: {\r\n\t\tcolor: 'inherit',\r\n\t\tfontSize: '20px',\r\n\t\tpadding: '5px',\r\n\t},\r\n\tuploadAvatar: {\r\n\t\tborder: '2px solid rgba(255,255,255,0.5)',\r\n\t\tpadding: '4px',\r\n\t\tposition: 'absolute',\r\n\t\tbottom: 0,\r\n\t\tcolor: 'rgba(255,255,255,0.5)',\r\n\t\tbackground: 'rgba(0,0,0,0.8)',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'black',\r\n\t\t\tcolor: 'white',\r\n\t\t\tborderColor: 'white',\r\n\t\t},\r\n\t},\r\n\tavDiv: {\r\n\t\tposition: 'relative',\r\n\t},\r\n\taddIcon: {\r\n\t\tfontSize: '24px',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\SettingsMenu.js",["588","589","590","591","592","593"],"import { Button, Icon, List, ListItem, ListItemIcon, ListItemText, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport clsx from 'clsx';\r\n\r\nconst menuOptions = [\r\n    {\r\n        tab: 'profile',\r\n        icon: \"https://img.icons8.com/ios-filled/25/4a90e2/name.png\"\r\n    },\r\n    {\r\n        tab: 'users',\r\n        icon: \"https://img.icons8.com/ios-filled/25/4a90e2/conference-background-selected.png\"\r\n    },\r\n    {\r\n        tab: 'permissions',\r\n        icon: \"https://img.icons8.com/ios-filled/25/4a90e2/shield.png\"\r\n    },\r\n    {\r\n        tab: 'appearance',\r\n        icon: \"https://img.icons8.com/ios-filled/25/4a90e2/monitor--v1.png\"\r\n    }\r\n]\r\n\r\nexport const SettingsMenu = ({ active, setActive }) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst { t } = useTranslation();\r\n    const { lang, setLang } = useContext(LanguageContext);\r\n    const downLg = useMediaQuery((theme) => theme.breakpoints.down('sm'))\r\n\r\n\treturn (\r\n\t\t<List className={classes.menuContainer}>\r\n            {\r\n                menuOptions.map((mo, i) => {\r\n                    return (\r\n                        <ListItem \r\n                        className={clsx(classes.listItem, active === mo.tab && classes.active)} \r\n                        button={true}\r\n                        onClick={() => setActive(mo.tab)}\r\n                        >\r\n                        <ListItemIcon className={classes.iconContainer}>\r\n                            <Icon className={classes.icon}>\r\n                                <img src={mo.icon} />\r\n                            </Icon>\r\n                        </ListItemIcon>\r\n                        {\r\n                            !downLg &&\r\n                            <ListItemText className={classes.textContainer}>{t(`settings.${mo.tab}`)}</ListItemText>\r\n                        }\r\n                        \r\n                    </ListItem>\r\n                    )\r\n                })\r\n            }  \r\n\t\t</List>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmenuContainer: {\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRight: '1px solid rgba(255,255,255,0.2)',\r\n        padding: 0,\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: 'flex',\r\n            borderRight: 'unset',\r\n            borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        }\r\n\t},\r\n\tlistItem: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '15px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.1)',\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            padding: '15px 0',\r\n            justifyContent: 'center'\r\n        }\r\n\t},\r\n\ticonContainer: {\r\n\t\twidth: 'fit-content',\r\n\t\theight: 'fit-content',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t},\r\n\ticon: {\r\n\t\twidth: '25px',\r\n\t\theight: '25px',\r\n\t},\r\n\ttextContainer: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t},\r\n\tactive: {\r\n\t\tbackground: 'black',\r\n        borderLeft: '3px solid #5B5BFB',\r\n        [theme.breakpoints.down('xs')]: {\r\n            borderLeft: 'unset',\r\n            borderBottom: '3px solid #5B5BFB',\r\n        }\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CreateContainer.js",["594","595","596","597","598","599"],"C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\AddMenu.js",["600","601","602","603","604","605","606","607","608","609","610","611","612","613","614"],"import React, { useContext } from 'react';\r\nimport {\r\n\tmakeStyles,\r\n\tList,\r\n\tListItem,\r\n\tListItemIcon,\r\n\tListItemText,\r\n\tGrow,\r\n\tClickAwayListener,\r\n\tuseMediaQuery,\r\n\tIcon,\r\n\tSlide,\r\n\tIconButton,\r\n} from '@material-ui/core';\r\nimport AddLocationOutlinedIcon from '@material-ui/icons/AddLocationOutlined';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport QueueIcon from '@material-ui/icons/Queue';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport NoteAddOutlinedIcon from '@material-ui/icons/NoteAddOutlined';\r\nimport BlurOnRoundedIcon from '@material-ui/icons/BlurOnRounded';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Can } from '../../reuseables/Can';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\n\r\nexport const AddMenu = ({ toggleAddMenu, toggleAdd, addMenuOpen }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.up('sm'));\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<ClickAwayListener onClickAway={toggleAddMenu}>\r\n\t\t\t<Slide in={addMenuOpen} direction={lang.code == 'he' ? 'right' : 'left'}>\r\n\t\t\t\t<div className={classes.addMenuContainer}>\r\n\t\t\t\t\t<div className={classes.header}>\r\n\t\t\t\t\t\t<div>{t('createMenu.header')}</div>\r\n\t\t\t\t\t\t<IconButton onClick={toggleAddMenu}>\r\n\t\t\t\t\t\t\t<ClearRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<List className={classes.list}>\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\tonClick={toggleAdd('asset')}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t{/* <AddLocationOutlinedIcon\r\n\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t\t\t\t<Icon classes={{root: classes.iconRoot}}>\r\n\t\t\t\t\t\t\t\t<img src=\"https://img.icons8.com/ios-filled/25/4a90e2/warehouse.png\"/>\r\n\t\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={t('createMenu.addAsset')}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\tonClick={toggleAdd('system')}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t<Icon classes={{root: classes.iconRoot}}>\r\n                            \t\t<img src=\"https://img.icons8.com/ios-filled/25/4a90e2/system-task.png\"/>\r\n\t\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={t('createMenu.addSystem')}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<Can module=\"tasks\" action=\"create\">\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\t\tonClick={toggleAdd('task')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t\t<Icon classes={{root: classes.iconRoot}}>\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"https://img.icons8.com/ios-filled/25/4a90e2/task-completed.png\"/>\r\n\t\t\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={t('createMenu.createTask')}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Can>\r\n\r\n\t\t\t\t\t\t<Can module=\"faults\" action=\"create\">\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\t\tonClick={toggleAdd('fault')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t\t<Icon classes={{root: classes.iconRoot}}>\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"https://img.icons8.com/pastel-glyph/23/4a90e2/error--v2.png\"/>\r\n\t\t\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={t('createMenu.createFault')}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Can>\r\n\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tbutton={true}\r\n\t\t\t\t\t\t\tclassName={classes.listItem}\r\n\t\t\t\t\t\t\tonClick={toggleAdd('document')}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n\t\t\t\t\t\t\t<Icon classes={{root: classes.iconRoot}}>\r\n                            \t\t<img src=\"https://img.icons8.com/pastel-glyph/25/4a90e2/regular-document--v2.png\"/>\r\n\t\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={t('createMenu.addDocument')}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</div>\r\n\t\t\t</Slide>\r\n\t\t</ClickAwayListener>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\taddMenuContainer: {\r\n\t\tzIndex: 2,\r\n\t\twidth: '280px',\r\n\t\tbackground: theme.palette.primary.main,\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\tboxShadow: 'rgba(0,0,0,0.25) 0px 0px 6px 3px',\r\n\t\tposition: 'absolute',\r\n\t\ttop: '64px',\r\n\t\tright: '0',\r\n\t\theight: '100vh',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: '100%',\r\n\t\t\ttop: '64px',\r\n\t\t\tright: 0,\r\n\t\t\twidth: '100vw',\r\n\t\t\tborderRadius: 0,\r\n\t\t\tborder: 'none',\r\n\t\t\tpadding: 0,\r\n\t\t\tbackground: 'rgba(0,0,0,0.5)',\r\n\t\t\tbackdropFilter: 'blur(15px)',\r\n\t\t},\r\n\t},\r\n\tlist: {\r\n\t\twidth: '100%',\r\n\t\tpadding: '10px 0',\r\n\t},\r\n\tlistItem: {\r\n\t\tcolor: 'theme.palette.primary.main',\r\n\t\tpadding: '10px 20px',\r\n\t\ttransition: 'background box-shadow 0.3s ease-in-out',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\t\ttransition: 'background box-shadow 0.2s ease-in-out',\r\n\t\t\tboxShadow: '0 8px 32px 0 rgb(0 0 0 / 80%)'\r\n\t\t},\r\n\r\n\t},\r\n\tlistItemIcon: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tlistItemText: {\r\n\t\tfontSize: '16px',\r\n\t\tcolor: 'white',\r\n\t},\r\n\tbottomList: {\r\n\t\tpadding: '10px 0',\r\n\t},\r\n\ticonRoot: {\r\n\t\ttextAlign: 'center',\r\n\t\twidth: '50px',\r\n\t\theight: '35px',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center'\r\n\t},\r\n\theader: {\r\n\t\theight: '40px',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tfontSize: '18px',\r\n\t\talignItems: 'center',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '10px 20px',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tborderRadius: '10px 10px 0 0',\r\n\t},\r\n\ticon: {\r\n\t\tcolor: 'white',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Navbar.js",["615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, AppBar, IconButton, Grid, Badge, Icon } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\r\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\r\nimport ArrowForwardRoundedIcon from '@material-ui/icons/ArrowForwardRounded';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { NotificationsContext } from '../../../context/NotificationsContext';\r\nimport { differenceInHours } from 'date-fns'\r\nimport MapOutlinedIcon from '@material-ui/icons/MapOutlined';\r\nimport { useLocation } from 'react-router';\r\nimport notificationIcon from '../../../assets/icons/notification.svg';\r\nimport plusIcon from '../../../assets/icons/plus28.svg';\r\nimport mapIcon from '../../../assets/icons/map28.svg';\r\nimport menuIcon from '../../../assets/icons/menu.svg';\r\n\r\n\r\nexport const Navbar = ({ toggleMenu, toggleAddMenu, toggleMapView, toggleNotifications, toggleCalenderView }) => {\r\n\tconst classes = useStyles();\r\n\tconst location = useLocation();\r\n\tconst { notifications } = useContext(NotificationsContext);\r\n\tconst [ notifCount, setNotifCount ] = useState(0);\r\n\tconst [ mapActive, setMapActive ] = useState(location.pathname.includes('map'));\r\n\tconst [ calenderActive, setCalenderActive ] = useState(location.pathname.includes('calender'));\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMapActive(location.pathname.includes('map'));\r\n\t\tsetCalenderActive(location.pathname.includes('calender'));\r\n\t}, [location])\r\n\r\n\tuseEffect(() => {\r\n\t\tlet count = notifications\r\n\t\t.filter(\r\n\t\t\t(n) =>\r\n\t\t\t\tdifferenceInHours(\r\n\t\t\t\t\tnew Date(),\r\n\t\t\t\t\tnew Date(n.createdAt)\r\n\t\t\t\t) < 6 && !n.read\r\n\t\t).length;\r\n\t\tsetNotifCount(count);\r\n\t}, [notifications])\r\n\r\n\r\n\treturn (\r\n\t\t<AppBar className={classes.navbar}>\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\tstyle={{ height: '64px' }}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\t<Grid item className={classes.menuGridItem}>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\taria-label=\"menu\"\r\n\t\t\t\t\t\t\tclassName={classes.iconButton}\r\n\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\tonClick={toggleMenu}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Icon classes={{root: classes.iconRoot}}>\r\n\t\t\t\t\t\t\t\t<img src=\"https://img.icons8.com/ios-filled/24/4a90e2/thumbnail-view.png\"/>\r\n\t\t\t\t\t\t\t</Icon>\t\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t<div className={classes.logobox}>Leev</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t}\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<div className={classes.navbarIcons}>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\taria-label=\"Add\"\r\n\t\t\t\t\t\t\tclassName={classes.iconButton}\r\n\t\t\t\t\t\t\tcolor={'inherit'}\r\n\t\t\t\t\t\t\tonClick={toggleCalenderView}\r\n\t\t\t\t\t\t\tdisabled={calenderActive}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Icon classes={{root: classes.iconRoot}}>\r\n\t\t\t\t\t\t\t<img src=\"https://img.icons8.com/ios-filled/24/4a90e2/tear-off-calendar.png\"/>\r\n\t\t\t\t\t\t\t\t</Icon>\t\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\taria-label=\"Add\"\r\n\t\t\t\t\t\t\tclassName={classes.iconButton}\r\n\t\t\t\t\t\t\tcolor={'inherit'}\r\n\t\t\t\t\t\t\tonClick={toggleMapView}\r\n\t\t\t\t\t\t\tdisabled={mapActive}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Icon classes={{root: classes.iconRoot}}>\r\n\t\t\t\t\t\t\t<img src=\"https://img.icons8.com/ios-filled/24/4a90e2/map.png\"/>\r\n\t\t\t\t\t\t\t\t</Icon>\t\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\taria-label=\"Add\"\r\n\t\t\t\t\t\t\tclassName={classes.iconButton}\r\n\t\t\t\t\t\t\tcolor={'inherit'}\r\n\t\t\t\t\t\t\tonClick={toggleAddMenu}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Icon classes={{root: classes.iconRoot}}>\r\n\t\t\t\t\t\t\t<img src=\"https://img.icons8.com/ios-filled/28/4a90e2/plus-2-math.png\"/>\r\n\t\t\t\t\t\t\t\t</Icon>\t\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\taria-label=\"Notifications\"\r\n\t\t\t\t\t\t\tclassName={classes.iconButton}\r\n                            color=\"inherit\"\r\n                            onClick={toggleNotifications}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tbadgeContent={notifCount}\r\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n                                classes={{\r\n                                    badge: classes.badge\r\n                                }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Icon classes={{root: classes.iconRoot}}>\r\n\t\t\t\t\t\t\t\t<img src=\"https://img.icons8.com/ios-filled/24/4a90e2/appointment-reminders--v1.png\"/>\r\n\t\t\t\t\t\t\t\t</Icon>\t\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</AppBar>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tlogobox: {\r\n\t\tfontSize: '30px',\r\n\t\tcolor: 'white',\r\n\t\tfontFamily: 'Kaushan',\r\n\t\tpadding: '0 10px 5px'\r\n\t},\r\n\tnavbar: {\r\n\t\theight: '64px',\r\n\t\tpadding: '0 8px',\r\n\t\tbackground: 'rgba(0,0,0,0.8)',\r\n\t\tbackdropFilter: 'blur(8px)',\r\n\t\tboxShadow: 'rgba(0,0,0,0.4) 0px 0px 5px 2px',\r\n\t},\r\n\tmenuGridItem: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center'\r\n\t},\r\n\tmenuButton: {},\r\n\tnavbarIcons: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\twidth: 'auto',\r\n\t},\r\n\tdrawer: {\r\n\t\theight: 'calc(100vh - 128px)',\r\n\t\twidth: '240px',\r\n\t\tflexShrink: 0,\r\n\t\twhiteSpace: 'nowrap',\r\n\t\tmarginTop: '128px',\r\n\t\tbackground: 'transparent',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\twidth: '60%',\r\n\t\t},\r\n\t},\r\n\tdrawerOpen: {\r\n\t\theight: 'calc(100vh - 128px)',\r\n\t\twidth: '240px',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\twidth: '60%',\r\n\t\t},\r\n\r\n\t\ttransition: theme.transitions.create('width', {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t\t}),\r\n\t},\r\n\tdrawerClose: {\r\n\t\ttransition: theme.transitions.create('width', {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t\t}),\r\n\t\toverflowX: 'hidden',\r\n\t\twidth: theme.spacing(7) + 1,\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\twidth: theme.spacing(9) + 1,\r\n\t\t},\r\n\t},\r\n\ticonButton: {\r\n\t\tpadding: '6px',\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '28px',\r\n\t\tpadding: '12px',\r\n\t\tborderRadius: '50px',\r\n\t\t[theme.breakpoints.up('md')]: {\r\n\t\t\t'&:hover': {\r\n\t\t\t\tbackground: 'rgba(0,0,0,0.5)',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tbadge: {\r\n\t\tborder: `1px solid black`,\r\n        top: '12px',\r\n        right: '12px'\r\n\t},\r\n\timageIcon: {\r\n\t\theight: '36px',\r\n\t\twidth: '36px'\r\n\t},\r\n\ticonRoot: {\r\n\t\ttextAlign: 'center',\r\n\t\twidth: '40px',\r\n\t\theight: '50px',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Notifications.js",["631","632","633","634"],"import {\r\n\tClickAwayListener,\r\n\tGrow,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tSlide,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { differenceInHours } from 'date-fns';\r\nimport React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { updateArrayStateField } from '../../../api/genericApi';\r\nimport { updateNotificationRead } from '../../../api/notificationsApi';\r\nimport { NotificationsContext } from '../../../context/NotificationsContext';\r\nimport { Notification } from './Notification';\r\n\r\nexport const Notifications = ({\r\n\topen,\r\n\ttoggleNotifications,\r\n\tfetchNotifications\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst { notifications, setNotifications } = useContext(\r\n\t\tNotificationsContext\r\n\t);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.up('sm'));\r\n\r\n\tconst updateNotificationReadStatus = async (notificationId, read) => {\r\n\t\tconst res = await updateNotificationRead(notificationId, read);\r\n\t\tif (res) {\r\n\t\t\tlet nt = await updateArrayStateField(\r\n\t\t\t\tnotifications,\r\n\t\t\t\tnotificationId,\r\n\t\t\t\t'read',\r\n\t\t\t\tread\r\n\t\t\t);\r\n\t\t\tsetNotifications([...nt]);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ClickAwayListener onClickAway={toggleNotifications}>\r\n\t\t\t<Slide in={open} direction={'up'} timeout={300}>\r\n\t\t\t\t<div className={classes.container}>\r\n\t\t\t\t\t<div className={classes.header}>\r\n\t\t\t\t\t\t<div>{t('notificationsModule.notifications')}</div>\r\n\t\t\t\t\t\t<IconButton onClick={toggleNotifications}>\r\n\t\t\t\t\t\t\t<ClearRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.list} onClick={toggleNotifications}>\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<div className={classes.subheader}>\r\n\t\t\t\t\t\t\t\t{t('notificationsModule.new')}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{notifications\r\n\t\t\t\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t\t\t\t(n) =>\r\n\t\t\t\t\t\t\t\t\t\tdifferenceInHours(\r\n\t\t\t\t\t\t\t\t\t\t\tnew Date(),\r\n\t\t\t\t\t\t\t\t\t\t\tnew Date(n.createdAt)\r\n\t\t\t\t\t\t\t\t\t\t) < 6\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t.map((n, i) => (\r\n\t\t\t\t\t\t\t\t\t<Notification\r\n\t\t\t\t\t\t\t\t\t\tdata={n}\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tupdateNotificationReadStatus={\r\n\t\t\t\t\t\t\t\t\t\t\tupdateNotificationReadStatus\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t<div className={classes.subheader}>\r\n\t\t\t\t\t\t\t\t{t('notificationsModule.earlier')}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{notifications\r\n\t\t\t\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t\t\t\t(n) =>\r\n\t\t\t\t\t\t\t\t\t\tdifferenceInHours(\r\n\t\t\t\t\t\t\t\t\t\t\tnew Date(),\r\n\t\t\t\t\t\t\t\t\t\t\tnew Date(n.createdAt)\r\n\t\t\t\t\t\t\t\t\t\t) > 6\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t.map((n, i) => (\r\n\t\t\t\t\t\t\t\t\t<Notification\r\n\t\t\t\t\t\t\t\t\t\tdata={n}\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tupdateNotificationReadStatus={\r\n\t\t\t\t\t\t\t\t\t\t\tupdateNotificationReadStatus\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Slide>\r\n\t\t</ClickAwayListener>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tzIndex: 2,\r\n\t\twidth: '360px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\tboxShadow: 'rgba(0,0,0,0.25) 0px 0px 6px 3px',\r\n\t\tposition: 'absolute',\r\n\t\tright: 0,\r\n\t\ttop: '64px',\r\n\t\theight: 'calc(100vh - 64px)',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\twidth: '100%',\r\n\t\t\theight: 'calc(100vh - 64px)',\r\n\t\t},\r\n\t},\r\n\tlist: {\r\n\t\twidth: '100%',\r\n\t\tmargin: '0px auto',\r\n\t\tpadding: 0,\r\n\t\tmargin: 0,\r\n\t\toverflow: 'overlay',\r\n\t\tborderRadius: '0 0 10px 10px',\r\n\t\theight: 'calc(100% - 61px)',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tmarginBottom: '50px',\r\n\t\t},\r\n\t},\r\n\tlistItem: {\r\n\t\theight: '100px',\r\n\t\tcolor: 'theme.palette.primary.main',\r\n\t\ttransition: 'background box-shadow 0.3s ease-in-out',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\t\ttransition: 'background box-shadow 0.2s ease-in-out',\r\n\t\t\tboxShadow: '0 8px 32px 0 rgb(0 0 0 / 80%)',\r\n\t\t},\r\n\t},\r\n\tlistItemIcon: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tlistItemText: {\r\n\t\tfontSize: '14px',\r\n\t\tcolor: 'white',\r\n\t},\r\n\tbottomList: {\r\n\t\tpadding: '10px 0',\r\n\t},\r\n\theader: {\r\n\t\theight: '40px',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tfontSize: '22px',\r\n\t\talignItems: 'center',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '10px 20px',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tborderRadius: '10px 10px 0 0',\r\n\t},\r\n\ticon: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tsubheader: {\r\n\t\tcolor: 'white',\r\n\t\twidth: 'fit-content',\r\n\t\tmargin: '10px 20px 5px',\r\n\t\tfontSize: '18px',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.5)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\SideMenu.js",["635","636","637","638","639","640","641","642","643","644","645","646"],"import {\r\n\tClickAwayListener,\r\n\tIcon, IconButton, List,\r\n\tListItem,\r\n\tListItemIcon,\r\n\tListItemText, makeStyles,\r\n\tSlide, useMediaQuery\r\n} from '@material-ui/core';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport React, { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { clearUserLS } from '../../../api/userApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { NotificationsContext } from '../../../context/NotificationsContext';\r\nimport { UserItem } from '../../user/UserItem';\r\n\r\nexport const SideMenu = ({ toggleMenu, toggleSettings, menuOpen }) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.up('sm'));\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { setNotfications } = useContext(NotificationsContext);\r\n\r\n\tconst handleClick = (type) => (event) => {\r\n\t\ttoggleMenu();\r\n\t\thistory.push(`/workspace/${type}`);\r\n\t};\r\n\r\n\tconst userLogout = async () => {\r\n\t\tawait clearUserLS();\r\n\t\thistory.push('/login');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ClickAwayListener onClickAway={toggleMenu}>\r\n\t\t\t<Slide in={menuOpen} direction={lang.code == 'he' ? 'left' : 'right'}>\r\n\t\t\t\t<div className={classes.sidemenuContainer}>\r\n\t\t\t\t\t<div className={classes.closeBtn}>\r\n\t\t\t\t\t\t<IconButton onClick={toggleMenu}>\r\n\t\t\t\t\t\t\t<ClearRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div className={classes.userContainer}>\r\n\t\t\t\t\t\t<UserItem showTitle showName user={auth.user} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<List className={classes.list}>\r\n\t\t\t\t\t\t<ListItem button={true} className={classes.listItem} onClick={handleClick('assets')}>\r\n\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n                                <Icon classes={{root: classes.iconRoot}}>\r\n\t\t\t\t\t\t\t\t<img src=\"https://img.icons8.com/ios-filled/25/4a90e2/warehouse.png\"/>\r\n\t\t\t\t\t\t\t\t</Icon>\t\r\n\t\t\t\t\t\t\t\t{/* <BusinessRoundedIcon fontSize={'medium'} className={classes.icon} /> */}\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={t('sideMenu.assets')}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem button={true} className={classes.listItem} onClick={handleClick('systems')}>\r\n\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n                            <Icon classes={{root: classes.iconRoot}}>\r\n                            <img src=\"https://img.icons8.com/ios-filled/25/4a90e2/system-task.png\"/>\r\n\t\t\t\t\t\t\t\t</Icon>\t\r\n                           \r\n\t\t\t\t\t\t\t\t{/* <BlurOnRoundedIcon fontSize={'medium'} className={classes.icon} /> */}\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={t('sideMenu.systems')}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem button={true} className={classes.listItem} onClick={handleClick('tasks')}>\r\n\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n                            <Icon classes={{root: classes.iconRoot}}>\r\n                            <img src=\"https://img.icons8.com/ios-filled/25/4a90e2/task-completed.png\"/>\r\n\t\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t\t{/* <AssignmentRoundedIcon fontSize={'medium'} /> */}\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={t('sideMenu.myTasks')}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem button={true} className={classes.listItem} onClick={handleClick('repeatableTasks')}>\r\n\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n                            <Icon classes={{root: classes.iconRoot}}>\r\n                            <img src=\"https://img.icons8.com/ios-filled/25/4a90e2/delivery-time.png\"/>\r\n\t\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t\t{/* <AssignmentRoundedIcon fontSize={'medium'} /> */}\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={t('sideMenu.repeatableTasks')}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem button={true} className={classes.listItem} onClick={handleClick('faults')}>\r\n\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n                            \t<Icon classes={{root: classes.iconRoot}}>\r\n                            \t\t<img src=\"https://img.icons8.com/pastel-glyph/23/4a90e2/error--v2.png\"/>\r\n\t\t\t\t\t\t\t\t</Icon>\r\n                                {/* <WarningRoundedIcon fontSize={'medium'} /> */}\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={t('sideMenu.faults')}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem button={true} className={classes.listItem} onClick={handleClick('documents')}>\r\n\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n                            \t<Icon classes={{root: classes.iconRoot}}>\r\n                            \t\t<img src=\"https://img.icons8.com/pastel-glyph/25/4a90e2/regular-document--v2.png\"/>\r\n\t\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t\t{/* <DescriptionRoundedIcon fontSize={'medium'} /> */}\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={t('sideMenu.documents')}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t\t<List className={classes.bottomList}>\r\n\t\t\t\t\t\t<ListItem button={true} onClick={toggleSettings}>\r\n\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n                            <Icon classes={{root: classes.iconRoot}}>\r\n                            <img src=\"https://img.icons8.com/ios-filled/25/4a90e2/settings.png\"/>\r\n\t\t\t\t\t\t\t\t</Icon>\r\n                            \r\n\t\t\t\t\t\t\t\t{/* <SettingsIcon fontSize={'medium'} /> */}\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={t('sideMenu.settings')}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem button={true} onClick={userLogout}>\r\n\t\t\t\t\t\t\t<ListItemIcon className={classes.listItemIcon}>\r\n                            <Icon classes={{root: classes.iconRoot}}>\r\n                            <img src=\"https://img.icons8.com/ios-filled/25/4a90e2/emergency-exit.png\"/>\r\n\t\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t\t{/* <ExitToAppRoundedIcon fontSize={'medium'} /> */}\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={t('sideMenu.logout')}\r\n\t\t\t\t\t\t\t\tclassName={classes.listItemText}\r\n\t\t\t\t\t\t\t\tdisableTypography={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</div>\r\n\t\t\t</Slide>\r\n\t\t</ClickAwayListener>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tuserContainer: {\r\n\t\twidth: 'fit-content',\r\n\t\tpadding: '10px 20px',\r\n\t\tmargin: '40px 0 10px'\r\n\t},\r\n\tsidemenuContainer: {\r\n\t\tzIndex: 2,\r\n\t\twidth: '300px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tbackdropFilter: 'blur(22px)',\r\n\t\tboxShadow: 'rgba(0,0,0,0.25) 0px 0px 6px 3px',\r\n\t\tposition: 'absolute',\r\n\t\ttop: '64px',\r\n\t\tleft: '0px',\r\n\t\theight: '100vh',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: '100%',\r\n\t\t\toverflow: 'scroll',\r\n\t\t\twidth: '100vw',\r\n\t\t\tleft: 0,\r\n\t\t\tborder: 'none',\r\n\t\t\tborderRadius: 0,\r\n\t\t\ttop: '64px',\r\n\t\t\tbackground: 'rgba(0,0,0,0.5)',\r\n\t\t\tbackdropFilter: 'blur(15px)',\r\n\t\t},\r\n\t},\r\n\tlist: {\r\n\t\twidth: '100%',\r\n\t\tborderTop: '1px solid rgba(255,255,255,0.3)',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.3)',\r\n\t\tmargin: '0px auto',\r\n\t\tpadding: '10px 0',\r\n\t},\r\n\tlistItem: {\r\n\t\tcolor: 'theme.palette.primary.main',\r\n\t\tmargin: '0px auto',\r\n\t\tborderRadius: '5px',\r\n\t\ttransition: 'background box-shadow 0.3s ease-in-out',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\t\ttransition: 'background box-shadow 0.2s ease-in-out',\r\n\t\t\tboxShadow: '0 8px 32px 0 rgb(0 0 0 / 80%)',\r\n\t\t},\r\n\t},\r\n\tlistItemIcon: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tlistItemText: {\r\n\t\tfontSize: '16px',\r\n\t\tcolor: 'white',\r\n\t},\r\n\tbottomList: {\r\n\t\tpadding: '10px 0',\r\n    },\r\n    iconRoot: {\r\n\t\ttextAlign: 'center',\r\n\t\twidth: '50px',\r\n\t\theight: '35px',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center'\r\n\t},\r\n\tcloseBtn: {\r\n\t\tposition: 'absolute',\r\n\t\tright: 0,\r\n\t\tpadding: '10px'\r\n\t},\r\n\ticon: {\r\n\t\tcolor: 'white',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\Asset.js",["647","648","649","650","651","652"],"import React, { useContext, useState } from 'react'\r\nimport { makeStyles, Grid, ClickAwayListener, Paper, Typography, Fade, useMediaQuery, IconButton, Tooltip, Backdrop, Modal, Snackbar } from '@material-ui/core'\r\nimport clsx from 'clsx'\r\nimport { UserItem } from '../../user/UserItem'\r\nimport { AssetControls } from './AssetControls'\r\nimport CategoryOutlinedIcon from '@material-ui/icons/CategoryOutlined';\r\nimport VerticalSplitRoundedIcon from '@material-ui/icons/VerticalSplitRounded';\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport AssignmentRoundedIcon from '@material-ui/icons/AssignmentRounded';\r\nimport DescriptionRoundedIcon from '@material-ui/icons/DescriptionRounded';\r\nimport { updateAsset } from '../../../api/assetsApi'\r\nimport PeopleOutlineRoundedIcon from '@material-ui/icons/PeopleOutlineRounded';\r\nimport BlurOnRoundedIcon from '@material-ui/icons/BlurOnRounded';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router'\r\nimport { UpdateOwner } from '../../reuseables/UpdateOwner'\r\nimport { UpsertAsset } from './UpsertAsset'\r\nimport { SnackbarContext } from '../../../context/SnackbarContext'\r\n\r\n\r\nexport const Asset = ({assetData, order, removeAsset }) => {\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const { t, i18n } = useTranslation();\r\n    const { setSnackbar } = useContext(SnackbarContext);\r\n    const [ controlsVisible, setControlsVisible ] = useState(false);\r\n    const [ editMode, setEditMode ] = useState(false);\r\n    const matches = useMediaQuery(theme => theme.breakpoints.up('sm'));\r\n    const [ data, setData ] = useState(assetData);\r\n    \r\n    \r\n    const toggleEditMode = type => event => {\r\n        if (editMode === type) {\r\n            setEditMode(false)\r\n        } else {\r\n            setEditMode(type)\r\n        }\r\n    }\r\n\r\n    const handleUpdate = async (details) => {\r\n        const res = await updateAsset(details);\r\n        if (res.status === 403) {\r\n            setSnackbar(res);\r\n        } else if (res) {\r\n            setData(res.data);\r\n        }\r\n        setEditMode(false);\r\n        \r\n    }\r\n\r\n    const handleReferralClick = type => event => {\r\n        history.push(`${type}?asset=${data._id}`)\r\n    }\r\n\r\n    // const updateOwner = (userId) => {\r\n\t// \t(task._id, userId)\r\n\t// \t.then((res) => {\r\n\t// \t\tif (res.status === 403) {\r\n\t// \t\t\tsetSnackbar(res);\r\n\t// \t\t} else if (res) {\r\n\t// \t\t\tsetTask({\r\n\t// \t\t\t\t...task,\r\n\t// \t\t\t\towner: res.owner,\r\n\t// \t\t\t});\r\n\t// \t\t}\r\n\t// \t\tsetChangeOwner(false);\r\n\t// \t});\r\n\t// };\r\n\r\n\r\n    return (\r\n        <Fade in={true}>\r\n            <Grid item xs={12} sm={7} md={6} lg={4} xl={4} >\r\n                <ClickAwayListener onClickAway={() => editMode ? setEditMode(false) : null }>\r\n                    <Paper \r\n                        className={classes.assetContainer} \r\n                        elevation={9}\r\n                        onMouseEnter={() => setControlsVisible(true)}\r\n                        onMouseLeave={() => setControlsVisible(false)}\r\n                    >\r\n                        <div className={classes.topMain} >\r\n                            <div className={classes.address}>\r\n                                <Typography className={classes.addMain}>\r\n                                    {`${data.address.street} ${data.address.streetNumber}${data.address.entrance || ''}`}\r\n                                </Typography>\r\n                                <Typography className={classes.addSec}>\r\n                                    {`${data.address.city}`}\r\n                                </Typography>\r\n                                <Typography className={classes.addZip}> \r\n                                    {`${data.address.zipcode}, ${data.address.country}`}\r\n                                </Typography>\r\n                            </div>\r\n                            <div className={classes.owner}>\r\n                                <UserItem user={data.owner} showPhone showName avatarSize={'40px'} size={12}/>\r\n                            </div>\r\n                            {\r\n                                (controlsVisible || !matches) &&\r\n                                <AssetControls \r\n                                    removeAsset={() => removeAsset(data._id, data)} \r\n                                    toggleEditMode={toggleEditMode}/>\r\n                            }\r\n                        </div>\r\n                        <div \r\n                            className={classes.bottomMain}\r\n                        >\r\n                            <div className={classes.extraDetails}>\r\n                                <div className={classes.type}>\r\n                                    <CategoryOutlinedIcon className={classes.typeIcon}/>\r\n                                    <div className={classes.typeDetails}>\r\n                                        <div className={classes.typeData}>\r\n                                            {t(`assetsModule.${data.type}`)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {\r\n                                    data.addInfo.floors ? \r\n                                    <div className={clsx(classes.type, classes.floor)}>\r\n                                        <VerticalSplitRoundedIcon className={classes.typeIcon}/>\r\n                                        <div className={classes.typeDetails}>\r\n                                            <div className={classes.typeData}>\r\n                                                {`${data.addInfo.floors} ${t(\"assetsModule.floors\")}`}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                {\r\n                                    data.addInfo.floor ?\r\n                                    <div className={clsx(classes.type, classes.floor)} >\r\n                                        <VerticalSplitRoundedIcon className={classes.typeIcon}/>\r\n                                        <div className={classes.typeDetails}>\r\n                                            <div className={classes.typeData}>\r\n                                            {`${t(\"assetsModule.floor\")} ${data.addInfo.floor}`}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                {\r\n                                    data.addInfo.unit ?\r\n                                    <div className={clsx(classes.type, classes.unit)}>\r\n                                        <HomeRoundedIcon className={classes.typeIcon}/>\r\n                                        <div className={classes.typeDetails}>\r\n                                            <div className={classes.typeData}>\r\n                                            {`${t(\"assetsModule.unit\")} ${data.addInfo.unit}`}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                {\r\n                                    data.addInfo.units ?\r\n                                    <div className={clsx(classes.type, classes.units)}>\r\n                                        <HomeRoundedIcon className={classes.typeIcon}/>\r\n                                        <div className={classes.typeDetails}>\r\n                                            <div className={classes.typeData}>\r\n                                            {`${data.addInfo.units} ${t(\"assetsModule.units\")}`}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                \r\n                            </div>\r\n                            <div className={clsx(classes.buttonsContainer, Boolean(editMode) && classes.buttonsContainerRound)} >\r\n                                <Tooltip title={t(\"assetsModule.systems\")}>\r\n                                    <IconButton \r\n                                        className={classes.button}\r\n                                        onClick={handleReferralClick('systems')}\r\n                                    >\r\n                                        <BlurOnRoundedIcon className={classes.typeIcon}/>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                <Tooltip title={t(\"assetsModule.tasks\")}>\r\n                                    <IconButton className={classes.button} onClick={handleReferralClick('tasks')}>\r\n                                        <AssignmentRoundedIcon className={classes.typeIcon}/>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                <Tooltip title={t(\"assetsModule.faults\")}>\r\n                                    <IconButton className={classes.button} onClick={handleReferralClick('faults')}>\r\n                                        <WarningRoundedIcon className={classes.typeIcon}/>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                <Tooltip title={t(\"assetsModule.documents\")}>\r\n                                    <IconButton className={classes.button} onClick={handleReferralClick('documents')}>\r\n                                        <DescriptionRoundedIcon className={classes.typeIcon}/>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                <Tooltip title={t(\"assetsModule.residents\")}>\r\n                                    <IconButton  className={classes.button}>\r\n                                        <PeopleOutlineRoundedIcon className={classes.typeIcon}/>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                                \r\n                            </div>\r\n                        </div>\r\n                        {   \r\n                            editMode === \"address\" &&\r\n                            <UpsertAsset \r\n                                assetId={data._id} \r\n                                handleUpdate={handleUpdate}\r\n                                handleClose={() => setEditMode(false)}\r\n                            />   \r\n                        }\r\n                        {/* {editMode === \"owner\" && (\r\n                            <UpdateOwner\r\n                                handleClose={() => setEditMode(false)}\r\n                                handleSave={updateOwner}\r\n                                isOpen={editMode === \"owner\"}\r\n                                currentOwner={asset.owner}\r\n                                title={t('assetsModule.updateOwner')}\r\n                                instructions={t('assetsModule.updateOwnerInstructions')}\r\n                            />\r\n                        )} */}\r\n                    </Paper>\r\n                </ClickAwayListener>\r\n            </Grid>\r\n        </Fade>\r\n        \r\n        \r\n    )\r\n\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({  \r\n   \r\n    assetContainer: {\r\n        margin: '10px',\r\n        background: 'white',\r\n        borderRadius: '5px',\r\n        height: 'auto',\r\n        color: 'white',\r\n        background: 'rgba(255,255,255,0.1)',\r\n        [theme.breakpoints.down('xs')] : {\r\n            margin: '10px 0',\r\n            borderRadius: '0',\r\n            border: '0', \r\n        } \r\n    },\r\n    topMain: {\r\n        height: '120px',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        position: 'relative',\r\n        [theme.breakpoints.down('sm')] : {\r\n            borderRadius: '0',\r\n        } \r\n    },\r\n    address: {\r\n        padding: `${theme.spacing(3)}px 0 0 ${theme.spacing(3)}px`,\r\n         \r\n        maxWidth: '45%'\r\n    },\r\n    addMain: {\r\n        fontSize: '20px',\r\n        lineHeight: 1\r\n    },\r\n    addSec: {\r\n        fontSize: '14px'\r\n    },\r\n    addZip: {\r\n        fontSize: '14px'\r\n    },\r\n    bottomMain: {\r\n        height: 'auto',\r\n        borderRadius: '25px',\r\n        position: 'relative',\r\n        background: 'transparent',\r\n        display: 'grid',\r\n        placeItems: 'center'\r\n    },\r\n    owner: {\r\n        width: '160px',\r\n        height: '50px',\r\n        padding: '3px 5px 3px',\r\n        borderRadius: '0px 10px 0px 5px',\r\n        boxShadow: '-2px 2px 2px 0 rgb(0 0 0 / 37%)',\r\n        '&:hover' :{\r\n            background: 'black',\r\n            transition: 'background 0.2s ease',\r\n            boxShadow: '0 8px 32px 0 rgb(0 0 0 / 80%)',\r\n        },\r\n         \r\n    },\r\n    extraDetails: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        height: '30px',\r\n        borderRadius: '25px',\r\n        background: theme.palette.primary.main,\r\n        width: 'fit-content',\r\n        boxShadow: 'rgba(0,0,0,0.4) 0px 0px 5px 2px'\r\n    },\r\n    type: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        padding: '5px 10px',\r\n        width: 'fit-content',\r\n        background: 'transparent',\r\n        color: 'white',\r\n        alignItems: 'center'\r\n    },\r\n    typeIcon: {\r\n        fontSize: '20px',\r\n        color: 'white'\r\n    },\r\n    typeData: {\r\n        padding: '0 10px 0 10px',\r\n        lineHeight: 1\r\n    },\r\n    buttonsContainer: {\r\n        width: 'fit-content',\r\n        margin: '10px auto 0',\r\n        height: 'auto',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        borderRadius: '10px 10px 0 0',\r\n        transition: 'border-radius 0.5s ease',\r\n        background: theme.palette.primary.main,\r\n        boxShadow: 'rgba(0,0,0,0.4) 0px 0px 5px 2px'  \r\n    },\r\n    buttonsContainerRound: {\r\n        borderRadius: '25px',\r\n        transition: 'border-radius 0.5s ease'\r\n    },\r\n    button: {\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.5)',\r\n        }\r\n    },\r\n    \r\n    \r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetsControls.js",["653","654","655"],"import React, { useState } from 'react'\r\nimport { Grid, makeStyles,  useMediaQuery, Collapse, Button } from '@material-ui/core'\r\nimport { SortBy } from '../../reuseables/SortBy'\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport { SearchBox } from '../../reuseables/SearchBox';\r\nimport { FilterBySelect } from '../../reuseables/FilterBySelect';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport { getUserList } from '../../../api/userApi';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport { useTranslation } from 'react-i18next';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport { ClearRounded } from '@material-ui/icons';\r\n\r\n\r\nconst sortOptions = [\r\n    {\r\n        text: 'כתובת',\r\n        field: 'street'\r\n    },\r\n    {\r\n        text: 'עיר',\r\n        field: 'city'\r\n    },\r\n    {\r\n        text: 'מנהל בניין',\r\n        field: 'owner'\r\n    },\r\n    {\r\n        text: 'כמות משימות פתוחות',\r\n        field: 'openTasksCount'\r\n    },\r\n    {\r\n        text: 'כמות תקלות פתוחות',\r\n        field: 'openFaultsCount'\r\n    },\r\n    \r\n]\r\n\r\nexport const AssetsControls = ({ components }) => {\r\n    \r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const [ collapsed, setCollapsed ] = useState(!downSm ? true : false);\r\n    \r\n\r\n    const createUserOptions = () => {\r\n        return getUserList()\r\n        .then(data => {\r\n            let userList = [];\r\n            data.forEach(user => {\r\n                userList.push({label: `${user.firstName} ${user.lastName}`, value: user._id })\r\n            });\r\n            return userList;\r\n        })\r\n    }\r\n\r\n    const toggleCollapse = () => {\r\n        if (collapsed) {\r\n            setCollapsed(false);\r\n            return;\r\n        }\r\n        setCollapsed(true)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                downSm &&\r\n                <Grid container justify='center'>\r\n                    <Grid item xs={11} className={classes.gridItem}>\r\n                        <Button\r\n                        className={classes.sortandfilter}\r\n                        startIcon={<FilterListIcon className={classes.icon} />}\r\n                        endIcon={collapsed ? <ClearRounded /> : <ExpandMoreRoundedIcon />}\r\n                        onClick={toggleCollapse}\r\n                    >\r\n                        {t(`faultsModule.${ collapsed ? 'hide' : 'show'}Filters`)}\r\n                    </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                    \r\n            }\r\n            <Collapse in={collapsed}>\r\n                <Grid container justify='center' >\r\n                    <Grid item xs={11} sm={9} md={7} lg={5} xl={4} className={classes.gridItem}>\r\n                        <SearchBox \r\n                            placeholder={t(\"assetsModule.filterByCityOrAddress\")}\r\n                            filterField={'searchText'}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={11} className={classes.gridItem}>         \r\n                        <FilterBySelect \r\n                            optionsFunc={createUserOptions}\r\n                            placeholder={t(\"assetsModule.filterByAssetOwner\")}\r\n                            filterIcon={<PersonRoundedIcon className={classes.icon }/>}\r\n                            filterField={'owner'}\r\n                        \r\n                        />\r\n                    \r\n                        <SortBy \r\n                            menuOptions={sortOptions}\r\n                        />   \r\n                    </Grid>  \r\n                </Grid>\r\n            </Collapse>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(them => ({\r\n    gridItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        marginLeft: '4px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    sortandfilter: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'rgba(0,0,0,0.7)',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '5px 25px 5px 3px',\r\n        whiteSpace: 'nowrap',\r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    }\r\n}))\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AlertDialog.js",["656"],"import React, { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { useTranslation } from 'react-i18next';\r\nimport clsx from 'clsx';\r\n\r\nexport const AlertDialog = ({ alertDialog , open }) => {\r\n\r\n        const classes = useStyles();\r\n        const { lang } = useContext(LanguageContext);\r\n        const { t, i18n } = useTranslation();\r\n  return (\r\n    <Dialog\r\n        open={true}\r\n        onClose={alertDialog.handleCancel}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        style={{ direction: lang.dir}}\r\n        classes={{\r\n            root: classes.root, \r\n            paper: classes.paper,\r\n            container: classes.container\r\n        }}\r\n        BackdropProps={{\r\n            timeout: 500,\r\n            classes: {\r\n                root: classes.root\r\n            }\r\n        }}\r\n    >\r\n    <DialogTitle id=\"alert-dialog-title\" style={{ direction: lang.dir}} className={classes.title}>\r\n        {alertDialog.title}\r\n    </DialogTitle>\r\n    <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\" style={{ direction: lang.dir}} className={classes.text}>\r\n        { alertDialog.text }\r\n        </DialogContentText>\r\n    </DialogContent>\r\n    <DialogActions className={classes.controls}>\r\n        <Button\r\n            className={clsx(classes.control, classes.save)}\r\n            onClick={alertDialog.handleConfirm}\r\n        >\r\n            { alertDialog.confirmText || t(\"alert.confirm\") }\r\n        </Button>\r\n        <Button\r\n            className={clsx(classes.control, classes.cancel)}\r\n            onClick={alertDialog.handleCancel}\r\n        >\r\n            { alertDialog.cancelText || t(\"alert.cancel\") }\r\n        </Button>\r\n    </DialogActions>\r\n    </Dialog>\r\n\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: 'rgba(0,0,0,0.4)'\r\n    },\r\n    container: {\r\n        backdropFilter: 'blur(10px)',\r\n    },\r\n    paper: {\r\n        width: 'auto',\r\n        padding: '5px',\r\n        background: 'rgba(0,0,0,0.4)',\r\n        borderRadius: '10px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        color: 'white'\r\n    },\r\n    text: {\r\n        color: 'white'\r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsControls.js",["657","658"],"import React, { useState, useEffect } from 'react'\r\nimport { Grid, makeStyles, useMediaQuery, Button, Collapse } from '@material-ui/core'\r\nimport { SortBy } from '../../reuseables/SortBy'\r\nimport { SearchBox } from '../../reuseables/SearchBox';\r\nimport { FilterBySelect } from '../../reuseables/FilterBySelect';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\nimport { getAssetsSuggestions } from '../../../api/systemsApi';\r\nimport { getFullAddress, getAsset } from '../../../api/assetsApi';\r\nimport { useLocation } from 'react-router';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport { ClearRounded } from '@material-ui/icons';\r\n\r\nconst sortOptions = [\r\n    {\r\n        text: 'שם מערכת',\r\n        field: 'systemName'\r\n    },\r\n    {\r\n        text: 'מנהל מערכת',\r\n        field: 'owner'\r\n    },\r\n    {\r\n        text: 'כמות תקלות פתוחות',\r\n        field: 'openFaultsCount'\r\n    },\r\n    \r\n]\r\n\r\nexport const SystemsControls = () => {\r\n    \r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const [ reloadedValue, setReloadedValue ] = useState(null);\r\n    const [ collapsed, setCollapsed ] = useState(!downSm ? true : false);\r\n    \r\n    useEffect(() => {\r\n        if (query.asset) {\r\n            handleReloaded(query.asset)\r\n            .then(data => {\r\n                if (data) {\r\n                    setReloadedValue(data);\r\n                } else {\r\n                    \r\n                }\r\n            })\r\n        } else {\r\n            setReloadedValue({\r\n                label: '',\r\n                value: null\r\n            });\r\n        }\r\n    }, [location.search])\r\n\r\n    const handleReloaded = async (assetId) => {\r\n        const res = await getAsset(assetId, false);\r\n        if (res) {\r\n            return {\r\n                label: getFullAddress(res),\r\n                value: res._id\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const toggleCollapse = () => {\r\n        if (collapsed) {\r\n            setCollapsed(false);\r\n            return;\r\n        }\r\n        setCollapsed(true)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                downSm &&\r\n                <Grid container justify='center'>\r\n                    <Grid item xs={11} className={classes.gridItem}>\r\n                        <Button\r\n                        className={classes.sortandfilter}\r\n                        startIcon={<FilterListIcon className={classes.icon} />}\r\n                        endIcon={collapsed ? <ClearRounded /> : <ExpandMoreRoundedIcon />}\r\n                        onClick={toggleCollapse}\r\n                    >\r\n                        {t(`faultsModule.${ collapsed ? 'hide' : 'show'}Filters`)}\r\n                    </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                    \r\n            }\r\n            <Collapse in={collapsed}>\r\n                <Grid container justify='center' >\r\n                    <Grid item xs={12} className={classes.gridItem}>\r\n\r\n                        {\r\n                            reloadedValue &&\r\n                            <SearchBoxSelect\r\n                                suggestionsFunc={getAssetsSuggestions}\r\n                                placeholder={t(\"systemsModule.filterByAsset\")}\r\n                                filterField={'asset'}\r\n                                reloadedLabel={reloadedValue.label}\r\n                                reloadedValue={reloadedValue.value}\r\n                            />\r\n                        }  \r\n                        <SearchBox \r\n                                placeholder={t(\"systemsModule.filterBySystemName\")}\r\n                                filterField={'name'}\r\n                            />\r\n                        </Grid>\r\n                    <Grid xs={11} className={classes.gridItem}>\r\n                        <FilterBySelect \r\n                            optionsFunc={createUserOptions}\r\n                            placeholder={t(\"systemsModule.filterBySystemOwner\")}\r\n                            filterIcon={<PersonRoundedIcon className={classes.icon }/>}\r\n                            filterField={'owner'}\r\n                        />\r\n                        <SortBy \r\n                            menuOptions={sortOptions}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n            </Collapse>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(them => ({\r\n    gridItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        marginLeft: '4px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    sortandfilter: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'rgba(0,0,0,0.7)',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '5px 25px 5px 3px',\r\n        whiteSpace: 'nowrap',\r\n        '&:hover': {\r\n            background: 'black'\r\n        }\r\n    }\r\n}))\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemsHeader.js",["659","660","661"],"import React from 'react';\r\nimport { Grid, makeStyles, Paper, useMediaQuery } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Can } from '../../reuseables/Can';\r\n\r\nexport const SystemsHeader = () => {\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst { t, i18n } = useTranslation();\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} sm={7} md={8} lg={11} lg={11}>\r\n\t\t\t<Paper elevation={9} className={classes.headerPaper}>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item lg={4}>\r\n\t\t\t\t\t\t<div className={classes.systemName}>\r\n\t\t\t\t\t\t\t{t('systemsModule.systemName')}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t{!downSm && (\r\n\t\t\t\t\t\t<Grid item lg={8} className={classes.controller}>\r\n\t\t\t\t\t\t\t<Grid container style={{ height: '100%' }}>\r\n\t\t\t\t\t\t\t\t<Grid item lg={9}>\r\n\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.actionsContainer}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.moreDetails')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.tasks')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.faults')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.documents')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Can module='systems' action='changeRelatedUsers' userList={[]}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t'systemsModule.changeOwner'\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.iconHeader}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.users')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>{' '}\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n                                <Grid item lg={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.ownerHeader}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('systemsModule.ownerHeader')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Paper>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\theaderPaper: {\r\n\t\theight: '45px',\r\n\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\tmargin: '5px',\r\n\t\tborderRadius: '5px',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tfontSize: '12px',\r\n\t},\r\n\tsystemName: {\r\n\t\tmargin: 'auto 20px',\r\n        whiteSpace: 'nowrap',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n\t},\r\n\tactionsContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tfontSize: '12px',\r\n        justifyContent: 'flex-end',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n\t},\r\n\ticonHeader: {\r\n\t\ttextAlign: 'center',\r\n\t\tmargin: 'auto',\r\n\t},\r\n\townerHeader: {\r\n\t\ttextAlign: 'center',\r\n        margin: 'auto',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tmargin: 'auto 0',\r\n\t\t},\r\n    },\r\n    controller: {\r\n        padding: '5px'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\System.js",["662","663","664"],"C:\\projects\\leev\\leev-fe\\src\\api\\systemsApi.js",["665"],"import axios from 'axios';\r\nimport i18next from 'i18next';\r\nimport { getAssets, getFullAddress } from './assetsApi';\r\nimport { getUnauthorizedMessage } from './genericApi';\r\n\r\nexport const createNewSystem = async (details) => {\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/createSystem`,\r\n            { ...details },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'create',\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n    } catch(e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }   \r\n};\r\n\r\nexport const getAssetsSuggestions = async (searchText) => {\r\n\tconst data = await getAssets();\r\n\tlet result = [{ text: i18next.t('general.none'), value: '' }];\r\n\tif (!searchText) {\r\n\t\tdata.forEach((asset) => {\r\n\t\t\tresult.push({\r\n\t\t\t\ttext: getFullAddress(asset),\r\n\t\t\t\tvalue: asset._id,\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\tlet filtered = data.filter((asset) => {\r\n\t\treturn getFullAddress(asset).indexOf(searchText) !== -1;\r\n\t});\r\n\tfiltered.forEach((asset) => {\r\n\t\tresult.push({\r\n\t\t\tlabel: getFullAddress(asset),\r\n\t\t\tvalue: asset._id,\r\n\t\t});\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport const getSystemsByAsset = async (assetId) => {\r\n    try {   \r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/getSystems`,\r\n            { assetId },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'read',\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n        return [];\r\n    } catch(e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }\r\n\t\r\n};\r\n\r\nexport const applyFilters = (filters, systems) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (!filters) resolve(systems);\r\n\t\tif (filters.sortBy) {\r\n\t\t\tif (filters.sortBy === 'systemName') {\r\n\t\t\t\tsystems = systems.sort((a, b) => {\r\n\t\t\t\t\treturn filters.sortOrder === 'asc'\r\n\t\t\t\t\t\t? a.name > b.name\r\n\t\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t\t: -1\r\n\t\t\t\t\t\t: a.name < b.name\r\n\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t: -1;\r\n\t\t\t\t});\r\n\t\t\t} else if (filters.sortBy === 'owner') {\r\n\t\t\t\tsystems = systems.sort((a, b) => {\r\n\t\t\t\t\tlet aName = `${a.owner.firstName} ${a.owner.lastName}`;\r\n\t\t\t\t\tlet bName = `${b.owner.firstName} ${b.owner.lastName}`;\r\n\t\t\t\t\treturn filters.sortOrder === 'asc'\r\n\t\t\t\t\t\t? aName > bName\r\n\t\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t\t: -1\r\n\t\t\t\t\t\t: aName < bName\r\n\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t: -1;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (filters.name) {\r\n\t\t\tsystems = systems.filter((system) => {\r\n\t\t\t\treturn system.name.indexOf(filters.name) !== -1;\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (filters.owner) {\r\n\t\t\tsystems = systems.filter((system) => {\r\n\t\t\t\tif (filters.owner instanceof Array) {\r\n\t\t\t\t\treturn filters.owner.indexOf(system.owner._id) !== -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn system.owner._id == filters.owner;\r\n\t\t\t});\r\n\t\t}\r\n\t\tresolve(systems);\r\n\t});\r\n};\r\n\r\nexport const updateSystemOwner = async (systemId, owner) => {\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/updateSystemOwner`,\r\n            { systemId, owner },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'changeOwner',\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n        return [];\r\n    } catch(e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }\r\n\t\r\n};\r\n\r\nexport const updateSystemName = async (systemId, name) => {\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/updateSystemName`,\r\n            { systemId, name },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'update',\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n        return [];\r\n    } catch(e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }\r\n\t\r\n};\r\n\r\nexport const removeSystemUser = async (systemId, userId) => {\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/removeRelatedUser`,\r\n            { systemId, userId },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'changeRelatedUsers',\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n        return [];\r\n    } catch(e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }\r\n\t\r\n};\r\n\r\nexport const addUser = async (systemId, userId) => {\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/addRelatedUser`,\r\n            { systemId, userId },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'changeRelatedUsers',\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        }\r\n        return ;\r\n    } catch(e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }\r\n\t\r\n};\r\n\r\nexport const updateSystemAdditionalData = async (systemData) => {\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_BACKEND_URL}/systems/updateSystemData`,\r\n            { systemData },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'update',\r\n                },\r\n            }\r\n        );\r\n        if (res.data) {\r\n            return res.data;\r\n        }\r\n        return null;\r\n    } catch (e) {\r\n        if (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n    }\r\n\t\r\n};\r\n\r\nexport const createSystemMenuOptions = (systems) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tlet options = [];\r\n\t\tsystems.forEach((s) => {\r\n\t\t\toptions.push({ text: s.name, value: s._id });\r\n\t\t});\r\n\t\tresolve(options);\r\n\t});\r\n};\r\n\r\nexport const getSystemsByAssetOptions = async (asset) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/systems/getSystemsOptions`,\r\n\t\t\t{ asset },\r\n            {\r\n                headers: {\r\n                    module: 'systems',\r\n                    requesttype: 'read',\r\n                },\r\n            }\r\n\t\t);\r\n\t\tlet options = [];\r\n\t\tif (!res) return [];\r\n\t\tres.data.forEach((t) => {\r\n\t\t\tif (asset) {\r\n\t\t\t\toptions.push({ label: t.name, value: t._id });\r\n\t\t\t} else {\r\n\t\t\t\toptions.push({\r\n\t\t\t\t\tlabel: `${t.name}, ${getFullAddress(t.asset)}`,\r\n\t\t\t\t\tvalue: t._id,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn options;\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\mapApi.js",["666"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\Mapbox.js",["667","668","669","670","671","672","673","674"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport ReactMapGL, {\r\n\tFlyToInterpolator,\r\n\tMarker,\r\n\tsetRTLTextPlugin,\r\n} from 'react-map-gl';\r\nimport { makeStyles, IconButton, ClickAwayListener } from '@material-ui/core';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport useSupercluster from 'use-supercluster';\r\nimport { getMapData } from '../../../api/mapApi';\r\nimport { updateQueryParams } from '../../../api/genericApi';\r\nimport clsx from 'clsx';\r\nimport mapboxgl from \"mapbox-gl\";\r\n\r\n// @ts-ignore\r\n// eslint-disable-next-line import/no-webpack-loader-syntax, import/no-unresolved\r\nmapboxgl.workerClass = require(\"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\").default;\r\n\r\nsetRTLTextPlugin(\r\n\t// find out the latest version at https://www.npmjs.com/package/@mapbox/mapbox-gl-rtl-text\r\n\t'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js',\r\n\tnull,\r\n\t// lazy: only load when the map first encounters Hebrew or Arabic text\r\n\ttrue\r\n);\r\n\r\nexport const Mapbox = ({ data, setData }) => {\r\n\tconst location = useLocation();\r\n\tconst history = useHistory();\r\n\tconst query = useQuery(location.search);\r\n\tconst map = useRef();\r\n\tconst classes = useStyles();\r\n\tconst [mapData, setMapData] = useState(data);\r\n\tconst [extId, setExtId] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (data) {\r\n\t\t\tsetMapData(data);\r\n\t\t}\r\n\t}, [data]);\r\n\r\n\tconst [viewport, setViewport] = useState({\r\n\t\tlatitude: Number(query.lat),\r\n\t\tlongitude: Number(query.lng),\r\n\t\tzoom: 10,\r\n\t\twidth: 'auto',\r\n\t\theight: '100%'\r\n\t});\r\n\r\n\tconst points = mapData.assets.map((asset, i) => ({\r\n\t\ttype: 'Feature',\r\n\t\tproperties: {\r\n\t\t\tcluster: false,\r\n\t\t\tasset,\r\n\t\t},\r\n\t\tgeometry: {\r\n\t\t\ttype: 'Point',\r\n\t\t\tcoordinates: [asset.coordinates.lng, asset.coordinates.lat],\r\n\t\t},\r\n\t}));\r\n\r\n\tconst bounds = map.current\r\n\t\t? map.current.getMap().getBounds().toArray().flat()\r\n\t\t: null;\r\n\r\n\tconst { clusters, supercluster } = useSupercluster({\r\n\t\tpoints,\r\n\t\tzoom: viewport.zoom,\r\n\t\tbounds,\r\n\t\toptions: {\r\n\t\t\tradius: 15,\r\n\t\t\tmaxZoom: 20,\r\n\t\t},\r\n\t});\r\n\r\n\tconst handleMarkerClick = (cluster) => (event) => {\r\n\t\tconst { cluster: isCluster } = cluster.properties;\r\n\t\tsetExtId(cluster.id);\r\n\t\tif (isCluster) {\r\n\t\t\tlet leaves = getClusterLeaves(cluster.id);\r\n\r\n\t\t\tlet reqData = leaves.map((lv) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tasset: lv.properties.asset,\r\n\t\t\t\t\tfaults: mapData.faults.filter(\r\n\t\t\t\t\t\t(f) => f.asset._id === lv.properties.asset._id\r\n\t\t\t\t\t),\r\n\t\t\t\t\ttasks: mapData.tasks.filter(\r\n\t\t\t\t\t\t(t) => t.asset._id === lv.properties.asset._id\r\n\t\t\t\t\t),\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\tconsole.log(reqData);\r\n\t\t\tsetData(reqData);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetData([\r\n\t\t\t{\r\n\t\t\t\tasset: cluster.properties.asset,\r\n\t\t\t\tfaults: mapData.faults.filter(\r\n\t\t\t\t\t(f) => f.asset._id === cluster.properties.asset._id\r\n\t\t\t\t),\r\n\t\t\t\ttasks: mapData.tasks.filter(\r\n\t\t\t\t\t(t) => t.asset._id === cluster.properties.asset._id\r\n\t\t\t\t),\r\n\t\t\t},\r\n\t\t]);\r\n\t};\r\n\r\n\tconst getClusterLeaves = (clusterId) => {\r\n\t\treturn supercluster.getLeaves(clusterId);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ReactMapGL\r\n\t\t\tref={map}\r\n\t\t\t{...viewport}\r\n\t\t\tmapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n\t\t\tonViewportChange={(viewport) =>\r\n\t\t\t\tsetViewport(viewport)\r\n\t\t\t}\r\n\t\t\tmapStyle={'mapbox://styles/nivmimran/ckngo7jr231jt18pcc4bzobs3'}\r\n\t\t\tattributionControl={false}\r\n\t\t>\r\n\t\t\t{clusters.map((cluster, i) => {\r\n\t\t\t\tconst [longitude, latitude] = cluster.geometry.coordinates;\r\n\t\t\t\tconst { cluster: isCluster } = cluster.properties;\r\n\r\n\t\t\t\tif (isCluster) {\r\n\t\t\t\t\tconst leaves = getClusterLeaves(cluster.id);\r\n\t\t\t\t\tlet totalFaults = 0;\r\n\t\t\t\t\tleaves.forEach((lv) => {\r\n\t\t\t\t\t\ttotalFaults += lv.properties.asset.faultCount;\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Marker\r\n\t\t\t\t\t\t\tlongitude={longitude}\r\n\t\t\t\t\t\t\tlatitude={latitude}\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tonClick={handleMarkerClick(cluster)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{!!totalFaults && (\r\n\t\t\t\t\t\t\t\t<div className={classes.totalFaults}>\r\n\t\t\t\t\t\t\t\t\t{totalFaults}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\tclasses.markerIcon,\r\n\t\t\t\t\t\t\t\t\textId === cluster.id ? classes.active : null\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<img src=\"https://img.icons8.com/nolan/35/skyscrapers.png\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Marker>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Marker\r\n\t\t\t\t\t\tlongitude={longitude}\r\n\t\t\t\t\t\tlatitude={latitude}\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tonClick={handleMarkerClick(cluster)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Boolean(cluster.properties.asset.faultCount) && (\r\n\t\t\t\t\t\t\t<div className={classes.totalFaults}>\r\n\t\t\t\t\t\t\t\t{cluster.properties.asset.faultCount}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\tclasses.markerIcon,\r\n\t\t\t\t\t\t\t\textId === cluster.id ? classes.active : null\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\tcluster.properties.asset.type ===\r\n\t\t\t\t\t\t\t\t\t'apartment'\r\n\t\t\t\t\t\t\t\t\t\t? 'https://img.icons8.com/nolan/35/cottage.png'\r\n\t\t\t\t\t\t\t\t\t\t: 'https://img.icons8.com/nolan/35/company.png'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Marker>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</ReactMapGL>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttotalFaults: {\r\n\t\tbackground: 'red',\r\n\t\tcolor: 'white',\r\n\t\twidth: 'fit-content',\r\n\t\theight: 'fit-content',\r\n\t\tpadding: '2px 5px',\r\n\t\tborderRadius: '50px',\r\n\t\tfontSize: '13px',\r\n\t\tposition: 'relative',\r\n\t\ttop: '15px',\r\n\t},\r\n\tmarkerIcon: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '3px 5px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tcursor: 'pointer',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MarkerData.js",["675","676","677","678","679","680","681","682","683"],"import {\r\n\tmakeStyles,\r\n\tGrid,\r\n\tFormControl,\r\n\tSelect,\r\n\tMenuItem,\r\n\tLinearProgress,\r\n\tIconButton,\r\n\tButton\r\n} from '@material-ui/core';\r\nimport { Clear } from '@material-ui/icons';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n\tgetFullAddress,\r\n\tgetShortAddress,\r\n\tgetUnit,\r\n} from '../../../api/assetsApi';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { FaultMinified } from '../faults/FaultMinified';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { useTranslation } from 'react-i18next';\r\nimport clsx from 'clsx';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport AssignmentRoundedIcon from '@material-ui/icons/AssignmentRounded';\r\nimport { TaskMinified } from '../tasks/TaskMinified';\r\n\r\nexport const MarkerData = ({ markersData, handleClose }) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { t } = useTranslation();\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [data, setData] = useState(markersData);\r\n\tconst [faults, setFaults] = useState([]);\r\n\tconst [tasks, setTasks] = useState([]);\r\n\tconst [selectedAsset, setSelectedAsset] = useState(data[0].asset._id);\r\n\tconst [type, setType] = useState(null);\r\n\tconst [ detailsActive, setDetailsActive ] = useState('faults');\r\n\r\n\tuseEffect(() => {\r\n\t\tif (data.length) {\r\n\t\t\tif (data.length > 1) {\r\n\t\t\t\tlet addressList = data.map((md) => getShortAddress(md.asset));\r\n\t\t\t\tlet unique = addressList.filter(function (value, index, self) {\r\n\t\t\t\t\treturn self.indexOf(value) === index;\r\n\t\t\t\t});\r\n\t\t\t\tif (addressList.length === 1) {\r\n\t\t\t\t\tsetType('apt');\r\n\t\t\t\t} else if (unique.length > 1) {\r\n\t\t\t\t\tsetType('cluster');\r\n\t\t\t\t} else if (unique.length !== addressList.length) {\r\n\t\t\t\t\tsetType('apts');\r\n\t\t\t\t}\r\n\t\t\t\tsetSelectedAsset(data[0].asset._id);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetType('apt');\r\n\t\t\tsetSelectedAsset(data[0].asset._id);\r\n\t\t}\r\n\t}, [data]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (markersData) {\r\n\t\t\tsetData(markersData);\r\n\t\t}\r\n\t}, [markersData]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (selectedAsset) {\r\n\t\t\tlet item = data.find((md) => md.asset._id === selectedAsset);\r\n\t\t\tif (item) {\r\n\t\t\t\tsetFaults(item.faults);\r\n\t\t\t\tsetTasks(item.tasks);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetFaults(data[0].faults);\r\n\t}, [selectedAsset]);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetSelectedAsset(event.target.value);\r\n\t};\r\n\r\n\tconst handleClick = type => event => {\r\n\t\tsetDetailsActive(type)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.container}>\r\n\t\t\t<IconButton onClick={handleClose} className={classes.closeBtn}>\r\n\t\t\t\t<ClearRoundedIcon />\r\n\t\t\t</IconButton>\r\n\t\t\t{(data.length === 1 || type === 'apts') && (\r\n\t\t\t\t<div className={classes.streetName}>\r\n\t\t\t\t\t{data.length === 1\r\n\t\t\t\t\t\t? getFullAddress(data[0].asset)\r\n\t\t\t\t\t\t: getShortAddress(data[0].asset)}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{data.length > 1 && (\r\n\t\t\t\t<div className={classes.selectContainer}>\r\n\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tclassName={classes.textInput}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tvalue={selectedAsset}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tclassName={clsx(classes.menu, \r\n\t\t\t\t\t\t\t\ttype === 'apts'\r\n\t\t\t\t\t\t\t\t\t? classes.menu\r\n\t\t\t\t\t\t\t\t\t: classes.menuTitle\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\toutlined: classes.outlinedSelect\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{data.map((md, i) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\tvalue={md.asset._id}\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tdirection:\r\n\t\t\t\t\t\t\t\t\t\t\t\tlang.code === 'he'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'rtl'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'ltr',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{type === 'apts'\r\n\t\t\t\t\t\t\t\t\t\t\t? getUnit(md.asset)\r\n\t\t\t\t\t\t\t\t\t\t\t: type === 'cluster'\r\n\t\t\t\t\t\t\t\t\t\t\t? getFullAddress(md.asset)\r\n\t\t\t\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div className={classes.pillContainer}>\r\n\t\t\t\t<div onClick={handleClick('faults')} className={clsx(classes.openItems, classes.openFaults, detailsActive === 'faults' && classes.tabActive)}>\r\n\t\t\t\t\t<WarningRoundedIcon className={classes.icon}/>\r\n\t\t\t\t\t{`${ faults.length } ${t(\"mapModule.openFaults\")}`}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div onClick={handleClick('tasks')} className={clsx(classes.openItems, classes.openTasks, detailsActive === 'tasks' && classes.tabActive)}>\r\n\t\t\t\t\t<AssignmentRoundedIcon className={classes.icon}/>\r\n\t\t\t\t\t{`${ tasks.length } ${t(\"mapModule.todaysTasks\")}`}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tdetailsActive === 'faults' ? \r\n\t\t\t\tfaults.length ? (\r\n\t\t\t\t\t<div className={classes.faultContainer}>\r\n\t\t\t\t\t\t{faults.map((mdf, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className={classes.miniFault}>\r\n\t\t\t\t\t\t\t\t\t<FaultMinified data={mdf} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className={classes.noFaults}>\r\n\t\t\t\t\t\t{t('mapModule.noFaults')}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t\t: \r\n\t\t\t\ttasks.length ? (\r\n\t\t\t\t\t<div className={classes.taskContainer}>\r\n\t\t\t\t\t\t{tasks.map((mdf, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className={classes.miniTask}>\r\n\t\t\t\t\t\t\t\t\t<TaskMinified data={mdf} asList={true} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className={classes.noFaults}>\r\n\t\t\t\t\t\t{t('mapModule.noTasks')}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\toverflowY: 'overlay',\r\n\t\tbackground: 'rgba(0,0,0,0.2)',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: 'auto'\r\n\t\t}\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: '16px',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'grid',\r\n\t\tborderRadius: '5px',\r\n\t\tpadding: '0',\r\n\t\tmargin: '60px 0px 10px',\r\n\t\twidth: 'fit-content',\r\n\t\tminWidth: '300px',\r\n\t\talignItems: 'flex-end',\r\n\t\tbackground: 'rgb(140, 19, 171)',\r\n\t\tborderRadius: '50px',\r\n\t},\r\n\tstreetName: {\r\n\t\tfontSize: '16px',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'grid',\r\n\t\tborderRadius: '5px',\r\n\t\tpadding: '7px 40px 7px 20px',\r\n\t\tmargin: '60px 10px 5px',\r\n\t\twidth: 'fit-content',\r\n\t\talignItems: 'flex-end',\r\n\t\tbackground: 'rgb(140, 19, 171)',\r\n\t\tborderRadius: '50px',\r\n\t},\r\n\tminiFault: {\r\n\t\theight: '150px',\r\n\t\tpadding: '10px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tbackground: 'rgba(0,0,0,0.0)',\r\n\t\tmargin: '10px',\r\n\t\tborderRadius: '5px'\r\n\t},\r\n\tminiTask: {\r\n\t\tborder: '0 solid rgba(255,255,255,0.2)',\r\n\t\tbackground: 'rgba(0,0,0,0.0)',\r\n\t\tmargin: '10px',\r\n\t},\r\n\tfaultContainer: {\r\n\t\tborderTop: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmarginTop: '5x'\r\n\t},\r\n\ttaskContainer: {\r\n\t\tborderTop: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmarginTop: '5px'\r\n\t},\r\n\tmenu: {\r\n\t\tcolor: 'white',\r\n\t\theight: '40px',\r\n\t\tmargin: '5px 50px 5px 10px',\r\n\t\t'&:hover': {\r\n\t\t\tborderColor: 'white',\r\n\t\t},\r\n\t},\r\n\tmenuTitle: {\r\n\t\tcolor: 'white',\r\n\t\tmargin: '60px 50px 0px 10px',\r\n\t\theight: '33px',\r\n\t\tminWidth: '200px',\r\n\t\tbackground: 'rgb(140, 19, 171)',\r\n\t\tborderRadius: '50px',\r\n\t\tfontSize: '15px',\r\n\t\tpadding: '0',\r\n\t\tlineHeight: 2,\r\n\t\t'&:hover': {\r\n\t\t\tborderColor: 'white',\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmaxHeight: '200px',\r\n\t\toverflowY: 'auto',\r\n\t\tmarginTop: '60px',\r\n\t\tmarginRight: '7px',\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tselectContainer: {\r\n\t\tpadding: '0px 0'\r\n\t},\r\n\ttextInput: {\r\n\t\tpadding: '0px 0',\r\n\t\tbackground: 'rgba(0,0,0,0.0)',\r\n\t\tfontSize: '16px',\r\n\t\twidth: '100%',\r\n\t\t'& input': {\r\n\t\t\tcolor: 'white',\r\n\t\t\tpaddingLeft: '20px',\r\n\t\t},\r\n\t\t'& label': {\r\n\t\t\tcolor: 'white',\r\n\t\t\tpaddingLeft: '5px',\r\n\t\t},\r\n\t\t'& fieldset': {\r\n\t\t\tborderColor: 'rgba(255,255,255,0.6)',\r\n\t\t\tborderRadius: '42px',\r\n\t\t},\r\n\t},\r\n\tcloseBtn: {\r\n\t\tcolor: 'white',\r\n\t\talignSelf: 'flex-end',\r\n\t\tmargin: '6px',\r\n\t\tposition: 'absolute',\r\n\t\tzIndex: 3,\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\t},\r\n\t},\r\n\tnoFaults: {\r\n\t\tcolor: 'white',\r\n\t\tbackground: 'rgba(0,0,0,0.8)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '10px 20px',\r\n\t\tmargin: '10px',\r\n\t\tfontSize: '14px',\r\n\t\twidth: 'fit-content'\r\n\t},\r\n\topenItems: {\r\n\t\t\r\n\t\tcolor: 'white',\r\n\t\tpadding: '5px 20px 5px 10px',\r\n\t\tborderRadius: '50px',\r\n\t\twidth: 'fit-content',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tmargin: '0px 10px 5px 0px',\r\n\t\tfontSize: '13px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\topacity: 0.7,\r\n\t\tcursor: 'pointer',\r\n\t\t'&:hover': {\r\n\t\t\topacity: 1,\r\n\t\t\tboxShadow: 'inset rgba(0,0,0,0.4) 0 0 3px 1px'\r\n\t\t}\r\n\t},\r\n\topenFaults: {\r\n\t\tbackground: '#F03930',\r\n\t},\r\n\topenTasks: {\r\n\t\tbackground: '#6540EB',\r\n\t},\r\n\ticon: {\r\n\t\tmarginRight: '7px',\r\n\t\tfontSize: '18px',\r\n\t\tpaddingBottom: '2px'\r\n\t},\r\n\tpillContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: '5px 10px'\r\n\t},\r\n\ttabActive: {\r\n\t\tborder: '1px solid white',\r\n\t\topacity: 1\r\n\t},\r\n\toutlinedSelect: {\r\n\t\tpadding: '10px'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\Map.js",["684","685","686","687","688","689","690","691","692","693","694","695","696"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\UpsertDocument.js",["697","698","699","700","701","702"],"import {\r\n\tAvatar,\r\n\tBackdrop,\r\n\tButton,\r\n\tChip,\r\n\tFade,\r\n\tFormHelperText,\r\n\tGrid,\r\n\tIconButton,\r\n\tLinearProgress,\r\n\tmakeStyles,\r\n\tMenuItem,\r\n\tModal,\r\n\tPaper,\r\n\tSelect,\r\n\tTextField,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport clsx from 'clsx';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getFaults } from '../../../api/faultsApi';\r\nimport { getFullName } from '../../../api/genericApi';\r\nimport { createSystemMenuOptions, getAssetsSuggestions, getSystemsByAsset } from '../../../api/systemsApi';\r\nimport { getTasks } from '../../../api/tasksApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { UserItem } from '../../user/UserItem';\r\nimport { getDocument } from '../../../api/documentsApi';\r\n\r\nexport const UpsertDocument = ({ handleClose, handleSave, documentId }) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [errors, setErrors] = useState([]);\r\n\tconst [assets, setAssets] = useState([]);\r\n\tconst [systems, setSystems] = useState([]);\r\n\tconst [tasks, setTasks] = useState([]);\r\n\tconst [faults, setFaults] = useState([]);\r\n\tconst [userList, setUserList] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [mode, setMode] = useState(documentId ? 'update' : 'create');\r\n\tconst [details, setDetails] = useState({\r\n\t\ttenant: auth.user.tenant,\r\n\t\tdescription: '',\r\n\t\tasset: '',\r\n\t\tsystem: '',\r\n\t\tfault: '',\r\n\t\ttask: '',\r\n\t\tuser: '',\r\n\t\tcreatedBy: auth.user._id,\r\n\t\tfile: null,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tcreateUserOptions()\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetUserList(data);\r\n\t\t\t\treturn getAssetsSuggestions();\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetAssets(data);\r\n\t\t\t\tif (!documentId) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tgetDocument(documentId)        \r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\treturn Promise.all([loadSystemOptions(data.asset), Promise.resolve(data)]) \r\n\t\t\t\t})\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tlet data = res[1];\r\n\t\t\t\t\tif (!data) return;\r\n\t\t\t\t\tsetDetails({ ...data, file: null });\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!details.asset) {\r\n\t\t\tsetTasks([]);\r\n\t\t\tsetFaults([]);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tPromise.all([\r\n\t\t\tgetTasks(auth.user.tenant, {\r\n\t\t\t\tasset: details.asset,\r\n\t\t\t\tsystem: details.system || null,\r\n\t\t\t}),\r\n\t\t\tgetFaults(auth.user.tenant, {\r\n\t\t\t\tasset: details.asset,\r\n\t\t\t\tsystem: details.system || null,\r\n\t\t\t}),\r\n\t\t]).then((res) => {\r\n\t\t\tlet tasksOptions = [];\r\n\t\t\tlet faultsOptions = [];\r\n\t\t\tres[0].forEach((task) => {\r\n\t\t\t\ttasksOptions.push({\r\n\t\t\t\t\ttext: `${task.taskId} | ${task.title}`,\r\n\t\t\t\t\tvalue: task._id,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tres[1].forEach((fault) => {\r\n\t\t\t\tfaultsOptions.push({\r\n\t\t\t\t\ttext: `${fault.faultId} | ${fault.title}`,\r\n\t\t\t\t\tvalue: fault._id,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tsetTasks(tasksOptions);\r\n\t\t\tsetFaults(faultsOptions);\r\n\t\t});\r\n\t}, [details.asset, details.system]);\r\n\r\n\tconst validateFields = () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet errList = [];\r\n\t\t\tif (!details.description) {\r\n\t\t\t\terrList.push({ field: 'description', text: t('errors.isRequired') });\r\n\t\t\t}\t\r\n\t\t\tif (!details.file && mode === 'create') {\r\n\t\t\t\terrList.push({ field: 'file', text: t('errors.isRequired') });\r\n\t\t\t}\r\n\t\t\tif (errList.length) {\r\n\t\t\t\tsetErrors(errList);\r\n\t\t\t\tresolve(false);\r\n\t\t\t}\r\n\t\t\tresolve(true);\r\n\t\t});\r\n\t};\r\n\r\n\tconst loadSystemOptions = async (assetId) => {\r\n\t\treturn getSystemsByAsset(assetId)\r\n\t\t\t.then((systems) => {\r\n\t\t\t\treturn createSystemMenuOptions(systems);\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetSystems(data);\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tvalidateFields()\r\n\t\t.then((res) => {\r\n\t\t\tif (!res) return;\r\n\t\t\thandleSave(details);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (field) => async (event) => {\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\t[field]: event.target.value,\r\n\t\t});\r\n\t\tif (field === 'asset') {\r\n\t\t\tif (event.target.value) {\r\n\t\t\t\tawait loadSystemOptions(event.target.value);\r\n\t\t\t} else {\r\n\t\t\t\tsetDetails({\r\n\t\t\t\t\t...details,\r\n\t\t\t\t\ttask: '',\r\n\t\t\t\t\tfault: '',\r\n\t\t\t\t\tsystem: '',\r\n\t\t\t\t\tasset: '',\r\n\t\t\t\t});\r\n\t\t\t\tsetSystems([]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (errors.length) {\r\n\t\t\tsetErrors(errors.filter((err) => err.field !== field));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleFileUpload = (event) => {\r\n\t\tsetDetails({\r\n\t\t\t...details,\r\n\t\t\tfile: event.target.files[0]\r\n\t\t});\r\n\t\tif (errors.length) {\r\n\t\t\tsetErrors(errors.filter((err) => err.field !== 'file'));\r\n\t\t}\r\n\t};\r\n\r\n\treturn isLoading ? (\r\n\t\t<LinearProgress />\r\n\t) : (\r\n\t\t<Modal\r\n\t\t\topen={true}\r\n\t\t\tonClose={handleClose}\r\n\t\t\tcloseAfterTransition\r\n\t\t\tBackdropComponent={Backdrop}\r\n\t\t\tBackdropProps={{\r\n\t\t\t\ttimeout: 500,\r\n\t\t\t}}\r\n\t\t\tclassName={classes.modal}\r\n\t\t>\r\n\t\t\t<Fade in={true}>\r\n\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\" style={{ outline: '0' }}>\r\n\t\t\t\t\t<Grid item xs={12} sm={10} md={8} lg={8} xl={6} className={classes.gridCont}>\r\n\t\t\t\t\t\t<Paper elevation={6} className={classes.paper} style={{ direction: lang.dir }}>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.headerRow}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.title}>{t('documentsModule.upsert.createDocument')}</div>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.close}>\r\n\t\t\t\t\t\t\t\t\t\t<IconButton className={classes.iconBtn} onClick={handleClose}>\r\n\t\t\t\t\t\t\t\t\t\t\t<ClearRounded className={classes.icon} />\r\n\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t\t\t\t\t{t('documentsModule.upsert.generalDetails')}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `description`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={t(`documentsModule.upsert.description`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('description')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={'medium'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `description`).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? t('errors.isRequired')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.filter((e) => e.field === `description`).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'rgb(244, 67, 54)'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6} md={6} lg={6} xl={7} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>{t('documentsModule.upsert.asset')}</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `asset`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.asset}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange(`asset`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{assets.map((asset, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={asset.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirection: lang.dir,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{asset.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{errors.filter((e) => e.field === 'asset').length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#f44336',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: '15px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{t('errors.isRequired')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6} md={4} lg={4} xl={4} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>{t('documentsModule.upsert.system')}</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `system`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.system}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange(`system`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{systems.map((system, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={system.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirection: lang.dir,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{system.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{errors.filter((e) => e.field === 'asset').length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#f44336',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: '15px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{t('errors.isRequired')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t{Boolean(tasks.length) && (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('documentsModule.upsert.task')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `task`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.task}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange(`task`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tasks.map((task, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={task.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirection: lang.dir,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{task.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.filter((e) => e.field === 'task').length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#f44336',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: '15px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{t('errors.isRequired')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{Boolean(faults.length) && (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('documentsModule.upsert.fault')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `fault`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.fault}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange(`fault`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{faults.map((fault, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={fault.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirection: lang.dir,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{fault.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.filter((e) => e.field === 'fault').length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#f44336',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: '15px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{t('errors.isRequired')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6} md={6} lg={4} xl={4} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>{t('documentsModule.upsert.user')}</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.filter((e) => e.field === `user`).length > 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={details.owner}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange(`user`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.selectInput}\r\n\t\t\t\t\t\t\t\t\t\t\t\tMenuProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tanchorOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttransformOrigin: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpaper: classes.menupaper,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\trenderValue={(selected) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet user = userList.find((f) => f._id === selected);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize={'medium'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tavatar={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: '40px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '40px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={user.avatar}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={getFullName(user)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{userList.map((user, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={user.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirection: lang.dir,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.menuitem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.userCont}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<UserItem user={user} avatarSize={40} size={13} showName />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t{mode === 'create' && (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={6} className={classes.section}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.sectionTitle}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{t('documentsModule.upsert.document')}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.fields}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.textContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={'label'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={'contained'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={clsx(classes.uploadBtn, errors.filter((e) => e.field === `file`).length > 0 ? classes.fileError : null)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{t('documentsModule.upsert.uploadDocument')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccept=\".doc,.docx,.pdf\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleFileUpload}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thidden\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className={classes.filesUploaded}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{details.file\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? `1 ${t('documentsModule.upsert.fileSelected')}`\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: `${t('documentsModule.upsert.noFileSelected')}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.controls}>\r\n\t\t\t\t\t\t\t\t\t<Button className={clsx(classes.control, classes.save)} onClick={handleConfirm}>\r\n\t\t\t\t\t\t\t\t\t\t{t('controls.confirm')}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button className={clsx(classes.control, classes.cancel)} onClick={handleClose}>\r\n\t\t\t\t\t\t\t\t\t\t{t('controls.cancel')}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Fade>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmodal: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t},\r\n\r\n\tgridCont: {\r\n\t\theight: 'fit-content',\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tborderRadius: '10px',\r\n\t\tpadding: '10px 20px',\r\n\t\toverflowY: 'overlay',\r\n\t\theight: '80vh',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: '81vh',\r\n\t\t\tborderRadius: '0',\r\n\t\t\tborder: '0',\r\n\t\t\tpadding: '10px 5px',\r\n\t\t},\r\n\t\t'&:focus': {\r\n\t\t\toutline: 'none',\r\n\t\t},\r\n\t},\r\n\theaderRow: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t\twidth: '100%',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '20px 10px 10px',\r\n\t\tfontSize: '20px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t},\r\n\ticonBtn: {\r\n\t\tmargin: '10px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '20px',\r\n\t},\r\n\tsection: {\r\n\t\tmargin: '10px 5px',\r\n\t},\r\n\tsectionTitle: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t\tpadding: '10px 20px',\r\n\t\twidth: 'fit-content',\r\n\t\tborderRadius: '10px 10px 0 0',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\twhiteSpace: 'nowrap',\r\n\t},\r\n\tfields: {\r\n\t\tpadding: '10px 20px',\r\n\t\tborderRadius: '0px 10px 10px 10px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tpadding: '10px',\r\n\t\t},\r\n\t},\r\n\ttextContainer: {\r\n\t\tpadding: '5px',\r\n\t},\r\n\ttextField: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\tselectInput: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\tmenupaper: {\r\n\t\tbackground: 'rgba(0,0,0,0.8)',\r\n\t\tbackdropFilter: 'blur(10px)',\r\n\t\theight: '200px',\r\n\t\toverflowY: 'auto',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmarginRight: '7px',\r\n\t\tmarginLeft: '-5px',\r\n\t},\r\n\tmenuitem: {\r\n\t\tcolor: 'white',\r\n\t\twidth: '100%',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.1)',\r\n\t\t},\r\n\t},\r\n\tcontrols: {\r\n\t\tborderTop: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '10px 0',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t},\r\n\tcontrol: {\r\n\t\twidth: '30%',\r\n\t\tborder: '1px solid rgba(255,255,255,0.5)',\r\n\t\tfontSize: '16px',\r\n\t\tmargin: '5px',\r\n\t\tpadding: '5px 30px',\r\n\t\tborderRadius: '30px',\r\n\t\tcolor: 'white',\r\n\t},\r\n\tsave: {\r\n\t\tbackground: 'rgba(0,0,0,0.2)',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'black',\r\n\t\t},\r\n\t\t'&:disabled': {\r\n\t\t\tcolor: 'rgba(255,255,255,0.3)',\r\n\t\t},\r\n\t},\r\n\tcancel: {\r\n\t\t'&:hover': {\r\n\t\t\tboxShadow: 'inset rgba(255,255,255,0.3) 0 0 2px 1px',\r\n\t\t},\r\n\t},\r\n\tchips: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\tchip: {\r\n\t\theight: '50px',\r\n\t\tfontSize: '14px',\r\n\t\tborderRadius: '50px',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-start',\r\n\t\tcolor: 'white',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\t\tboxShadow: 'inset lightgrey 0px 0px 1px 1px',\r\n\t\t},\r\n\t},\r\n\tuserCont: {\r\n\t\theight: 'fit-content',\r\n\t\tpadding: 0,\r\n\t\tmargin: 0,\r\n\t\tmargin: '5px 0',\r\n\t},\r\n\tchipsCont: {\r\n\t\theight: 'fit-content',\r\n\t\tpadding: 0,\r\n\t\tmargin: '3px',\r\n\t\tborderRadius: '50px',\r\n\t\tbackground: 'rgba(255,255,255,0.1)',\r\n\t\tboxShadow: 'inset rgba(0,0,0,0.5) 0px 0px 2px 1px',\r\n\t\tdisplay: 'flex',\r\n\t\tjutifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tremoveIcon: {\r\n\t\tcolor: 'rgba(255,255,255,0.2)',\r\n\t\tpadding: '5px',\r\n\t\tmarginRight: '5px',\r\n\t\tborderRadius: '50px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.8)',\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t},\r\n\tradioGroup: {\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\talignitems: 'center',\r\n\t},\r\n\tradioBtn: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '15px',\r\n\t},\r\n\tfilesUploaded: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '0 15px',\r\n\t},\r\n\tuploadBtn: {\r\n\t\tmargin: '9px 0',\r\n\t\tbackground: 'rgba(0,0,0,0.1)',\r\n\t\tcolor: 'white',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tborderRadius: '50px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\t'&:hover': {\r\n\t\t\tboxShadow: 'inset white 0 0 2px 1px',\r\n\t\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\t},\r\n\t},\r\n\timageRow: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpadding: '10px 5px',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tpreviewImage: {\r\n\t\theight: '50px',\r\n\t\twidth: '100px',\r\n\t},\r\n\tremoveImageBtn: {\r\n\t\tcolor: 'rgba(255,255,255,0.5)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.5)',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '6px',\r\n\t\t'&:hover': {\r\n\t\t\tcolor: 'white',\r\n\t\t\tborderColor: 'white',\r\n\t\t},\r\n\t},\r\n\tuploadedImagesTitle: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '10px 5px',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tswitchLabel: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tswitchBase: {\r\n\t\tcolor: 'rgba(255,255,255,0.4)',\r\n\t\t'&$checked': {\r\n\t\t\tcolor: 'rgba(255,255,255,1)',\r\n\t\t},\r\n\t\t'&$checked + $track': {\r\n\t\t\tbackgroundColor: 'rgba(255,255,255,0.8)',\r\n\t\t},\r\n\t},\r\n\tchecked: {},\r\n\ttrack: {\r\n\t\tbackgroundColor: 'rgba(255,255,255,0.4)',\r\n\t},\r\n\tnotificationsInstructions: {\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tfontSize: '12px',\r\n\t\tmarginBottom: '10px',\r\n\t},\r\n\tfileError: {\r\n\t\tborderColor: 'rgb(244, 67, 54)',\r\n\t\tcolor: 'rgb(244, 67, 54)'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\map\\MapControls.js",["703","704","705","706","707","708","709","710","711"],"import {\r\n\tmakeStyles,\r\n\tTooltip,\r\n\tIconButton,\r\n\tGrid,\r\n\tuseMediaQuery,\r\n\tClickAwayListener,\r\n} from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport BusinessRoundedIcon from '@material-ui/icons/BusinessRounded';\r\nimport AssignmentRoundedIcon from '@material-ui/icons/AssignmentRounded';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\nimport { getAssetsSuggestions } from '../../../api/systemsApi';\r\nimport { useLocation } from 'react-router';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { getAsset, getFullAddress } from '../../../api/assetsApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport { FilterBySelect } from '../../reuseables/FilterBySelect';\r\nimport { getFaultsStatusListSuggestions } from '../../../api/faultsApi';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport FilterListRoundedIcon from '@material-ui/icons/FilterListRounded';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\n\r\nexport const MapControls = ({}) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst location = useLocation();\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst query = useQuery(location.search);\r\n\tconst [reloadedValue, setReloadedValue] = useState(null);\r\n\tconst [expanded, setExpanded] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (query.asset) {\r\n\t\t\thandleReloaded(query.asset).then((data) => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetReloadedValue(data);\r\n\t\t\t\t} else {\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetReloadedValue({\r\n\t\t\t\tlabel: '',\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t}\r\n\t}, [location.search]);\r\n\r\n\tconst handleReloaded = async (assetId) => {\r\n\t\tconst res = await getAsset(assetId, false);\r\n\t\tif (res) {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: getFullAddress(res),\r\n\t\t\t\tvalue: res._id,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClickFilter = () => {\r\n\t\tif (expanded) {\r\n\t\t\tsetExpanded(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetExpanded(true);\r\n\t};\r\n\r\n\treturn matches && !expanded ? (\r\n\t\t<IconButton className={classes.filterBtn} onClick={handleClickFilter}>\r\n\t\t\t<FilterListRoundedIcon className={classes.icon} />\r\n\t\t</IconButton>\r\n\t) : (\r\n\t\t<MobileWrappar handleClickFilter={handleClickFilter}>\r\n\t\t\t<Grid container className={classes.container}>\r\n\t\t\t\t{matches && expanded && (\r\n\t\t\t\t\t<Grid item xs={12} className={classes.controls}>\r\n\t\t\t\t\t\t<div className={classes.title}>\r\n\t\t\t\t\t\t\t{t(\"mapModule.filters\")}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<IconButton onClick={handleClickFilter} className={classes.expandedBtn}>\r\n\t\t\t\t\t\t\t<ClearRoundedIcon className={classes.icon}/>\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t\t{reloadedValue && (\r\n\t\t\t\t\t<Grid item className={classes.filterContainer}>\r\n\t\t\t\t\t\t<SearchBoxSelect\r\n\t\t\t\t\t\t\tsuggestionsFunc={getAssetsSuggestions}\r\n\t\t\t\t\t\t\tplaceholder={t('filters.filterByAsset')}\r\n\t\t\t\t\t\t\tfilterField={'asset'}\r\n\t\t\t\t\t\t\treloadedLabel={reloadedValue.label}\r\n\t\t\t\t\t\t\treloadedValue={reloadedValue.value}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t\t<Grid item className={classes.filterContainer}>\r\n\t\t\t\t\t<FilterBySelect\r\n\t\t\t\t\t\toptionsFunc={createUserOptions}\r\n\t\t\t\t\t\tplaceholder={t('filters.filterByUser')}\r\n\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t<PersonRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfilterField={'owner'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{/* <Grid item classNam={classes.filterContainer}>\r\n\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\toptionsFunc={getFaultsStatusListSuggestions}\r\n\t\t\t\t\t\tplaceholder={t('filters.filterByStatus')}\r\n\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t<DoubleArrowIcon className={classes.icon} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfilterField={'status'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid> */}\r\n\t\t\t</Grid>\r\n\t\t</MobileWrappar>\r\n\t);\r\n};\r\n\r\nconst MobileWrappar = ({ children, handleClickFilter }) => {\r\n\tconst matches = useMediaQuery((theme) => theme.breakpoints.up('md'));\r\n\r\n\treturn matches ? (\r\n\t\t<div>{children}</div>\r\n\t) : (\r\n\t\t<ClickAwayListener onClickAway={handleClickFilter}>\r\n\t\t\t{children}\r\n\t\t</ClickAwayListener>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\twidth: 'fit-content',\r\n\t\theight: 'fit-content',\r\n\t\tdisplay: 'flex',\r\n\t\tbackground: 'rgba(0,0,0,0.2)',\r\n\t\tborderRadius: '50px',\r\n\t\tmargin: '10px',\r\n\t\tbackdropFilter: 'blur(5px)',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tposition: 'relative',\r\n\t\tboxShadow: 'rgba(0,0,0,0.4) 0 0 5px 2px',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tborderRadius: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '10px',\r\n\t\t\tborder: 0\r\n\t\t},\r\n\t},\r\n\tbtn: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tpadding: '8px',\r\n\t\tmargin: '5px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'black',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '24px',\r\n\t\tmarginLeft: '4px',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '6px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tcontrols: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpaddingBottom: '10px',\r\n\t\tmarginBottom: '10px'\r\n\t},\r\n\tfilterContainer: {\r\n\t\tjustifySelf: 'center'\r\n\t},\r\n\texpandedBtn: {\r\n\t\tpadding: '2px'\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '20px',\r\n\t\tpadding: '0 10px'\r\n\t}\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViews.js",["712","713","714"],"import { Grid, LinearProgress, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { getFaults } from '../../../api/faultsApi';\r\nimport { updateQueryParams } from '../../../api/genericApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { FaultsContext } from '../../../context/FaultsContext';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { FaultBlockView } from './FaultBlockView';\r\nimport { FaultListView } from './FaultListView';\r\nimport { FaultsControls } from './FaultsControls';\r\n\r\nexport const FaultViews = () => {\r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const classes = useStyles();\r\n    const { auth } = useContext(AuthContext);\r\n    const { t } = useTranslation();\r\n    const { faults, setFaults } = useContext(FaultsContext)\r\n    const [ viewType, setViewType ] = useState(query['viewType'] || 'list');\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n    \r\n\r\n    useEffect(() => {\r\n        if (!isLoading) return;\r\n        getFaults(auth.user.tenant, query)\r\n        .then(data => {\r\n            if (data) {\r\n                setFaults(data)\r\n            }      \r\n        })\r\n        .finally(() => {\r\n            setIsLoading(false)\r\n        })\r\n    }, [isLoading])\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n    }, [location.search])\r\n\r\n    useEffect(() => { \r\n        history.push({\r\n            path: location.pathname,\r\n            search: updateQueryParams(location.search, [{ name: 'viewType', value: viewType}], ['status'] )\r\n        });   \r\n    }, [viewType]);\r\n\r\n    return (\r\n        <Grid container justify={ 'center'} >\r\n            <div className={classes.pageModule}>\r\n                    {t(\"assetsModule.faults\")}\r\n            </div>\r\n            <Grid item xs={12}>\r\n                <FaultsControls \r\n                    viewType={viewType}\r\n                    setViewType={setViewType}    \r\n                />\r\n            </Grid>\r\n            {\r\n                isLoading ?\r\n                <LinearProgress />\r\n                :\r\n                <Grid item xs={12} \r\n                    className={classes.faultPresent}\r\n                    style={{ height: 'auto' }}\r\n                >\r\n                    {\r\n                        viewType === 'list' ?\r\n                        <FaultListView \r\n                            faults={faults}\r\n                        /> :\r\n                        <FaultBlockView \r\n                            faults={faults}\r\n                        />     \r\n                    }\r\n                    \r\n                </Grid>\r\n            }\r\n            \r\n        </Grid>\r\n        \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageModule: {\r\n        color: 'white',\r\n        padding: '10px 40px',\r\n        fontSize: '18px',\r\n        background: 'rgba(0,0,0,0.6)',\r\n        margin: '0px auto 5px',\r\n        width: '30%',\r\n        textAlign: 'center',\r\n        borderRadius: '0 0 25px 25px',\r\n        lineHeight: '1'\r\n    },\r\n    faultPresent: {\r\n        margin: '20px 10px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '20px 0',\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\DocumentsControls.js",["715","716","717"],"import {\r\n    Button,\r\n    Collapse,\r\n    Grid,\r\n    makeStyles,\r\n    useMediaQuery\r\n} from '@material-ui/core';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { getAsset, getFullAddress } from '../../../api/assetsApi';\r\nimport {\r\n    getFaultOptionsByAssetOrSystem\r\n} from '../../../api/faultsApi';\r\nimport { removeQueryParam } from '../../../api/genericApi';\r\nimport {\r\n    getAssetsSuggestions,\r\n    getSystemsByAssetOptions\r\n} from '../../../api/systemsApi';\r\nimport { getTaskOptionsByAssetOrSystem } from '../../../api/tasksApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport DescriptionRoundedIcon from '@material-ui/icons/DescriptionRounded';\r\nimport BlurOnRoundedIcon from '@material-ui/icons/BlurOnRounded';\r\n\r\n\r\nexport const DocumentsControls = ({}) => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [reloadedValue, setReloadedValue] = useState(null);\r\n\tconst [collapsed, setCollapsed] = useState(!downSm ? true : false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (query.asset) {\r\n\t\t\thandleReloaded(query.asset).then((data) => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetReloadedValue(data);\r\n\t\t\t\t}\r\n            });\r\n            \r\n\t\t} else {\r\n\t\t\tsetReloadedValue({\r\n\t\t\t\tlabel: '',\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\thistory.push({\r\n\t\t\t\tpath: location.pathname,\r\n\t\t\t\tsearch: removeQueryParam(location.search, 'system'),\r\n\t\t\t});\r\n\t\t}\r\n\t}, [location.search]);\r\n\r\n\tconst handleReloaded = async (assetId) => {\r\n\t\tconst res = await getAsset(assetId, false);\r\n\t\tif (res) {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: getFullAddress(res),\r\n\t\t\t\tvalue: res._id,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleCollapse = () => {\r\n\t\tif (collapsed) {\r\n\t\t\tsetCollapsed(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetCollapsed(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{downSm && (\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName={classes.sortandfilter}\r\n\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t<FilterListIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tendIcon={\r\n\t\t\t\t\t\t\t\tcollapsed ? (\r\n\t\t\t\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<ExpandMoreRoundedIcon />\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={toggleCollapse}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{t(\r\n\t\t\t\t\t\t\t\t`filters.${\r\n\t\t\t\t\t\t\t\t\tcollapsed ? 'hide' : 'show'\r\n\t\t\t\t\t\t\t\t}Filters`\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t<Collapse in={collapsed}>\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t{reloadedValue && (\r\n\t\t\t\t\t\t\t<SearchBoxSelect\r\n\t\t\t\t\t\t\t\tsuggestionsFunc={getAssetsSuggestions}\r\n\t\t\t\t\t\t\t\tplaceholder={t('filters.filterByAsset')}\r\n\t\t\t\t\t\t\t\tfilterField={'asset'}\r\n\t\t\t\t\t\t\t\treloadedLabel={reloadedValue.label}\r\n\t\t\t\t\t\t\t\treloadedValue={reloadedValue.value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{query.asset && (\r\n\t\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\t\toptionsFunc={() =>\r\n\t\t\t\t\t\t\t\t\tgetSystemsByAssetOptions(query.asset)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder={t('filters.filterBySystemName')}\r\n\t\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t\t<BlurOnRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfilterField={'system'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={createUserOptions}\r\n\t\t\t\t\t\t\tplaceholder={t('filters.filterByUser')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<PersonRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'user'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={() =>\r\n\t\t\t\t\t\t\t\tgetFaultOptionsByAssetOrSystem(\r\n\t\t\t\t\t\t\t\t\tquery.asset,\r\n\t\t\t\t\t\t\t\t\tquery.system\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tplaceholder={t('filters.filterByFault')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<WarningRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'fault'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={() =>\r\n\t\t\t\t\t\t\t\tgetTaskOptionsByAssetOrSystem(\r\n\t\t\t\t\t\t\t\t\tquery.asset,\r\n\t\t\t\t\t\t\t\t\tquery.system\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tplaceholder={t('filters.filterByTask')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<DescriptionRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'task'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Collapse>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((them) => ({\r\n\tgridItem: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'flex-start',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tmarginLeft: '4px',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '6px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tsortandfilter: {\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '5px 25px 5px 3px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'black',\r\n\t\t},\r\n\t},\r\n\ttypeGroup: {\r\n\t\tmargin: '5px',\r\n\t\theight: '45px',\r\n\t},\r\n\tmodeBtn: {\r\n\t\tpadding: '0 15px 0 5px',\r\n\t\tcolor: 'white',\r\n\t\twidth: 'auto',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tlistBtn: {\r\n\t\tborderRadius: '25px 0 0 25px',\r\n\t},\r\n\tblocksBtn: {\r\n\t\tborderRadius: '0px 25px 25px 0px',\r\n\t},\r\n\tmodeBtnActive: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultView.js",["718","719","720"],"import {\r\n\tGrid,\r\n\tLinearProgress,\r\n\tmakeStyles,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { format, parseISO } from 'date-fns';\r\nimport dateFormat from 'dateformat';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation, useParams } from 'react-router';\r\nimport { getFullAddress } from '../../../api/assetsApi';\r\nimport * as faultApi from '../../../api/faultsApi';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { SnackbarContext } from '../../../context/SnackbarContext';\r\nimport { AddRelatedUser } from '../../reuseables/AddRelatedUser';\r\nimport { Can } from '../../reuseables/Can';\r\nimport { Carousel } from '../../reuseables/Carousel';\r\nimport { CommentSection } from '../../reuseables/CommentSection';\r\nimport { StatusTag } from '../../reuseables/StatusTag';\r\nimport { UpdateOwner } from '../../reuseables/UpdateOwner';\r\nimport { UpdateStatus } from '../../reuseables/UpdateStatus';\r\nimport { UserList } from '../../reuseables/UserList';\r\nimport { UserItem } from '../../user/UserItem';\r\nimport { FaultLink } from './FaultLink';\r\nimport { FaultViewControls } from './FaultViewControls';\r\nimport { UpsertFault } from './UpsertFault';\r\n\r\nexport const FaultView = ({ fid, faultData, updateFaultState }) => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst { t } = useTranslation();\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { setSnackbar } = useContext(SnackbarContext);\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n\tconst [fault, setFault] = useState(null);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst { faultId } = useParams();\r\n\tconst [editFault, setEditFault] = useState(null);\r\n\tconst [changeOwner, setChangeOwner] = useState(false);\r\n\tconst [addRelatedUserModal, setAddRelatedUserModal] = useState(null);\r\n\tconst [changeStatus, setChangeStatus] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (fault) {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t}, [fault]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (faultData) {\r\n\t\t\tsetFault(faultData);\r\n\t\t\tsetIsLoading(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfaultApi.getFault(faultId || fid, false).then((res) => {\r\n\t\t\tif (!res) {\r\n\t\t\t\thistory.push('/workspace/faults');\r\n\t\t\t} else if (res.status === 403) {\r\n\t\t\t\tsetSnackbar(res);\r\n\t\t\t\thistory.push('/workspace/faults');\r\n\t\t\t}\r\n\t\t\tsetFault(res);\r\n\t\t});\r\n\t}, [faultData, faultId]);\r\n\r\n\tconst updateFaultDetails = (details) => {\r\n\t\tfaultApi\r\n\t\t\t.updateFault(details)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 403) {\r\n\t\t\t\t\tsetSnackbar(res);\r\n\t\t\t\t} else if (res) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tlocation.pathname === `/workspace/faults/${res.faultId}`\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tsetFault(res);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\thistory.push(`/workspace/faults/${res.faultId}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsetEditFault(null);\r\n\t\t\t\treturn;\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tconsole.log(e.message);\r\n\t\t\t\thistory.push(`/workspace/faults`);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst updateOwner = (userId) => {\r\n\t\tfaultApi.updateFaultOwner(fault._id, userId).then((res) => {\r\n\t\t\tif (res.status === 403) {\r\n\t\t\t\tsetSnackbar(res);\r\n\t\t\t} else {\r\n\t\t\t\tsetFault({\r\n\t\t\t\t\t...fault,\r\n\t\t\t\t\towner: res.owner,\r\n\t\t\t\t\trelatedUsers: res.relatedUsers,\r\n\t\t\t\t});\r\n\t\t\t\tif (updateFaultState) {\r\n\t\t\t\t\tupdateFaultState(res._id, 'owner', res.owner);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetChangeOwner(false);\r\n\t\t});\r\n\t};\r\n\r\n\tconst removeRelatedUser = async (userId) => {\r\n\t\tconst res = await faultApi.removeRelatedUser(fault._id, userId);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t} else if (res) {\r\n\t\t\tsetFault({\r\n\t\t\t\t...fault,\r\n\t\t\t\trelatedUsers: res.relatedUsers,\r\n\t\t\t});\r\n\t\t\tif (updateFaultState) {\r\n\t\t\t\tupdateFaultState(res._id, 'relatedUsers', res.relatedUsers);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst addRelatedUser = (userId) => async (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tconst res = await faultApi.addRelatedUser(fault._id, userId);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t} else if (res) {\r\n\t\t\tsetFault({\r\n\t\t\t\t...fault,\r\n\t\t\t\trelatedUsers: res.relatedUsers,\r\n\t\t\t});\r\n\t\t\tif (updateFaultState) {\r\n\t\t\t\tupdateFaultState(res._id, 'relatedUsers', res.relatedUsers);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetAddRelatedUserModal(null);\r\n\t};\r\n\r\n\tconst handleChangeStatus = async (statusId) => {\r\n\t\tconst res = await faultApi.updateFaultStatus(fault._id, statusId);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t} else if (res) {\r\n\t\t\tsetFault({\r\n\t\t\t\t...fault,\r\n\t\t\t\tstatus: res.status,\r\n\t\t\t});\r\n\t\t\tif (updateFaultState) {\r\n\t\t\t\tupdateFaultState(res._id, 'status', res.status);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetChangeStatus(null);\r\n\t};\r\n\r\n\tconst handleSaveComment = async (faultId, userId, text) => {\r\n\t\tconst res = await faultApi.saveFaultComment(faultId, userId, text);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t\treturn Promise.resolve(null);\r\n\t\t} else if (res) {\r\n\t\t\tif (updateFaultState) {\r\n\t\t\t\tupdateFaultState(res._id, 'comments', res.comments);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Promise.resolve(res);\r\n\t};\r\n\r\n\tconst handleUpdateComment = async (faultId, commentId, text) => {\r\n\t\tconst res = await faultApi.updateFaultComment(faultId, commentId, text);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res);\r\n\t\t\treturn Promise.resolve(null);\r\n\t\t} else if (res) {\r\n\t\t\tif (updateFaultState) {\r\n\t\t\t\tupdateFaultState(res._id, 'comments', res.comments);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Promise.resolve(res);\r\n\t};\r\n\r\n\treturn isLoading ? (\r\n\t\t<LinearProgress />\r\n\t) : (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tclassName={classes.container}\r\n\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\talignItems=\"flex-start\"\r\n\t\t\t>\r\n\t\t\t\t<Grid container className={classes.controls}>\r\n\t\t\t\t\t<Grid item xs={12} className={classes.controlsGriditem}>\r\n\t\t\t\t\t\t<div className={classes.faultId}>\r\n\t\t\t\t\t\t\t<FaultLink faultId={fault.faultId} size={18} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<FaultViewControls\r\n\t\t\t\t\t\t\tfault={fault}\r\n\t\t\t\t\t\t\teditFault={() => setEditFault(fault._id)}\r\n\t\t\t\t\t\t\tupdateOwner={() => setChangeOwner(true)}\r\n\t\t\t\t\t\t\tchangeStatus={() => setChangeStatus(true)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tclassName={classes.controlsGriditem}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tjustifyContent: downSm ? 'center' : 'flex-start',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<StatusTag\r\n\t\t\t\t\t\t\tstatus={fault.status}\r\n\t\t\t\t\t\t\ttype=\"fault\"\r\n\t\t\t\t\t\t\tsize={'16px'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tsm={12}\r\n\t\t\t\t\tmd={8}\r\n\t\t\t\t\tlg={8}\r\n\t\t\t\t\txl={9}\r\n\t\t\t\t\tclassName={classes.rightContainer}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className={classes.asset}>\r\n\t\t\t\t\t\t{getFullAddress(fault.asset)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.title}>{fault.title}</div>\r\n\t\t\t\t\t<div className={classes.desc}>\r\n\t\t\t\t\t\t<div className={classes.openDate}>\r\n\t\t\t\t\t\t\t{`${t('faultsModule.createDate')} ${format(\r\n\t\t\t\t\t\t\t\tparseISO(fault.createdAt),\r\n\t\t\t\t\t\t\t\tlang.dateformat\r\n\t\t\t\t\t\t\t)}`}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{fault.description}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{Boolean(fault.images.length) && (\r\n\t\t\t\t\t\t<Carousel\r\n\t\t\t\t\t\t\timages={fault.images}\r\n\t\t\t\t\t\t\tisOpen={Boolean(fault.images.length)}\r\n\t\t\t\t\t\t\tsize={300}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={8}\r\n\t\t\t\t\tsm={12}\r\n\t\t\t\t\tmd={4}\r\n\t\t\t\t\tlg={3}\r\n\t\t\t\t\txl={3}\r\n\t\t\t\t\tclassName={classes.leftContainer}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className={classes.owner}>\r\n\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\tuser={fault.owner}\r\n\t\t\t\t\t\t\tshowTitle\r\n\t\t\t\t\t\t\tshowPhone\r\n\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\tsize={12}\r\n\t\t\t\t\t\t\tavatarSize={50}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<UserList\r\n\t\t\t\t\t\tusers={fault.relatedUsers}\r\n\t\t\t\t\t\tremoveTooltip={t(\r\n\t\t\t\t\t\t\t'faultsModule.controls.removeRelatedUser'\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\taddTooltip={t('faultsModule.controls.addRelatedUser')}\r\n\t\t\t\t\t\tplaceholder={t('faultsModule.noRelatedUsers')}\r\n\t\t\t\t\t\ttitle={t('faultsModule.relatedUsers')}\r\n\t\t\t\t\t\thandleRemove={removeRelatedUser}\r\n\t\t\t\t\t\thandleAdd={() => setAddRelatedUserModal(true)}\r\n\t\t\t\t\t\tmodule={'faults'}\r\n\t\t\t\t\t\towner={fault.owner}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.comments}>\r\n\t\t\t\t\t<CommentSection\r\n\t\t\t\t\t\tparent={fault}\r\n\t\t\t\t\t\tsaveComment={handleSaveComment}\r\n\t\t\t\t\t\tupdateComment={handleUpdateComment}\r\n\t\t\t\t\t\tmodule={'faults'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<UpdateOwner\r\n\t\t\t\thandleClose={() => setChangeOwner(false)}\r\n\t\t\t\thandleSave={updateOwner}\r\n\t\t\t\tisOpen={changeOwner}\r\n\t\t\t\tcurrentOwner={fault.owner}\r\n\t\t\t\ttitle={t('faultsModule.updateOwner')}\r\n\t\t\t\tinstructions={t('faultsModule.updateOwnerInstructions')}\r\n\t\t\t/>\r\n\t\t\t{changeStatus && (\r\n\t\t\t\t<UpdateStatus\r\n\t\t\t\t\thandleClose={() => setChangeStatus(false)}\r\n\t\t\t\t\thandleSave={handleChangeStatus}\r\n\t\t\t\t\tisOpen={changeStatus}\r\n\t\t\t\t\tcurrentStatus={fault.status}\r\n\t\t\t\t\ttitle={t('faultsModule.changeStatus')}\r\n\t\t\t\t\tinstructions={t('faultsModule.changeStatusInstructions')}\r\n\t\t\t\t\tmodule={'faults'}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{addRelatedUserModal && (\r\n\t\t\t\t<AddRelatedUser\r\n\t\t\t\t\thandleClose={() => setAddRelatedUserModal(false)}\r\n\t\t\t\t\thandleSave={addRelatedUser}\r\n\t\t\t\t\tisOpen={addRelatedUserModal}\r\n\t\t\t\t\tfollowerList={[...fault.relatedUsers, fault.owner]}\r\n\t\t\t\t\ttitle={t('faultsModule.addRelatedUser')}\r\n\t\t\t\t\tinstructions={t('faultsModule.addRelatedUserInstructions')}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\r\n\t\t\t{Boolean(editFault) && (\r\n\t\t\t\t<UpsertFault\r\n\t\t\t\t\tfaultId={editFault}\r\n\t\t\t\t\thandleClose={() => setEditFault(null)}\r\n\t\t\t\t\thandleUpdate={updateFaultDetails}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\toverflowY: 'overlay',\r\n\t\theight: '100%',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\theight: 'auto',\r\n\t\t},\r\n\t},\r\n\trightContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'flex-start',\r\n\t\tpadding: '0 30px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\talignItems: 'center',\r\n\t\t\tpadding: '0 15px',\r\n\t\t},\r\n\t},\r\n\tasset: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t\tbackground: 'black',\r\n\t\twidth: 'fit-content',\r\n\t\tpadding: '10px 20px',\r\n\t\tborderRadius: '50px',\r\n\t\tboxShadow: 'rgba(0,0,0,0.25) 0 0 5px 2px',\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '22px',\r\n\t\tpadding: '15px 0',\r\n\t\talignSelf: 'flex-end',\r\n\t\twidth: '100%',\r\n\t},\r\n\tdesc: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tborderRadius: '10px',\r\n\t\tpadding: '20px',\r\n\t\tcolor: 'white',\r\n\t\twidth: '90%',\r\n\t\twordBreak: 'break-word',\r\n\t},\r\n\tleftContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'flex-start',\r\n\t\talignItems: 'flex-end',\r\n\t\tpadding: '10px 30px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\talignItems: 'center',\r\n\t\t},\r\n\t},\r\n\towner: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tpadding: '5px 30px',\r\n\t\tborderRadius: '10px',\r\n\t\twidth: 'fit-content',\r\n\t\theight: '70px',\r\n\t},\r\n\tcontrols: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '20px 30px 0px 30px',\r\n\t},\r\n\tcontrolsGriditem: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tmargin: '10px 0',\r\n\t},\r\n\tfaultId: {\r\n\t\tpadding: '10px 0',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tlinked: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'flex-start',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tmargin: '10px 0',\r\n\t\tborderRadius: '10px',\r\n\t\tpadding: '10px 0',\r\n\t\theight: '300px',\r\n\t},\r\n\tlinkedHeader: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t\tpadding: '5px',\r\n\t\tmargin: '0px auto',\r\n\t\twidth: '80%',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\trelatedUsersList: {\r\n\t\tpadding: '5px',\r\n\t\toverflowY: 'auto',\r\n\t},\r\n\tlistItem: {\r\n\t\twidth: '250px',\r\n\t\tborderRadius: '5px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\t},\r\n\t},\r\n\tremoveUser: {\r\n\t\tcolor: 'white',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.3)',\r\n\t\t},\r\n\t},\r\n\topenDate: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '14px',\r\n\t\tmargin: '0 0 15px 0px',\r\n\t\tpadding: '7px 15px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\twidth: 'fit-content',\r\n\t\tborderRadius: '50px',\r\n\t},\r\n\tcomments: {\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tmargin: '20px 30px',\r\n\t\tborderRadius: '10px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tmargin: '20px 0px',\r\n\t\t},\r\n\t},\r\n\tstatus: {\r\n\t\tmargin: '10px 0',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\Document.js",["721","722","723"],"import { Grid, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport React, { useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getFullAddress } from \"../../../api/assetsApi\";\r\nimport { getFileTypeName } from \"../../../api/documentsApi\";\r\nimport { ItemLink } from \"../../reuseables/ItemLink\";\r\nimport { UserItem } from \"../../user/UserItem\";\r\nimport { DocumentControls } from \"./DocumentControls\";\r\nimport dateFormat from \"dateformat\";\r\nimport { format, parseISO } from 'date-fns';\r\nimport { LanguageContext } from \"../../../context/LanguageContext\";\r\n\r\nexport const Document = ({ data, deleteFile, downloadFile, setEdit }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\r\n\treturn (\r\n\t\t<div className={classes.mainContainer}>\r\n\t\t\t<Grid container className={classes.docContainer}>\r\n\t\t\t\t<Grid item xs={9} className={classes.descContainer}>\r\n\t\t\t\t\t<div className={classes.description}>{data.description}</div>\r\n\t\t\t\t\t<div className={classes.docId}>{data.docId}</div>\r\n\t\t\t\t\t<div className={classes.createdAt}>{`${t(\r\n\t\t\t\t\t\t\"general.createDate\"\r\n\t\t\t\t\t)} ${format(parseISO(data.createdAt), lang.dateonly)}`}</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={3} className={classes.controls}>\r\n\t\t\t\t\t<DocumentControls\r\n\t\t\t\t\t\tdeleteFile={deleteFile(data._id, data.description)}\r\n\t\t\t\t\t\tdownloadFile={() => downloadFile(data.url)}\r\n\t\t\t\t\t\teditDocument={() => setEdit(data._id)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} className={classes.dataContainer}>\r\n\t\t\t\t\t<Grid container className={classes.relationContainer}>\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t<div className={classes.relationLabel}>\r\n\t\t\t\t\t\t\t\t{t(\"documentsModule.upsert.asset\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.relationData}>\r\n\t\t\t\t\t\t\t\t{data.asset ? getFullAddress(data.asset) : t(\"general.noData\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container className={classes.relationContainer}>\r\n\t\t\t\t\t\t<Grid item xs={6} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t<div className={classes.relationLabel}>\r\n\t\t\t\t\t\t\t\t{t(\"documentsModule.upsert.system\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.relationData}>\r\n\t\t\t\t\t\t\t\t{data.system ? data.system.name : t(\"general.noData\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t<div className={classes.relationLabel}>\r\n\t\t\t\t\t\t\t\t{t(\"documentsModule.upsert.fault\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.relationData}>\r\n\t\t\t\t\t\t\t\t{data.fault ? (\r\n\t\t\t\t\t\t\t\t\t<ItemLink itemId={data.fault.faultId} module=\"faults\" />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\tt(\"general.noData\")\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container className={classes.relationContainer}>\r\n\t\t\t\t\t\t<Grid item xs={6} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t<div className={classes.relationLabel}>\r\n\t\t\t\t\t\t\t\t{t(\"documentsModule.upsert.task\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.relationData}>\r\n\t\t\t\t\t\t\t\t{data.task ? data.task.taskId : t(\"general.noData\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t<div className={classes.relationLabel}>\r\n\t\t\t\t\t\t\t\t{t(\"documentsModule.upsert.filetype\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.relationData}>\r\n\t\t\t\t\t\t\t\t{getFileTypeName(data.type)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container className={classes.relationContainer}>\r\n\t\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t<div className={classes.relationLabel}>\r\n\t\t\t\t\t\t\t\t{t(\"documentsModule.upsert.user\")}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.relationData}>\r\n\t\t\t\t\t\t\t\t{data.user ? (\r\n\t\t\t\t\t\t\t\t\t<div className={classes.userContainer}>\r\n\t\t\t\t\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\t\t\t\t\tuser={data.user}\r\n\t\t\t\t\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\t\t\t\t\tsize={11}\r\n\t\t\t\t\t\t\t\t\t\t\tavatarSize={30}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\tt(\"general.noData\")\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n\t\tpadding: \"10px\",\r\n\t},\r\n\tdocContainer: {\r\n\t\tcolor: \"white\",\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\tborder: \"1px solid rgba(255,255,255,0.2)\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tpadding: \"20px\",\r\n\t},\r\n\tdescContainer: {\r\n\t\tfontSize: \"16px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tdocId: {\r\n\t\tfontSize: \"13px\",\r\n\t\tpadding: \"7px\",\r\n\t},\r\n\trelationContainer: {\r\n\t\tpadding: \"5px 10px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tcolor: \"white\",\r\n\t\tborderBottom: \"1px solid rgba(255,255,255,0.2)\",\r\n\t},\r\n\tgridItem: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t},\r\n\trelationLabel: {\r\n\t\tpadding: \"3px 0\",\r\n\t\tfontSize: \"12px\",\r\n\t\tcolor: \"rgba(255,255,255,0.6)\",\r\n\t},\r\n\trelationData: {\r\n\t\tfontSize: \"14px\",\r\n\t},\r\n\tcontrols: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t\talignItems: \"center\",\r\n\t\tpadding: \"10px 0\",\r\n\t},\r\n\texpandIcon: {\r\n\t\tcolor: \"white\",\r\n\t\tpadding: \"10px\",\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"rgba(0,0,0,0.5)\",\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: \"18px\",\r\n\t},\r\n\tdataContainer: {\r\n\t\tpadding: \"10px 10px 20px\",\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tmargin: \"10px 0 0\",\r\n\t},\r\n\tsideGridItem: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tpadding: \"10px\",\r\n\t},\r\n\tfileTypeContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\tborderRadius: \"5px\",\r\n\t\tpadding: \"15px 10px\",\r\n\t},\r\n\tfileTypeIcon: {\r\n\t\tfontSize: \"48px\",\r\n\t\tcolor: \"rgba(255,255,255,0.5)\",\r\n\t},\r\n\tfileTypeData: {\r\n\t\tdirection: \"rtl\",\r\n\t\tcolor: \"rgba(255,255,255,0.8)\",\r\n\t},\r\n\tuserContainer: {\r\n\t\tbackground: \"rgba(0,0,0,0.3)\",\r\n\t\tborderRadius: \"50px\",\r\n\t\tpadding: \"5px 20px 5px 5px\",\r\n\t\twidth: \"fit-content\",\r\n\t},\r\n\tcreatedAt: {\r\n\t\tfontSize: \"12px\",\r\n\t\tbackground: \"rgba(0,0,0,0.4)\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tpadding: \"6px 15px\",\r\n\t\twidth: \"fit-content\",\r\n\t\tmargin: \"5px 0 0 0\",\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\useQuery.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\Can.js",["724","725"],"import React, { useState } from 'react';\r\nimport { getMinPermLevel } from '../../api/permissionsApi';\r\nimport { usePermissions } from './customHooks/usePermissions';\r\n\r\n\r\n\r\nexport const Can = ({ module, action, userList, shouldRender, children }) => {\r\n    \r\n    const isPermitted = usePermissions(module, action, userList);\r\n    if (shouldRender === false) return null;\r\n    \r\n    return (\r\n        isPermitted ? \r\n        <React.Fragment>\r\n            {children}\r\n        </React.Fragment>\r\n        : null\r\n    )\r\n}","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\UpsertAsset.js",["726","727","728"],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBoxSelect.js",["729","730"],"import { ClickAwayListener, FormControl, IconButton, makeStyles, Menu, MenuItem, OutlinedInput } from '@material-ui/core';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport clsx from 'clsx';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam, removeQueryParam } from '../../api/genericApi';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { useQuery } from './customHooks/useQuery';\r\n\r\nexport const SearchBoxSelect = ({ placeholder, filterField, suggestionsFunc, reloadedLabel, reloadedValue }) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const cont = useRef();\r\n    const input = useRef();\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ onFocus, setOnFocus ] = useState(false);\r\n    const [ searchText, setSearchText ] = useState('');\r\n    const [ anchorEl, setAnchorEl ] = useState(null);\r\n    const [ menuOptions, setMenuOptions ] = useState([]);\r\n    const [ value, setValue ] = useState(reloadedValue || null);\r\n    \r\n    useEffect(() => {\r\n        if (Boolean(!searchText)) return;\r\n        const timeOutId = setTimeout(() => handleSearch(searchText), 700);\r\n        return () => clearTimeout(timeOutId);\r\n    }, [searchText])\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: addQueryParam(location.search, [{ name: filterField, value: value}])\r\n            });\r\n            return;\r\n        } else {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: removeQueryParam(location.search, filterField)\r\n            });\r\n        }\r\n    }, [value])\r\n\r\n    const handleChange = event => {\r\n        setSearchText(event.target.value)\r\n    }\r\n\r\n    const handleSearch = async searchText => {\r\n        if (searchText) {\r\n            const data = await suggestionsFunc(searchText);\r\n            setMenuOptions(data || []);\r\n            setAnchorEl(input.current)      \r\n        } else {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: removeQueryParam(location.search, filterField)\r\n            });\r\n        }\r\n    }\r\n    \r\n    const getTag = val => {\r\n        let data = menuOptions.find(op => val === op.value);\r\n        return createTag(data)\r\n    }\r\n\r\n    const createTag = data => {\r\n        if (!data) return;\r\n        return (\r\n            <div className={classes.tag}>\r\n                <label className={classes.tagLabel}>\r\n                    { data.label }\r\n                </label>\r\n                <IconButton \r\n                    className={classes.removeBtn}\r\n                    onClick={removeChoice(data.value)}\r\n                >\r\n                    <CloseRoundedIcon className={classes.tagRemove}/>\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const removeChoice = value => event => {\r\n        event.stopPropagation();\r\n        setValue(null)\r\n    }\r\n\r\n    const handleClick = val => event => {\r\n        setValue(val);\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={() => setOnFocus(false)}>\r\n            <div ref={cont} className={clsx(classes.container , onFocus && classes.focused, Boolean(value) && classes.selected)} xs={11} sm={9} md={8} lg={6}>\r\n                <SearchRoundedIcon className={classes.icon}/>\r\n                {\r\n                    value \r\n                    ?   query[filterField] === value\r\n                        ?  createTag(reloadedLabel && reloadedValue ? { label: reloadedLabel, value: reloadedValue} : null)\r\n                        :  getTag(value)\r\n                    :\r\n                    <FormControl variant='outlined' className={classes.form}>\r\n                        <OutlinedInput\r\n                            autoFocus={true}\r\n                            inputRef={input}\r\n                            value={ searchText || '' }\r\n                            onChange={handleChange}\r\n                            placeholder={placeholder}\r\n                            className={clsx(classes.searchInput)}\r\n                            onFocus={() => setOnFocus(true)}\r\n                        />\r\n                    </FormControl>\r\n                }\r\n                {\r\n                    Boolean(menuOptions.length) &&\r\n                    <Menu         \r\n                        anchorEl={anchorEl}\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={() => setAnchorEl(null)}\r\n                        classes={{\r\n                            paper : classes.menu\r\n                        }}\r\n                        keepMounted\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                    >\r\n                    {\r\n                        menuOptions.map((v,i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    key={i}\r\n                                    onClick={handleClick(v.value)}\r\n                                    className={classes.menuitem}\r\n                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                >\r\n                                    {v.label}\r\n                                </MenuItem>\r\n                            )\r\n                            \r\n                        })\r\n                    }\r\n                    </Menu>\r\n                }\r\n            </div>   \r\n        </ClickAwayListener>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        margin: '5px',\r\n        padding: '0 5px',\r\n        maxWidth: '450px',\r\n        minHeight: '43px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '50px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        transition: 'box-shadow 0.2s ease-in',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            transition: 'box-shadow 0.2s ease-in'\r\n        }\r\n\r\n    },\r\n    focused: {\r\n        boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        background: 'rgba(0,0,0,0.1)',\r\n        backdropFilter: 'blur(40px)'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        \r\n    },\r\n    searchInput: {\r\n        height: '34px',\r\n        width: '98.5%',\r\n        margin: '3px 0.75%',\r\n        borderRadius: '5px 25px 25px 5px',\r\n        color: 'white',\r\n        '& input': {\r\n            padding: '12.5px 20px 12.5px 5px',\r\n        },\r\n        '& fieldset': {\r\n            border: '0'\r\n        } \r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        marginRight: '5px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        \r\n    },\r\n    menu: {\r\n        marginTop: '55px',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(10px)',\r\n        color: 'white'\r\n    },\r\n    menuitem: {\r\n        minWidth: '200px'\r\n    },\r\n    tag: {\r\n        padding: '5px 10px',\r\n        borderRadius: '50px',\r\n        boxShadow: 'rgba(0,0,0,0.25) 0px 0px 3px 1px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'white',\r\n        margin: '3px 0'\r\n    },\r\n    tagLabel: {\r\n        padding: '0 5px'\r\n    },\r\n    removeBtn: {\r\n        padding: '4px',\r\n        color: 'white'\r\n    },\r\n    tagRemove: {\r\n        fontSize: '16px'\r\n    },\r\n    selected: {\r\n        width: 'fit-content'\r\n    }\r\n}))\r\n\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterBySelect.js",["731","732"],"import { Button, IconButton, makeStyles, Menu, MenuItem } from '@material-ui/core';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam, removeQueryParam } from '../../api/genericApi';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { useQuery } from './customHooks/useQuery';\r\n\r\nexport const FilterBySelect = ({ filterField, placeholder, filterIcon, optionsFunc }) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ menuOptions, setMenuOptions] = useState([]);\r\n    const [ anchorEl, setAnchorEl ] = useState(null);\r\n    const [ value, setValue ] = useState(query[filterField] || '')\r\n\r\n    useEffect(() => {\r\n        optionsFunc()\r\n        .then(data => {\r\n            setMenuOptions(data)\r\n        }) \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: addQueryParam(location.search, [{ name: filterField, value }])\r\n            });\r\n            return;\r\n        }\r\n        if(query[filterField]) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: removeQueryParam(location.search, filterField)\r\n            });\r\n        }     \r\n    }, [value])\r\n\r\n    const createTag = val => {\r\n        let data = menuOptions.find(op => val === op.value);\r\n        if (!data) return;\r\n        return (\r\n            <div className={classes.tag}>\r\n                <label className={classes.tagLabel}>\r\n                    { data.label }\r\n                </label>\r\n                <IconButton \r\n                    className={classes.removeBtn}\r\n                    onClick={removeChoice(data.value)}\r\n                >\r\n                    <CloseRoundedIcon className={classes.tagRemove}/>\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const removeChoice = value => event => {\r\n        event.stopPropagation();\r\n        setValue('')\r\n    }\r\n\r\n    const handleClick = val => event => {\r\n        setValue(val);\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                Boolean(menuOptions.length) &&\r\n                    <div item className={classes.select}>\r\n                        <Button \r\n                            className={classes.filterBy}\r\n                            onClick={event => setAnchorEl(event.currentTarget)}\r\n                            startIcon={filterIcon}\r\n                        >\r\n                            { value ? createTag(value) : <label className={classes.searchLabel}>{placeholder}</label>}\r\n                        </Button>\r\n                        <Menu\r\n                            anchorEl={anchorEl}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={() => setAnchorEl(null)}\r\n                            classes={{\r\n                                paper : classes.menu\r\n                            }}\r\n                            keepMounted\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                        >\r\n                            {\r\n                                menuOptions.map((v,i) => {\r\n                                    return (\r\n                                        <MenuItem\r\n                                            key={i}\r\n                                            onClick={handleClick(v.value)}\r\n                                            className={classes.menuitem}\r\n                                            style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                        >\r\n                                            {v.label}\r\n                                        </MenuItem>\r\n                                    )\r\n                                    \r\n                                })\r\n                            }\r\n                        </Menu>\r\n                    </div>\r\n            }          \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    select: {\r\n        margin: '5px',\r\n        height: '45px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    filterBy: {\r\n        textTransform: 'none',\r\n        color: 'white',\r\n        padding: '0 4px',\r\n        height: '45px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        whiteSpace: 'nowrap',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            \r\n        }\r\n    },\r\n    menu: {\r\n        marginTop: '55px',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(10px)',\r\n        color: 'white'\r\n    },\r\n    menuitem: {\r\n        minWidth: '200px'\r\n    },\r\n    container: {\r\n        height: '45px',\r\n        border: '1px solid rgba(0,0,0,0.25)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            \r\n        }\r\n    },\r\n    focused: {\r\n        border: `2px solid ${theme.palette.primary.main}`\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        \r\n    },\r\n    searchInput: {\r\n        height: '34px',\r\n        width: '98.5%',\r\n        margin: '3px 0.75%',\r\n        borderRadius: '5px 25px 25px 5px',\r\n        color: 'white',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '& fieldset': {\r\n            border: '0'\r\n        } \r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 5px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    tag: {\r\n        padding: '5px 10px',\r\n        borderRadius: '50px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    tagLabel: {\r\n        padding: '0 5px'\r\n    },\r\n    removeBtn: {\r\n        padding: '4px',\r\n        color: 'white'\r\n    },\r\n    tagRemove: {\r\n        fontSize: '16px'\r\n    },\r\n    searchLabel: {\r\n        padding: '5px 20px 5px 10px', \r\n        cursor: 'pointer',\r\n        color: 'rgba(255,255,255,0.5)',\r\n        fontSize: '15px' \r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateOwner.js",["733","734"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Paper, FormControl, IconButton, useMediaQuery, Fade, Modal, Backdrop,Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { getUserList } from '../../api/userApi';\r\nimport clsx from 'clsx'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\n\r\n\r\nexport const UpdateOwner = ({ handleClose, handleSave, isOpen, currentOwner, title, instructions }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ selectedUser, setSelectedUser ] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        getUserList()\r\n        .then(data => {\r\n            if (currentOwner) {\r\n                setSelectedUser(currentOwner._id)\r\n            }\r\n            setUserList(data.filter(u => u._id !== currentOwner._id ));\r\n        })\r\n    }, [currentOwner])\r\n\r\n    const handleChange = event => {\r\n        setSelectedUser(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={isOpen}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xs={11} sm={7} md={5} lg={3} xl={3}>\r\n                        <Paper \r\n                            className={classes.paper} \r\n                            style={{ direction: lang.dir }}\r\n                            elevation={6}    \r\n                        >\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {title}\r\n                                </div>\r\n                                <IconButton className={classes.closeBtn} onClick={handleClose}>\r\n                                    <ClearRoundedIcon className={classes.icon}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div className={classes.instructions}>\r\n                                {instructions}\r\n                            </div>\r\n                            <FormControl variant='outlined' className={classes.textInput} >\r\n                                <Select\r\n                                    value={selectedUser}\r\n                                    onChange={handleChange}\r\n                                    className={classes.menu}\r\n                                    MenuProps={{\r\n                                        classes: {\r\n                                            paper: classes.menupaper\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        userList.map( (user, i) => {\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    className={classes.menuitem}\r\n                                                    value={user._id} \r\n                                                    key={i}\r\n                                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                                >\r\n                                                    {`${user.firstName} ${user.lastName}`}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div className={classes.controls}>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.save)}\r\n                                    onClick={() => handleSave(selectedUser)}\r\n                                    disabled={!selectedUser}\r\n                                >\r\n                                    {t(\"alert.confirm\")}\r\n                                </Button>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.cancel)}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    {t(\"alert.cancel\")}\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    \r\n                </Grid> \r\n                \r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px',\r\n        borderRadius: '10px',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '18px',\r\n        padding: '5px 10px',\r\n        height: 'fit-content'\r\n    },\r\n    closeBtn: {\r\n        fontSize: '20px',\r\n        height: '40px',\r\n        width: '40px'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        borderRadius: '25px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    instructions: {\r\n        width: 'auto',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '12px',\r\n        margin: '0px 10px'\r\n    },\r\n    menu: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(10px)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        marginTop: '55px',\r\n        marginRight: '7px',\r\n        maxHeight: '200px',\r\n        overflowY: 'auto',\r\n\r\n    },\r\n    menuitem: {\r\n        color: 'white'\r\n    },\r\n    textInput: {\r\n        margin: '20px 5px',\r\n        width: '300px',\r\n        '& input': {\r\n            color: 'white',\r\n            paddingLeft: '20px',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        }    \r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\UpsertSystem.js",["735","736","737","738","739"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemAdditionalDetails.js",["740","741","742","743"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Collapse, Tooltip, IconButton, useMediaQuery, LinearProgress } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { format } from 'date-fns'\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\r\nimport { UpsertSystem } from './UpsertSystem';\r\n\r\nexport const SystemAdditionalDetails = ({ data, isOpen, systemId, toggleEdit }) => {\r\n\r\n    const classes = useStyles();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ systemData, setSystemData ] = useState(null);\r\n    const { t, i18n } = useTranslation(); \r\n    const [ isLoading, setIsLoading ] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        setSystemData(data);\r\n        setIsLoading(false);\r\n    }, [data])\r\n\r\n    return (\r\n      \r\n            isLoading ?\r\n            <LinearProgress />\r\n            :\r\n            <Collapse in={isOpen} >\r\n                <div className={classes.container}>\r\n                    <Grid container justify={'center'} className={classes.grid} spacing={2}>\r\n                        <Grid container className={classes.gridItem}>\r\n                            <Grid item xs={12} className={classes.headerRow}>\r\n                                <div className={classes.title}>\r\n                                    {t(\"systemsModule.additionalDetails\")}\r\n                                </div>\r\n                                <IconButton \r\n                                    className={classes.iconBtn}\r\n                                    onClick={toggleEdit}\r\n                                >\r\n                                    <EditRoundedIcon className={classes.icon}/>\r\n                                </IconButton>\r\n                            </Grid>\r\n                            <Grid item md={6} lg={3} xl={4} className={classes.fieldContainer}>\r\n                                <div className={classes.label}>\r\n                                    {t(\"systemsModule.location\")}\r\n                                </div>\r\n                                <div className={classes.fieldData}>\r\n                                    {systemData.general.location || t(\"general.noData\")}\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={3} xl={4} className={classes.fieldContainer}>\r\n                                <div className={classes.label}>\r\n                                    {t(\"systemsModule.manufacturingYear\")}\r\n                                </div>\r\n                                <div className={classes.fieldData}>\r\n                                    {systemData.general.manufacturingYear || t(\"general.noData\")}\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={3} xl={4} className={classes.fieldContainer}>\r\n                                <div className={classes.label}>\r\n                                    {t(\"systemsModule.SID\")}\r\n                                </div>\r\n                                <div className={classes.fieldData}>\r\n                                    {systemData.general.SID || t(\"general.noData\")}\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={3} xl={4} className={classes.fieldContainer}>\r\n                                <div className={classes.label}>\r\n                                    {t(\"systemsModule.warrantyDetails.issuer\")}\r\n                                </div>\r\n                                <div className={classes.fieldData}>\r\n                                    {t(`systemsModule.warrantyDetails.${systemData.warranty.issuer || 'nowarranty'}`)}\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={3} xl={4} className={classes.fieldContainer}>\r\n                                <div className={classes.label}>\r\n                                    {t(\"systemsModule.warrantyDetails.expiryDate\")}\r\n                                </div>\r\n                                <div className={classes.fieldData}>\r\n                                    {systemData.warranty.expiryDate ? format(new Date(systemData.warranty.expiryDate), lang.dateformat) : t(\"systemsModule.warrantyDetails.nowarranty\")}\r\n                                </div>\r\n                            </Grid>\r\n                            \r\n                        </Grid>\r\n                        <Grid item xs={12} lg={4} xl={4} className={classes.gridItem}>\r\n                            <div className={classes.card}>\r\n                                <div className={classes.cardTitle}>\r\n                                    {t(\"systemsModule.manufacturer\")}\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.manufacturerDetails.name\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.manufacturer.name || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.manufacturerDetails.contactName\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.manufacturer.contactName || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.manufacturerDetails.email\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.manufacturer.email || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.manufacturerDetails.phoneNumber\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.manufacturer.phoneNumber || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.manufacturerDetails.extension\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.manufacturer.extension || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} lg={4} xl={4} className={classes.gridItem}>\r\n                        <div className={classes.card}>\r\n                                <div className={classes.cardTitle}>\r\n                                    {t(\"systemsModule.supplier\")}\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.supplierDetails.name\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.supplier.name || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.supplierDetails.contactName\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.supplier.contactName || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.supplierDetails.email\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.supplier.email || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.supplierDetails.phoneNumber\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.supplier.phoneNumber || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.supplierDetails.extension\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.supplier.extension || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} lg={4} xl={4} className={classes.gridItem}>\r\n                            <div className={classes.card}>\r\n                                <div className={classes.cardTitle}>\r\n                                    {t(\"systemsModule.insurance\")}\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.insuranceDetails.name\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.insurance.name || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.insuranceDetails.contactName\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.insurance.contactName || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.insuranceDetails.email\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.insurance.email || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.insuranceDetails.phoneNumber\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.insurance.phoneNumber || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.cardRow}>\r\n                                    <div className={classes.rowLabel}>\r\n                                        {t(\"systemsModule.insuranceDetails.extension\")}\r\n                                    </div>\r\n                                    <div className={classes.rowData}>\r\n                                        { systemData.insurance.extension || t(\"general.noData\") }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Collapse>\r\n      \r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'rgba(0,0,0,0.4)',\r\n        borderRadius: '5px',\r\n        margin: '10px',\r\n        padding: '10px'\r\n    },\r\n    grid: {\r\n        padding: '10px',\r\n    },\r\n    gridItem: {\r\n        display: 'flex',\r\n        margin: '10px 0'\r\n    },\r\n    fieldContainer: {\r\n        padding: '10px',\r\n        margin : '15px 0', \r\n        height: '60px',\r\n    },\r\n    label: {\r\n        padding: '5px 10px',\r\n        borderRadius: '5px 5px 0px 0',\r\n        background: 'rgba(0,0,0,0.3)',\r\n        color: 'white',\r\n        width: 'fit-content',\r\n        fontSize: '13px'\r\n    },\r\n    fieldData: {\r\n        padding: '15px 20px',\r\n        width: '200px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '0 5px 5px 5px',\r\n        color: 'white'\r\n    },\r\n    card: {\r\n        margin: '10px 0px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '5px',\r\n        padding: '10px',\r\n        width: '100%'\r\n    },\r\n    cardTitle: {\r\n        color: 'white',\r\n        fontSize: '20px',\r\n        padding: '10px',\r\n        background: 'rgba(0,0,0,0.3)',\r\n        borderRadius: '5px',\r\n        \r\n    },\r\n    cardRow: {\r\n        padding: '10px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        color: 'white',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)'\r\n    },\r\n    rowLabel: {\r\n        padding: '3px 0',\r\n        fontSize: '14px',\r\n        color: 'rgba(255,255,255,0.6)'\r\n    },\r\n    rowData: {\r\n        fontSize: '16px'\r\n    },\r\n    headerRow: {\r\n        color: 'white',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '0px 10px 10px 10px',\r\n        fontSize: '20px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)'\r\n    },\r\n    iconBtn: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.3)'\r\n        }\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        fontSize: '20px'\r\n    },\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskMinified.js",[],"C:\\projects\\leev\\leev-fe\\src\\api\\documentsApi.js",["744"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultsControls.js",["745","746"],"import {\r\n\tButton,\r\n\tButtonGroup,\r\n\tCollapse,\r\n\tGrid,\r\n\tmakeStyles,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport BlurOnRoundedIcon from '@material-ui/icons/BlurOnRounded';\r\nimport ViewListRoundedIcon from '@material-ui/icons/ViewListRounded';\r\nimport ViewWeekRoundedIcon from '@material-ui/icons/ViewWeekRounded';\r\nimport clsx from 'clsx';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { getAsset, getFullAddress } from '../../../api/assetsApi';\r\nimport { getFaultsStatusListSuggestions } from '../../../api/faultsApi';\r\nimport { removeQueryParam } from '../../../api/genericApi';\r\nimport {\r\n\tgetAssetsSuggestions,\r\n\tgetSystemsByAssetOptions,\r\n} from '../../../api/systemsApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\n\r\nexport const FaultsControls = ({ viewType, setViewType }) => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [reloadedValue, setReloadedValue] = useState(null);\r\n\tconst [collapsed, setCollapsed] = useState(!downSm ? true : false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (query.asset) {\r\n\t\t\thandleReloaded(query.asset).then((data) => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetReloadedValue(data);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetReloadedValue({\r\n\t\t\t\tlabel: '',\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\thistory.push({\r\n\t\t\t\tpath: location.pathname,\r\n\t\t\t\tsearch: removeQueryParam(location.search, 'system'),\r\n\t\t\t});\r\n\t\t}\r\n\t}, [location.search]);\r\n\r\n\tconst handleReloaded = async (assetId) => {\r\n\t\tconst res = await getAsset(assetId, false);\r\n\t\tif (res) {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: getFullAddress(res),\r\n\t\t\t\tvalue: res._id,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleCollapse = () => {\r\n\t\tif (collapsed) {\r\n\t\t\tsetCollapsed(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetCollapsed(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{downSm && (\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName={classes.sortandfilter}\r\n\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t<FilterListIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tendIcon={\r\n\t\t\t\t\t\t\t\tcollapsed ? (\r\n\t\t\t\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<ExpandMoreRoundedIcon />\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={toggleCollapse}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{t(\r\n\t\t\t\t\t\t\t\t`faultsModule.${\r\n\t\t\t\t\t\t\t\t\tcollapsed ? 'hide' : 'show'\r\n\t\t\t\t\t\t\t\t}Filters`\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t<Collapse in={collapsed}>\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t{reloadedValue && (\r\n\t\t\t\t\t\t\t<SearchBoxSelect\r\n\t\t\t\t\t\t\t\tsuggestionsFunc={getAssetsSuggestions}\r\n\t\t\t\t\t\t\t\tplaceholder={t('systemsModule.filterByAsset')}\r\n\t\t\t\t\t\t\t\tfilterField={'asset'}\r\n\t\t\t\t\t\t\t\treloadedLabel={reloadedValue.label}\r\n\t\t\t\t\t\t\t\treloadedValue={reloadedValue.value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{query.asset && (\r\n\t\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\t\toptionsFunc={() =>\r\n\t\t\t\t\t\t\t\t\tgetSystemsByAssetOptions(query.asset)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder={t(\r\n\t\t\t\t\t\t\t\t\t'systemsModule.filterBySystemName'\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t\t<BlurOnRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfilterField={'system'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{viewType === 'list' && (\r\n\t\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\t\toptionsFunc={getFaultsStatusListSuggestions}\r\n\t\t\t\t\t\t\t\tplaceholder={t('faultsModule.filterByStatus')}\r\n\t\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t\t<DoubleArrowIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfilterField={'status'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={createUserOptions}\r\n\t\t\t\t\t\t\tplaceholder={t('faultsModule.filterByFaultOwner')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<PersonRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'owner'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ButtonGroup className={classes.typeGroup}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\tclasses.modeBtn,\r\n\t\t\t\t\t\t\t\t\tclasses.listBtn,\r\n\t\t\t\t\t\t\t\t\tviewType === 'list'\r\n\t\t\t\t\t\t\t\t\t\t? classes.modeBtnActive\r\n\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t\t<ViewListRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() => setViewType('list')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{t('faultsModule.listMode')}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\tclasses.modeBtn,\r\n\t\t\t\t\t\t\t\t\tclasses.blocksBtn,\r\n\t\t\t\t\t\t\t\t\tviewType === 'blocks'\r\n\t\t\t\t\t\t\t\t\t\t? classes.modeBtnActive\r\n\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t\t<ViewWeekRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() => setViewType('blocks')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{t('faultsModule.blocksMode')}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Collapse>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((them) => ({\r\n\tgridItem: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'flex-start',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tmarginLeft: '4px',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '6px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tsortandfilter: {\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '5px 25px 5px 3px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'black',\r\n\t\t},\r\n\t},\r\n\ttypeGroup: {\r\n\t\tmargin: '5px',\r\n\t\theight: '45px',\r\n\t},\r\n\tmodeBtn: {\r\n\t\tpadding: '0 15px 0 5px',\r\n\t\tcolor: 'white',\r\n\t\twidth: 'auto',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tlistBtn: {\r\n\t\tborderRadius: '25px 0 0 25px',\r\n\t},\r\n\tblocksBtn: {\r\n\t\tborderRadius: '0px 25px 25px 0px',\r\n\t},\r\n\tmodeBtnActive: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\UpsertFault.js",["747","748","749","750","751","752"],"import { Avatar, Backdrop, Button, Chip, Fade, FormHelperText, Grid, IconButton, LinearProgress, makeStyles, MenuItem, Modal, Paper, Select, TextField, useMediaQuery } from '@material-ui/core';\r\nimport { ClearRounded, OpenInNewOutlined } from '@material-ui/icons';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\nimport clsx from 'clsx';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getFault } from \"../../../api/faultsApi\";\r\nimport { getFullName } from '../../../api/genericApi';\r\nimport { createSystemMenuOptions, getAssetsSuggestions, getSystemsByAsset } from '../../../api/systemsApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { UserItem } from '../../user/UserItem';\r\n\r\n\r\n\r\n\r\nexport const UpsertFault = ({ handleClose, handleSave, handleUpdate, faultId}) => {\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const { auth } = useContext(AuthContext);\r\n    const { t } = useTranslation();\r\n    const [ mode, setMode ] = useState(handleUpdate ? 'update' : 'create')\r\n    const [ errors, setErrors ] = useState([]);\r\n    const [ assets, setAssets ] = useState([]);\r\n    const [ systems, setSystems ] = useState([]);\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n    const [ details, setDetails ] = useState({\r\n        tenant: auth.user.tenant,\r\n        title: '',\r\n        description: '',\r\n        asset: '',\r\n        system: '',\r\n        owner: '',\r\n        relatedUsers: [],\r\n        createdBy: auth.user._id,\r\n        images: [],\r\n        uploadedImages: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log(details)\r\n    }, [details])\r\n\r\n    useEffect(() => {\r\n        createUserOptions()\r\n        .then(data => {\r\n            setUserList(data);\r\n            return getAssetsSuggestions()\r\n        })\r\n        .then(data => {\r\n            setAssets(data); \r\n            if (!faultId) {\r\n                setIsLoading(false);\r\n                return;\r\n            }\r\n            getFault(faultId, true)        \r\n            .then(data => {\r\n                return Promise.all([loadSystemOptions(data.asset), Promise.resolve(data)]) \r\n            })\r\n            .then(res => {\r\n               let data = res[1];\r\n               if (!data) return;\r\n               setDetails({ ...data, images: [], uploadedImages: data.images});\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false)\r\n            }); \r\n        }) \r\n    }, []);\r\n\r\n\r\n    const validateFields = () => {\r\n        return new Promise((resolve,reject) => {\r\n            let errList = [];\r\n            if (!details.owner) {\r\n                errList.push({ field: 'owner', text: t(\"errors.isRequired\")})\r\n            }\r\n            if (!details.asset) {\r\n                errList.push({ field: 'asset', text: t(\"errors.isRequired\")})\r\n            }\r\n            if (!details.system) {\r\n                errList.push({ field: 'system', text: t(\"errors.isRequired\")})\r\n            }\r\n            if (!details.title) {\r\n                errList.push({ field: 'title', text: t(\"errors.isRequired\")})\r\n            }\r\n            \r\n            if (errList.length) {\r\n                setErrors(errList);\r\n                resolve(false);\r\n            };\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    const loadSystemOptions = async (assetId) => {\r\n        return getSystemsByAsset(assetId)\r\n        .then(systems => {\r\n            return createSystemMenuOptions(systems)\r\n        })\r\n        .then(data => {\r\n            setSystems(data);\r\n            return true;\r\n        })\r\n    };\r\n\r\n    const handleConfirm = () => {\r\n        validateFields()\r\n        .then(res => {\r\n            if (!res) return;\r\n            if (mode === 'update') {\r\n                handleUpdate(details)\r\n            } else \r\n                handleSave(details);\r\n            }\r\n        )      \r\n    }\r\n\r\n    const handleChange = field => async event => {\r\n        setDetails({\r\n            ...details,\r\n            [field]: event.target.value\r\n        })\r\n        if (field === 'asset'){\r\n            if (event.target.value) {\r\n                await loadSystemOptions(event.target.value)\r\n            } else {\r\n                setDetails({\r\n                    ...details,\r\n                    system: null\r\n                });\r\n                setSystems([]);\r\n            }\r\n            \r\n        }\r\n        if (errors.length) {\r\n            setErrors(errors.filter(err => err.field !== field))\r\n        }\r\n    }\r\n\r\n    const handleFileUpload = event => {\r\n        setDetails({\r\n            ...details,\r\n            images: event.target.files\r\n        })\r\n    }\r\n\r\n    const removeImage = i => event => {\r\n        let im = details.uploadedImages;\r\n        im.splice(i, 1);\r\n        setDetails({ ...details, uploadedImages: im})\r\n    }\r\n\r\n    return (\r\n        isLoading ? \r\n        <LinearProgress /> :\r\n        <Modal\r\n            open={true}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={true}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xs={12} sm={10} md={8} lg={8} xl={6} className={classes.gridCont}>\r\n                        <Paper\r\n                            elevation={6}\r\n                            className={classes.paper}\r\n                            style={{ direction: lang.dir }}\r\n                        >\r\n                            <Grid container>\r\n                                <Grid item xs={12} className={classes.headerRow}>\r\n                                    <div className={classes.title}>\r\n                                        {mode === 'update' ? t(\"faultsModule.upsert.updateFaultDetails\") : t(\"faultsModule.upsert.createFault\")}\r\n                                    </div>\r\n                                    <div className={classes.close}>\r\n                                        <IconButton\r\n                                            className={classes.iconBtn}\r\n                                            onClick={handleClose}\r\n                                        >\r\n                                            <ClearRounded className={classes.icon}/>\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </Grid>                     \r\n                                <Grid item xs={12} sm={6} md={6} lg={6} xl={6} className={classes.section}>\r\n                                    <Grid item xs={12}>\r\n                                        <div className={classes.sectionTitle}>\r\n                                            {t(\"faultsModule.upsert.asset\")}\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} className={classes.fields}>\r\n                                        <Grid container justify='flex-start'>\r\n                                            <Grid item xs={12} className={classes.textContainer}>\r\n                                            <Select\r\n                                                variant={\"outlined\"}\r\n                                                error={ errors.filter(e => e.field === `asset`).length > 0 }\r\n                                                value={ details.asset }\r\n                                                onChange={handleChange(`asset`)}\r\n                                                className={classes.selectInput}\r\n                                                MenuProps={{\r\n                                                    anchorOrigin: {\r\n                                                        vertical: \"bottom\",\r\n                                                        horizontal: \"center\",\r\n                                                    },\r\n                                                    transformOrigin: {\r\n                                                        vertical: \"top\",\r\n                                                        horizontal: \"center\",\r\n                                                    },\r\n                                                    getContentAnchorEl: null,\r\n                                                    classes: {\r\n                                                        paper: classes.menupaper,\r\n                                                \r\n                                                    }\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                {\r\n                                                    assets.map((asset, i) => \r\n                                                        <MenuItem \r\n                                                            key={i}\r\n                                                            value={asset.value}\r\n                                                            style={{ direction: lang.dir }}\r\n                                                            className={classes.menuitem}\r\n                                                        >\r\n                                                            {asset.text}\r\n                                                        </MenuItem>\r\n                                                    )\r\n                                                }\r\n                                            </Select>\r\n                                            {\r\n                                                errors.filter(e => e.field === 'asset').length > 0 &&\r\n                                                <FormHelperText style={{ color: '#f44336', marginRight: '15px'}}>{t(\"errors.isRequired\")}</FormHelperText>\r\n                                            }\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={4} lg={4} xl={4} className={classes.section}>\r\n                                    <Grid item xs={12}>\r\n                                        <div className={classes.sectionTitle}>\r\n                                            {t(\"faultsModule.upsert.system\")}\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} className={classes.fields}>\r\n                                        <Grid container justify='flex-start'>\r\n                                            <Grid item xs={12} className={classes.textContainer}>\r\n                                            <Select\r\n                                                variant={\"outlined\"}\r\n                                                error={ errors.filter(e => e.field === `system`).length > 0 }\r\n                                                value={ details.system }\r\n                                                onChange={handleChange(`system`)}\r\n                                                className={classes.selectInput}\r\n                                                MenuProps={{\r\n                                                    anchorOrigin: {\r\n                                                        vertical: \"bottom\",\r\n                                                        horizontal: \"center\",\r\n                                                    },\r\n                                                    transformOrigin: {\r\n                                                        vertical: \"top\",\r\n                                                        horizontal: \"center\",\r\n                                                    },\r\n                                                    getContentAnchorEl: null,\r\n                                                    classes: {\r\n                                                        paper: classes.menupaper,\r\n                                                \r\n                                                    }\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                {\r\n                                                    systems.map((system, i) => \r\n                                                        <MenuItem \r\n                                                            key={i}\r\n                                                            value={system.value}\r\n                                                            style={{ direction: lang.dir }}\r\n                                                            className={classes.menuitem}\r\n                                                        >\r\n                                                            {system.text}\r\n                                                        </MenuItem>\r\n                                                    )\r\n                                                }\r\n                                            </Select>\r\n                                            {\r\n                                                errors.filter(e => e.field === 'asset').length > 0 &&\r\n                                                <FormHelperText style={{ color: '#f44336', marginRight: '15px'}}>{t(\"errors.isRequired\")}</FormHelperText>\r\n                                            }\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} className={classes.section}>\r\n                                    <Grid item xs={12}>\r\n                                        <div className={classes.sectionTitle}>\r\n                                            {t(\"faultsModule.upsert.generalDetails\")}\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} className={classes.fields}>\r\n                                        <Grid container justify='flex-start'>\r\n                                            <Grid item xs={12} className={classes.textContainer}>\r\n                                                <TextField\r\n                                                    variant={\"outlined\"}\r\n                                                    label={t(`faultsModule.upsert.title`)}\r\n                                                    error={ errors.filter(e => e.field === `title`).length > 0 }\r\n                                                    value={ details.title }\r\n                                                    onChange={handleChange('title')}\r\n                                                    className={classes.textField}\r\n                                                    size={'medium'}\r\n                                                    helperText={ errors.filter(e => e.field === `title`).length > 0 ? t(\"errors.isRequired\") : `${60 - (details.title.length || 0)} ${t(\"faultsModule.upsert.titleLimit\")}` }\r\n                                                    inputProps={{\r\n                                                        maxLength: 60\r\n                                                    }}\r\n                                                    FormHelperTextProps={{\r\n                                                        style: { color: errors.filter(e => e.field === `title`).length > 0 ? 'rgb(244, 67, 54)' : 'rgba(255,255,255,0.6)' }\r\n                                                    }}\r\n                                                    \r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} className={classes.textContainer}>\r\n                                                <TextField\r\n                                                    variant={\"outlined\"}\r\n                                                    label={t(`faultsModule.upsert.description`)}\r\n                                                    value={ details.description }\r\n                                                    onChange={handleChange('description')}\r\n                                                    className={classes.textField}\r\n                                                    size={'medium'}\r\n                                                    multiline={true}\r\n                                                    rows={7}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={6} lg={4} xl={4}  className={classes.section}>\r\n                                    <Grid item xs={12}>\r\n                                        <div className={classes.sectionTitle}>\r\n                                            {t(\"faultsModule.upsert.faultOwner\")}\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} className={classes.fields}>\r\n                                        <Grid item xs={12} className={classes.textContainer}>\r\n                                            <Select\r\n                                                variant={\"outlined\"}\r\n                                                error={ errors.filter(e => e.field === `owner`).length > 0 }\r\n                                                value={ details.owner }\r\n                                                onChange={handleChange(`owner`)}\r\n                                                className={classes.selectInput}\r\n                                                MenuProps={{\r\n                                                    anchorOrigin: {\r\n                                                        vertical: \"bottom\",\r\n                                                        horizontal: \"center\",\r\n                                                    },\r\n                                                    transformOrigin: {\r\n                                                        vertical: \"top\",\r\n                                                        horizontal: \"center\",\r\n                                                    },\r\n                                                    getContentAnchorEl: null,\r\n                                                    classes: {\r\n                                                        paper: classes.menupaper,\r\n                                                \r\n                                                    }\r\n                                                }}\r\n                                                renderValue={(selected) => {\r\n                                                    let user = userList.find( f => f._id === selected);\r\n                                                    return (\r\n                                                        \r\n                                                            <Chip\r\n                                                                size={'medium'}\r\n                                                                avatar={<Avatar style={{ height: '40px', width: '40px'}} src={user.avatar} />}\r\n                                                                label={getFullName(user)}\r\n                                                                className={classes.chip}\r\n                                                                \r\n                                                            />\r\n                                                    \r\n                                                    )\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    userList.map((user, i) => \r\n                                                        <MenuItem \r\n                                                            key={i}\r\n                                                            value={user.value}\r\n                                                            style={{ direction: lang.dir }}\r\n                                                            className={classes.menuitem}\r\n                                                        >\r\n                                                            <div className={classes.userCont}>\r\n                                                                <UserItem\r\n                                                                    user={user}\r\n                                                                    avatarSize={40}\r\n                                                                    size={13}\r\n                                                                    showName\r\n                                                                />\r\n                                                            </div>\r\n                                                            \r\n                                                        </MenuItem>\r\n                                                    )\r\n                                                }\r\n                                            </Select>\r\n                                            {\r\n                                                errors.filter(e => e.field === 'owner').length > 0 &&\r\n                                                <FormHelperText style={{ color: '#f44336', marginRight: '15px'}}>{t(\"errors.isRequired\")}</FormHelperText>\r\n                                            }\r\n                                            \r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                \r\n                                <Grid item xs={12} md={6} className={classes.section}>\r\n                                            <Grid item xs={12}>\r\n                                                <div className={classes.sectionTitle}>\r\n                                                    {mode === 'create' ? t(\"faultsModule.upsert.faultImages\") : t(\"faultsModule.upsert.addFaultImages\")}\r\n                                                </div>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} className={classes.fields}>\r\n                                                <Grid container justify='flex-start'>\r\n                                                    <Grid item xs={12} className={classes.textContainer}>\r\n                                                        <Button\r\n                                                            component={'label'}\r\n                                                            variant={'contained'}\r\n                                                            className={classes.uploadBtn}\r\n                                                        >\r\n                                                            { t(\"faultsModule.upsert.uploadImages\")}\r\n                                                            <input \r\n                                                                accepts='image/*'\r\n                                                                type='file'\r\n                                                                multiple\r\n                                                                onChange={handleFileUpload}\r\n                                                                hidden  \r\n                                                            />\r\n                                                        </Button>\r\n                                                        <span className={classes.filesUploaded}>\r\n                                                            {`${details.images.length} ${t(\"faultsModule.upsert.imagesSelected\")}` }\r\n                                                        </span>\r\n                                                    </Grid>\r\n                                                    {\r\n                                                        Boolean(details.uploadedImages.length) &&\r\n                                                        <React.Fragment>\r\n                                                            <Grid item xs={12} className={classes.uploadedImagesTitle}>\r\n                                                                {t(\"faultsModule.upsert.uploadedImages\")}\r\n                                                            </Grid>\r\n                                                            {\r\n                                                                details.uploadedImages.map((image, i) => \r\n                                                                    <Grid item xs={12} className={classes.imageRow} key={i}>\r\n                                                                        <img src={image} className={classes.previewImage} />\r\n                                                                        <IconButton     \r\n                                                                            onClick={removeImage(i)}\r\n                                                                            className={classes.removeImageBtn}\r\n                                                                        >\r\n                                                                            <DeleteOutlineRoundedIcon className={classes.removeImage}/>\r\n                                                                        </IconButton>\r\n                                                                    </Grid>\r\n                                                                )\r\n                                                            }\r\n                                                        </React.Fragment> \r\n                                                    } \r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                <Grid item xs={12} className={classes.controls}>\r\n                                    <Button\r\n                                        className={clsx(classes.control, classes.save)}\r\n                                        onClick={handleConfirm}\r\n                                    >\r\n                                        {t(\"controls.confirm\")}\r\n                                    </Button>\r\n                                    <Button\r\n                                        className={clsx(classes.control, classes.cancel)}\r\n                                        onClick={handleClose}\r\n                                    >\r\n                                        {t(\"controls.cancel\")}\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    \r\n    gridCont: {\r\n        height: 'fit-content'\r\n    },\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '10px',\r\n        padding: '10px 20px',\r\n        overflowY: 'overlay',\r\n        height: '80vh',\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: '81vh',\r\n            top: 0,\r\n            borderRadius: '0',\r\n            border: '0',\r\n            padding: '10px 5px'\r\n        },\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    headerRow: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: '100%',      \r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        padding: '20px 10px 10px',\r\n        fontSize: '20px',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    iconBtn: {\r\n        margin: '10px',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.3)'\r\n        }\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        fontSize: '20px'\r\n    },\r\n    section: {\r\n        margin: '10px 5px',\r\n        \r\n    },\r\n    sectionTitle: {\r\n        color: 'white',\r\n        fontSize: '16px',\r\n        padding: '10px 20px',\r\n        width: 'fit-content',\r\n        borderRadius: '10px 10px 0 0',\r\n        background: 'rgba(0,0,0,0.4)',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    fields: {\r\n        padding: '10px 20px',\r\n        borderRadius: '0px 10px 10px 10px',\r\n        background: 'rgba(0,0,0,0.4)',\r\n        [theme.breakpoints.down('sm')]: {\r\n            padding: '10px',\r\n        }\r\n    },\r\n    textContainer: {\r\n        padding: '5px',\r\n    },\r\n    textField: {\r\n        width: '100%',\r\n        '& fieldset': {\r\n            borderRadius: '5px',\r\n        },  \r\n    },\r\n    selectInput: {\r\n        width: '100%',\r\n        '& fieldset': {\r\n            borderRadius: '5px',\r\n        }   \r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.8)',\r\n        backdropFilter: 'blur(10px)',\r\n        height: '200px',\r\n        overflowY: 'auto',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        marginRight: '7px',\r\n        marginLeft: '-5px'\r\n\r\n    },\r\n    menuitem: {\r\n        color: 'white',\r\n        width: '100%',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.1)'\r\n        }\r\n    },\r\n    controls: {\r\n        borderTop: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px 0',\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white',\r\n       \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        '&:hover': { \r\n            boxShadow: 'inset rgba(255,255,255,0.3) 0 0 2px 1px'\r\n        }\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    chip: {\r\n        height: '50px',\r\n        fontSize: '14px',\r\n        borderRadius: '50px',\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n        color: 'white',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'rgba(0,0,0,0.6)',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.6)',\r\n            boxShadow: 'inset lightgrey 0px 0px 1px 1px'\r\n        } \r\n    },\r\n    userCont: {\r\n        height: 'fit-content',\r\n        padding: 0,\r\n        margin: 0,\r\n        margin: '5px 0',\r\n        \r\n    },\r\n    chipsCont: {\r\n        height: 'fit-content',\r\n        padding: 0,\r\n        margin: '3px',\r\n        borderRadius: '50px',\r\n        background: 'rgba(255,255,255,0.1)',\r\n        boxShadow: 'inset rgba(0,0,0,0.5) 0px 0px 2px 1px',\r\n        display: 'flex',\r\n        jutifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        \r\n    },\r\n    removeIcon: {\r\n        color: 'rgba(255,255,255,0.2)',\r\n        padding: '5px',\r\n        marginRight: '5px',\r\n        borderRadius: '50px',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.8)',\r\n            color: 'white',\r\n        }\r\n    },\r\n    radioGroup: {\r\n        color: 'white',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignitems: 'center',\r\n        \r\n    },\r\n    radioBtn: {\r\n        color: 'white',\r\n        padding: '15px'\r\n    },\r\n    filesUploaded: {\r\n        color: 'white',\r\n        padding: '0 15px'\r\n    },\r\n    uploadBtn: {\r\n        margin: '9px 0',\r\n        background: 'rgba(0,0,0,0.1)',\r\n        color: 'white',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '50px',\r\n        whiteSpace: 'nowrap',\r\n        '&:hover': {\r\n            boxShadow: 'inset white 0 0 2px 1px',\r\n            background: 'rgba(0,0,0,0.3)'\r\n        }\r\n    },\r\n    imageRow: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        padding: '10px 5px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)'\r\n    },\r\n    previewImage: {\r\n        height: '50px',\r\n        width: '100px'\r\n    },\r\n    removeImageBtn: {\r\n        color: 'rgba(255,255,255,0.5)',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        '&:hover': {\r\n            color: 'white',\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    uploadedImagesTitle: {\r\n        color: 'white',\r\n        padding: '10px 5px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\user\\UserItem.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\ItemLink.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\documents\\DocumentControls.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultViewControls.js",["753"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultLink.js",["754"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport const FaultLink = ({ faultId, size }) => {\r\n\r\n    return (\r\n        <Link\r\n            to={`/workspace/faults/${faultId}`}\r\n            style={{ textDecoration: 'none' }}\r\n        >\r\n           <span style={{\r\n               color: 'white',\r\n               fontSize: `${size}px`,\r\n               whiteSpace: 'nowrap'\r\n           }}>\r\n             {faultId}\r\n           </span>\r\n        </Link>\r\n    )\r\n}","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UserList.js",["755"],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\UpdateStatus.js",["756","757","758"],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\StatusTag.js",["759","760"],"\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport CheckCircleOutlineRoundedIcon from '@material-ui/icons/CheckCircleOutlineRounded';\r\nimport HourglassEmptyRoundedIcon from '@material-ui/icons/HourglassEmptyRounded';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport clsx from 'clsx';\r\nimport { green, red, yellow } from '@material-ui/core/colors';\r\n\r\nexport const StatusTag = ({status, type, size}) => {\r\n\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    \r\n    return (\r\n        <div \r\n            className={clsx(classes.statusTag,classes[status.statusId])}\r\n            style={{ fontSize: size || '14px'}}    \r\n        >\r\n            {\r\n                status.statusId  === 'ready' ? \r\n                <PlayCircleOutlineIcon className={classes.icon}/> :\r\n                status.statusId  === 'inProgress' ? \r\n                <CachedIcon className={classes.icon} /> :\r\n                status.statusId  === 'pending' ?\r\n                <HourglassEmptyRoundedIcon className={classes.icon}className={classes.icon} /> : \r\n                status.statusId  === 'closed' ?\r\n                <CheckCircleOutlineRoundedIcon className={classes.icon} /> : null\r\n            }\r\n            <div className={classes.title}>\r\n                {t(`${type}sModule.statuses.${status.statusId}`)}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    statusTag: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'fit-content',\r\n        padding: '0 10px',\r\n        borderRadius: '25px',\r\n        whiteSpace: 'nowrap'\r\n\r\n    },\r\n    title: {\r\n        padding: '7px 10px 7px 0px'\r\n    },\r\n    ready: {\r\n       \r\n        background: red[600],\r\n        color: 'white'\r\n    },\r\n    inProgress: {\r\n        background: yellow[500],\r\n        color: 'black',\r\n        \r\n    },\r\n    pending: {\r\n        background: 'rgba(255,255,255,0.4)',\r\n        color: 'black'\r\n    },\r\n    closed: {\r\n        background: green[800],\r\n        color: 'white'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        padding: '0 5px'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\CommentSection.js",["761","762","763","764"],"import {\r\n\tAvatar,\r\n\tButton,\r\n\tClickAwayListener,\r\n\tFormControl,\r\n\tGrid,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tOutlinedInput,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { green, red } from '@material-ui/core/colors';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport SaveRoundedIcon from '@material-ui/icons/SaveRounded';\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\nimport clsx from 'clsx';\r\nimport _ from 'lodash';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { getDatediffString } from '../../api/genericApi';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { Can } from './Can';\r\n\r\nexport const CommentSection = ({ parent, saveComment, updateComment, module }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t } = useTranslation();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst [commentList, setCommentList] = useState(parent.comments || []);\r\n\tconst [parentId, setParentId] = useState(parent._id);\r\n\tconst [text, setText] = useState('');\r\n\tconst [textFocused, setTextFocused] = useState(false);\r\n\tconst [editComment, setEditComment] = useState(null);\r\n\tconst [numOfComments, setNumOfComments] = useState(3);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCommentList(parent.comments);\r\n\t\tsetParentId(parent._id);\r\n\t}, [parent]);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetText(event.target.value);\r\n\t};\r\n\r\n\tconst handleSendComment = (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tsaveComment(parentId, auth.user._id, text)\r\n\t\t\t.then((data) => {\r\n\t\t\t\tif (!data) return;\r\n\t\t\t\tsetCommentList(data.comments);\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tsetText('');\r\n\t\t\t\tsetTextFocused(false);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleEditChange = (event) => {\r\n\t\tsetEditComment({\r\n\t\t\t...editComment,\r\n\t\t\ttext: event.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleUpdateComment = async () => {\r\n\t\tconst res = await updateComment(\r\n\t\t\tparentId,\r\n\t\t\teditComment._id,\r\n\t\t\teditComment.text\r\n\t\t);\r\n\t\tsetCommentList(res.comments);\r\n\t\tsetEditComment(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid container>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<div className={classes.title}>{t('comments.title')}</div>\r\n\t\t\t</Grid>\r\n\t\t\t{numOfComments < commentList.length && (\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName={classes.showMore}\r\n\t\t\t\t\t\tonClick={() => setNumOfComments(numOfComments + 3)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{t('comments.showMore')}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{_.takeRight(commentList, numOfComments).map((c, i) => (\r\n\t\t\t\t<Grid item xs={12} className={clsx(classes.comment)} key={i}>\r\n\t\t\t\t\t<div className={classes.commentContainer}>\r\n\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\tclassName={classes.avatar}\r\n\t\t\t\t\t\t\talt={'abc'}\r\n\t\t\t\t\t\t\tsrc={c.user.avatar}\r\n\t\t\t\t\t\t\tstyle={{ height: '50px', width: '50px' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className={classes.data}>\r\n\t\t\t\t\t\t\t<div className={classes.commenter}>\r\n\t\t\t\t\t\t\t\t{`${c.user.firstName} ${c.user.lastName}`}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{Boolean(editComment) &&\r\n\t\t\t\t\t\t\teditComment._id === c._id ? (\r\n\t\t\t\t\t\t\t\t<div className={classes.editContainer}>\r\n\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.form}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={editComment.text || ''}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleEditChange}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={t('comments.add')}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\t\t\t\tclasses.textInput,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttextFocused\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? classes.focused\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\tonFocus={() => setTextFocused(true)}\r\n\t\t\t\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tinputMultiline:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclasses.multiLine,\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.save}\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleUpdateComment}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<SaveRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.cancel}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setEditComment(null)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<ClearRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div className={classes.commentText}>\r\n\t\t\t\t\t\t\t\t\t{`${c.text}`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.commentFooter}>\r\n\t\t\t\t\t\t{/* <div className={classes.footerField}> \r\n                                <Button className={classes.footerBtn}> \r\n                                    {t(\"comments.reply\")}\r\n                                </Button>\r\n                            </div> */}\r\n\t\t\t\t\t\t{c.user._id == auth.user._id && (\r\n\t\t\t\t\t\t\t<div className={classes.footerField}>\r\n\t\t\t\t\t\t\t\t{/* {` · `} */}\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName={classes.footerBtn}\r\n\t\t\t\t\t\t\t\t\tonClick={() => setEditComment(c)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{t('comments.edit')}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div className={classes.footerField}>\r\n\t\t\t\t\t\t\t{` · `}\r\n\t\t\t\t\t\t\t<div className={classes.timePassed}>\r\n\t\t\t\t\t\t\t\t{`${getDatediffString(c.createdAt)}`}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t))}\r\n\r\n\t\t\t<Can\r\n\t\t\t\tmodule={module}\r\n\t\t\t\taction={'comment'}\r\n\t\t\t\tuserList={[\r\n\t\t\t\t\t...parent.relatedUsers.map((u) => u._id),\r\n\t\t\t\t\tparent.owner._id,\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t<ClickAwayListener onClickAway={() => setTextFocused(false)}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\tmd={8}\r\n\t\t\t\t\t\tlg={6}\r\n\t\t\t\t\t\txl={6}\r\n\t\t\t\t\t\tclassName={classes.addComment}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tclassName={classes.form}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\t\tvalue={text || ''}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\tplaceholder={t('comments.add')}\r\n\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\tclasses.textInput,\r\n\t\t\t\t\t\t\t\t\ttextFocused ? classes.focused : null\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tonFocus={() => setTextFocused(true)}\r\n\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\t\tinputMultiline: classes.multiLine,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tclassName={classes.postBtn}\r\n\t\t\t\t\t\t\tonClick={handleSendComment}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<SendRoundedIcon\r\n\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\tclasses.icon,\r\n\t\t\t\t\t\t\t\t\tlang.dir === 'rtl' ? classes.mirror : null\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</ClickAwayListener>\r\n\t\t\t</Can>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttitle: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '20px',\r\n\t\tpadding: '20px 30px 10px',\r\n\t\tmarginBottom: '10px',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\taddComment: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '10px',\r\n\t\twidth: 'fit-content',\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: '0 10px',\r\n\t},\r\n\tform: {\r\n\t\tcolor: 'white',\r\n\t\twidth: '100%',\r\n\t},\r\n\ttextInput: {\r\n\t\tpadding: '15px 10px',\r\n\t\tborderRadius: '42px',\r\n\t\t'& input': {\r\n\t\t\tcolor: 'white',\r\n\t\t\twidth: '80%',\r\n\t\t},\r\n\t\t'& label': {\r\n\t\t\tcolor: 'white',\r\n\t\t\tpaddingLeft: '5px',\r\n\t\t},\r\n\t\t'& fieldset': {\r\n\t\t\tborderColor: 'rgba(255,255,255,0.6)',\r\n\t\t\tborderRadius: '42px',\r\n\t\t},\r\n\t},\r\n\tfocused: {\r\n\t\tboxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t},\r\n\tpostBtn: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '7px',\r\n\t\tleft: '-40px',\r\n\t\tmarginBottom: '1px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t},\r\n\tmirror: {\r\n\t\ttransform: 'scaleX(-1)',\r\n\t},\r\n\tcomment: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tmargin: '5px 0',\r\n\t},\r\n\tcommentContainer: {\r\n\t\twidth: 'fit-content',\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: '10px 30px 10px 0px',\r\n\t\tmargin: '0px 10px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tborderRadius: '35px',\r\n\t},\r\n\tcommenter: {\r\n\t\tcolor: 'rgba(255,255,255,0.6)',\r\n\t\tfontSize: '13px',\r\n\t\tpadding: '5px',\r\n\t},\r\n\tcommentText: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tcommentFooter: {\r\n\t\tdisplay: 'flex',\r\n\t\tmarginLeft: '40px',\r\n\t\theight: '20px',\r\n\t},\r\n\tfooterField: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tfontSize: '11px',\r\n\t\tcolor: 'rgba(255,255,255,0.4)',\r\n\t},\r\n\tfooterBtn: {\r\n\t\tfontSize: '12px',\r\n\t\tpadding: '1px 2px',\r\n\t\tmargin: '0px 2px',\r\n\t\tminWidth: '0',\r\n\t\twidth: 'fit-content',\r\n\t\tcolor: 'rgba(255,255,255,0.4)',\r\n\t\tborderRadius: '50px',\r\n\t\t'&:hover': {\r\n\t\t\tcolor: 'white',\r\n\t\t\ttextDecoration: 'underline',\r\n\t\t\tboxShadow: 'none',\r\n\t\t\tbackground: 'transparent',\r\n\t\t},\r\n\t},\r\n\ttimePassed: {\r\n\t\tfontSize: '12px',\r\n\t\tpadding: '0px 2px',\r\n\t\tmargin: '0 2px',\r\n\t\tminWidth: '0',\r\n\t\twidth: 'fit-content',\r\n\t\tcolor: 'rgba(255,255,255,0.4)',\r\n\t},\r\n\tmultiLine: {\r\n\t\tpadding: '0px 20px',\r\n\t},\r\n\tshowMore: {\r\n\t\tmargin: '5px 30px',\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t\tpadding: '5px',\r\n\t\t'&:hover': {\r\n\t\t\tboxShadow: 'none',\r\n\t\t\tbackground: 'inherit',\r\n\t\t\ttextDecoration: 'underline',\r\n\t\t},\r\n\t},\r\n\tsave: {\r\n\t\tbackground: green[800],\r\n\t\tpadding: '8px',\r\n\t\tmargin: '18px 5px',\r\n\t},\r\n\tcancel: {\r\n\t\tbackground: red[800],\r\n\t\tpadding: '8px',\r\n\t\tmargin: '18px 5px',\r\n\t},\r\n\teditContainer: {\r\n\t\theight: 'auto',\r\n\t\tmargin: 'auto 0',\r\n\t\twidth: '100%',\r\n\t\tdispaly: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\Carousel.js",["765","766","767","768"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { makeStyles, Slide, Paper, IconButton, Backdrop, Modal } from '@material-ui/core'\r\nimport ChevronLeftRoundedIcon from '@material-ui/icons/ChevronLeftRounded';\r\nimport ChevronRightRoundedIcon from '@material-ui/icons/ChevronRightRounded';\r\nimport clsx from 'clsx';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport ZoomInRoundedIcon from '@material-ui/icons/ZoomInRounded';\r\nimport ZoomOutRoundedIcon from '@material-ui/icons/ZoomOutRounded';\r\nimport ZoomOutMapRoundedIcon from '@material-ui/icons/ZoomOutMapRounded';\r\n\r\nexport const Carousel = ({ images, isOpen, size }) => {\r\n    \r\n    const classes = useStyles();\r\n    const [ slideIn, setSlideIn ] = useState(isOpen);\r\n    const [ slideDirection, setSlideDirection ] = useState('left');\r\n    const [ index, setIndex ] = useState(0);\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ photoViewMode, setPhotoViewMode ] = useState(false);\r\n    const [ picSize, setPicSize ] = useState(size)\r\n\r\n    useEffect(() => {\r\n        if (photoViewMode) {\r\n            setPicSize(800)\r\n        }\r\n    }, [photoViewMode])\r\n\r\n    const handleClick = dir => event => {\r\n        setSlideDirection(dir);\r\n        setSlideIn(false);\r\n \r\n        setTimeout(() => {\r\n            setIndex((index - (dir === 'left' ? 1 : -1) + images.length) % images.length);\r\n            setSlideIn(true);\r\n        }, 100)\r\n    }\r\n\r\n    const handleZoom = up => {\r\n        if (up) {\r\n            if (picSize === 1300) return;\r\n            setPicSize(picSize + 100)\r\n        } else {\r\n            if (picSize === 300) return;\r\n            setPicSize(picSize - 100)\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setPicSize(300);\r\n        setPhotoViewMode(false);\r\n    }\r\n\r\n    return (\r\n        <CarouselWrapper\r\n            isModal={photoViewMode}\r\n            wrapper={ children => \r\n                <Modal\r\n                    open={true}\r\n                    onClose={handleClose}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                        timeout: 500\r\n                    }}\r\n                    className={classes.modal}\r\n                >\r\n                    <div className={classes.content} >\r\n                        <CarouselControls \r\n                            handleZoom={handleZoom} \r\n                            picSize={picSize} \r\n                            handleClose={handleClose}\r\n                        />\r\n                        {children}\r\n                    </div>\r\n                    \r\n                </Modal>\r\n            }\r\n        >\r\n            <div \r\n                className={classes.container}\r\n                style={{ cursor: photoViewMode ? 'default' : 'pointer'}}\r\n            >\r\n                <IconButton\r\n                    className={clsx(classes.arrow, classes.arrowLeft)}\r\n                    onClick={handleClick('left')}\r\n                    style={{ left: lang.drection === 'rtl' ? '97%' : '3%' }}\r\n                >\r\n                    <ChevronLeftRoundedIcon className={classes.icon}/>\r\n                </IconButton>\r\n                <CarouselSlide image={images[index]} size={picSize} setPhotoViewMode={setPhotoViewMode}/>\r\n                <IconButton\r\n                    className={clsx(classes.arrow, classes.arrowRight)}\r\n                    onClick={handleClick('right')}\r\n                    style={{ right: lang.drection === 'rtl' ? '97%' : '3%' }}\r\n                >\r\n                    <ChevronRightRoundedIcon className={classes.icon}/>\r\n                </IconButton>\r\n            </div>\r\n        </CarouselWrapper>\r\n        \r\n    )\r\n}\r\n\r\nconst CarouselSlide = ({image, size, setPhotoViewMode}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper \r\n            className={classes.paper} \r\n            elevation={0} \r\n            style={{ height: `${size}px`}}\r\n            onClick={() => setPhotoViewMode(true)}\r\n        >\r\n            <img src={image} className={classes.image} />\r\n        </Paper>   \r\n    )\r\n}\r\n\r\nconst CarouselControls = ({handleZoom, picSize, handleClose}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.controls}>\r\n            <div className={classes.close}>\r\n                <IconButton\r\n                    className={classes.iconBtn}\r\n                    onClick={handleClose}\r\n                >\r\n                    <ClearRounded className={classes.icon} />\r\n                </IconButton>\r\n            </div>\r\n            \r\n            <div className={classes.zoomControl}>\r\n                <IconButton \r\n                    className={classes.iconBtn} \r\n                    onClick={() => handleZoom(true)} \r\n                    disabled={picSize === 1300}\r\n                >\r\n                    <ZoomInRoundedIcon className={classes.icon} />\r\n                </IconButton>\r\n                <IconButton \r\n                    className={classes.iconBtn} \r\n                    onClick={() => handleZoom(false)}\r\n                    disabled={picSize === 300}\r\n                >\r\n                    <ZoomOutRoundedIcon className={classes.icon} />\r\n                </IconButton>\r\n                <IconButton className={classes.iconBtn} >\r\n                    <ZoomOutMapRoundedIcon className={classes.icon} />\r\n                </IconButton>\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nconst CarouselWrapper = ({isModal, wrapper, children }) =>\r\n    isModal ? wrapper(children) : children\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        position: 'relative',\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        padding: '10px 5px',\r\n        borderRadius: '10px',\r\n        outline: 'none'\r\n    },\r\n    content: {\r\n        height: '100%', \r\n        width: '100%', \r\n        outline: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        padding: 0,\r\n        margin: 0,\r\n        width: '100%',\r\n        direction: 'ltr',\r\n        background: 'transparent',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        userSelect: 'none'\r\n    },\r\n    image: {\r\n        maxHeight: '90%',\r\n        maxWidth: '90%',\r\n        borderRadius: '5px',\r\n        objectFit: 'cover',\r\n        userSelect: 'none'\r\n    },\r\n    arrow: {\r\n        position: 'absolute',\r\n        background: 'rgba(0,0,0,0.6)',\r\n        color: 'white',\r\n        zIndex: 1,\r\n        padding: '5px',\r\n\r\n    },\r\n    arrowLeft: {\r\n        top: '50%',\r\n        transform: 'translateY(-50%)'\r\n    },\r\n    arrowRight: {\r\n        top: '50%',\r\n        transform: 'translateY(-50%)'\r\n    },\r\n    icon: {\r\n        fontSize: '32px',\r\n    },\r\n    iconBtn: {\r\n        background: 'rgba(255,255,255,0.6)',\r\n        color: 'black',\r\n        padding: '8px',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.8)',\r\n            color: 'white',\r\n        }\r\n\r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        position: 'absolute',\r\n        top: 0,\r\n        width: '90%',\r\n        padding: '2% 5%',\r\n        zIndex: 1\r\n    },\r\n    zoomControl: {\r\n        width: '170px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\AddRelatedUser.js",["769","770","771"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Paper, FormControl, IconButton, useMediaQuery, Fade, Modal, Backdrop,Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { getUserList } from '../../api/userApi';\r\nimport clsx from 'clsx'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\n\r\n\r\nexport const AddRelatedUser = ({ handleClose, handleSave, isOpen, followerList, title, instructions }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ selectedUser, setSelectedUser ] = useState('')\r\n    \r\n    useEffect(() => {\r\n        getUserList()\r\n        .then(data => {  \r\n            setUserList(data.filter(u => Boolean(!followerList.find(f => f._id === u._id))));\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = event => {\r\n        setSelectedUser(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={isOpen}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xs={11} sm={7} md={5} lg={3} xl={3}>\r\n                        <Paper \r\n                            className={classes.paper} \r\n                            style={{ direction: lang.dir }}\r\n                            elevation={6}    \r\n                        >\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {title}\r\n                                </div>\r\n                                <IconButton className={classes.closeBtn} onClick={handleClose}>\r\n                                    <ClearRoundedIcon className={classes.icon}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div className={classes.instructions}>\r\n                                {instructions}\r\n                            </div>\r\n                            <FormControl variant='outlined' className={classes.textInput} >\r\n                                <Select\r\n                                    value={selectedUser}\r\n                                    onChange={handleChange}\r\n                                    className={classes.menu}\r\n                                    MenuProps={{\r\n                                        classes: {\r\n                                            paper: classes.menupaper,\r\n                                           \r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        userList.map( (user, i) => {\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    className={classes.menuitem}\r\n                                                    value={user._id} \r\n                                                    key={i}\r\n                                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                                >\r\n                                                    {`${user.firstName} ${user.lastName}`}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div className={classes.controls}>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.save)}\r\n                                    onClick={handleSave(selectedUser)}\r\n                                    disabled={!selectedUser}\r\n                                >\r\n                                    {t(\"alert.confirm\")}\r\n                                </Button>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.cancel)}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    {t(\"alert.cancel\")}\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    \r\n                </Grid> \r\n                \r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px',\r\n        borderRadius: '10px',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '18px',\r\n        padding: '5px 10px',\r\n        height: 'fit-content'\r\n    },\r\n    closeBtn: {\r\n        fontSize: '20px',\r\n        height: '40px',\r\n        width: '40px'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        borderRadius: '25px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    instructions: {\r\n        width: 'auto',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '12px',\r\n        margin: '0px 10px'\r\n    },\r\n    menu: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(10px)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        maxHeight: '200px',\r\n        overflowY: 'auto',\r\n        marginTop: '60px',\r\n        marginRight: '7px',\r\n    },\r\n    menuitem: {\r\n        color: 'white'\r\n    },\r\n    textInput: {\r\n        margin: '20px 5px',\r\n        width: '300px',\r\n        '& input': {\r\n            color: 'white',\r\n            paddingLeft: '20px',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        }    \r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\api\\faultsApi.js",["772"],"import axios from 'axios';\r\nimport i18next from 'i18next';\r\nimport { getFullAddress } from './assetsApi';\r\nimport { getUnauthorizedMessage } from './genericApi';\r\n\r\naxios.defaults.headers.common['token'] = localStorage.getItem('wb_token');\r\n\r\nexport const getFaultsStatusList = async () => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/statuses/getStatusList`,\r\n\t\t\t{ module: 'faults' },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport const getFaultsStatusListSuggestions = async () => {\r\n\tconst data = await getFaultsStatusList();\r\n\tlet statusList = [];\r\n\tif (data.length) {\r\n\t\tdata.forEach((st) => {\r\n\t\t\tstatusList.push({\r\n\t\t\t\tlabel: i18next.t(`faultsModule.statuses.${st.statusId}`),\r\n\t\t\t\tvalue: st._id,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\treturn statusList;\r\n};\r\n\r\nexport const getMinifiedFaults = async (filters) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/getFaults`,\r\n\t\t\t{ filters },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getFaults = async (tenant, filters) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/getFaults`,\r\n\t\t\t{ tenant, filters },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getFault = async (faultId, plain) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/getFault`,\r\n\t\t\t{ faultId, plain: plain },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn null;\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const createNewFault = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (f[0] === 'images') {\r\n\t\t\tfor (let i = 0; i < details.images.length; i++) {\r\n\t\t\t\tformData.append('images', details.images[i]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tformData.append(f[0], f[1]);\r\n\t\t}\r\n\t});\r\n\r\n\tlet config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': `multipart/form-data`,\r\n\t\t\ttoken: localStorage.getItem('wb_token'),\r\n\t\t\tmodule: 'faults',\r\n\t\t\trequesttype: 'create',\r\n\t\t},\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/createFault`,\r\n\t\t\tformData,\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateFault = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (f[0] === 'images') {\r\n\t\t\tfor (let i = 0; i < details.images.length; i++) {\r\n\t\t\t\tformData.append('images', details.images[i]);\r\n\t\t\t}\r\n\t\t} else if (f[0] === 'uploadedImages') {\r\n\t\t\tformData.append('uploadedImages', JSON.stringify(f[1]));\r\n\t\t} else {\r\n\t\t\tformData.append(f[0], f[1]);\r\n\t\t}\r\n\t});\r\n\tlet config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': `multipart/form-data`,\r\n\t\t\ttoken: localStorage.getItem('wb_token'),\r\n\t\t\tmodule: 'faults',\r\n\t\t\trequesttype: 'update',\r\n\t\t},\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/updateFaultData`,\r\n\t\t\tformData,\r\n\t\t\tconfig\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateFaultOwner = async (faultId, userId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/updateFaultOwner`,\r\n\t\t\t{ faultId, userId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeOwner',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t\treturn null;\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const removeRelatedUser = async (faultId, userId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/removeRelatedUser`,\r\n\t\t\t{ faultId, userId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeRelatedUsers',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const addRelatedUser = async (faultId, userId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/addRelatedUser`,\r\n\t\t\t{ faultId, userId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeRelatedUsers',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const saveFaultComment = async (faultId, userId, text) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/addFaultComment`,\r\n\t\t\t{ faultId, userId, text },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'comment',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateFaultComment = async (faultId, commentId, text) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/updateFaultComment`,\r\n\t\t\t{ faultId, commentId, text },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'comment',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateFaultStatus = async (faultId, status) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/changeFaultStatus`,\r\n\t\t\t{ faultId, status },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeStatus',\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getFaultOptionsByAssetOrSystem = async (asset, system) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/getFaultOptions`,\r\n\t\t\t{ asset, system },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tmodule: 'faults',\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tlet options = [];\r\n\t\tif (!res) return [];\r\n\t\tres.data.forEach((f) => {\r\n\t\t\toptions.push({ label: f.faultId, value: f._id });\r\n\t\t});\r\n\t\treturn options;\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport const createExternalFault = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (f[0] === 'images' && details.images) {\r\n\t\t\tfor (let i = 0; i < details.images.length; i++) {\r\n\t\t\t\tformData.append('images', details.images[i]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tformData.append(f[0], f[1]);\r\n\t\t}\r\n\t});\r\n\r\n\tlet config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': `multipart/form-data`\r\n\t\t},\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/faults/createExternalFault`,\r\n\t\t\tformData,\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n}\r\n\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\FilterByMultiSelect.js",["773","774"],"import { Button, IconButton, makeStyles, Menu, MenuItem } from '@material-ui/core';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam, removeQueryParam } from '../../api/genericApi';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { useQuery } from './customHooks/useQuery';\r\n\r\nexport const FilterByMultiSelect = ({ filterField, placeholder, filterIcon, optionsFunc }) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ menuOptions, setMenuOptions] = useState([]);\r\n    const [ orgMenuOptions, setOrgMenuOptions ] = useState([])\r\n    const [ anchorEl, setAnchorEl ] = useState(null);\r\n    const [ values, setValues ] = useState( query[filterField] || [])\r\n\r\n    useEffect(() => {\r\n        optionsFunc()\r\n        .then(data => {\r\n            setOrgMenuOptions(data);\r\n            if (query[filterField]) {\r\n                data = data.filter(op => query[filterField].indexOf(op.value) === -1 )\r\n            }\r\n            setMenuOptions(data);\r\n            \r\n        }) \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (values.length) {\r\n            \r\n            history.push({\r\n                path: location.pathname,\r\n                search: addQueryParam(location.search, [{ name: filterField, value: values }])\r\n            });\r\n            return;\r\n        }\r\n        if (query[filterField] && !values.length) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: removeQueryParam(location.search, filterField)\r\n            });\r\n        }\r\n        \r\n    }, [values])\r\n\r\n    useEffect(() => {\r\n        if(!menuOptions.length) {\r\n            setAnchorEl(null)\r\n        }\r\n    }, [menuOptions])\r\n\r\n    const createTag = (val, key) => {\r\n        let data = orgMenuOptions.find(op => val === op.value);\r\n        if (!data) return;\r\n        return (\r\n            <div className={classes.tag} key={key}>\r\n                <label className={classes.tagLabel}>\r\n                    { data.label }\r\n                </label>\r\n                <IconButton \r\n                    className={classes.removeBtn}\r\n                    onClick={removeChoice(data.value)}\r\n                >\r\n                    <CloseRoundedIcon className={classes.tagRemove}/>\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const removeChoice = value => event => {\r\n        event.stopPropagation();\r\n        getMenuOptions(value)\r\n        .then(data => {\r\n            setValues(values => values.filter(val => val !== value ));\r\n            if (!menuOptions.length) {\r\n                setAnchorEl(null)\r\n            }\r\n            setMenuOptions(data)\r\n        });  \r\n    }\r\n\r\n    const handleClick = val => event => {\r\n        setValues([...values, val]);\r\n        setMenuOptions(menuOptions => menuOptions.filter( op => op.value !== val));\r\n    }\r\n\r\n    const getMenuOptions = (value) => {\r\n        return new Promise((resolve, reject) => {\r\n            let mop = menuOptions;\r\n            mop.push(orgMenuOptions.find( op => op.value === value));\r\n            resolve(mop);\r\n        }) \r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                Boolean(orgMenuOptions.length) &&\r\n                <div className={classes.select}>\r\n                        <Button \r\n                            className={classes.filterBy}\r\n                            onClick={event => setAnchorEl(event.currentTarget)}\r\n                            startIcon={filterIcon}\r\n                        >\r\n                            { \r\n                                values.length \r\n                                ?   \r\n                                    <div className={classes.selectedContainer}>\r\n                                        {\r\n                                             values.map((val, i ) => createTag(val, i)) \r\n                                        }\r\n                                    </div>\r\n                               \r\n                                :   <label className={classes.searchLabel} >\r\n                                        {placeholder}\r\n                                    </label>\r\n                            }\r\n                        </Button>\r\n                        <Menu\r\n                            anchorEl={anchorEl}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={() => setAnchorEl(null)}\r\n                            classes={{\r\n                                paper : classes.menu\r\n                            }}\r\n                            keepMounted\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                        >\r\n                            {\r\n                                menuOptions.map((v,i) => {\r\n                                    return (\r\n                                        <MenuItem\r\n                                            key={i}\r\n                                            onClick={handleClick(v.value)}\r\n                                            className={classes.menuitem}\r\n                                            style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                        >\r\n                                            {v.label}\r\n                                        </MenuItem>\r\n                                    )\r\n                                    \r\n                                })\r\n                            }\r\n                        </Menu>\r\n               </div>\r\n            }          \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    select: {\r\n        margin: '5px',\r\n        height: 'auto',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    filterBy: {\r\n        textTransform: 'none',\r\n        color: 'white',\r\n        padding: '0 5px',\r\n        minHeight: '45px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '25px',\r\n        \r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        }\r\n    },\r\n    selectedContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        whiteSpace: 'nowrap',\r\n        flexWrap: 'wrap',\r\n        width: 'fit-content',\r\n        maxWidth: '400px'\r\n    },\r\n    menu: {\r\n        marginTop: '55px',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(10px)',\r\n        color: 'white'\r\n    },\r\n    menuitem: {\r\n        minWidth: '200px'\r\n    },\r\n    container: {\r\n        height: '45px',\r\n        border: '1px solid rgba(0,0,0,0.25)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            \r\n        }\r\n    },\r\n    focused: {\r\n        boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        background: 'rgba(0,0,0,0.1)',\r\n        backdropFilter: 'blur(40px)'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        \r\n    },\r\n    searchInput: {\r\n        height: '34px',\r\n        width: '98.5%',\r\n        margin: '3px 0.75%',\r\n        borderRadius: '5px 25px 25px 5px',\r\n        color: 'white',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '& fieldset': {\r\n            border: '0'\r\n        } \r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 5px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    tag: {\r\n        padding: '5px 10px',\r\n        borderRadius: '50px',\r\n        boxShadow: 'rgba(0,0,0,0.25) 0px 0px 3px 1px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        margin: '3px'\r\n    },\r\n    tagLabel: {\r\n        padding: '0 5px'\r\n    },\r\n    removeBtn: {\r\n        padding: '4px',\r\n        color: 'white'\r\n    },\r\n    tagRemove: {\r\n        fontSize: '16px'\r\n    },\r\n    searchLabel: {\r\n        padding: '5px 20px 5px 10px', \r\n        cursor: 'pointer',\r\n        color: 'rgba(255,255,255,0.5)',\r\n        fontSize: '15px' \r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\tasksApi.js",["775"],"import axios from 'axios';\r\nimport { getUnauthorizedMessage, specialStringPurge } from './genericApi';\r\nimport i18next from 'i18next';\r\n\r\naxios.defaults.headers.common['token'] = localStorage.getItem('wb_token');\r\n\r\nexport const getTask = async (taskId, plain) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/getTask`,\r\n\t\t\t{ taskId, plain },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const createNewTask = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (f[0] === 'images') {\r\n\t\t\tfor (let i = 0; i < details.images.length; i++) {\r\n\t\t\t\tformData.append('images', details.images[i]);\r\n\t\t\t}\r\n\t\t} else if (f[1] instanceof Array) {\r\n\t\t\tformData.append(f[0], JSON.stringify(f[1]));\r\n\t\t} else {\r\n\t\t\tformData.append(f[0], f[1]);\r\n\t\t}\r\n\t});\r\n\tlet config = {\r\n\t\theaders: {\r\n            'Content-Type': `multipart/form-data`,\r\n            requesttype: 'create',\r\n            module: 'tasks'\r\n\t\t},\r\n\t};\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/createTask`,\r\n\t\t\tformData,\r\n\t\t\tconfig\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getTasks = async (filters) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/getTasks`,\r\n\t\t\t{ filters },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateTaskOwner = async (taskId, owner) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/updateTaskOwner`,\r\n\t\t\t{ taskId, owner },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeOwner',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateTaskStatus = async (taskId, status) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/updateTaskStatus`,\r\n\t\t\t{ taskId, status },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeStatus',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const saveTaskComment = async (taskId, userId, text) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/addTaskComment`,\r\n\t\t\t{ taskId, userId, text },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'comment',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateTaskComment = async (taskId, commentId, text) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/updateTaskComment`,\r\n\t\t\t{ taskId, commentId, text },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'comment',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const addTaskRelatedUser = async (taskId, userId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/addRelatedUser`,\r\n\t\t\t{ taskId, userId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeRelatedUsers',\r\n\t\t\t\t\tmodule: 'tasks',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const removeTaskRelatedUser = async (taskId, userId) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/removeRelatedUser`,\r\n\t\t\t{ taskId, userId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'changeRelatedUsers',\r\n\t\t\t\t\tmodule: 'tasks'\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const updateTask = async (details) => {\r\n\tlet formData = new FormData();\r\n\tObject.entries(details).forEach((f) => {\r\n\t\tif (f[0] === 'images') {\r\n\t\t\tfor (let i = 0; i < details.images.length; i++) {\r\n\t\t\t\tformData.append('images', details.images[i]);\r\n\t\t\t}\r\n\t\t} else if (f[0] === 'uploadedImages') {\r\n\t\t\tformData.append('uploadedImages', JSON.stringify(f[1]));\r\n\t\t} else if (f[1] instanceof Array) {\r\n\t\t\tformData.append(f[0], JSON.stringify(f[1]));\r\n\t\t} else {\r\n\t\t\tformData.append(f[0], f[1]);\r\n\t\t}\r\n\t});\r\n\tlet config = {\r\n\t\theaders: {\r\n            'Content-Type': `multipart/form-data`,\r\n            requesttype: 'update',\r\n            module: 'tasks'\r\n\t\t},\r\n\t};\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/updateTask`,\r\n\t\t\tformData,\r\n\t\t\tconfig\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getTasksStatusList = async () => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/statuses/getStatusList`,\r\n\t\t\t{ module: 'tasks' },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'read',\r\n\t\t\t\t\tmodule: 'tasks'\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getTasksStatusListSuggestions = async () => {\r\n\tconst data = await getTasksStatusList();\r\n\tlet statusList = [];\r\n\tif (data.length) {\r\n\t\tdata.forEach((st) => {\r\n\t\t\tstatusList.push({\r\n\t\t\t\tlabel: i18next.t(`tasksModule.statuses.${st.statusId}`),\r\n\t\t\t\tvalue: st._id,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\treturn statusList;\r\n};\r\n\r\nexport const updateTaskSchedule = async (taskId, schedule) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/updateTaskSchedule`,\r\n\t\t\t{ taskId, schedule },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\trequesttype: 'update',\r\n\t\t\t\t\tmodule: 'tasks'\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (res.status === 200) {\r\n\t\t\treturn res.data;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n\r\nexport const getTaskOptionsByAssetOrSystem = async (asset, system) => {\r\n\ttry {\r\n\t\tconst res = await axios.post(\r\n\t\t\t`${process.env.REACT_APP_BACKEND_URL}/tasks/getTaskOptions`,\r\n\t\t\t{ asset, system },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n                    requesttype: 'read',\r\n\t\t\t\t\tmodule: 'tasks'\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tlet options = [];\r\n\t\tif (!res) return [];\r\n\t\tres.data.forEach((t) => {\r\n\t\t\toptions.push({ label: t.taskId, value: t._id });\r\n\t\t});\r\n\t\treturn options;\r\n\t} catch (e) {\r\n\t\tif (e.message.includes('403')) {\r\n\t\t\treturn getUnauthorizedMessage();\r\n\t\t};\r\n\t\treturn { error: true, reason: 'general', status: 500 };\r\n\t}\r\n};\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlockView.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultListView.js",["776","777","778"],"import { Grid, List, ListItem, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { FaultsContext } from '../../../context/FaultsContext';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { FaultMinified } from './FaultMinified';\r\nimport { FaultView } from './FaultView';\r\n\r\nexport const FaultListView = ({ faults }) => {\r\n    \r\n    const location = useLocation();\r\n    const classes = useStyles();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    const { setFaults } = useContext(FaultsContext);\r\n    const [ faultView, setFaultView ] = useState(null);\r\n    const [ faultsData, setFaultsData ] = useState([]);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setFaultsData(faults);\r\n        setIsLoading(false);\r\n    }, [faults])\r\n   \r\n    const updateFaultState = (faultId, field, data) => {\r\n        setIsLoading(true);\r\n        let faultIndex = faultsData.findIndex(f => f._id === faultId);\r\n        if (!faultIndex && faultIndex !== 0) return;\r\n        let lf = [...faultsData];\r\n        lf[faultIndex][field] = data;\r\n        setFaults(lf);\r\n        setIsLoading(false);\r\n    }\r\n \r\n    return (\r\n        <Grid container className={classes.main} justify='flex-start'>\r\n            <Grid item xs={12} md={5} lg={3} xl={3} className={classes.faultList}>\r\n                <List className={classes.list}>\r\n                {   \r\n                    isLoading ? \r\n                    null\r\n                    :\r\n                    faultsData.map((f,i) => \r\n                        <ListItem \r\n                            button \r\n                            className={classes.item}\r\n                            onClick={() => setFaultView(f)}\r\n                        >  \r\n                            <FaultMinified \r\n                                data={f}\r\n                                key={i}\r\n                            />\r\n                        </ListItem>\r\n                        \r\n                    )\r\n                }\r\n                </List>\r\n            </Grid>\r\n            {\r\n                !downSm &&\r\n                Boolean(faultView) &&\r\n                <Grid item md={7} lg={9} xl={9} className={classes.faultPresenter}>\r\n                    <FaultView \r\n                        fid={faultView.faultId}\r\n                        updateFaultState={updateFaultState}\r\n                        faultData={faultView}\r\n                    />\r\n                </Grid>\r\n            }\r\n            \r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    main: {\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        height: '70vh',\r\n        [theme.breakpoints.down('sm')]: {\r\n            border: '0',\r\n            height: 'auto'\r\n        }\r\n    },\r\n    faultList: {\r\n        borderRight: '1px solid rgba(255,255,255,0.2)',\r\n        height: '100%',\r\n        overflowY: 'scroll',\r\n        '&::-webkit-scrollbar': {\r\n            display: 'none'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            border: '0',\r\n            overflowY: 'unset',\r\n        }\r\n    },\r\n    list: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        padding: 0,\r\n        overflowY: 'unset'\r\n    },\r\n    item: {\r\n        height:'200px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '10px 0'\r\n        }\r\n    },\r\n    faultPresenter: {\r\n        background: 'rgba(0,0,0,0.1)',\r\n        height: '100%'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\customHooks\\usePermissions.js",["779","780"],"import React, { useContext, useState } from 'react';\r\nimport { getMinPermLevel } from '../../../api/permissionsApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\n\r\nexport const usePermissions = (module, action, userList) => {\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { permissions } = auth.user.role;\r\n\tconst minPermLevel = getMinPermLevel(action);\r\n    const permLevel = permissions.find((p) => p.module === module)[action];\r\n \r\n\tif (permLevel < minPermLevel) {\r\n\t\treturn false;\r\n\t} else if (permLevel === 1) {\r\n       \r\n\t\tif (userList) {\r\n\t\t\tif (userList.includes(auth.user._id)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n        }\r\n        return false;\r\n\t}\r\n\treturn true;\r\n};\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\permissionsApi.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\TimeActive.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultMinified.js",["781","782"],"import { Grid, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getFullAddress } from '../../../api/assetsApi';\r\nimport { StatusTag } from '../../reuseables/StatusTag';\r\nimport { UserItem } from '../../user/UserItem';\r\nimport { FaultLink } from './FaultLink';\r\n\r\nexport const FaultMinified = ({ data }) => {\r\n\tconst classes = useStyles();\r\n\tconst [minifiedData, setMinifiedData] = useState(data);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMinifiedData(data);\r\n\t}, [data]);\r\n\r\n\treturn (\r\n\t\t<Grid container className={classes.container} alignItems=\"flex-start\">\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tclassName={classes.topRow}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className={classes.asset}>\r\n\t\t\t\t\t\t{getFullAddress(minifiedData.asset, true)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid xs={12} item className={classes.title}>\r\n\t\t\t\t{minifiedData.title}\r\n\t\t\t</Grid>\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tclassName={classes.bottomRow}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={5} className={classes.userData}>\r\n\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\tsize={13}\r\n\t\t\t\t\t\tavatarSize={40}\r\n\t\t\t\t\t\tuser={minifiedData.owner}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FaultLink faultId={minifiedData.faultId} size={14} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={7} className={classes.status}>\r\n\t\t\t\t\t<StatusTag status={minifiedData.status} type={'fault'} />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t\tposition: 'relative',\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t\tpadding: '15px 5px',\r\n\t\tdisplay: '-webkit-box',\r\n\t\tWebkitLineClamp: '2',\r\n\t\tWebkitBoxOrient: 'vertical',\r\n\t\toverflow: 'hidden',\r\n\t\ttextOverflow: 'ellipsis',\r\n\t\theight: '60px',\r\n\t},\r\n\ttopRow: {\r\n\t\tpadding: '5px',\r\n\t\tmaxHeight: '60px',\r\n\t},\r\n\tuserData: {\r\n\t\tpadding: '5px 0px',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'flex-start',\r\n\t},\r\n\tbottomRow: {\r\n\t\theight: '50px',\r\n\t},\r\n\tasset: {\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tpadding: '5px 15px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tboxShadow: 'rgba(0,0,0,0.3) 1px 1px 5px 2px',\r\n\t\twidth: 'fit-content',\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tfaultLink: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\tmargin: '3px 0',\r\n\t},\r\n\tstatus: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t},\r\n\tlink: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemRelatedUsers.js",["783","784"],"import React, { useState, useContext } from 'react';\r\nimport { Grid, makeStyles, Collapse, Tooltip, IconButton, useMediaQuery, Fade } from '@material-ui/core';\r\nimport { UserItem } from '../../user/UserItem';\r\nimport { getFullName } from '../../../api/genericApi';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { AlertDialog } from '../../reuseables/AlertDialog';\r\nimport { addUser, removeSystemUser } from '../../../api/systemsApi';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport { AddRelatedUser } from './AddRelatedUser';\r\nimport { Can } from '../../reuseables/Can';\r\nimport { SnackbarContext } from '../../../context/SnackbarContext';\r\n\r\nexport const SystemRelatedUsers = ({ userList, data, setData, systemId, isOpen }) => {\r\n\tconst classes = useStyles();\r\n    const downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n    const { setSnackbar } = useContext(SnackbarContext);\r\n\tconst [relatedUsers, setRelatedUsers] = useState(userList || []);\r\n\tconst [showControls, setShowControls] = useState(null);\r\n\tconst [showAddRelatedUser, setShowAddRelatedUser] = useState(false);\r\n\tconst [alertDialog, setAlertDialog] = useState(null);\r\n\tconst { t, i18n } = useTranslation();\r\n\r\n\tconst confirmRemove = (relatedUser) => (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tlet toRemove = relatedUsers.find((user) => user._id === relatedUser._id);\r\n\t\tsetAlertDialog({\r\n\t\t\ttext: `${t('systemsModule.userRemoveConfirmText')} ${getFullName(toRemove)}?`,\r\n\t\t\ttitle: t('systemsModule.userRemoveConfirmTitle'),\r\n\t\t\thandleConfirm: async () => {\r\n\t\t\t\tconst res = await removeSystemUser(systemId, relatedUser._id);\r\n\t\t\t\tif (res.status === 403) {\r\n                    setSnackbar(res)\r\n                } else if (res) {\r\n\t\t\t\t\tsetData(res);\r\n\t\t\t\t\tsetAlertDialog(null);\r\n\t\t\t\t\tsetRelatedUsers([]);\r\n\t\t\t\t\tsetRelatedUsers(res.relatedUsers);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thandleCancel: () => setAlertDialog(null),\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleAddRelatedUser = () => {\r\n\t\tif (showAddRelatedUser) {\r\n\t\t\tsetShowAddRelatedUser(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetShowAddRelatedUser(true);\r\n\t};\r\n\r\n\tconst handleAddLinekdUser = async (userId) => {\r\n\t\tconst res = await addUser(systemId, userId);\r\n\t\tif (res.status === 403) {\r\n\t\t\tsetSnackbar(res)\r\n\t\t} else if (res) {\r\n\t\t\tsetData(res);\r\n\t\t\tsetRelatedUsers(res.relatedUsers);\r\n\t\t\tsetShowAddRelatedUser(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Collapse in={isOpen}>\r\n\t\t\t<div className={classes.linkedusers}>\r\n\t\t\t\t<Grid container justify=\"flex-start\" className={classes.container} alignItems=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.titleContainer}>\r\n\t\t\t\t\t\t<div className={classes.title}>{t('systemsModule.assignedUsers')}</div>\r\n\t\t\t\t\t\t<Can\r\n\t\t\t\t\t\t\tmodule=\"systems\"\r\n                            action=\"changeRelatedUsers\"\r\n\t\t\t\t\t\t\tuserList={[...data.relatedUsers.map((u) => u._id), data.owner]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<IconButton className={classes.addBtn} onClick={handleAddRelatedUser}>\r\n\t\t\t\t\t\t\t\t<AddRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t\t{showAddRelatedUser && (\r\n\t\t\t\t\t\t\t\t<AddRelatedUser\r\n\t\t\t\t\t\t\t\t\tisOpen={showAddRelatedUser}\r\n\t\t\t\t\t\t\t\t\thandleClose={handleAddRelatedUser}\r\n\t\t\t\t\t\t\t\t\trelatedUsers={relatedUsers}\r\n\t\t\t\t\t\t\t\t\thandleSave={handleAddLinekdUser}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{relatedUsers.length ? (\r\n\t\t\t\t\t\trelatedUsers.map((relatedUser, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={7} md={6} lg={3} className={classes.gridItem}>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userCont}\r\n\t\t\t\t\t\t\t\t\t\tonMouseEnter={() => setShowControls(i)}\r\n\t\t\t\t\t\t\t\t\t\tonMouseLeave={() => setShowControls(null)}\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\t\t\t\t\tuser={relatedUser}\r\n\t\t\t\t\t\t\t\t\t\t\tshowTitle\r\n\t\t\t\t\t\t\t\t\t\t\tshowPhone\r\n\t\t\t\t\t\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\t\t\t\t\t\tavatarSize={'50px'}\r\n\t\t\t\t\t\t\t\t\t\t\tsize={12}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<Can\r\n\t\t\t\t\t\t\t\t\t\t\tmodule=\"systems\"\r\n\t\t\t\t\t\t\t\t\t\t\taction=\"changeRelatedUsers\"\r\n\t\t\t\t\t\t\t\t\t\t\tuserList={[...data.relatedUsers.map((u) => u._id), data.owner]}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Fade in={showControls === i || downSm}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.removeUser')}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.removeuser}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={confirmRemove(relatedUser)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ClearRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className={classes.noUsers}>{t('systemsModule.noUsersAssigned')}</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{Boolean(alertDialog) && <AlertDialog alertDialog={alertDialog} open={Boolean(alertDialog)} />}\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t</Collapse>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tlinkedusers: {\r\n\t\twidth: 'auto',\r\n\t\tmargin: '10px',\r\n\t\tborderRadius: '25px',\r\n\t\tbackground: 'rgba(0,0,0,0.1)',\r\n\t\tboxShadow: '0px 0px 5px 2px rgba(0,0,0,0.2)',\r\n\t},\r\n\tcontainer: {\r\n\t\twidth: 'auto',\r\n\t\tpadding: '5px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tborderRadius: '5px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tgridItem: {\r\n\t\tborderRadius: '10px',\r\n\t\tpadding: '5px 10px',\r\n\t\tmargin: '5px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.5)',\r\n\t\t\tboxShadow: '-0px 0px 5px 2px rgba(0,0,0,0.2)',\r\n\t\t},\r\n\t},\r\n\ttitleContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t\tborderBottom: '1px solid rgba(255,255,255,0.2)',\r\n\t\tmargin: '0 10px',\r\n\t\tpadding: '5px 5px 10px',\r\n\t},\r\n\taddBtn: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '2px',\r\n\t\tborderRadius: '50px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.2)',\r\n\t\t},\r\n\t},\r\n\tcell: {\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tuserCont: {\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpadding: '5px 10px',\r\n\t\tposition: 'relative',\r\n\t},\r\n\tremoveuser: {\r\n\t\tpadding: '4px',\r\n\t\tmargin: 'auto 4px',\r\n\t\theight: '50%',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(255,255,255,0.1)',\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',\r\n\t\tpadding: '8px',\r\n\t},\r\n\ttitle: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '16px',\r\n\t},\r\n\tnoUsers: {\r\n\t\tmargin: '10px',\r\n\t\tpadding: '0px 0 15px',\r\n\t\tcolor: 'white',\r\n\t\tfontSize: '14px',\r\n\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\tpadding: '10px 20px',\r\n\t\tborderRadius: '25px',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemControls.js",["785","786","787","788","789"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tPaper,\r\n\tuseMediaQuery,\r\n\tTooltip,\r\n\tCollapse,\r\n\tGrid,\r\n} from '@material-ui/core';\r\nimport { UserItem } from '../../user/UserItem';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport TransferWithinAStationRoundedIcon from '@material-ui/icons/TransferWithinAStationRounded';\r\nimport { useTranslation } from 'react-i18next';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport AssignmentRoundedIcon from '@material-ui/icons/AssignmentRounded';\r\nimport DescriptionRoundedIcon from '@material-ui/icons/DescriptionRounded';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { Can } from '../../reuseables/Can';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { addQueryParam } from '../../../api/genericApi';\r\n\r\nexport const SystemControls = ({\r\n\teditName,\r\n\texpanded,\r\n\tshowLinkedUsersToggle,\r\n\ttoggleEditOwner,\r\n\ttoggleAdditionalDetails,\r\n\tsystem\r\n}) => {\r\n\t\r\n\tconst classes = useStyles();\r\n\tconst location = useLocation();\r\n\tconst history = useHistory();\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\r\n\tconst handleReferralClick = type => event => {\r\n\t\thistory.push(type + addQueryParam(location.search, [{ name: 'asset', value: system.asset._id }, { name: 'system', value: [system._id]}]));\r\n    }\r\n\r\n\treturn (\r\n\t\t<Collapse in={(!downSm && !editName) || expanded}>\r\n\t\t\t<Grid container className={classes.actionsContainer}>\r\n\t\t\t\t<Grid item lg={9}>\r\n\t\t\t\t\t<Grid container className={classes.actions}>\r\n\t\t\t\r\n\t\t\t\t\t\t<Grid item lg={2} className={classes.iconItem}>\r\n\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.moreDetails')}>\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\t\t\t\tonClick={toggleAdditionalDetails}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<MoreHorizIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Grid item lg={2} className={classes.iconItem}>\r\n\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.showTasks')}>\r\n\t\t\t\t\t\t\t\t<IconButton className={classes.iconBtn} onClick={handleReferralClick('tasks')}>\r\n\t\t\t\t\t\t\t\t\t<AssignmentRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item lg={2} className={classes.iconItem}>\r\n\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.showFaults')} onClick={handleReferralClick('faults')}>\r\n\t\t\t\t\t\t\t\t<IconButton className={classes.iconBtn}>\r\n\t\t\t\t\t\t\t\t\t<WarningRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item lg={2} className={classes.iconItem}>\r\n\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.showDocuments')}onClick={handleReferralClick('documents')}>\r\n\t\t\t\t\t\t\t\t<IconButton className={classes.iconBtn}>\r\n\t\t\t\t\t\t\t\t\t<DescriptionRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Can module='systems' action='changeOwner' >\r\n\t\t\t\t\t\t<Grid item lg={2} className={classes.iconItem}> \r\n\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.changeOwner')}>\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\t\t\t\tonClick={toggleEditOwner}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<TransferWithinAStationRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Can>\r\n\t\t\t\t\t\t<Grid item lg={2} className={classes.iconItem}>\r\n\t\t\t\t\t\t\t<Tooltip title={t('systemsModule.showUsers')}>\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tclassName={classes.iconBtn}\r\n\t\t\t\t\t\t\t\t\tonClick={showLinkedUsersToggle}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<PersonRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item lg={3} className={classes.ownerInfo}>\r\n\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\tuser={system.owner}\r\n\t\t\t\t\t\tavatarSize={40}\r\n\t\t\t\t\t\tshowPhone\r\n\t\t\t\t\t\tshowName\r\n\t\t\t\t\t\tsize={12}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Collapse>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tactionsContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: '5px',\r\n\t\tmargin: 'auto 0',\r\n\t\tjustifyContent: 'space-between',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tflexDirection: 'column-reverse',\r\n\t\t\talignItems: 'center',\r\n\t\t\tmargin: 'auto',\r\n\t\t},\r\n\t},\r\n\tactions: {\r\n        margin: 'auto 0',\r\n        display: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'flex-end',\r\n        height: '100%',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tbackground: 'rgba(0,0,0,0.4)',\r\n\t\t\tborderRadius: '50px',\r\n\t\t\tmargin: '10px 0',\r\n\t\t\tpadding: '5px 0',\r\n\t\t},\r\n\t},\r\n\ticonBtn: {\r\n\t\tpadding: '0px',\r\n\t\theight: 'fit-content',\r\n\t\twidth: 'fit-content',\r\n\t\tmargin: '0 20px',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tmargin: '5px 10px',\r\n\t\t},\r\n\t},\r\n\tuserIcon: {\r\n\t\tfontSize: '20px',\r\n\t\tcolor: 'white',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tpadding: '8px',\r\n\t\tborderRadius: '50px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(0,0,0,0.2)',\r\n\t\t},\r\n\t},\r\n\townerInfo: {\r\n\t\theight: 'auto',\r\n\t\tpadding: '5px 20px 5px 10px',\r\n\t\tdisplay: 'grid',\r\n\t\tplaceItems: 'center',\r\n\t\t[theme.breakpoints.down('md')]: {\r\n\t\t\tmarginTop: '5px',\r\n\t\t\tborderRadius: '50px',\r\n\t\t\twidth: '170px',\r\n\t\t\tpadding: '5px 20px 5px 5px',\r\n\t\t},\r\n    },\r\n    iconItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\faults\\FaultBlock.js",["790"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { FaultMinified } from './FaultMinified';\r\nimport { Link } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\n\r\nexport const FaultBlock = ({ data }) => {\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div \r\n            className={clsx(classes.faultContainer)}\r\n        >\r\n            <Link\r\n                to={`/workspace/faults/${data.faultId}`}\r\n                style={{ textDecoration: 'none' }}\r\n            >\r\n                <FaultMinified data={data}  />\r\n            </Link>\r\n        </div>                               \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({ \r\n   faultContainer: {\r\n    padding: '10px',\r\n    border: '1px solid rgba(255,255,255,0.2)',\r\n    borderRadius: '7px',\r\n    background: 'rgba(0,0,0,0.4)',\r\n    margin : '5px 0'\r\n   }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\SystemName.js",["791","792"],"import React, { useState } from 'react';\r\nimport { makeStyles, useMediaQuery, Button, Fade, OutlinedInput, FormControl, InputLabel, ClickAwayListener, IconButton, } from '@material-ui/core';\r\nimport SaveRoundedIcon from '@material-ui/icons/SaveRounded';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { updateSystemName } from '../../../api/systemsApi'\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\r\nimport { green, red } from '@material-ui/core/colors';\r\n\r\nexport const SystemName = ({ systemId, editName, setEditName, setSystemName, title }) => {\r\n\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const [ textValue, setTextValue ] = useState(title);\r\n    const [ editNameHover, setEditNameHover ] = useState(false);\r\n\r\n    const handleChange = event => {\r\n        setTextValue(event.target.value);\r\n    };\r\n\r\n    const handleSave = async () => {\r\n         await updateSystemName(systemId, textValue);\r\n         setSystemName(textValue);\r\n         setEditName(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                editName ?\r\n                <ClickAwayListener onClickAway={() => setEditName(false)}>\r\n                    <div className={classes.editContainer}>\r\n                        <FormControl variant='outlined' className={classes.textInput}>\r\n                            <InputLabel htmlFor='olip' shrink>{t(\"systemsModule.systemName\")}</InputLabel>\r\n                            <OutlinedInput\r\n                                autoFocus\r\n                                notched\r\n                                id='olip' \r\n                                value={ textValue }\r\n                                onChange={handleChange}\r\n                                labelWidth={75}\r\n                                className={classes.input} \r\n                            />\r\n                        </FormControl>\r\n                        <IconButton \r\n                            className={classes.save}\r\n                            onClick={handleSave}\r\n                        >\r\n                            <SaveRoundedIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                        <IconButton \r\n                            className={classes.cancel}\r\n                            onClick={() => setEditName(false)}\r\n                        >\r\n                            <ClearRoundedIcon className={classes.icon} />\r\n                        </IconButton>\r\n                       </div> \r\n                </ClickAwayListener>\r\n                \r\n                : \r\n                <Button \r\n                    className={classes.systemName}\r\n                    onMouseEnter={() => setEditNameHover(true)}\r\n                    onMouseLeave={() => setEditNameHover(false)}\r\n                    onClick={() => { setEditNameHover(false); setEditName(true)}}\r\n                >\r\n                    { title }\r\n                    {\r\n                        editNameHover &&\r\n                        <Fade in={true} timeout={700}>\r\n                            <EditRoundedIcon style={{ \r\n                                margin: '0 10px 0 0',\r\n                                fontSize: '16px'\r\n                            }}/>\r\n                        </Fade>\r\n                        \r\n                    }\r\n                </Button>\r\n            }\r\n        </React.Fragment>                    \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    editContainer: {\r\n        height: 'auto',\r\n        margin: 'auto 0',\r\n        width: '100%',\r\n        dispaly: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    systemName: {\r\n        width: 'auto',\r\n        color: 'white',\r\n        margin: 'auto 20px',\r\n        fontSize: '16px',\r\n        whiteSpace: 'wrap',\r\n        borderRadius: '50px',\r\n        padding: '5px 20px',\r\n        textAlign: 'left'\r\n    },\r\n    textInput: {\r\n        width: '65%',\r\n        margin: '15px 5px 15px 10px',\r\n        '& label.Mui-focused': {\r\n            color: 'white',\r\n        },\r\n        '& label': {\r\n            color: 'white'\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: 'white',\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'rgba(255,255,255,0.7)',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'rgba(255,255,255,0.7)',\r\n              },\r\n        },\r\n        \r\n    },\r\n    input: {\r\n        color: 'white',\r\n        height: '45px',\r\n        borderRadius: '25px',\r\n        padding: '10px',\r\n        '&:focus': {\r\n            border: '2px solid white'\r\n        }\r\n\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        fontSize: '20px',\r\n        padding: '0px',\r\n        '&hover': {\r\n\r\n        }\r\n    },\r\n    save: {\r\n        background: green[800],\r\n        padding: '8px',\r\n        margin: '18px 5px',\r\n        \r\n    },\r\n    cancel: {\r\n        background: red[800],\r\n        padding: '8px',\r\n        margin: '18px 5px',\r\n       \r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SearchBox.js",["793","794","795"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam, removeQueryParam, queryParamsToObject, specialStringPurge} from '../../api/genericApi';\r\nimport { OutlinedInput, FormControl, makeStyles, Grid, ClickAwayListener } from '@material-ui/core'\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport { useQuery } from './customHooks/useQuery';\r\nimport clsx from 'clsx';\r\n\r\nexport const SearchBox = ({ placeholder, filterField, returnValue }) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const [ onFocus, setOnFocus ] = useState(false);\r\n    const [ searchText, setSearchText ] = useState(specialStringPurge(query[filterField]) || '');\r\n    \r\n    useEffect(() => {\r\n        if (Boolean(searchText) && searchText === specialStringPurge(query[filterField])) return;\r\n        const timeOutId = setTimeout(() => handleSearch(searchText), 700);\r\n        return () => clearTimeout(timeOutId);\r\n    }, [searchText])\r\n\r\n    const handleChange = event => {\r\n        setSearchText(event.target.value)\r\n    }\r\n\r\n    const handleSearch = searchText => {\r\n        if (returnValue) {\r\n            returnValue(searchText);\r\n            return;\r\n       }\r\n        if (searchText) {\r\n            history.push({\r\n                path: location.pathname,\r\n                search: addQueryParam(location.search, [{ name: filterField, value: searchText}])\r\n            });\r\n            return; \r\n        }\r\n        history.push({\r\n            path: location.pathname,\r\n            search: removeQueryParam(location.search, filterField)\r\n        });\r\n        \r\n    }\r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={() => setOnFocus(false)}>\r\n            <div className={clsx(classes.container , onFocus && classes.focused)} xs={11} sm={9} md={8} lg={6}>\r\n                    <SearchRoundedIcon className={classes.icon}/>\r\n                    <FormControl variant='outlined' className={classes.form}>\r\n                        <OutlinedInput\r\n                            value={ searchText || '' }\r\n                            onChange={handleChange}\r\n                            placeholder={placeholder}\r\n                            className={clsx(classes.searchInput)}\r\n                            onFocus={() => setOnFocus(true)}\r\n                        />\r\n                    </FormControl>\r\n            </div>\r\n        </ClickAwayListener>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        margin: '5px',\r\n        height: '45px',\r\n        maxWidth: '450px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        borderRadius: '25px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        transition: 'box-shadow 0.2s ease-in',\r\n        '&:hover': {\r\n            boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n            transition: 'box-shadow 0.2s ease-in'\r\n        }\r\n\r\n    },\r\n    focused: {\r\n        boxShadow: 'rgba(0,0,0,0.25) 2px 3px 2px 0px',\r\n        background: 'rgba(0,0,0,0.1)',\r\n        backdropFilter: 'blur(40px)'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        \r\n    },\r\n    searchInput: {\r\n        height: '34px',\r\n        width: '98.5%',\r\n        margin: '3px 0.75%',\r\n        borderRadius: '5px 25px 25px 5px',\r\n        color: 'white',\r\n        '& input': {\r\n            padding: '12.5px 20px 12.5px 5px',\r\n        },\r\n        '& fieldset': {\r\n            border: '0'\r\n        } \r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 5px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        \r\n    }\r\n}))\r\n\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\SortBy.js",["796","797"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { makeStyles, ButtonGroup, Button, Menu, MenuItem } from '@material-ui/core'\r\nimport SortRoundedIcon from '@material-ui/icons/SortRounded';\r\nimport ArrowDropUpOutlinedIcon from '@material-ui/icons/ArrowDropUpOutlined';\r\nimport ArrowDropDownOutlinedIcon from '@material-ui/icons/ArrowDropDownOutlined';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { addQueryParam } from '../../api/genericApi';\r\nimport { useQuery } from './customHooks/useQuery';\r\nimport { useTranslation } from 'react-i18next'\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\n\r\n\r\nexport const SortBy = ({menuOptions, handleSortChange}) => {\r\n    \r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const query = useQuery(location.search);\r\n    const { t, i18n } = useTranslation();\r\n    const { lang } = useContext(LanguageContext);\r\n    const [ values, setValues ] = useState({\r\n        sortBy: query.sortBy || '',\r\n        sortOrder: query.sortOrder || 'asc' \r\n    })\r\n    const [ anchorEl, setAnchorEl ] = useState(null);\r\n \r\n    useEffect(() => {\r\n        if (!values.sortBy) return;\r\n        history.push({\r\n            path: location.pathname,\r\n            search: addQueryParam(location.search, [{ name: 'sortBy', value: values.sortBy}, {name: 'sortOrder', value: values.sortOrder}])\r\n        })\r\n    }, [values])\r\n\r\n    const handleClick = menuOption => event => {\r\n        setValues({\r\n            ...values, \r\n            sortBy: menuOption\r\n        })\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleChange = () => {\r\n        if (values.sortBy) {\r\n            setValues({\r\n                ...values, \r\n                sortOrder: values.sortOrder === 'asc' ? 'desc' : 'asc'\r\n            })\r\n        }\r\n    }\r\n    \r\n    const getOptionText = (option) => {\r\n        const result = menuOptions.find( mo => option === mo.field);\r\n        if (result) {\r\n            return result.text\r\n        }\r\n        return t(\"sort.sortBy\")\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup \r\n                className={classes.sort}\r\n            >\r\n\r\n                <Button \r\n                    className={classes.sortBy}\r\n                    onClick={event => setAnchorEl(event.currentTarget)}\r\n                    startIcon={<SortRoundedIcon className={classes.icon}/>}\r\n                >\r\n                    {values.sortBy ? getOptionText(values.sortBy) : `${t(\"sort.sortBy\")}`}\r\n                </Button>\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={() => setAnchorEl(null)}\r\n                    classes={{\r\n                        paper : classes.menu\r\n                    }}\r\n                    keepMounted\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                >\r\n                    {\r\n                        menuOptions.map((v,i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    key={i}\r\n                                    onClick={handleClick(v.field)}\r\n                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                >\r\n                                    {v.text}\r\n                                </MenuItem>\r\n                            )\r\n                            \r\n                        })\r\n                    }\r\n                </Menu>\r\n                <Button\r\n                    endIcon={ values.sortOrder === 'asc' ? <ArrowDropUpOutlinedIcon /> : <ArrowDropDownOutlinedIcon />}\r\n                    onClick={handleChange}\r\n                    className={classes.sortOrder}\r\n                >\r\n                    { `${ values.sortOrder === 'asc' ? `${t(\"sort.asc\")}` : `${t(\"sort.desc\")}`}`}\r\n                </Button> \r\n            </ButtonGroup>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    sort: {\r\n        margin: '5px',\r\n        height: '45px',\r\n        \r\n    },\r\n    sortBy: {\r\n        borderRadius: '25px 0 0 25px',\r\n        padding: '0 15px 0 3px',\r\n        color: 'white',\r\n        width: 'auto',\r\n        whiteSpace: 'nowrap',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    sortOrder: {\r\n        borderRadius: '0px 25px 25px 0px',\r\n        padding: '0 10px',\r\n        color: 'white',\r\n        width: 'auto',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n    },\r\n    menu: {\r\n        marginTop: '55px',\r\n        background: 'rgba(0,0,0,0.5)',\r\n        backdropFilter: 'blur(10px)',\r\n        color: 'white'\r\n    },\r\n    icon: {\r\n        fontSize: '20px',\r\n        margin: '0 6px',\r\n        color: 'white',\r\n        borderRadius: '50px',\r\n        padding: '6px',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        \r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\assets\\AssetControls.js",["798"],"import { Fade, IconButton, makeStyles, Tooltip } from '@material-ui/core';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport const AssetControls = ({ removeAsset, toggleEditMode }) => {\r\n\tconst classes = useStyles();\r\n\tconst { t, i18n } = useTranslation();\r\n\r\n\treturn (\r\n\t\t<Fade in={true} timeout={500}>\r\n\t\t\t<div className={classes.container}>\r\n\t\t\t\t{/* <Tooltip title={t('assetsModule.changeOwner')}>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tclassName={classes.iconbutton}\r\n\t\t\t\t\t\tonClick={toggleEditMode('address')}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<EditRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip> */}\r\n\t\t\t\t<Tooltip title={t('assetsModule.editAddress')}>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tclassName={classes.iconbutton}\r\n\t\t\t\t\t\tonClick={toggleEditMode('address')}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<EditRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t\t<Tooltip title={t('assetsModule.deleteAsset')}>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tclassName={classes.iconbutton}\r\n\t\t\t\t\t\tonClick={removeAsset}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DeleteOutlineRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</div>\r\n\t\t</Fade>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tposition: 'absolute',\r\n\t\tright: 0,\r\n\t\ttop: '55%',\r\n\t},\r\n\ticonbutton: {\r\n\t\tmargin: '7px 5px',\r\n\t\tboxShadow: 'rgba(0,0,0,0.2) 0px 0px 3px 3px ',\r\n\t\tbackground: theme.palette.primary.main,\r\n\t\tcolor: 'white',\r\n\t\tpadding: '8px',\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\systems\\AddRelatedUser.js",["799","800","801"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, makeStyles, Paper, FormControl, IconButton, useMediaQuery, Fade, Modal, Backdrop,Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\nimport { getUserList } from '../../../api/userApi';\r\nimport clsx from 'clsx'\r\n\r\n\r\n\r\nexport const AddRelatedUser = ({ handleClose, handleSave, isOpen, relatedUsers }) => {\r\n\r\n    const classes = useStyles();\r\n    const { lang } = useContext(LanguageContext);\r\n    const downSm = useMediaQuery(theme => theme.breakpoints.down('md'));\r\n    const { t, i18n } = useTranslation();\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ selectedUser, setSelectedUser ] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        getUserList()\r\n        .then(data => {\r\n            let ul = relatedUsers.map(l => l._id);\r\n            setUserList(data.filter(u => ul.indexOf(u._id) === -1 ));\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = event => {\r\n        setSelectedUser(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500\r\n            }}\r\n            className={classes.modal}\r\n        >\r\n            <Fade in={isOpen}>\r\n                <Grid container justify='center' alignItems='center' style={{ outline: '0'}}>\r\n                    <Grid item xl={3}>\r\n                        <Paper \r\n                            className={classes.paper} \r\n                            style={{ direction: lang.dir }}\r\n                            elevation={6}    \r\n                        >\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {t(\"systemsModule.addRelatedUserTitle\")}\r\n                                </div>\r\n                                <IconButton className={classes.closeBtn} onClick={handleClose}>\r\n                                    <ClearRoundedIcon className={classes.icon}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div className={classes.instructions}>\r\n                                {t(\"systemsModule.chooseUserToAdd\")}\r\n                            </div>\r\n                            <FormControl variant='outlined' className={classes.textInput} >\r\n                                <Select\r\n                                    value={selectedUser}\r\n                                    onChange={handleChange}\r\n                                    className={classes.menu}\r\n                                    MenuProps={{\r\n                                        classes: {\r\n                                            paper: classes.menupaper,\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        userList.map( (user, i) => {\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    className={classes.menuitem}\r\n                                                    value={user._id} \r\n                                                    key={i}\r\n                                                    style={{ direction: lang.code === 'he' ? 'rtl' : 'ltr'}}\r\n                                                >\r\n                                                    {`${user.firstName} ${user.lastName}`}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div className={classes.controls}>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.save)}\r\n                                    onClick={() => handleSave(selectedUser)}\r\n                                    disabled={!selectedUser}\r\n                                >\r\n                                    {t(\"alert.confirm\")}\r\n                                </Button>\r\n                                <Button\r\n                                    className={clsx(classes.control, classes.cancel)}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    {t(\"alert.cancel\")}\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    \r\n                </Grid> \r\n                \r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        padding: '10px',\r\n        borderRadius: '10px',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backdropFilter: 'blur(10px)'   \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: '18px',\r\n        padding: '5px 10px',\r\n        height: 'fit-content'\r\n    },\r\n    closeBtn: {\r\n        fontSize: '20px',\r\n        height: '40px',\r\n        width: '40px'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        borderRadius: '25px',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.2)'\r\n        }\r\n    },\r\n    instructions: {\r\n        width: 'auto',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '12px',\r\n        margin: '0px 10px'\r\n    },\r\n    menu: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    menupaper: {\r\n        background: 'rgba(0,0,0,0.3)',\r\n        backdropFilter: 'blur(10px)',\r\n        maxHeight: '200px',\r\n        overflowY: 'auto',\r\n    },\r\n    menuitem: {\r\n        color: 'white'\r\n    },\r\n    textInput: {\r\n        margin: '20px 5px',\r\n        width: '300px',\r\n        '& input': {\r\n            color: 'white',\r\n            paddingLeft: '20px',\r\n        },\r\n        '& label': {\r\n            color: 'white',\r\n            paddingLeft: '5px' \r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'rgba(255,255,255,0.6)',\r\n            borderRadius: '42px'\r\n        }    \r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    control: {\r\n        width: '30%',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        fontSize: '16px',\r\n        margin: '5px',\r\n        padding: '5px 30px',\r\n        borderRadius: '30px',\r\n        color: 'white', \r\n    },\r\n    save: {\r\n        background: 'rgba(0,0,0,0.2)', \r\n        '&:hover': {\r\n            background: 'black'\r\n        },\r\n        '&:disabled': {\r\n            color: 'rgba(255,255,255,0.3)'\r\n        }\r\n    },\r\n    cancel: {\r\n        border: '0px solid grey',\r\n        '&:hover': {\r\n            borderWidth: '1px'\r\n        }\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\navbar\\Notification.js",["802","803","804","805","806","807","808","809","810","811"],"import {\r\n\tmakeStyles,\r\n    useMediaQuery,\r\n    IconButton,\r\n    Button,\r\n    Avatar\r\n} from '@material-ui/core';\r\nimport AddLocationOutlinedIcon from '@material-ui/icons/AddLocationOutlined';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport CheckCircleOutlineRoundedIcon from '@material-ui/icons/CheckCircleOutlineRounded';\r\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport { getDatediffString, getFullName, updateStateField } from '../../../api/genericApi';\r\nimport { generateNotificationBody, generateNotificationHeader } from '../../../api/notificationsApi';\r\nimport { useHistory } from 'react-router';\r\nimport clsx from 'clsx';\r\n\r\nexport const Notification = ({ data, updateNotificationReadStatus }) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\tconst { t, i18n } = useTranslation();\r\n    const [ notification, setNotification ] = useState(data);\r\n     \r\n    useEffect(() => {\r\n        setNotification(data);\r\n    }, [data])\r\n    \r\n    const GenerateText = () => {\r\n        return (\r\n            <div className={classes.textContainer}>\r\n                <div className={classes.generateNotificationHeader}>\r\n                    {generateNotificationHeader(notification)}\r\n                </div>\r\n                <div className={classes.generateNotificationBody}>\r\n                    {generateNotificationBody(notification)}\r\n                </div>\r\n                <div className={classes.timePassed}>\r\n                    {getDatediffString(notification.createdAt)}\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    const handleClick = async () => {\r\n        await updateNotificationReadStatus(notification._id, true);\r\n        history.push(`/workspace/${notification.actionOn.objectType}/${notification.actionOn.externalId}`)\r\n    }\r\n\r\n    const handleNotificationStatus = event => {\r\n        event.stopPropagation();\r\n        updateNotificationReadStatus(notification._id, !notification.read)\r\n    }\r\n\r\n\treturn (\r\n        <Button \r\n            className={classes.container}\r\n            onClick={handleClick}\r\n        >\r\n            <div className={classes.sideIconContainer}>\r\n                {          \r\n                    <Avatar src={notification.actionBy ? notification.actionBy.avatar : null } alt={'ab'} className={classes.avatar} /> \r\n                }\r\n            </div>\r\n            <div className={clsx(classes.contentContainer, notification.read && classes.read)}>\r\n                <GenerateText />\r\n            </div>\r\n            <div className={classes.readContainer}>\r\n                {\r\n                    notification.read ? \r\n                    null : \r\n                    <FiberManualRecordIcon className={classes.icon} />\r\n                }\r\n            </div>\r\n            <Button \r\n                className={classes.markAsRead}\r\n                onClick={handleNotificationStatus}\r\n            >\r\n                {notification.read ? t(\"notificationsModule.markAsUnread\"): t(\"notificationsModule.markAsRead\")}\r\n            </Button>\r\n        </Button>\r\n\t);\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        height: '110px',\r\n        padding: '0',\r\n        textAlign: 'left',\r\n        '&:hover': {\r\n            background: 'rgba(0,0,0,0.6)'\r\n        }\r\n    },\r\n    sideIconContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n        width: '20%'\r\n    },\r\n    contentContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n        width: '70%',\r\n        color: 'white'\r\n    },\r\n    textContainer: {\r\n        fontSize: '14px',\r\n        padding: '10px',\r\n        wordBreak: 'nobreak',\r\n        width: '100%',\r\n        \r\n    },\r\n    readContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n        width: '10%'\r\n    },\r\n    avatar: {\r\n        width: '50px',\r\n        height: '50px'\r\n    },\r\n    icon: {\r\n        color: 'rgba(255,255,255,0.8)',\r\n        fontSize: '13px'\r\n    },\r\n    generateNotificationHeader: {\r\n        fontSize: '14px',\r\n        color: 'rgba(255,255,255,0.7)',\r\n        padding: '0',\r\n        height: '25px'\r\n    },\r\n    generateNotificationBody: {\r\n        padding: '3px',\r\n        lineHeight: '20px'\r\n    },\r\n    timePassed:  {\r\n        fontSize: '12px',\r\n        color: 'rgba(255,255,255,0.6)'\r\n    },\r\n    markAsRead: {\r\n        position: 'absolute',\r\n        top: '7px',\r\n        right: '5px',\r\n        fontSize: '12px',\r\n        color: 'rgba(255,255,255,0.6)',\r\n        padding: 0,\r\n        borderRadius: '50px',\r\n        border: '1px solid transparent',\r\n        padding: '2px 5px',\r\n        '&:hover': {\r\n            color: 'white',\r\n           border: '1px solid rgba(255,255,255,0.6)',\r\n        }\r\n    },\r\n    read: {\r\n        opacity: '0.4'\r\n    }\r\n  \r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\controls\\settings\\UpsertUser.js",["812","813","814","815","816","817","818","819","820","821","822","823","824","825","826"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\UpsertTask.js",["827","828","829","830","831","832","833","834","835"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskSteps.js",["836","837","838","839"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, Grid, Collapse, TextField, FormControlLabel, Checkbox, IconButton, Button } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\n\r\n\r\nexport const TaskSteps = ({ data,  isUsingSteps, handleChange, isSequential, toggleIsSequential, addStep, removeStep }) => {\r\n\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    const [ isSeq, setIsSeq ] = useState(isSequential);\r\n    const [ steps, setSteps ] = useState(data || [{ order: 1, description: ''}]);\r\n\r\n    useEffect(() => {\r\n        setSteps(data)\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        setIsSeq(isSequential);\r\n    }, [isSequential])\r\n\r\n    return (\r\n        <Collapse in={isUsingSteps} >\r\n            <Grid container>\r\n                {/* <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox \r\n                                checked={isSeq} \r\n                                onChange={toggleIsSequential}\r\n                                classes={{ root: classes.checkbox, checked: classes.checked}}\r\n                            />\r\n                        }\r\n                        className={classes.isSequential} \r\n                        label={t(\"tasksModule.upsert.isSequential\")}\r\n                    />\r\n                </Grid> */}\r\n                {\r\n                    steps.map((step, i) => \r\n                    <Grid container className={classes.textContainer}>\r\n                        <Grid item xs={10}>\r\n                            <TextField\r\n                                variant={\"outlined\"}\r\n                                label={`${t(`tasksModule.upsert.step`)} ${step.order}`}\r\n                                value={ step.description }\r\n                                onChange={handleChange(i)}\r\n                                className={classes.textField}\r\n                                size={'medium'}\r\n                                multiline={true}\r\n                                helperText={ `${60 - step.description.length} ${t(\"tasksModule.upsert.titleLimit\")}` }\r\n                                inputProps={{\r\n                                    maxLength: 60\r\n                                }}\r\n                                FormHelperTextProps={{\r\n                                    style: { color: 'rgba(255,255,255,0.6)' }\r\n                                }}\r\n                                \r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <IconButton\r\n                                className={classes.iconBtn}\r\n                                onClick={removeStep(step.order)}\r\n                            >\r\n                                <DeleteOutlineRoundedIcon className={classes.icon} />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                    ) \r\n                }\r\n                <Grid item xs={12}>\r\n                    <Button \r\n                        className={classes.addBtn}\r\n                        startIcon={ <AddIcon className={classes.addIcon} />}\r\n                        onClick={addStep}\r\n                    >\r\n                        {t(\"tasksModule.upsert.addStep\")}\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Collapse>\r\n\r\n    )\r\n} \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textContainer: {\r\n        padding: '5px',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    textField: {\r\n        width: '100%',\r\n        '& fieldset': {\r\n            borderRadius: '5px',\r\n        },  \r\n    },\r\n    isSequential: {\r\n        color: 'white',\r\n        padding: '0px 15px 10px'\r\n    },\r\n    checkbox: {\r\n        color: 'rgba(255,255,255,0.2)',\r\n        '&$checked': {\r\n          color: 'rgba(255,255,255,0.8)',\r\n        },\r\n    },\r\n    checked: {},\r\n    addBtn: {\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '16px',\r\n        border: '1px solid rgba(255,255,255,0.6)' ,\r\n        borderRadius: '50px',\r\n        padding: '5px 30px 5px 15px',\r\n        margin: '5px',\r\n        whiteSpace: 'nowrap',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.8)',\r\n            color: 'rgba(0,0,0,0.8)',\r\n\r\n        }   \r\n    },\r\n    iconBtn: {\r\n        color: 'rgba(255,255,255,0.6)',\r\n        fontSize: '16px',\r\n        border: '1px solid rgba(255,255,255,0.6)' ,\r\n        borderRadius: '50px',\r\n        padding: '10px',\r\n        margin: '0 10px 20px',\r\n        '&:hover': {\r\n            background: 'rgba(255,255,255,0.8)',\r\n            color: 'rgba(0,0,0,0.8)',\r\n\r\n        }   \r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskView.js",["840","841","842"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TasksList.js",["843","844"],"import { Fade, Grid, LinearProgress, makeStyles } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useLocation } from 'react-router';\r\nimport { getTasks } from '../../../api/tasksApi';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { TaskMinified } from './TaskMinified';\r\nimport { TasksControls } from './TasksControls';\r\n\r\nexport const TasksList = ({ repeatable }) => {\r\n\tconst classes = useStyles();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search)\r\n\tconst { auth } = useContext(AuthContext);\r\n\tconst { t } = useTranslation();\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [tasks, setTasks] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetTasks({ ...query, isRepeatable: repeatable })\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetTasks(data);\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t});\r\n\t}, [isLoading]);\r\n\r\n\tuseEffect(() => {\r\n        setIsLoading(true)\r\n    }, [location.search])\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<div className={classes.pageModule}>{repeatable ? t('tasksModule.repeatableTasks') : t('tasksModule.tasks')}</div>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<TasksControls />\r\n\t\t\t</Grid>\r\n\t\t\t{\r\n\t\t\t\tisLoading ?\r\n                <LinearProgress />\r\n\t\t\t\t:\r\n\t\t\t\t<Fade in={!isLoading}>\r\n\t\t\t\t\t<Grid container className={classes.listContainer}>\r\n\t\t\t\t\t\t{tasks.map((task, i) => (\t\t\t\t\t\r\n\t\t\t\t\t\t\t<TaskMinified data={task} key={i} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Fade>\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tlistContainer: {\r\n\t\tpadding: '10px',\r\n\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\tpadding: '10px 0',\r\n\t\t},\r\n\t},\r\n\tminiTask: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t},\r\n\tpageModule: {\r\n\t\tcolor: 'white',\r\n\t\tpadding: '10px 40px',\r\n\t\tfontSize: '18px',\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t\tmargin: '0px auto 5px',\r\n\t\twidth: '30%',\r\n\t\ttextAlign: 'center',\r\n\t\tborderRadius: '0 0 25px 25px',\r\n\t\tlineHeight: '1',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TaskViewControls.js",["845","846","847"],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\TasksControls.js",["848","849"],"import {\r\n\tButton,\r\n\tCollapse,\r\n\tGrid,\r\n\tmakeStyles,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { ClearRounded } from '@material-ui/icons';\r\nimport BlurOnRoundedIcon from '@material-ui/icons/BlurOnRounded';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { getAsset, getFullAddress } from '../../../api/assetsApi';\r\nimport { removeQueryParam } from '../../../api/genericApi';\r\nimport {\r\n\tgetAssetsSuggestions,\r\n\tgetSystemsByAssetOptions,\r\n} from '../../../api/systemsApi';\r\nimport { getTasksStatusListSuggestions } from '../../../api/tasksApi';\r\nimport { createUserOptions } from '../../../api/userApi';\r\nimport { useQuery } from '../../reuseables/customHooks/useQuery';\r\nimport { FilterByMultiSelect } from '../../reuseables/FilterByMultiSelect';\r\nimport { SearchBoxSelect } from '../../reuseables/SearchBoxSelect';\r\n\r\nexport const TasksControls = () => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst query = useQuery(location.search);\r\n\tconst classes = useStyles();\r\n\tconst downSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [reloadedValue, setReloadedValue] = useState(null);\r\n\tconst [collapsed, setCollapsed] = useState(!downSm ? true : false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (query.asset) {\r\n\t\t\thandleReloaded(query.asset).then((data) => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetReloadedValue(data);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetReloadedValue({\r\n\t\t\t\tlabel: '',\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\thistory.push({\r\n\t\t\t\tpath: location.pathname,\r\n\t\t\t\tsearch: removeQueryParam(location.search, 'system'),\r\n\t\t\t});\r\n\t\t}\r\n\t}, [location.search]);\r\n\r\n\tconst handleReloaded = async (assetId) => {\r\n\t\tconst res = await getAsset(assetId, false);\r\n\t\tif (res) {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: getFullAddress(res),\r\n\t\t\t\tvalue: res._id,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleCollapse = () => {\r\n\t\tif (collapsed) {\r\n\t\t\tsetCollapsed(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetCollapsed(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{downSm && (\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName={classes.sortandfilter}\r\n\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t<FilterListIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tendIcon={\r\n\t\t\t\t\t\t\t\tcollapsed ? (\r\n\t\t\t\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<ExpandMoreRoundedIcon />\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={toggleCollapse}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{t(\r\n\t\t\t\t\t\t\t\t`tasksModule.${\r\n\t\t\t\t\t\t\t\t\tcollapsed ? 'hide' : 'show'\r\n\t\t\t\t\t\t\t\t}Filters`\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t<Collapse in={collapsed}>\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t{reloadedValue && (\r\n\t\t\t\t\t\t\t<SearchBoxSelect\r\n\t\t\t\t\t\t\t\tsuggestionsFunc={getAssetsSuggestions}\r\n\t\t\t\t\t\t\t\tplaceholder={t('systemsModule.filterByAsset')}\r\n\t\t\t\t\t\t\t\tfilterField={'asset'}\r\n\t\t\t\t\t\t\t\treloadedLabel={reloadedValue.label}\r\n\t\t\t\t\t\t\t\treloadedValue={reloadedValue.value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{query.asset && (\r\n\t\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\t\toptionsFunc={() =>\r\n\t\t\t\t\t\t\t\t\tgetSystemsByAssetOptions(query.asset)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder={t(\r\n\t\t\t\t\t\t\t\t\t'systemsModule.filterBySystemName'\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t\t<BlurOnRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfilterField={'system'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={getTasksStatusListSuggestions}\r\n\t\t\t\t\t\t\tplaceholder={t('tasksModule.filterByStatus')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<DoubleArrowIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'status'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\r\n\t\t\t\t\t\t<FilterByMultiSelect\r\n\t\t\t\t\t\t\toptionsFunc={createUserOptions}\r\n\t\t\t\t\t\t\tplaceholder={t('tasksModule.filterByTaskOwner')}\r\n\t\t\t\t\t\t\tfilterIcon={\r\n\t\t\t\t\t\t\t\t<PersonRoundedIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfilterField={'owner'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Collapse>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((them) => ({\r\n\tgridItem: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'flex-start',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: '20px',\r\n\t\tmarginLeft: '4px',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '6px',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tsortandfilter: {\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t\tbackground: 'rgba(0,0,0,0.7)',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '50px',\r\n\t\tpadding: '5px 25px 5px 3px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'black',\r\n\t\t},\r\n\t},\r\n\ttypeGroup: {\r\n\t\tmargin: '5px',\r\n\t\theight: '45px',\r\n\t},\r\n\tmodeBtn: {\r\n\t\tpadding: '0 15px 0 5px',\r\n\t\tcolor: 'white',\r\n\t\twidth: 'auto',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\tborder: '1px solid rgba(255,255,255,0.2)',\r\n\t},\r\n\tlistBtn: {\r\n\t\tborderRadius: '25px 0 0 25px',\r\n\t},\r\n\tblocksBtn: {\r\n\t\tborderRadius: '0px 25px 25px 0px',\r\n\t},\r\n\tmodeBtnActive: {\r\n\t\tbackground: 'rgba(0,0,0,0.6)',\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\scheduler\\Scheduler.js",["850","851","852"],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\scheduler\\ScheduleItem.js",["853","854","855","856","857"],"C:\\projects\\leev\\leev-fe\\src\\components\\reuseables\\datepickers\\CustomeDatePicker.js",["858","859"],"import DateFnsUtils from '@date-io/date-fns';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport heLocale from 'date-fns/locale/he';\r\nimport React, {useContext} from 'react';\r\nimport { getLocale } from '../../../api/genericApi';\r\nimport { LanguageContext } from '../../../context/LanguageContext';\r\n\r\nexport const CustomDatePicker = ({ data, handleChange, label, disablePast }) => {\r\n\tconst classes = useStyles();\r\n\tconst { lang } = useContext(LanguageContext);\r\n\r\n\treturn (\r\n\t\r\n\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils} locale={getLocale(lang.code)}>\r\n\t\t\t\t<DatePicker\r\n\t\t\t\t\tformat={lang.dateonly}\r\n\t\t\t\t\tlabel={label}\r\n\t\t\t\t\tvalue={data || null}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tinputVariant={'outlined'}\r\n\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\tautoOk={true}\r\n\t\t\t\t\tampm={false}\r\n\t\t\t\t\tdisableToolbar={true}\r\n\t\t\t\t\tvariant={'inline'}\r\n\t\t\t\t\tdisablePast={disablePast}\r\n\t\t\t\t/>\r\n\t\t\t</MuiPickersUtilsProvider>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttextField: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n\ttextField: {\r\n\t\twidth: '100%',\r\n\t\t'& fieldset': {\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t},\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\context\\authContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\context\\AuthContext.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\chatbot\\MessageBoolean.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\tasks\\RepeatableTasks.js",[],"C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\Calender.js",["860","861","862","863"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, Grid } from \"@material-ui/core\";\r\nimport { getDaysInMonth, getMonth, getYear, format } from \"date-fns\";\r\nimport { getBrackets } from \"../../../api/calenderApi\";\r\nimport { getTasks } from \"../../../api/tasksApi\";\r\nimport { CalenderHeaderRow } from \"./CalenderHeaderRow\";\r\nimport { CalenderRow } from \"./CalenderRow\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const Calender = ({}) => {\r\n\tconst classes = useStyles();\r\n    const { t } = useTranslation();\r\n\tconst [current, setCurrent] = useState({\r\n\t\tyear: getYear(new Date()),\r\n\t\tmonth: getMonth(new Date()),\r\n\t});\r\n\tconst [brackets, setBrackets] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetTasks({ isRepeatable: true })\r\n\t\t\t.then((rts) => {\r\n\t\t\t\treturn getBrackets(current, rts);\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetBrackets(data);\r\n\t\t\t});\r\n\t}, [current]);\r\n\r\n\treturn (\r\n\t\t<Grid container className={classes.mainContainer} justify='center'>\r\n\t\t\t <Grid item xs={12}>\r\n\t\t\t\t<div className={classes.pageModule}>\r\n\t\t\t\t\t\t{t(\"calender.calender\")}\r\n\t\t\t\t</div>\r\n\t\t\t </Grid>\r\n           \r\n\t\t\t<table className={classes.bracketsContainer}>\r\n\t\t\t\t<thead className={classes.tableHeader}>\r\n\t\t\t\t\t<CalenderHeaderRow />\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody className={classes.tableBody}>\r\n\t\t\t\t\t{brackets.chunk(7).map((c, i) => \r\n\t\t\t\t\t\t<CalenderRow brackets={c} key={i} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmainContainer: {\r\n        height: 'calc(100vh - 64px)'\r\n    },\r\n    pageModule: {\r\n        color: 'white',\r\n        padding: '10px 40px',\r\n        fontSize: '18px',\r\n        background: 'rgba(0,0,0,0.6)',\r\n        margin: '0px auto 5px',\r\n        width: '30%',\r\n        textAlign: 'center',\r\n        borderRadius: '0 0 25px 25px',\r\n        lineHeight: '1'\r\n    },\r\n    bracketsContainer: {\r\n        width: '90%',\r\n        height: '90%',\r\n        color: 'white'\r\n    },\r\n    tableBody: {\r\n        background: 'rgba(0,0,0,0.4)',\r\n    }\r\n}));\r\n","C:\\projects\\leev\\leev-fe\\src\\api\\calenderApi.js",["864","865","866","867","868"],"import { addDays, endOfMonth, getDate, getDay, getDayOfYear, getDaysInMonth, getMonth, getYear, parseISO, startOfDay } from \"date-fns\";\r\nimport { getTasks } from './tasksApi';\r\n\r\nexport const getBrackets = async (current, repeatableTasks) => {\r\n    const dates = await calculateDates(current);\r\n    return await calculateBrackets(dates, repeatableTasks);  \r\n}\r\n\r\nexport const calculateDates = async (current) => {\r\n    const { month, year } = current;\r\n    let dates = [];\r\n    const currentMonthDate = new Date(year, month, 1);\r\n    const daysInCurrentMonth = getDaysInMonth(currentMonthDate);\r\n    const firstDayOfMonth = getDay(currentMonthDate);\r\n    const lastDayOfMonth = getDay(endOfMonth(currentMonthDate));\r\n    if (firstDayOfMonth !== 0 ) {\r\n        for(let i = firstDayOfMonth; i > 0; i--) {\r\n            dates.push(addDays(currentMonthDate, -i));\r\n        }\r\n    };\r\n    for (let i = 0; i < daysInCurrentMonth; i++) {\r\n        dates.push(addDays(currentMonthDate, i));\r\n    }\r\n    let daysLeft = 42 - dates.length;\r\n    for(let i = 1; i <= daysLeft; i++) {\r\n        dates.push(addDays(endOfMonth(currentMonthDate), i));\r\n    }\r\n    return Promise.resolve(dates)\r\n}\r\n\r\nexport const calculateBrackets = async (dates, repeatableTasks) => {\r\n    let brackets = dates.map((d, i) => {\r\n        const dParts = getDateParts(d);\r\n        let bracket = { date: d, parts: dParts, data: [] };\r\n        repeatableTasks.forEach(rt => {\r\n            rt.schedule.forEach(rts => {\r\n                const startDate = parseISO(rts.startDate);\r\n                if (startOfDay(startDate) > startOfDay(d)) return;\r\n\r\n                let rtsParts = getDateParts(startDate);\r\n                if (rts.interval === 'day') {\r\n                    bracket.data.push(rt);\r\n                }\r\n                if (rts.interval === 'week') {\r\n                    if (dParts.weekDay == rtsParts.weekDay) {\r\n                        bracket.data.push(rt);\r\n                    }\r\n                }\r\n                if (rts.interval === 'month') {\r\n                    if (dParts.day == rtsParts.day) {\r\n                        bracket.data.push(rt);\r\n                    }\r\n                }\r\n                if (rts.interval === 'year') {\r\n                    if (dParts.yearDay == rtsParts.yearDay) {\r\n                        bracket.data.push(rt);\r\n                    }\r\n                }\r\n            })\r\n        });\r\n        return bracket;\r\n    });\r\n    return Promise.resolve(brackets);\r\n}\r\n\r\nexport const getDateParts = (date) => {\r\n    return {\r\n        day: getDate(date),\r\n        weekDay: getDay(date),\r\n        month: getMonth(date),\r\n        year: getYear(date),\r\n        yearDay: getDayOfYear(date)\r\n    }\r\n}","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\CalenderHeaderRow.js",["869","870"],"import React from 'react';\r\nimport { makeStyles, Grid, useMediaQuery } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst weekDays = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\r\n\r\nexport const CalenderHeaderRow = ({}) => {\r\n\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const matches = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <tr className={classes.row}>\r\n            {\r\n                weekDays.map((wd, i) => \r\n                    <th className={classes.headerCell}>\r\n                        <div className={classes.dayHeader}>\r\n                            {t(`dates.${wd}${matches ? 'short' : ''}`)}\r\n                        </div>\r\n                    </th>\r\n                )\r\n            }\r\n        </tr>   \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    headerCell: {\r\n        width: '14.28%'\r\n    },\r\n    dayHeader: {\r\n        padding: '15px 10px',\r\n        background: 'rgba(0,0,0,0.6)',\r\n        width: 'auto'\r\n    }\r\n}))","C:\\projects\\leev\\leev-fe\\src\\components\\datapages\\calender\\CalenderRow.js",["871","872","873"],"import React from 'react';\r\nimport { makeStyles, Grid, useMediaQuery } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nexport const CalenderRow = ({ brackets }) => {\r\n\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const matches = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <tr className={classes.row}>\r\n            {\r\n                brackets.map((b, i) =>\r\n                    <td className={classes.bracketData}>\r\n                        <div className={classes.dayOfMonth}>\r\n                            {b.parts.day}\r\n                        </div>\r\n                        \r\n                    </td>\r\n                )\r\n            }\r\n        </tr>   \r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    row: {\r\n        padding: '10px',\r\n        width: '14.28%',\r\n        height: '10%'\r\n    },\r\n    dayHeader: {\r\n\r\n    },\r\n    bracketData: {\r\n        padding: '10px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            textAlign: 'center',\r\n            verticalAlign: 'top',\r\n\r\n        }\r\n    },\r\n    dayOfMonth: {\r\n\r\n    }\r\n}))",{"ruleId":"874","severity":1,"message":"875","line":9,"column":1,"nodeType":"876","messageId":"877","endLine":16,"endColumn":3},{"ruleId":"878","replacedBy":"879"},{"ruleId":"880","replacedBy":"881"},{"ruleId":"882","severity":1,"message":"883","line":32,"column":8,"nodeType":"884","endLine":32,"endColumn":10,"suggestions":"885"},{"ruleId":"882","severity":1,"message":"886","line":34,"column":8,"nodeType":"884","endLine":34,"endColumn":10,"suggestions":"887"},{"ruleId":"888","severity":1,"message":"889","line":17,"column":10,"nodeType":"890","messageId":"891","endLine":17,"endColumn":18},{"ruleId":"892","severity":1,"message":"893","line":21,"column":27,"nodeType":"894","messageId":"877","endLine":21,"endColumn":29},{"ruleId":"888","severity":1,"message":"895","line":24,"column":10,"nodeType":"890","messageId":"891","endLine":24,"endColumn":11},{"ruleId":"888","severity":1,"message":"896","line":2,"column":40,"nodeType":"890","messageId":"891","endLine":2,"endColumn":46},{"ruleId":"888","severity":1,"message":"897","line":22,"column":13,"nodeType":"890","messageId":"891","endLine":22,"endColumn":22},{"ruleId":"882","severity":1,"message":"898","line":56,"column":8,"nodeType":"884","endLine":56,"endColumn":10,"suggestions":"899"},{"ruleId":"900","severity":1,"message":"901","line":60,"column":13,"nodeType":"890","messageId":"902","endLine":60,"endColumn":21},{"ruleId":"882","severity":1,"message":"903","line":60,"column":24,"nodeType":"904","endLine":60,"endColumn":47},{"ruleId":"900","severity":1,"message":"901","line":65,"column":17,"nodeType":"890","messageId":"902","endLine":65,"endColumn":25},{"ruleId":"882","severity":1,"message":"905","line":96,"column":8,"nodeType":"884","endLine":96,"endColumn":22,"suggestions":"906"},{"ruleId":"888","severity":1,"message":"907","line":1,"column":29,"nodeType":"890","messageId":"891","endLine":1,"endColumn":38},{"ruleId":"888","severity":1,"message":"908","line":1,"column":10,"nodeType":"890","messageId":"891","endLine":1,"endColumn":14},{"ruleId":"888","severity":1,"message":"909","line":2,"column":38,"nodeType":"890","messageId":"891","endLine":2,"endColumn":48},{"ruleId":"888","severity":1,"message":"910","line":5,"column":10,"nodeType":"890","messageId":"891","endLine":5,"endColumn":24},{"ruleId":"888","severity":1,"message":"911","line":1,"column":18,"nodeType":"890","messageId":"891","endLine":1,"endColumn":29},{"ruleId":"888","severity":1,"message":"912","line":1,"column":61,"nodeType":"890","messageId":"891","endLine":1,"endColumn":74},{"ruleId":"888","severity":1,"message":"913","line":2,"column":10,"nodeType":"890","messageId":"891","endLine":2,"endColumn":28},{"ruleId":"888","severity":1,"message":"914","line":2,"column":10,"nodeType":"890","messageId":"891","endLine":2,"endColumn":21},{"ruleId":"888","severity":1,"message":"915","line":16,"column":8,"nodeType":"890","messageId":"891","endLine":16,"endColumn":16},{"ruleId":"882","severity":1,"message":"916","line":26,"column":5,"nodeType":"884","endLine":26,"endColumn":7,"suggestions":"917"},{"ruleId":"888","severity":1,"message":"918","line":12,"column":8,"nodeType":"890","messageId":"891","endLine":12,"endColumn":15},{"ruleId":"888","severity":1,"message":"915","line":13,"column":11,"nodeType":"890","messageId":"891","endLine":13,"endColumn":19},{"ruleId":"888","severity":1,"message":"919","line":15,"column":19,"nodeType":"890","messageId":"891","endLine":15,"endColumn":26},{"ruleId":"920","severity":1,"message":"921","line":44,"column":45,"nodeType":"922","endLine":44,"endColumn":112},{"ruleId":"888","severity":1,"message":"923","line":17,"column":16,"nodeType":"890","messageId":"891","endLine":17,"endColumn":20},{"ruleId":"882","severity":1,"message":"924","line":40,"column":8,"nodeType":"884","endLine":40,"endColumn":19,"suggestions":"925"},{"ruleId":"882","severity":1,"message":"926","line":40,"column":5,"nodeType":"884","endLine":40,"endColumn":16,"suggestions":"927"},{"ruleId":"888","severity":1,"message":"928","line":1,"column":28,"nodeType":"890","messageId":"891","endLine":1,"endColumn":41},{"ruleId":"888","severity":1,"message":"929","line":1,"column":43,"nodeType":"890","messageId":"891","endLine":1,"endColumn":53},{"ruleId":"888","severity":1,"message":"930","line":3,"column":10,"nodeType":"890","messageId":"891","endLine":3,"endColumn":13},{"ruleId":"882","severity":1,"message":"931","line":25,"column":5,"nodeType":"884","endLine":25,"endColumn":22,"suggestions":"932"},{"ruleId":"888","severity":1,"message":"928","line":1,"column":44,"nodeType":"890","messageId":"891","endLine":1,"endColumn":57},{"ruleId":"882","severity":1,"message":"933","line":42,"column":8,"nodeType":"884","endLine":42,"endColumn":19,"suggestions":"934"},{"ruleId":"888","severity":1,"message":"935","line":1,"column":10,"nodeType":"890","messageId":"891","endLine":1,"endColumn":14},{"ruleId":"888","severity":1,"message":"936","line":1,"column":40,"nodeType":"890","messageId":"891","endLine":1,"endColumn":45},{"ruleId":"888","severity":1,"message":"937","line":2,"column":17,"nodeType":"890","messageId":"891","endLine":2,"endColumn":25},{"ruleId":"888","severity":1,"message":"907","line":2,"column":27,"nodeType":"890","messageId":"891","endLine":2,"endColumn":36},{"ruleId":"888","severity":1,"message":"909","line":2,"column":38,"nodeType":"890","messageId":"891","endLine":2,"endColumn":48},{"ruleId":"888","severity":1,"message":"895","line":9,"column":13,"nodeType":"890","messageId":"891","endLine":9,"endColumn":14},{"ruleId":"888","severity":1,"message":"938","line":8,"column":8,"nodeType":"890","messageId":"891","endLine":8,"endColumn":16},{"ruleId":"939","severity":1,"message":"940","line":100,"column":18,"nodeType":"941","messageId":"942","endLine":100,"endColumn":19,"suggestions":"943"},{"ruleId":"888","severity":1,"message":"944","line":18,"column":10,"nodeType":"890","messageId":"891","endLine":18,"endColumn":14},{"ruleId":"888","severity":1,"message":"945","line":18,"column":16,"nodeType":"890","messageId":"891","endLine":18,"endColumn":23},{"ruleId":"888","severity":1,"message":"946","line":19,"column":10,"nodeType":"890","messageId":"891","endLine":19,"endColumn":14},{"ruleId":"882","severity":1,"message":"947","line":40,"column":5,"nodeType":"884","endLine":40,"endColumn":16,"suggestions":"948"},{"ruleId":"888","severity":1,"message":"949","line":5,"column":8,"nodeType":"890","messageId":"891","endLine":5,"endColumn":18},{"ruleId":"888","severity":1,"message":"950","line":1,"column":10,"nodeType":"890","messageId":"891","endLine":1,"endColumn":16},{"ruleId":"888","severity":1,"message":"918","line":29,"column":8,"nodeType":"890","messageId":"891","endLine":29,"endColumn":15},{"ruleId":"888","severity":1,"message":"915","line":30,"column":8,"nodeType":"890","messageId":"891","endLine":30,"endColumn":16},{"ruleId":"888","severity":1,"message":"946","line":32,"column":13,"nodeType":"890","messageId":"891","endLine":32,"endColumn":17},{"ruleId":"888","severity":1,"message":"919","line":32,"column":19,"nodeType":"890","messageId":"891","endLine":32,"endColumn":26},{"ruleId":"920","severity":1,"message":"921","line":47,"column":33,"nodeType":"922","endLine":47,"endColumn":54},{"ruleId":"888","severity":1,"message":"951","line":1,"column":22,"nodeType":"890","messageId":"891","endLine":1,"endColumn":30},{"ruleId":"888","severity":1,"message":"952","line":2,"column":10,"nodeType":"890","messageId":"891","endLine":2,"endColumn":15},{"ruleId":"888","severity":1,"message":"937","line":3,"column":29,"nodeType":"890","messageId":"891","endLine":3,"endColumn":37},{"ruleId":"888","severity":1,"message":"895","line":25,"column":13,"nodeType":"890","messageId":"891","endLine":25,"endColumn":14},{"ruleId":"888","severity":1,"message":"953","line":26,"column":13,"nodeType":"890","messageId":"891","endLine":26,"endColumn":21},{"ruleId":"888","severity":1,"message":"954","line":147,"column":7,"nodeType":"890","messageId":"891","endLine":147,"endColumn":16},{"ruleId":"888","severity":1,"message":"955","line":8,"column":2,"nodeType":"890","messageId":"891","endLine":8,"endColumn":6},{"ruleId":"888","severity":1,"message":"956","line":15,"column":8,"nodeType":"890","messageId":"891","endLine":15,"endColumn":31},{"ruleId":"888","severity":1,"message":"957","line":16,"column":8,"nodeType":"890","messageId":"891","endLine":16,"endColumn":20},{"ruleId":"888","severity":1,"message":"958","line":17,"column":8,"nodeType":"890","messageId":"891","endLine":17,"endColumn":17},{"ruleId":"888","severity":1,"message":"959","line":18,"column":8,"nodeType":"890","messageId":"891","endLine":18,"endColumn":19},{"ruleId":"888","severity":1,"message":"960","line":19,"column":8,"nodeType":"890","messageId":"891","endLine":19,"endColumn":27},{"ruleId":"888","severity":1,"message":"961","line":20,"column":8,"nodeType":"890","messageId":"891","endLine":20,"endColumn":25},{"ruleId":"888","severity":1,"message":"923","line":28,"column":13,"nodeType":"890","messageId":"891","endLine":28,"endColumn":17},{"ruleId":"888","severity":1,"message":"962","line":30,"column":8,"nodeType":"890","messageId":"891","endLine":30,"endColumn":15},{"ruleId":"963","severity":1,"message":"964","line":36,"column":49,"nodeType":"965","messageId":"877","endLine":36,"endColumn":51},{"ruleId":"920","severity":1,"message":"921","line":55,"column":9,"nodeType":"922","endLine":55,"endColumn":79},{"ruleId":"920","severity":1,"message":"921","line":71,"column":31,"nodeType":"922","endLine":71,"endColumn":103},{"ruleId":"920","severity":1,"message":"921","line":88,"column":11,"nodeType":"922","endLine":88,"endColumn":86},{"ruleId":"920","severity":1,"message":"921","line":107,"column":11,"nodeType":"922","endLine":107,"endColumn":83},{"ruleId":"920","severity":1,"message":"921","line":125,"column":31,"nodeType":"922","endLine":125,"endColumn":114},{"ruleId":"888","severity":1,"message":"966","line":2,"column":8,"nodeType":"890","messageId":"891","endLine":2,"endColumn":12},{"ruleId":"888","severity":1,"message":"967","line":4,"column":10,"nodeType":"890","messageId":"891","endLine":4,"endColumn":20},{"ruleId":"888","severity":1,"message":"968","line":5,"column":8,"nodeType":"890","messageId":"891","endLine":5,"endColumn":23},{"ruleId":"888","severity":1,"message":"969","line":6,"column":8,"nodeType":"890","messageId":"891","endLine":6,"endColumn":37},{"ruleId":"888","severity":1,"message":"970","line":7,"column":8,"nodeType":"890","messageId":"891","endLine":7,"endColumn":31},{"ruleId":"888","severity":1,"message":"971","line":8,"column":8,"nodeType":"890","messageId":"891","endLine":8,"endColumn":15},{"ruleId":"888","severity":1,"message":"972","line":11,"column":8,"nodeType":"890","messageId":"891","endLine":11,"endColumn":23},{"ruleId":"888","severity":1,"message":"973","line":13,"column":8,"nodeType":"890","messageId":"891","endLine":13,"endColumn":24},{"ruleId":"888","severity":1,"message":"974","line":14,"column":8,"nodeType":"890","messageId":"891","endLine":14,"endColumn":16},{"ruleId":"888","severity":1,"message":"975","line":15,"column":8,"nodeType":"890","messageId":"891","endLine":15,"endColumn":15},{"ruleId":"888","severity":1,"message":"976","line":16,"column":8,"nodeType":"890","messageId":"891","endLine":16,"endColumn":16},{"ruleId":"920","severity":1,"message":"921","line":62,"column":9,"nodeType":"922","endLine":62,"endColumn":84},{"ruleId":"920","severity":1,"message":"921","line":81,"column":8,"nodeType":"922","endLine":81,"endColumn":86},{"ruleId":"920","severity":1,"message":"921","line":92,"column":8,"nodeType":"922","endLine":92,"endColumn":72},{"ruleId":"920","severity":1,"message":"921","line":102,"column":8,"nodeType":"922","endLine":102,"endColumn":80},{"ruleId":"920","severity":1,"message":"921","line":119,"column":9,"nodeType":"922","endLine":119,"endColumn":95},{"ruleId":"888","severity":1,"message":"955","line":3,"column":2,"nodeType":"890","messageId":"891","endLine":3,"endColumn":6},{"ruleId":"888","severity":1,"message":"923","line":24,"column":13,"nodeType":"890","messageId":"891","endLine":24,"endColumn":17},{"ruleId":"888","severity":1,"message":"962","line":28,"column":8,"nodeType":"890","messageId":"891","endLine":28,"endColumn":15},{"ruleId":"977","severity":1,"message":"978","line":123,"column":3,"nodeType":"979","messageId":"877","endLine":123,"endColumn":9},{"ruleId":"888","severity":1,"message":"923","line":22,"column":13,"nodeType":"890","messageId":"891","endLine":22,"endColumn":17},{"ruleId":"888","severity":1,"message":"962","line":24,"column":8,"nodeType":"890","messageId":"891","endLine":24,"endColumn":15},{"ruleId":"888","severity":1,"message":"980","line":26,"column":10,"nodeType":"890","messageId":"891","endLine":26,"endColumn":25},{"ruleId":"963","severity":1,"message":"964","line":40,"column":46,"nodeType":"965","messageId":"877","endLine":40,"endColumn":48},{"ruleId":"920","severity":1,"message":"921","line":54,"column":9,"nodeType":"922","endLine":54,"endColumn":79},{"ruleId":"920","severity":1,"message":"921","line":67,"column":29,"nodeType":"922","endLine":67,"endColumn":101},{"ruleId":"920","severity":1,"message":"921","line":81,"column":29,"nodeType":"922","endLine":81,"endColumn":104},{"ruleId":"920","severity":1,"message":"921","line":94,"column":29,"nodeType":"922","endLine":94,"endColumn":103},{"ruleId":"920","severity":1,"message":"921","line":107,"column":31,"nodeType":"922","endLine":107,"endColumn":103},{"ruleId":"920","severity":1,"message":"921","line":120,"column":31,"nodeType":"922","endLine":120,"endColumn":114},{"ruleId":"920","severity":1,"message":"921","line":135,"column":29,"nodeType":"922","endLine":135,"endColumn":98},{"ruleId":"920","severity":1,"message":"921","line":149,"column":29,"nodeType":"922","endLine":149,"endColumn":104},{"ruleId":"888","severity":1,"message":"981","line":2,"column":108,"nodeType":"890","messageId":"891","endLine":2,"endColumn":116},{"ruleId":"888","severity":1,"message":"982","line":2,"column":118,"nodeType":"890","messageId":"891","endLine":2,"endColumn":123},{"ruleId":"888","severity":1,"message":"951","line":2,"column":125,"nodeType":"890","messageId":"891","endLine":2,"endColumn":133},{"ruleId":"888","severity":1,"message":"983","line":17,"column":10,"nodeType":"890","messageId":"891","endLine":17,"endColumn":21},{"ruleId":"888","severity":1,"message":"923","line":26,"column":16,"nodeType":"890","messageId":"891","endLine":26,"endColumn":20},{"ruleId":"977","severity":1,"message":"984","line":236,"column":9,"nodeType":"979","messageId":"877","endLine":236,"endColumn":19},{"ruleId":"888","severity":1,"message":"985","line":4,"column":8,"nodeType":"890","messageId":"891","endLine":4,"endColumn":25},{"ruleId":"888","severity":1,"message":"986","line":9,"column":10,"nodeType":"890","messageId":"891","endLine":9,"endColumn":29},{"ruleId":"888","severity":1,"message":"923","line":43,"column":16,"nodeType":"890","messageId":"891","endLine":43,"endColumn":20},{"ruleId":"888","severity":1,"message":"923","line":17,"column":20,"nodeType":"890","messageId":"891","endLine":17,"endColumn":24},{"ruleId":"888","severity":1,"message":"923","line":37,"column":16,"nodeType":"890","messageId":"891","endLine":37,"endColumn":20},{"ruleId":"882","severity":1,"message":"987","line":60,"column":8,"nodeType":"884","endLine":60,"endColumn":25,"suggestions":"988"},{"ruleId":"888","severity":1,"message":"923","line":9,"column":13,"nodeType":"890","messageId":"891","endLine":9,"endColumn":17},{"ruleId":"989","severity":1,"message":"990","line":12,"column":44,"nodeType":"991","endLine":12,"endColumn":51},{"ruleId":"977","severity":1,"message":"992","line":106,"column":9,"nodeType":"979","messageId":"877","endLine":106,"endColumn":16},{"ruleId":"888","severity":1,"message":"981","line":3,"column":2,"nodeType":"890","messageId":"891","endLine":3,"endColumn":10},{"ruleId":"888","severity":1,"message":"982","line":7,"column":2,"nodeType":"890","messageId":"891","endLine":7,"endColumn":7},{"ruleId":"888","severity":1,"message":"923","line":28,"column":13,"nodeType":"890","messageId":"891","endLine":28,"endColumn":17},{"ruleId":"963","severity":1,"message":"964","line":116,"column":29,"nodeType":"965","messageId":"877","endLine":116,"endColumn":31},{"ruleId":"963","severity":1,"message":"964","line":20,"column":40,"nodeType":"965","messageId":"877","endLine":20,"endColumn":42},{"ruleId":"888","severity":1,"message":"993","line":3,"column":2,"nodeType":"890","messageId":"891","endLine":3,"endColumn":19},{"ruleId":"888","severity":1,"message":"929","line":7,"column":22,"nodeType":"890","messageId":"891","endLine":7,"endColumn":32},{"ruleId":"888","severity":1,"message":"994","line":7,"column":34,"nodeType":"890","messageId":"891","endLine":7,"endColumn":51},{"ruleId":"888","severity":1,"message":"995","line":11,"column":10,"nodeType":"890","messageId":"891","endLine":11,"endColumn":20},{"ruleId":"888","severity":1,"message":"996","line":12,"column":10,"nodeType":"890","messageId":"891","endLine":12,"endColumn":27},{"ruleId":"888","severity":1,"message":"918","line":30,"column":8,"nodeType":"890","messageId":"891","endLine":30,"endColumn":15},{"ruleId":"920","severity":1,"message":"921","line":154,"column":9,"nodeType":"922","endLine":154,"endColumn":70},{"ruleId":"920","severity":1,"message":"921","line":178,"column":8,"nodeType":"922","endLine":185,"endColumn":10},{"ruleId":"888","severity":1,"message":"908","line":3,"column":2,"nodeType":"890","messageId":"891","endLine":3,"endColumn":6},{"ruleId":"888","severity":1,"message":"997","line":7,"column":2,"nodeType":"890","messageId":"891","endLine":7,"endColumn":16},{"ruleId":"888","severity":1,"message":"950","line":9,"column":2,"nodeType":"890","messageId":"891","endLine":9,"endColumn":8},{"ruleId":"888","severity":1,"message":"998","line":11,"column":10,"nodeType":"890","messageId":"891","endLine":11,"endColumn":15},{"ruleId":"888","severity":1,"message":"897","line":31,"column":9,"nodeType":"890","messageId":"891","endLine":31,"endColumn":18},{"ruleId":"888","severity":1,"message":"999","line":31,"column":20,"nodeType":"890","messageId":"891","endLine":31,"endColumn":32},{"ruleId":"882","severity":1,"message":"1000","line":77,"column":5,"nodeType":"884","endLine":77,"endColumn":20,"suggestions":"1001"},{"ruleId":"977","severity":1,"message":"1002","line":219,"column":3,"nodeType":"979","messageId":"877","endLine":219,"endColumn":15},{"ruleId":"977","severity":1,"message":"1002","line":231,"column":3,"nodeType":"979","messageId":"877","endLine":231,"endColumn":15},{"ruleId":"888","severity":1,"message":"929","line":1,"column":22,"nodeType":"890","messageId":"891","endLine":1,"endColumn":32},{"ruleId":"888","severity":1,"message":"994","line":1,"column":34,"nodeType":"890","messageId":"891","endLine":1,"endColumn":51},{"ruleId":"888","severity":1,"message":"1003","line":4,"column":2,"nodeType":"890","messageId":"891","endLine":4,"endColumn":12},{"ruleId":"888","severity":1,"message":"1004","line":5,"column":2,"nodeType":"890","messageId":"891","endLine":5,"endColumn":9},{"ruleId":"888","severity":1,"message":"1005","line":15,"column":8,"nodeType":"890","messageId":"891","endLine":15,"endColumn":13},{"ruleId":"888","severity":1,"message":"1006","line":16,"column":10,"nodeType":"890","messageId":"891","endLine":16,"endColumn":23},{"ruleId":"888","severity":1,"message":"1007","line":17,"column":10,"nodeType":"890","messageId":"891","endLine":17,"endColumn":24},{"ruleId":"888","severity":1,"message":"1008","line":18,"column":8,"nodeType":"890","messageId":"891","endLine":18,"endColumn":31},{"ruleId":"888","severity":1,"message":"1009","line":19,"column":8,"nodeType":"890","messageId":"891","endLine":19,"endColumn":30},{"ruleId":"888","severity":1,"message":"895","line":33,"column":10,"nodeType":"890","messageId":"891","endLine":33,"endColumn":11},{"ruleId":"963","severity":1,"message":"964","line":75,"column":53,"nodeType":"965","messageId":"877","endLine":75,"endColumn":55},{"ruleId":"963","severity":1,"message":"964","line":83,"column":54,"nodeType":"965","messageId":"877","endLine":83,"endColumn":56},{"ruleId":"1010","severity":1,"message":"1011","line":161,"column":6,"nodeType":"1012","messageId":"1013","endLine":161,"endColumn":13},{"ruleId":"888","severity":1,"message":"1014","line":37,"column":8,"nodeType":"890","messageId":"891","endLine":37,"endColumn":14},{"ruleId":"888","severity":1,"message":"923","line":38,"column":13,"nodeType":"890","messageId":"891","endLine":38,"endColumn":17},{"ruleId":"888","severity":1,"message":"1015","line":46,"column":15,"nodeType":"890","messageId":"891","endLine":46,"endColumn":22},{"ruleId":"882","severity":1,"message":"1016","line":83,"column":5,"nodeType":"884","endLine":83,"endColumn":7,"suggestions":"1017"},{"ruleId":"882","severity":1,"message":"1018","line":118,"column":5,"nodeType":"884","endLine":118,"endColumn":36,"suggestions":"1019"},{"ruleId":"977","severity":1,"message":"978","line":748,"column":3,"nodeType":"979","messageId":"877","endLine":748,"endColumn":9},{"ruleId":"888","severity":1,"message":"1020","line":3,"column":2,"nodeType":"890","messageId":"891","endLine":3,"endColumn":9},{"ruleId":"888","severity":1,"message":"1021","line":10,"column":8,"nodeType":"890","messageId":"891","endLine":10,"endColumn":27},{"ruleId":"888","severity":1,"message":"1022","line":11,"column":8,"nodeType":"890","messageId":"891","endLine":11,"endColumn":29},{"ruleId":"888","severity":1,"message":"1023","line":12,"column":8,"nodeType":"890","messageId":"891","endLine":12,"endColumn":26},{"ruleId":"888","severity":1,"message":"1024","line":22,"column":10,"nodeType":"890","messageId":"891","endLine":22,"endColumn":40},{"ruleId":"888","severity":1,"message":"1025","line":23,"column":8,"nodeType":"890","messageId":"891","endLine":23,"endColumn":23},{"ruleId":"888","severity":1,"message":"986","line":24,"column":10,"nodeType":"890","messageId":"891","endLine":24,"endColumn":29},{"ruleId":"892","severity":1,"message":"893","line":28,"column":29,"nodeType":"894","messageId":"877","endLine":28,"endColumn":31},{"ruleId":"882","severity":1,"message":"987","line":51,"column":5,"nodeType":"884","endLine":51,"endColumn":22,"suggestions":"1026"},{"ruleId":"888","severity":1,"message":"928","line":1,"column":44,"nodeType":"890","messageId":"891","endLine":1,"endColumn":57},{"ruleId":"882","severity":1,"message":"1027","line":38,"column":8,"nodeType":"884","endLine":38,"endColumn":19,"suggestions":"1028"},{"ruleId":"882","severity":1,"message":"1029","line":49,"column":8,"nodeType":"884","endLine":49,"endColumn":18,"suggestions":"1030"},{"ruleId":"892","severity":1,"message":"893","line":34,"column":35,"nodeType":"894","messageId":"877","endLine":34,"endColumn":37},{"ruleId":"888","severity":1,"message":"923","line":40,"column":13,"nodeType":"890","messageId":"891","endLine":40,"endColumn":17},{"ruleId":"882","severity":1,"message":"1031","line":62,"column":5,"nodeType":"884","endLine":62,"endColumn":22,"suggestions":"1032"},{"ruleId":"888","severity":1,"message":"949","line":8,"column":8,"nodeType":"890","messageId":"891","endLine":8,"endColumn":18},{"ruleId":"888","severity":1,"message":"1033","line":17,"column":10,"nodeType":"890","messageId":"891","endLine":17,"endColumn":13},{"ruleId":"882","severity":1,"message":"1034","line":66,"column":5,"nodeType":"884","endLine":66,"endColumn":25,"suggestions":"1035"},{"ruleId":"888","severity":1,"message":"929","line":1,"column":16,"nodeType":"890","messageId":"891","endLine":1,"endColumn":26},{"ruleId":"888","severity":1,"message":"1036","line":2,"column":8,"nodeType":"890","messageId":"891","endLine":2,"endColumn":20},{"ruleId":"888","severity":1,"message":"949","line":10,"column":8,"nodeType":"890","messageId":"891","endLine":10,"endColumn":18},{"ruleId":"888","severity":1,"message":"937","line":1,"column":17,"nodeType":"890","messageId":"891","endLine":1,"endColumn":25},{"ruleId":"888","severity":1,"message":"1037","line":2,"column":10,"nodeType":"890","messageId":"891","endLine":2,"endColumn":25},{"ruleId":"888","severity":1,"message":"928","line":1,"column":139,"nodeType":"890","messageId":"891","endLine":1,"endColumn":152},{"ruleId":"888","severity":1,"message":"1015","line":18,"column":19,"nodeType":"890","messageId":"891","endLine":18,"endColumn":26},{"ruleId":"882","severity":1,"message":"1038","line":59,"column":7,"nodeType":"884","endLine":59,"endColumn":9,"suggestions":"1039"},{"ruleId":"882","severity":1,"message":"1040","line":30,"column":8,"nodeType":"884","endLine":30,"endColumn":20,"suggestions":"1041"},{"ruleId":"882","severity":1,"message":"1042","line":45,"column":8,"nodeType":"884","endLine":45,"endColumn":15,"suggestions":"1043"},{"ruleId":"882","severity":1,"message":"1044","line":25,"column":8,"nodeType":"884","endLine":25,"endColumn":10,"suggestions":"1045"},{"ruleId":"882","severity":1,"message":"1046","line":41,"column":8,"nodeType":"884","endLine":41,"endColumn":15,"suggestions":"1047"},{"ruleId":"888","severity":1,"message":"1014","line":15,"column":11,"nodeType":"890","messageId":"891","endLine":15,"endColumn":17},{"ruleId":"888","severity":1,"message":"923","line":16,"column":16,"nodeType":"890","messageId":"891","endLine":16,"endColumn":20},{"ruleId":"888","severity":1,"message":"928","line":2,"column":174,"nodeType":"890","messageId":"891","endLine":2,"endColumn":187},{"ruleId":"888","severity":1,"message":"1048","line":11,"column":10,"nodeType":"890","messageId":"891","endLine":11,"endColumn":21},{"ruleId":"888","severity":1,"message":"1015","line":22,"column":19,"nodeType":"890","messageId":"891","endLine":22,"endColumn":26},{"ruleId":"977","severity":1,"message":"1049","line":392,"column":53,"nodeType":"979","messageId":"877","endLine":392,"endColumn":60},{"ruleId":"977","severity":1,"message":"978","line":911,"column":9,"nodeType":"979","messageId":"877","endLine":911,"endColumn":15},{"ruleId":"888","severity":1,"message":"1020","line":2,"column":38,"nodeType":"890","messageId":"891","endLine":2,"endColumn":45},{"ruleId":"888","severity":1,"message":"1050","line":7,"column":10,"nodeType":"890","messageId":"891","endLine":7,"endColumn":22},{"ruleId":"888","severity":1,"message":"1014","line":12,"column":11,"nodeType":"890","messageId":"891","endLine":12,"endColumn":17},{"ruleId":"888","severity":1,"message":"923","line":15,"column":16,"nodeType":"890","messageId":"891","endLine":15,"endColumn":20},{"ruleId":"888","severity":1,"message":"1051","line":2,"column":8,"nodeType":"890","messageId":"891","endLine":2,"endColumn":15},{"ruleId":"888","severity":1,"message":"923","line":39,"column":13,"nodeType":"890","messageId":"891","endLine":39,"endColumn":17},{"ruleId":"882","severity":1,"message":"1031","line":60,"column":5,"nodeType":"884","endLine":60,"endColumn":22,"suggestions":"1052"},{"ruleId":"888","severity":1,"message":"928","line":1,"column":153,"nodeType":"890","messageId":"891","endLine":1,"endColumn":166},{"ruleId":"888","severity":1,"message":"1053","line":2,"column":24,"nodeType":"890","messageId":"891","endLine":2,"endColumn":41},{"ruleId":"888","severity":1,"message":"1015","line":23,"column":19,"nodeType":"890","messageId":"891","endLine":23,"endColumn":26},{"ruleId":"882","severity":1,"message":"1054","line":71,"column":8,"nodeType":"884","endLine":71,"endColumn":10,"suggestions":"1055"},{"ruleId":"920","severity":1,"message":"921","line":449,"column":73,"nodeType":"922","endLine":449,"endColumn":125},{"ruleId":"977","severity":1,"message":"978","line":645,"column":9,"nodeType":"979","messageId":"877","endLine":645,"endColumn":15},{"ruleId":"888","severity":1,"message":"923","line":17,"column":13,"nodeType":"890","messageId":"891","endLine":17,"endColumn":17},{"ruleId":"888","severity":1,"message":"1056","line":3,"column":10,"nodeType":"890","messageId":"891","endLine":3,"endColumn":20},{"ruleId":"888","severity":1,"message":"1057","line":51,"column":11,"nodeType":"890","messageId":"891","endLine":51,"endColumn":14},{"ruleId":"888","severity":1,"message":"1014","line":15,"column":11,"nodeType":"890","messageId":"891","endLine":15,"endColumn":17},{"ruleId":"888","severity":1,"message":"923","line":16,"column":16,"nodeType":"890","messageId":"891","endLine":16,"endColumn":20},{"ruleId":"882","severity":1,"message":"1058","line":28,"column":8,"nodeType":"884","endLine":28,"endColumn":10,"suggestions":"1059"},{"ruleId":"888","severity":1,"message":"923","line":15,"column":16,"nodeType":"890","messageId":"891","endLine":15,"endColumn":20},{"ruleId":"989","severity":1,"message":"990","line":28,"column":68,"nodeType":"991","endLine":28,"endColumn":92},{"ruleId":"888","severity":1,"message":"928","line":10,"column":2,"nodeType":"890","messageId":"891","endLine":10,"endColumn":15},{"ruleId":"888","severity":1,"message":"1060","line":20,"column":10,"nodeType":"890","messageId":"891","endLine":20,"endColumn":20},{"ruleId":"888","severity":1,"message":"1061","line":20,"column":22,"nodeType":"890","messageId":"891","endLine":20,"endColumn":33},{"ruleId":"963","severity":1,"message":"964","line":160,"column":19,"nodeType":"965","messageId":"877","endLine":160,"endColumn":21},{"ruleId":"888","severity":1,"message":"936","line":2,"column":22,"nodeType":"890","messageId":"891","endLine":2,"endColumn":27},{"ruleId":"888","severity":1,"message":"1062","line":15,"column":13,"nodeType":"890","messageId":"891","endLine":15,"endColumn":20},{"ruleId":"888","severity":1,"message":"1063","line":16,"column":13,"nodeType":"890","messageId":"891","endLine":16,"endColumn":27},{"ruleId":"920","severity":1,"message":"921","line":115,"column":13,"nodeType":"922","endLine":115,"endColumn":58},{"ruleId":"888","severity":1,"message":"1014","line":15,"column":11,"nodeType":"890","messageId":"891","endLine":15,"endColumn":17},{"ruleId":"888","severity":1,"message":"923","line":16,"column":16,"nodeType":"890","messageId":"891","endLine":16,"endColumn":20},{"ruleId":"882","severity":1,"message":"1064","line":25,"column":8,"nodeType":"884","endLine":25,"endColumn":10,"suggestions":"1065"},{"ruleId":"888","severity":1,"message":"1007","line":3,"column":10,"nodeType":"890","messageId":"891","endLine":3,"endColumn":24},{"ruleId":"882","severity":1,"message":"1066","line":31,"column":8,"nodeType":"884","endLine":31,"endColumn":10,"suggestions":"1067"},{"ruleId":"882","severity":1,"message":"1046","line":49,"column":8,"nodeType":"884","endLine":49,"endColumn":16,"suggestions":"1068"},{"ruleId":"888","severity":1,"message":"1069","line":2,"column":34,"nodeType":"890","messageId":"891","endLine":2,"endColumn":52},{"ruleId":"888","severity":1,"message":"1060","line":3,"column":10,"nodeType":"890","messageId":"891","endLine":3,"endColumn":20},{"ruleId":"888","severity":1,"message":"1070","line":5,"column":10,"nodeType":"890","messageId":"891","endLine":5,"endColumn":18},{"ruleId":"888","severity":1,"message":"915","line":11,"column":11,"nodeType":"890","messageId":"891","endLine":11,"endColumn":19},{"ruleId":"888","severity":1,"message":"1071","line":1,"column":8,"nodeType":"890","messageId":"891","endLine":1,"endColumn":13},{"ruleId":"888","severity":1,"message":"937","line":1,"column":29,"nodeType":"890","messageId":"891","endLine":1,"endColumn":37},{"ruleId":"888","severity":1,"message":"928","line":1,"column":28,"nodeType":"890","messageId":"891","endLine":1,"endColumn":41},{"ruleId":"888","severity":1,"message":"910","line":3,"column":10,"nodeType":"890","messageId":"891","endLine":3,"endColumn":24},{"ruleId":"888","severity":1,"message":"923","line":22,"column":13,"nodeType":"890","messageId":"891","endLine":22,"endColumn":17},{"ruleId":"977","severity":1,"message":"1072","line":213,"column":3,"nodeType":"979","messageId":"877","endLine":213,"endColumn":10},{"ruleId":"888","severity":1,"message":"909","line":1,"column":17,"nodeType":"890","messageId":"891","endLine":1,"endColumn":27},{"ruleId":"888","severity":1,"message":"907","line":1,"column":29,"nodeType":"890","messageId":"891","endLine":1,"endColumn":38},{"ruleId":"888","severity":1,"message":"937","line":1,"column":40,"nodeType":"890","messageId":"891","endLine":1,"endColumn":48},{"ruleId":"888","severity":1,"message":"1073","line":5,"column":2,"nodeType":"890","messageId":"891","endLine":5,"endColumn":7},{"ruleId":"888","severity":1,"message":"923","line":35,"column":13,"nodeType":"890","messageId":"891","endLine":35,"endColumn":17},{"ruleId":"888","severity":1,"message":"1025","line":6,"column":8,"nodeType":"890","messageId":"891","endLine":6,"endColumn":23},{"ruleId":"888","severity":1,"message":"923","line":15,"column":16,"nodeType":"890","messageId":"891","endLine":15,"endColumn":20},{"ruleId":"888","severity":1,"message":"1014","line":16,"column":11,"nodeType":"890","messageId":"891","endLine":16,"endColumn":17},{"ruleId":"888","severity":1,"message":"1074","line":3,"column":43,"nodeType":"890","messageId":"891","endLine":3,"endColumn":62},{"ruleId":"888","severity":1,"message":"908","line":4,"column":50,"nodeType":"890","messageId":"891","endLine":4,"endColumn":54},{"ruleId":"882","severity":1,"message":"1075","line":22,"column":8,"nodeType":"884","endLine":22,"endColumn":20,"suggestions":"1076"},{"ruleId":"888","severity":1,"message":"923","line":19,"column":16,"nodeType":"890","messageId":"891","endLine":19,"endColumn":20},{"ruleId":"882","severity":1,"message":"1029","line":33,"column":8,"nodeType":"884","endLine":33,"endColumn":16,"suggestions":"1077"},{"ruleId":"888","severity":1,"message":"923","line":9,"column":13,"nodeType":"890","messageId":"891","endLine":9,"endColumn":17},{"ruleId":"888","severity":1,"message":"1014","line":15,"column":11,"nodeType":"890","messageId":"891","endLine":15,"endColumn":17},{"ruleId":"888","severity":1,"message":"923","line":16,"column":16,"nodeType":"890","messageId":"891","endLine":16,"endColumn":20},{"ruleId":"882","severity":1,"message":"1078","line":26,"column":8,"nodeType":"884","endLine":26,"endColumn":10,"suggestions":"1079"},{"ruleId":"888","severity":1,"message":"928","line":3,"column":5,"nodeType":"890","messageId":"891","endLine":3,"endColumn":18},{"ruleId":"888","severity":1,"message":"929","line":4,"column":5,"nodeType":"890","messageId":"891","endLine":4,"endColumn":15},{"ruleId":"888","severity":1,"message":"956","line":8,"column":8,"nodeType":"890","messageId":"891","endLine":8,"endColumn":31},{"ruleId":"888","severity":1,"message":"1080","line":11,"column":8,"nodeType":"890","messageId":"891","endLine":11,"endColumn":24},{"ruleId":"888","severity":1,"message":"1081","line":12,"column":8,"nodeType":"890","messageId":"891","endLine":12,"endColumn":37},{"ruleId":"888","severity":1,"message":"1082","line":13,"column":8,"nodeType":"890","messageId":"891","endLine":13,"endColumn":30},{"ruleId":"888","severity":1,"message":"914","line":15,"column":29,"nodeType":"890","messageId":"891","endLine":15,"endColumn":40},{"ruleId":"888","severity":1,"message":"1083","line":15,"column":42,"nodeType":"890","messageId":"891","endLine":15,"endColumn":58},{"ruleId":"888","severity":1,"message":"923","line":23,"column":13,"nodeType":"890","messageId":"891","endLine":23,"endColumn":17},{"ruleId":"977","severity":1,"message":"1072","line":159,"column":9,"nodeType":"979","messageId":"877","endLine":159,"endColumn":16},{"ruleId":"888","severity":1,"message":"1084","line":3,"column":2,"nodeType":"890","messageId":"891","endLine":3,"endColumn":8},{"ruleId":"888","severity":1,"message":"1085","line":6,"column":2,"nodeType":"890","messageId":"891","endLine":6,"endColumn":6},{"ruleId":"888","severity":1,"message":"928","line":20,"column":2,"nodeType":"890","messageId":"891","endLine":20,"endColumn":15},{"ruleId":"888","severity":1,"message":"1053","line":22,"column":24,"nodeType":"890","messageId":"891","endLine":22,"endColumn":41},{"ruleId":"888","severity":1,"message":"1086","line":23,"column":8,"nodeType":"890","messageId":"891","endLine":23,"endColumn":32},{"ruleId":"888","severity":1,"message":"1087","line":28,"column":10,"nodeType":"890","messageId":"891","endLine":28,"endColumn":18},{"ruleId":"888","severity":1,"message":"914","line":29,"column":10,"nodeType":"890","messageId":"891","endLine":29,"endColumn":21},{"ruleId":"888","severity":1,"message":"1088","line":30,"column":10,"nodeType":"890","messageId":"891","endLine":30,"endColumn":33},{"ruleId":"888","severity":1,"message":"1089","line":30,"column":35,"nodeType":"890","messageId":"891","endLine":30,"endColumn":55},{"ruleId":"888","severity":1,"message":"1090","line":30,"column":57,"nodeType":"890","messageId":"891","endLine":30,"endColumn":74},{"ruleId":"888","severity":1,"message":"1091","line":31,"column":10,"nodeType":"890","messageId":"891","endLine":31,"endColumn":27},{"ruleId":"888","severity":1,"message":"1092","line":34,"column":10,"nodeType":"890","messageId":"891","endLine":34,"endColumn":18},{"ruleId":"888","severity":1,"message":"1015","line":43,"column":15,"nodeType":"890","messageId":"891","endLine":43,"endColumn":22},{"ruleId":"882","severity":1,"message":"1093","line":83,"column":5,"nodeType":"884","endLine":83,"endColumn":7,"suggestions":"1094"},{"ruleId":"977","severity":1,"message":"978","line":618,"column":3,"nodeType":"979","messageId":"877","endLine":618,"endColumn":9},{"ruleId":"888","severity":1,"message":"1095","line":1,"column":42,"nodeType":"890","messageId":"891","endLine":1,"endColumn":50},{"ruleId":"888","severity":1,"message":"1096","line":21,"column":13,"nodeType":"890","messageId":"891","endLine":21,"endColumn":24},{"ruleId":"888","severity":1,"message":"1014","line":22,"column":11,"nodeType":"890","messageId":"891","endLine":22,"endColumn":17},{"ruleId":"888","severity":1,"message":"923","line":23,"column":16,"nodeType":"890","messageId":"891","endLine":23,"endColumn":20},{"ruleId":"888","severity":1,"message":"1015","line":24,"column":19,"nodeType":"890","messageId":"891","endLine":24,"endColumn":26},{"ruleId":"882","severity":1,"message":"1097","line":53,"column":8,"nodeType":"884","endLine":53,"endColumn":30,"suggestions":"1098"},{"ruleId":"882","severity":1,"message":"1099","line":80,"column":8,"nodeType":"884","endLine":80,"endColumn":10,"suggestions":"1100"},{"ruleId":"920","severity":1,"message":"921","line":571,"column":73,"nodeType":"922","endLine":571,"endColumn":125},{"ruleId":"977","severity":1,"message":"978","line":766,"column":9,"nodeType":"979","messageId":"877","endLine":766,"endColumn":15},{"ruleId":"888","severity":1,"message":"1101","line":2,"column":49,"nodeType":"890","messageId":"891","endLine":2,"endColumn":65},{"ruleId":"888","severity":1,"message":"1102","line":2,"column":67,"nodeType":"890","messageId":"891","endLine":2,"endColumn":75},{"ruleId":"888","severity":1,"message":"923","line":11,"column":16,"nodeType":"890","messageId":"891","endLine":11,"endColumn":20},{"ruleId":"888","severity":1,"message":"1103","line":12,"column":13,"nodeType":"890","messageId":"891","endLine":12,"endColumn":18},{"ruleId":"888","severity":1,"message":"949","line":7,"column":8,"nodeType":"890","messageId":"891","endLine":7,"endColumn":18},{"ruleId":"888","severity":1,"message":"1014","line":49,"column":8,"nodeType":"890","messageId":"891","endLine":49,"endColumn":14},{"ruleId":"882","severity":1,"message":"1104","line":73,"column":5,"nodeType":"884","endLine":73,"endColumn":7,"suggestions":"1105"},{"ruleId":"888","severity":1,"message":"944","line":15,"column":10,"nodeType":"890","messageId":"891","endLine":15,"endColumn":14},{"ruleId":"882","severity":1,"message":"1106","line":28,"column":5,"nodeType":"884","endLine":28,"endColumn":16,"suggestions":"1107"},{"ruleId":"888","severity":1,"message":"935","line":7,"column":2,"nodeType":"890","messageId":"891","endLine":7,"endColumn":6},{"ruleId":"888","severity":1,"message":"966","line":18,"column":8,"nodeType":"890","messageId":"891","endLine":18,"endColumn":12},{"ruleId":"888","severity":1,"message":"923","line":31,"column":13,"nodeType":"890","messageId":"891","endLine":31,"endColumn":17},{"ruleId":"888","severity":1,"message":"923","line":35,"column":13,"nodeType":"890","messageId":"891","endLine":35,"endColumn":17},{"ruleId":"882","severity":1,"message":"1031","line":56,"column":5,"nodeType":"884","endLine":56,"endColumn":22,"suggestions":"1108"},{"ruleId":"888","severity":1,"message":"1109","line":18,"column":7,"nodeType":"890","messageId":"891","endLine":18,"endColumn":16},{"ruleId":"888","severity":1,"message":"1110","line":19,"column":7,"nodeType":"890","messageId":"891","endLine":19,"endColumn":13},{"ruleId":"977","severity":1,"message":"1111","line":309,"column":2,"nodeType":"979","messageId":"877","endLine":309,"endColumn":11},{"ruleId":"888","severity":1,"message":"1112","line":9,"column":2,"nodeType":"890","messageId":"891","endLine":9,"endColumn":11},{"ruleId":"882","severity":1,"message":"1113","line":34,"column":5,"nodeType":"884","endLine":34,"endColumn":15,"suggestions":"1114"},{"ruleId":"888","severity":1,"message":"1115","line":50,"column":8,"nodeType":"890","messageId":"891","endLine":50,"endColumn":31},{"ruleId":"1116","severity":1,"message":"1117","line":97,"column":10,"nodeType":"1012","messageId":"1118","endLine":97,"endColumn":17},{"ruleId":"977","severity":1,"message":"1111","line":199,"column":2,"nodeType":"979","messageId":"877","endLine":199,"endColumn":11},{"ruleId":"888","severity":1,"message":"1119","line":4,"column":8,"nodeType":"890","messageId":"891","endLine":4,"endColumn":16},{"ruleId":"977","severity":1,"message":"1111","line":40,"column":2,"nodeType":"979","messageId":"877","endLine":40,"endColumn":11},{"ruleId":"888","severity":1,"message":"1120","line":3,"column":10,"nodeType":"890","messageId":"891","endLine":3,"endColumn":24},{"ruleId":"888","severity":1,"message":"1121","line":3,"column":45,"nodeType":"890","messageId":"891","endLine":3,"endColumn":51},{"ruleId":"892","severity":1,"message":"893","line":10,"column":26,"nodeType":"894","messageId":"877","endLine":10,"endColumn":28},{"ruleId":"888","severity":1,"message":"1122","line":13,"column":18,"nodeType":"890","messageId":"891","endLine":13,"endColumn":28},{"ruleId":"888","severity":1,"message":"1123","line":2,"column":10,"nodeType":"890","messageId":"891","endLine":2,"endColumn":18},{"ruleId":"888","severity":1,"message":"1124","line":15,"column":11,"nodeType":"890","messageId":"891","endLine":15,"endColumn":25},{"ruleId":"963","severity":1,"message":"964","line":45,"column":40,"nodeType":"965","messageId":"877","endLine":45,"endColumn":42},{"ruleId":"963","severity":1,"message":"964","line":50,"column":36,"nodeType":"965","messageId":"877","endLine":50,"endColumn":38},{"ruleId":"963","severity":1,"message":"964","line":55,"column":40,"nodeType":"965","messageId":"877","endLine":55,"endColumn":42},{"ruleId":"888","severity":1,"message":"908","line":2,"column":22,"nodeType":"890","messageId":"891","endLine":2,"endColumn":26},{"ruleId":"892","severity":1,"message":"893","line":7,"column":35,"nodeType":"894","messageId":"877","endLine":7,"endColumn":37},{"ruleId":"888","severity":1,"message":"908","line":2,"column":22,"nodeType":"890","messageId":"891","endLine":2,"endColumn":26},{"ruleId":"888","severity":1,"message":"895","line":9,"column":13,"nodeType":"890","messageId":"891","endLine":9,"endColumn":14},{"ruleId":"888","severity":1,"message":"962","line":10,"column":11,"nodeType":"890","messageId":"891","endLine":10,"endColumn":18},"no-extend-native","Array prototype is read only, properties should not be added.","CallExpression","unexpected","no-native-reassign",["1125"],"no-negated-in-lhs",["1126"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAuth'. Either include it or remove the dependency array.","ArrayExpression",["1127"],"React Hook useEffect has a missing dependency: 'checkUserAuthentication'. Either include it or remove the dependency array.",["1128"],"no-unused-vars","'Settings' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'t' is assigned a value but never used.","'useRef' is defined but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setAuth' and 'vault'. Either include them or remove the dependency array. You can also do a functional update 'setVault(v => ...)' if you only need 'vault' in the 'setVault' call.",["1129"],"no-const-assign","'scenario' is constant.","const","Assignments to the 'scenario' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","React Hook useEffect has missing dependencies: 'auth', 'isLastStep', 'messages', and 'scenario'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["1130"],"'useEffect' is defined but never used.","'Grid' is defined but never used.","'useContext' is defined but never used.","'useTranslation' is defined but never used.","'FormControl' is defined but never used.","'OutlinedInput' is defined but never used.","'CancelScheduleSend' is defined but never used.","'getFullName' is defined but never used.","'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchNotifications'. Either include it or remove the dependency array.",["1131"],"'history' is assigned a value but never used.","'setLang' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'i18n' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location.search' and 'query'. Either include them or remove the dependency array.",["1132"],"React Hook useEffect has missing dependencies: 'auth.user.tenant' and 'query'. Either include them or remove the dependency array.",["1133"],"'useMediaQuery' is defined but never used.","'IconButton' is defined but never used.","'Map' is defined but never used.","React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["1134"],"React Hook useEffect has a missing dependency: 'location.search'. Either include it or remove the dependency array.",["1135"],"'Fade' is defined but never used.","'Slide' is defined but never used.","'useState' is defined but never used.","'usLocale' is defined but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["1136","1137"],"'auth' is assigned a value but never used.","'setAuth' is assigned a value but never used.","'lang' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setSnackbar'. Either include it or remove the dependency array.",["1138"],"'dateFormat' is defined but never used.","'Button' is defined but never used.","'Snackbar' is defined but never used.","'Alert' is defined but never used.","'snackbar' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'Grow' is defined but never used.","'AddLocationOutlinedIcon' is defined but never used.","'GroupAddIcon' is defined but never used.","'QueueIcon' is defined but never used.","'PostAddIcon' is defined but never used.","'NoteAddOutlinedIcon' is defined but never used.","'BlurOnRoundedIcon' is defined but never used.","'matches' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'clsx' is defined but never used.","'withStyles' is defined but never used.","'MenuRoundedIcon' is defined but never used.","'NotificationsNoneOutlinedIcon' is defined but never used.","'ArrowForwardRoundedIcon' is defined but never used.","'AddIcon' is defined but never used.","'MapOutlinedIcon' is defined but never used.","'notificationIcon' is defined but never used.","'plusIcon' is defined but never used.","'mapIcon' is defined but never used.","'menuIcon' is defined but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","'setNotfications' is assigned a value but never used.","'Backdrop' is defined but never used.","'Modal' is defined but never used.","'UpdateOwner' is defined but never used.","Duplicate key 'background'.","'SearchRoundedIcon' is defined but never used.","'FilterByMultiSelect' is defined but never used.","React Hook useEffect has a missing dependency: 'query.asset'. Either include it or remove the dependency array.",["1139"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Duplicate key 'display'.","'FlyToInterpolator' is defined but never used.","'ClickAwayListener' is defined but never used.","'getMapData' is defined but never used.","'updateQueryParams' is defined but never used.","'LinearProgress' is defined but never used.","'Clear' is defined but never used.","'setIsLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFaults' needs the current value of 'data'.",["1140"],"Duplicate key 'borderRadius'.","'InfoWindow' is defined but never used.","'InfoBox' is defined but never used.","'house' is defined but never used.","'FaultMinified' is defined but never used.","'getFullAddress' is defined but never used.","'ChevronRightRoundedIcon' is defined but never used.","'ChevronLeftRoundedIcon' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'downSm' is assigned a value but never used.","'setMode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'documentId'. Either include it or remove the dependency array.",["1141"],"React Hook useEffect has a missing dependency: 'auth.user.tenant'. Either include it or remove the dependency array.",["1142"],"'Tooltip' is defined but never used.","'BusinessRoundedIcon' is defined but never used.","'AssignmentRoundedIcon' is defined but never used.","'WarningRoundedIcon' is defined but never used.","'getFaultsStatusListSuggestions' is defined but never used.","'DoubleArrowIcon' is defined but never used.",["1143"],"React Hook useEffect has missing dependencies: 'auth.user.tenant', 'query', and 'setFaults'. Either include them or remove the dependency array.",["1144"],"React Hook useEffect has missing dependencies: 'history', 'location.pathname', and 'location.search'. Either include them or remove the dependency array.",["1145"],"React Hook useEffect has missing dependencies: 'history', 'location.pathname', and 'query.asset'. Either include them or remove the dependency array.",["1146"],"'Can' is defined but never used.","React Hook useEffect has missing dependencies: 'fid', 'history', and 'setSnackbar'. Either include them or remove the dependency array.",["1147"],"'MoreVertIcon' is defined but never used.","'getMinPermLevel' is defined but never used.","React Hook useEffect has a missing dependency: 'assetId'. Either include it or remove the dependency array.",["1148"],"React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.",["1149"],"React Hook useEffect has missing dependencies: 'filterField', 'history', 'location.pathname', and 'location.search'. Either include them or remove the dependency array.",["1150"],"React Hook useEffect has a missing dependency: 'optionsFunc'. Either include it or remove the dependency array. If 'optionsFunc' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1151"],"React Hook useEffect has missing dependencies: 'filterField', 'history', 'location.pathname', 'location.search', and 'query'. Either include them or remove the dependency array.",["1152"],"'AuthContext' is defined but never used.","Duplicate key 'classes'.","'UpsertSystem' is defined but never used.","'i18next' is defined but never used.",["1153"],"'OpenInNewOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'faultId'. Either include it or remove the dependency array.",["1154"],"'makeStyles' is defined but never used.","'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentStatus'. Either include it or remove the dependency array.",["1155"],"'useHistory' is defined but never used.","'useLocation' is defined but never used.","'slideIn' is assigned a value but never used.","'slideDirection' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'followerList'. Either include it or remove the dependency array. If 'setUserList' needs the current value of 'followerList', you can also switch to useReducer instead of useState and read 'followerList' in the reducer.",["1156"],"React Hook useEffect has missing dependencies: 'filterField', 'optionsFunc', and 'query'. Either include them or remove the dependency array. If 'optionsFunc' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1157"],["1158"],"'specialStringPurge' is defined but never used.","'useQuery' is defined but never used.","'React' is defined but never used.","Duplicate key 'padding'.","'Paper' is defined but never used.","'queryParamsToObject' is defined but never used.","React Hook useEffect has missing dependencies: 'filterField', 'handleSearch', and 'query'. Either include them or remove the dependency array.",["1159"],["1160"],"React Hook useEffect has a missing dependency: 'relatedUsers'. Either include it or remove the dependency array.",["1161"],"'ClearRoundedIcon' is defined but never used.","'CheckCircleOutlineRoundedIcon' is defined but never used.","'CheckCircleRoundedIcon' is defined but never used.","'updateStateField' is defined but never used.","'Avatar' is defined but never used.","'Chip' is defined but never used.","'DeleteOutlineRoundedIcon' is defined but never used.","'getFault' is defined but never used.","'createSystemMenuOptions' is defined but never used.","'getAssetsSuggestions' is defined but never used.","'getSystemsByAsset' is defined but never used.","'createUserOptions' is defined but never used.","'UserItem' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["1162"],"'Collapse' is defined but never used.","'setSnackbar' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'details' and 'mode'. Either include them or remove the dependency array. You can also do a functional update 'setDetails(d => ...)' if you only need 'details' in the 'setDetails' call.",["1163"],"React Hook useEffect has a missing dependency: 'taskId'. Either include it or remove the dependency array.",["1164"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'isSeq' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'setSnackbar', and 'taskId'. Either include them or remove the dependency array.",["1165"],"React Hook useEffect has missing dependencies: 'query' and 'repeatable'. Either include them or remove the dependency array.",["1166"],["1167"],"'intervals' is assigned a value but never used.","'months' is assigned a value but never used.","Duplicate key 'textField'.","'TextField' is defined but never used.","React Hook useEffect has missing dependencies: 'index' and 'updateSchedules'. Either include them or remove the dependency array. If 'updateSchedules' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1168"],"'handleCalcNextIteration' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedReturnValue","'heLocale' is defined but never used.","'getDaysInMonth' is defined but never used.","'format' is defined but never used.","'setCurrent' is assigned a value but never used.","'getTasks' is defined but never used.","'lastDayOfMonth' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1169","fix":"1170"},{"desc":"1171","fix":"1172"},{"desc":"1173","fix":"1174"},{"desc":"1175","fix":"1176"},{"desc":"1177","fix":"1178"},{"desc":"1179","fix":"1180"},{"desc":"1181","fix":"1182"},{"desc":"1183","fix":"1184"},{"desc":"1185","fix":"1186"},{"messageId":"1187","fix":"1188","desc":"1189"},{"messageId":"1190","fix":"1191","desc":"1192"},{"desc":"1193","fix":"1194"},{"desc":"1195","fix":"1196"},{"desc":"1197","fix":"1198"},{"desc":"1199","fix":"1200"},{"desc":"1201","fix":"1202"},{"desc":"1195","fix":"1203"},{"desc":"1204","fix":"1205"},{"desc":"1206","fix":"1207"},{"desc":"1208","fix":"1209"},{"desc":"1210","fix":"1211"},{"desc":"1212","fix":"1213"},{"desc":"1214","fix":"1215"},{"desc":"1216","fix":"1217"},{"desc":"1218","fix":"1219"},{"desc":"1220","fix":"1221"},{"desc":"1208","fix":"1222"},{"desc":"1223","fix":"1224"},{"desc":"1225","fix":"1226"},{"desc":"1227","fix":"1228"},{"desc":"1229","fix":"1230"},{"desc":"1231","fix":"1232"},{"desc":"1233","fix":"1234"},{"desc":"1235","fix":"1236"},{"desc":"1237","fix":"1238"},{"desc":"1239","fix":"1240"},{"desc":"1241","fix":"1242"},{"desc":"1243","fix":"1244"},{"desc":"1245","fix":"1246"},{"desc":"1247","fix":"1248"},{"desc":"1208","fix":"1249"},{"desc":"1250","fix":"1251"},"Update the dependencies array to be: [setAuth]",{"range":"1252","text":"1253"},"Update the dependencies array to be: [checkUserAuthentication]",{"range":"1254","text":"1255"},"Update the dependencies array to be: [setAuth, vault]",{"range":"1256","text":"1257"},"Update the dependencies array to be: [auth, isLastStep, messages, scenario, scenarioStep]",{"range":"1258","text":"1259"},"Update the dependencies array to be: [fetchNotifications]",{"range":"1260","text":"1261"},"Update the dependencies array to be: [isLoading, location.search, query]",{"range":"1262","text":"1263"},"Update the dependencies array to be: [auth.user.tenant, isLoading, query]",{"range":"1264","text":"1265"},"Update the dependencies array to be: [location.search, query]",{"range":"1266","text":"1267"},"Update the dependencies array to be: [isLoading, location.search]",{"range":"1268","text":"1269"},"removeEscape",{"range":"1270","text":"1271"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1272","text":"1273"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [isLoading, setSnackbar]",{"range":"1274","text":"1275"},"Update the dependencies array to be: [location.search, query.asset]",{"range":"1276","text":"1277"},"Update the dependencies array to be: [data, selectedAsset]",{"range":"1278","text":"1279"},"Update the dependencies array to be: [documentId]",{"range":"1280","text":"1281"},"Update the dependencies array to be: [auth.user.tenant, details.asset, details.system]",{"range":"1282","text":"1283"},{"range":"1284","text":"1277"},"Update the dependencies array to be: [auth.user.tenant, isLoading, query, setFaults]",{"range":"1285","text":"1286"},"Update the dependencies array to be: [history, location.pathname, location.search, viewType]",{"range":"1287","text":"1288"},"Update the dependencies array to be: [history, location.pathname, location.search, query.asset]",{"range":"1289","text":"1290"},"Update the dependencies array to be: [faultData, faultId, fid, history, setSnackbar]",{"range":"1291","text":"1292"},"Update the dependencies array to be: [assetId]",{"range":"1293","text":"1294"},"Update the dependencies array to be: [handleSearch, searchText]",{"range":"1295","text":"1296"},"Update the dependencies array to be: [filterField, history, location.pathname, location.search, value]",{"range":"1297","text":"1298"},"Update the dependencies array to be: [optionsFunc]",{"range":"1299","text":"1300"},"Update the dependencies array to be: [filterField, history, location.pathname, location.search, query, value]",{"range":"1301","text":"1302"},{"range":"1303","text":"1290"},"Update the dependencies array to be: [faultId]",{"range":"1304","text":"1305"},"Update the dependencies array to be: [currentStatus]",{"range":"1306","text":"1307"},"Update the dependencies array to be: [followerList]",{"range":"1308","text":"1309"},"Update the dependencies array to be: [filterField, optionsFunc, query]",{"range":"1310","text":"1311"},"Update the dependencies array to be: [filterField, history, location.pathname, location.search, query, values]",{"range":"1312","text":"1313"},"Update the dependencies array to be: [filterField, handleSearch, query, searchText]",{"range":"1314","text":"1315"},"Update the dependencies array to be: [history, location.pathname, location.search, values]",{"range":"1316","text":"1317"},"Update the dependencies array to be: [relatedUsers]",{"range":"1318","text":"1319"},"Update the dependencies array to be: [userId]",{"range":"1320","text":"1321"},"Update the dependencies array to be: [details, details.isUsingSteps, mode]",{"range":"1322","text":"1323"},"Update the dependencies array to be: [taskId]",{"range":"1324","text":"1325"},"Update the dependencies array to be: [history, setSnackbar, taskId]",{"range":"1326","text":"1327"},"Update the dependencies array to be: [isLoading, query, repeatable]",{"range":"1328","text":"1329"},{"range":"1330","text":"1290"},"Update the dependencies array to be: [index, schedule, updateSchedules]",{"range":"1331","text":"1332"},[1132,1134],"[setAuth]",[1038,1040],"[checkUserAuthentication]",[2281,2283],"[setAuth, vault]",[3687,3701],"[auth, isLastStep, messages, scenario, scenarioStep]",[1172,1174],"[fetchNotifications]",[1452,1463],"[isLoading, location.search, query]",[1465,1476],"[auth.user.tenant, isLoading, query]",[867,884],"[location.search, query]",[1418,1429],"[isLoading, location.search]",[2502,2503],"",[2502,2502],"\\",[1618,1629],"[isLoading, setSnackbar]",[2096,2113],"[location.search, query.asset]",[2300,2315],"[data, selectedAsset]",[2462,2464],"[documentId]",[3233,3264],"[auth.user.tenant, details.asset, details.system]",[1924,1941],[1492,1503],"[auth.user.tenant, isLoading, query, setFaults]",[1806,1816],"[history, location.pathname, location.search, viewType]",[2206,2223],"[history, location.pathname, location.search, query.asset]",[2469,2489],"[faultData, faultId, fid, history, setSnackbar]",[2058,2060],"[assetId]",[1483,1495],"[handleSearch, searchText]",[1942,1949],"[filterField, history, location.pathname, location.search, value]",[1078,1080],"[optionsFunc]",[1553,1560],"[filterField, history, location.pathname, location.search, query, value]",[2204,2221],[2735,2737],"[faultId]",[1207,1209],"[currentStatus]",[1095,1097],"[followerList]",[1345,1347],"[filterField, optionsFunc, query]",[1874,1882],"[filterField, history, location.pathname, location.search, query, values]",[1118,1130],"[filterField, handleSearch, query, searchText]",[1451,1459],"[history, location.pathname, location.search, values]",[1108,1110],"[relatedUsers]",[2413,2415],"[userId]",[2487,2509],"[details, details.isUsingSteps, mode]",[3322,3324],"[taskId]",[2729,2731],"[history, setSnackbar, taskId]",[1025,1036],"[isLoading, query, repeatable]",[1993,2010],[921,931],"[index, schedule, updateSchedules]"]